{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/workFlowForm/salesOrder/index.vue?vue&type=template&id=5e39b15b","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/workFlowForm/salesOrder/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      directives: [\n        {\n          name: \"loading\",\n          rawName: \"v-loading\",\n          value: _vm.loading,\n          expression: \"loading\",\n        },\n      ],\n      staticClass: \"flow-form\",\n    },\n    [\n      _c(\"div\", { staticClass: \"com-title\" }, [\n        _c(\"h1\", [_vm._v(\"销售订单\")]),\n        _c(\"span\", { staticClass: \"number\" }, [\n          _vm._v(\"流程编码：\" + _vm._s(_vm.dataForm.billNo)),\n        ]),\n      ]),\n      _c(\n        \"el-form\",\n        {\n          ref: \"dataForm\",\n          attrs: {\n            model: _vm.dataForm,\n            rules: _vm.dataRule,\n            \"label-width\": \"100px\",\n            disabled: _vm.setting.readonly,\n          },\n        },\n        [\n          _c(\n            \"el-row\",\n            [\n              _vm.judgeShow(\"flowTitle\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"流程标题\", prop: \"flowTitle\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"流程标题\",\n                              disabled: _vm.judgeWrite(\"flowTitle\"),\n                            },\n                            model: {\n                              value: _vm.dataForm.flowTitle,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"flowTitle\", $$v)\n                              },\n                              expression: \"dataForm.flowTitle\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"customerName\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"客户名称\", prop: \"customerName\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"客户名称\",\n                              disabled: _vm.judgeWrite(\"customerName\"),\n                            },\n                            model: {\n                              value: _vm.dataForm.customerName,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"customerName\", $$v)\n                              },\n                              expression: \"dataForm.customerName\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"salesDate\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"开单日期\", prop: \"salesDate\" } },\n                        [\n                          _c(\"el-date-picker\", {\n                            attrs: {\n                              type: \"datetime\",\n                              placeholder: \"选择日期\",\n                              \"value-format\": \"timestamp\",\n                              format: \"yyyy-MM-dd HH:mm\",\n                              editable: false,\n                              disabled: _vm.judgeWrite(\"salesDate\"),\n                            },\n                            model: {\n                              value: _vm.dataForm.salesDate,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"salesDate\", $$v)\n                              },\n                              expression: \"dataForm.salesDate\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"contacts\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"联系人员\", prop: \"contacts\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"联系人员\",\n                              disabled: _vm.judgeWrite(\"contacts\"),\n                            },\n                            model: {\n                              value: _vm.dataForm.contacts,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"contacts\", $$v)\n                              },\n                              expression: \"dataForm.contacts\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"contactPhone\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"联系电话\", prop: \"contactPhone\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"联系电话\",\n                              disabled: _vm.judgeWrite(\"contactPhone\"),\n                            },\n                            model: {\n                              value: _vm.dataForm.contactPhone,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"contactPhone\", $$v)\n                              },\n                              expression: \"dataForm.contactPhone\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"customerAddres\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: { label: \"客户地址\", prop: \"customerAddres\" },\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"客户地址\",\n                              disabled: _vm.judgeWrite(\"customerAddres\"),\n                            },\n                            model: {\n                              value: _vm.dataForm.customerAddres,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"customerAddres\", $$v)\n                              },\n                              expression: \"dataForm.customerAddres\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"salesman\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"业务人员\", prop: \"salesman\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"业务人员\",\n                              disabled: _vm.judgeWrite(\"salesman\"),\n                            },\n                            model: {\n                              value: _vm.dataForm.salesman,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"salesman\", $$v)\n                              },\n                              expression: \"dataForm.salesman\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"ticketNum\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"发票编码\", prop: \"ticketNum\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"发票编码\",\n                              disabled: _vm.judgeWrite(\"ticketNum\"),\n                            },\n                            model: {\n                              value: _vm.dataForm.ticketNum,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"ticketNum\", $$v)\n                              },\n                              expression: \"dataForm.ticketNum\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"paymentMethod\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"付款方式\", prop: \"paymentMethod\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"付款方式\",\n                              disabled: _vm.judgeWrite(\"paymentMethod\"),\n                            },\n                            model: {\n                              value: _vm.dataForm.paymentMethod,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"paymentMethod\", $$v)\n                              },\n                              expression: \"dataForm.paymentMethod\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"invoiceType\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"发票类型\", prop: \"invoiceType\" } },\n                        [\n                          _c(\n                            \"el-radio-group\",\n                            {\n                              attrs: {\n                                disabled: _vm.judgeWrite(\"invoiceType\"),\n                              },\n                              model: {\n                                value: _vm.dataForm.invoiceType,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.dataForm, \"invoiceType\", $$v)\n                                },\n                                expression: \"dataForm.invoiceType\",\n                              },\n                            },\n                            [\n                              _c(\"el-radio\", { attrs: { label: \"普通发票\" } }, [\n                                _vm._v(\"普通发票\"),\n                              ]),\n                              _c(\"el-radio\", { attrs: { label: \"专业发票\" } }, [\n                                _vm._v(\"专业发票\"),\n                              ]),\n                              _c(\"el-radio\", { attrs: { label: \"其他\" } }, [\n                                _vm._v(\"其他\"),\n                              ]),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"paymentMoney\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"付款金额\", prop: \"paymentMoney\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"付款金额\",\n                              type: \"number\",\n                              disabled: _vm.judgeWrite(\"paymentMoney\"),\n                            },\n                            model: {\n                              value: _vm.dataForm.paymentMoney,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"paymentMoney\", $$v)\n                              },\n                              expression: \"dataForm.paymentMoney\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"flowTfileJsonitle\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 24 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"相关附件\", prop: \"fileJson\" } },\n                        [\n                          _c(\"JnpfUploadFile\", {\n                            attrs: {\n                              type: \"workFlow\",\n                              disabled: _vm.judgeWrite(\"fileJson\"),\n                            },\n                            model: {\n                              value: _vm.fileList,\n                              callback: function ($$v) {\n                                _vm.fileList = $$v\n                              },\n                              expression: \"fileList\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.judgeShow(\"description\")\n                ? _c(\n                    \"el-col\",\n                    { attrs: { span: 24 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"开单备注\", prop: \"description\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"开单备注\",\n                              type: \"textarea\",\n                              rows: 3,\n                              disabled: _vm.judgeWrite(\"description\"),\n                            },\n                            model: {\n                              value: _vm.dataForm.description,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"description\", $$v)\n                              },\n                              expression: \"dataForm.description\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm.judgeShow(\"entryList\")\n        ? [\n            _vm._m(0),\n            _c(\n              \"el-table\",\n              { attrs: { data: _vm.dataForm.entryList, size: \"mini\" } },\n              [\n                _c(\"el-table-column\", {\n                  attrs: {\n                    type: \"index\",\n                    width: \"50\",\n                    label: \"序号\",\n                    align: \"center\",\n                  },\n                }),\n                _vm.judgeShow(\"entryList-goodsName\")\n                  ? _c(\n                      \"el-table-column\",\n                      {\n                        attrs: { prop: \"goodsName\", label: \"商品名称\" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _c(\"el-input\", {\n                                    attrs: {\n                                      disabled:\n                                        _vm.judgeWrite(\"entryList\") ||\n                                        _vm.judgeWrite(\"entryList-goodsName\"),\n                                    },\n                                    model: {\n                                      value: scope.row.goodsName,\n                                      callback: function ($$v) {\n                                        _vm.$set(scope.row, \"goodsName\", $$v)\n                                      },\n                                      expression: \"scope.row.goodsName\",\n                                    },\n                                  }),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          768202398\n                        ),\n                      },\n                      [\n                        _vm.judgeRequired(\"entryList-goodsName\")\n                          ? _c(\"template\", { slot: \"header\" }, [\n                              _c(\"span\", { staticClass: \"required-sign\" }, [\n                                _vm._v(\"*\"),\n                              ]),\n                              _vm._v(\"商品名称\\n        \"),\n                            ])\n                          : _vm._e(),\n                      ],\n                      2\n                    )\n                  : _vm._e(),\n                _vm.judgeShow(\"entryList-specifications\")\n                  ? _c(\n                      \"el-table-column\",\n                      {\n                        attrs: { prop: \"specifications\", label: \"规格型号\" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _c(\"el-input\", {\n                                    attrs: {\n                                      disabled:\n                                        _vm.judgeWrite(\"entryList\") ||\n                                        _vm.judgeWrite(\n                                          \"entryList-specifications\"\n                                        ),\n                                    },\n                                    model: {\n                                      value: scope.row.specifications,\n                                      callback: function ($$v) {\n                                        _vm.$set(\n                                          scope.row,\n                                          \"specifications\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"scope.row.specifications\",\n                                    },\n                                  }),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          1896845438\n                        ),\n                      },\n                      [\n                        _vm.judgeRequired(\"entryList-specifications\")\n                          ? _c(\"template\", { slot: \"header\" }, [\n                              _c(\"span\", { staticClass: \"required-sign\" }, [\n                                _vm._v(\"*\"),\n                              ]),\n                              _vm._v(\"规格型号\\n        \"),\n                            ])\n                          : _vm._e(),\n                      ],\n                      2\n                    )\n                  : _vm._e(),\n                _vm.judgeShow(\"entryList-unit\")\n                  ? _c(\n                      \"el-table-column\",\n                      {\n                        attrs: { prop: \"unit\", label: \"单位\" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _c(\"el-input\", {\n                                    attrs: {\n                                      disabled:\n                                        _vm.judgeWrite(\"entryList\") ||\n                                        _vm.judgeWrite(\"entryList-unit\"),\n                                    },\n                                    model: {\n                                      value: scope.row.unit,\n                                      callback: function ($$v) {\n                                        _vm.$set(scope.row, \"unit\", $$v)\n                                      },\n                                      expression: \"scope.row.unit\",\n                                    },\n                                  }),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          2260796286\n                        ),\n                      },\n                      [\n                        _vm.judgeRequired(\"entryList-unit\")\n                          ? _c(\"template\", { slot: \"header\" }, [\n                              _c(\"span\", { staticClass: \"required-sign\" }, [\n                                _vm._v(\"*\"),\n                              ]),\n                              _vm._v(\"单位\\n        \"),\n                            ])\n                          : _vm._e(),\n                      ],\n                      2\n                    )\n                  : _vm._e(),\n                _vm.judgeShow(\"entryList-qty\")\n                  ? _c(\n                      \"el-table-column\",\n                      {\n                        attrs: { prop: \"qty\", label: \"数量\" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _c(\"el-input\", {\n                                    attrs: {\n                                      type: \"number\",\n                                      disabled:\n                                        _vm.judgeWrite(\"entryList\") ||\n                                        _vm.judgeWrite(\"entryList-qty\"),\n                                    },\n                                    on: {\n                                      change: function ($event) {\n                                        return _vm.count(scope.row)\n                                      },\n                                    },\n                                    model: {\n                                      value: scope.row.qty,\n                                      callback: function ($$v) {\n                                        _vm.$set(scope.row, \"qty\", $$v)\n                                      },\n                                      expression: \"scope.row.qty\",\n                                    },\n                                  }),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          2591148853\n                        ),\n                      },\n                      [\n                        _vm.judgeRequired(\"entryList-qty\")\n                          ? _c(\"template\", { slot: \"header\" }, [\n                              _c(\"span\", { staticClass: \"required-sign\" }, [\n                                _vm._v(\"*\"),\n                              ]),\n                              _vm._v(\"数量\\n        \"),\n                            ])\n                          : _vm._e(),\n                      ],\n                      2\n                    )\n                  : _vm._e(),\n                _vm.judgeShow(\"entryList-price\")\n                  ? _c(\n                      \"el-table-column\",\n                      {\n                        attrs: { prop: \"price\", label: \"单价\" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _c(\"el-input\", {\n                                    attrs: {\n                                      type: \"number\",\n                                      disabled:\n                                        _vm.judgeWrite(\"entryList\") ||\n                                        _vm.judgeWrite(\"entryList-price\"),\n                                    },\n                                    on: {\n                                      change: function ($event) {\n                                        return _vm.count(scope.row)\n                                      },\n                                    },\n                                    model: {\n                                      value: scope.row.price,\n                                      callback: function ($$v) {\n                                        _vm.$set(scope.row, \"price\", $$v)\n                                      },\n                                      expression: \"scope.row.price\",\n                                    },\n                                  }),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          1946565781\n                        ),\n                      },\n                      [\n                        _vm.judgeRequired(\"entryList-price\")\n                          ? _c(\"template\", { slot: \"header\" }, [\n                              _c(\"span\", { staticClass: \"required-sign\" }, [\n                                _vm._v(\"*\"),\n                              ]),\n                              _vm._v(\"单价\\n        \"),\n                            ])\n                          : _vm._e(),\n                      ],\n                      2\n                    )\n                  : _vm._e(),\n                _vm.judgeShow(\"entryList-amount\")\n                  ? _c(\n                      \"el-table-column\",\n                      {\n                        attrs: { prop: \"amount\", label: \"金额\" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _c(\"el-input\", {\n                                    attrs: {\n                                      readonly: \"\",\n                                      disabled:\n                                        _vm.judgeWrite(\"entryList\") ||\n                                        _vm.judgeWrite(\"entryList-amount\"),\n                                    },\n                                    model: {\n                                      value: scope.row.amount,\n                                      callback: function ($$v) {\n                                        _vm.$set(scope.row, \"amount\", $$v)\n                                      },\n                                      expression: \"scope.row.amount\",\n                                    },\n                                  }),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          1314826542\n                        ),\n                      },\n                      [\n                        _vm.judgeRequired(\"entryList-amount\")\n                          ? _c(\"template\", { slot: \"header\" }, [\n                              _c(\"span\", { staticClass: \"required-sign\" }, [\n                                _vm._v(\"*\"),\n                              ]),\n                              _vm._v(\"金额\\n        \"),\n                            ])\n                          : _vm._e(),\n                      ],\n                      2\n                    )\n                  : _vm._e(),\n                _vm.judgeShow(\"entryList-description\")\n                  ? _c(\n                      \"el-table-column\",\n                      {\n                        attrs: { prop: \"description\", label: \"备注\" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _c(\"el-input\", {\n                                    attrs: {\n                                      disabled:\n                                        _vm.judgeWrite(\"entryList\") ||\n                                        _vm.judgeWrite(\"entryList-description\"),\n                                    },\n                                    model: {\n                                      value: scope.row.description,\n                                      callback: function ($$v) {\n                                        _vm.$set(scope.row, \"description\", $$v)\n                                      },\n                                      expression: \"scope.row.description\",\n                                    },\n                                  }),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          698039038\n                        ),\n                      },\n                      [\n                        _vm.judgeRequired(\"entryList-description\")\n                          ? _c(\"template\", { slot: \"header\" }, [\n                              _c(\"span\", { staticClass: \"required-sign\" }, [\n                                _vm._v(\"*\"),\n                              ]),\n                              _vm._v(\"备注\\n        \"),\n                            ])\n                          : _vm._e(),\n                      ],\n                      2\n                    )\n                  : _vm._e(),\n                !_vm.setting.readonly && !_vm.judgeWrite(\"entryList\")\n                  ? _c(\"el-table-column\", {\n                      attrs: { label: \"操作\", width: \"50\" },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function (scope) {\n                              return [\n                                _c(\n                                  \"el-button\",\n                                  {\n                                    staticClass: \"JNPF-table-delBtn\",\n                                    attrs: { size: \"mini\", type: \"text\" },\n                                    on: {\n                                      click: function ($event) {\n                                        return _vm.handleDel(scope.$index)\n                                      },\n                                    },\n                                  },\n                                  [_vm._v(\"删除\")]\n                                ),\n                              ]\n                            },\n                          },\n                        ],\n                        null,\n                        false,\n                        2079021643\n                      ),\n                    })\n                  : _vm._e(),\n              ],\n              1\n            ),\n            !_vm.setting.readonly && !_vm.judgeWrite(\"entryList\")\n              ? _c(\n                  \"div\",\n                  {\n                    staticClass: \"table-actions\",\n                    on: {\n                      click: function ($event) {\n                        return _vm.addHandle()\n                      },\n                    },\n                  },\n                  [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: {\n                          type: \"text\",\n                          icon: \"el-icon-plus\",\n                          disabled: _vm.setting.readonly,\n                        },\n                      },\n                      [_vm._v(\"新增\")]\n                    ),\n                  ],\n                  1\n                )\n              : _vm._e(),\n          ]\n        : _vm._e(),\n    ],\n    2\n  )\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"JNPF-common-title\" }, [\n      _c(\"h2\", [_vm._v(\"销售明细\")]),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}