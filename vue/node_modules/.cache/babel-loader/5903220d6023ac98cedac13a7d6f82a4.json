{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Process/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Process/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _main = _interopRequireDefault(require(\"./main\"));\nvar _util = require(\"./FlowCard/util.js\");\nvar _vuedraggable = _interopRequireDefault(require(\"vuedraggable\"));\nvar _FormDesign = require(\"@/api/workFlow/FormDesign\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar requiredDisabled = function requiredDisabled(jnpfKey) {\n  return ['billRule', 'createUser', 'createTime', 'modifyTime', 'modifyUser', 'currPosition', 'currOrganize', 'table'].includes(jnpfKey);\n};\nvar getDataType = function getDataType(data) {\n  if (!data.__config__ || !data.__config__.jnpfKey) return '';\n  var jnpfKey = data.__config__.jnpfKey;\n  if (['inputNumber', 'datePicker', 'rate', 'slider'].includes(jnpfKey)) {\n    return 'number';\n  } else if (['checkbox', 'uploadFile', 'uploadImg', 'cascader', 'organizeSelect', 'areaSelect'].includes(jnpfKey)) {\n    return 'array';\n  } else if (['select', 'depSelect', 'posSelect', 'userSelect', 'treeSelect', 'usersSelect', 'roleSelect', 'groupSelect', 'popupSelect', 'popupTableSelect'].includes(jnpfKey)) {\n    if (data.multiple) return 'array';\n  }\n  return '';\n};\nvar _default = exports.default = {\n  name: 'Process',\n  props: ['tabName', 'conf', 'flowType', 'formInfo'],\n  data: function data() {\n    return {\n      activeConf: null,\n      key: +new Date(),\n      loading: false,\n      verifyMode: false,\n      flowList: [],\n      visible: false,\n      handleType: '',\n      defaultData: {},\n      formFieldList: {},\n      dataForm: {\n        fullName: '',\n        id: '',\n        flowId: ''\n      },\n      dataRule: {\n        fullName: [{\n          required: true,\n          message: '请输入流程名称',\n          trigger: 'blur'\n        }]\n      },\n      keyword: ''\n    };\n  },\n  components: {\n    ProcessMain: _main.default,\n    draggable: _vuedraggable.default\n  },\n  created: function created() {\n    var _this = this;\n    this.$store.dispatch('base/getPositionList');\n    this.$store.dispatch('base/getRoleList');\n    this.$store.dispatch('generator/getDepTree');\n    this.$store.dispatch('generator/getGroupTree');\n    this.loading = true;\n    if (this.formInfo.onlineDev && this.formInfo.onlineFormId) {\n      (0, _FormDesign.getFormInfo)(this.formInfo.onlineFormId).then(function (res) {\n        var defaultData = (0, _util.getMockData)();\n        defaultData.properties.formName = res.data.fullName;\n        defaultData.properties.formId = res.data.id;\n        var propertyJson = res.data.propertyJson;\n        var formJson = {},\n          fieldList = [];\n        if (propertyJson) formJson = JSON.parse(propertyJson);\n        fieldList = formJson.fields;\n        _this.formFieldList = _this.transformFieldList(fieldList);\n        if (!defaultData.properties.allFormMap) defaultData.properties.allFormMap = {};\n        defaultData.properties.allFormMap['form_' + res.data.id] = _this.formFieldList;\n        defaultData.properties.formOperates = _this.initFormOperates(defaultData);\n        _this.defaultData = defaultData;\n        _this.initData();\n      });\n    } else {\n      this.defaultData = (0, _util.getMockData)();\n      this.initData();\n    }\n  },\n  computed: {\n    getFlowList: function getFlowList() {\n      var _this2 = this;\n      return this.keyword ? this.flowList.filter(function (o) {\n        return o.fullName.indexOf(_this2.keyword) !== -1;\n      }) : this.flowList;\n    }\n  },\n  methods: {\n    initData: function initData() {\n      var _this3 = this;\n      if (Array.isArray(this.conf) && this.conf !== null && JSON.stringify(this.conf) !== '[]') {\n        this.flowList = this.conf;\n        this.updateData();\n      } else {\n        var item = {\n          id: '',\n          flowId: this.jnpf.idGenerator(),\n          fullName: this.formInfo.fullName,\n          flowTemplateJson: JSON.parse(JSON.stringify(this.defaultData))\n        };\n        this.flowList = [item];\n      }\n      this.activeConf = this.flowList[0];\n      this.$nextTick(function () {\n        _this3.loading = false;\n      });\n    },\n    // 给父级组件提供的获取流程数据得方法\n    getData: function getData() {\n      this.verifyMode = true;\n      var boo = true;\n      var errorItem = {};\n      for (var i = 0; i < this.flowList.length; i++) {\n        boo = _util.NodeUtils.checkAllNode(this.flowList[i].flowTemplateJson);\n        errorItem = this.flowList[i];\n        if (!boo) break;\n      }\n      if (boo) {\n        return Promise.resolve({\n          formData: this.flowList\n        });\n      } else {\n        return Promise.reject({\n          target: 2,\n          msg: \"\\u8BF7\\u5B8C\\u5584\".concat(errorItem.fullName, \"\\u7684\\u6D41\\u7A0B\\u8BBE\\u8BA1\")\n        });\n      }\n    },\n    addFlow: function addFlow() {\n      var _this4 = this;\n      this.handleType = 'add';\n      this.visible = true;\n      this.$nextTick(function () {\n        _this4.$refs['dataForm'].resetFields();\n        var flowTemplateJson = JSON.parse(JSON.stringify(_this4.defaultData));\n        if (_this4.flowList.length) {\n          var defaultProperties = _this4.flowList[0].flowTemplateJson.properties;\n          flowTemplateJson.properties.formName = defaultProperties.formName;\n          flowTemplateJson.properties.formId = defaultProperties.formId;\n          var formFieldList = defaultProperties.allFormMap['form_' + defaultProperties.formId] || [];\n          flowTemplateJson.properties.allFormMap['form_' + defaultProperties.formId] = formFieldList;\n          _this4.formFieldList = formFieldList;\n          flowTemplateJson.properties.formOperates = _this4.initFormOperates(flowTemplateJson, true);\n        }\n        _this4.dataForm = {\n          id: '',\n          flowId: _this4.jnpf.idGenerator(),\n          fullName: '',\n          flowTemplateJson: flowTemplateJson\n        };\n      });\n    },\n    editFlow: function editFlow(item) {\n      var _this5 = this;\n      this.handleType = 'edit';\n      this.visible = true;\n      this.$nextTick(function () {\n        _this5.$refs['dataForm'].resetFields();\n        _this5.dataForm = JSON.parse(JSON.stringify(item));\n      });\n    },\n    delFlow: function delFlow(index, isDelete) {\n      var _this6 = this;\n      if (this.flowList.length === 1) return this.$message.warning(\"\\u6700\\u540E\\u4E00\\u4E2A\\u6D41\\u7A0B\\u4E0D\\u80FD\\u5220\\u9664\");\n      if (isDelete) return this.$message.warning(\"\\u6D41\\u7A0B\\u5DF2\\u88AB\\u4F7F\\u7528\\uFF0C\\u4E0D\\u80FD\\u5220\\u9664\");\n      this.$confirm('此操作将永久删除该流程，是否继续？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this6.flowList.splice(index, 1);\n        _this6.activeConf = _this6.flowList[_this6.flowList.length - 1];\n        _this6.key = +new Date();\n      }).catch(function () {});\n    },\n    copyFlow: function copyFlow(item) {\n      var _this7 = this;\n      var itemCopy = JSON.parse(JSON.stringify(item));\n      this.$confirm('您确定要复制该流程，是否继续？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        var flowId = _this7.jnpf.idGenerator();\n        var fullName = itemCopy.fullName + flowId;\n        if (fullName.length > 50) {\n          fullName = fullName.substring(fullName.length - 50);\n        }\n        var data = {\n          id: '',\n          flowId: flowId,\n          fullName: fullName,\n          flowTemplateJson: itemCopy.flowTemplateJson\n        };\n        _this7.flowList.push(data);\n      }).catch(function () {});\n    },\n    changeFlow: function changeFlow(item) {\n      if (item.flowId === this.activeConf.flowId) return;\n      this.activeConf = item;\n      this.key = +new Date();\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this8 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          if (_this8.handleType === 'add') {\n            var boo = _this8.flowList.some(function (o) {\n              return o.fullName === _this8.dataForm.fullName;\n            });\n            if (boo) return _this8.$message.warning('流程名称重复，请重新输入');\n            _this8.flowList.push(JSON.parse(JSON.stringify(_this8.dataForm)));\n            _this8.activeConf = _this8.flowList[_this8.flowList.length - 1];\n            _this8.key = +new Date();\n          } else {\n            var _boo = _this8.flowList.some(function (o) {\n              return o.fullName === _this8.dataForm.fullName && o.flowId !== _this8.dataForm.flowId;\n            });\n            if (_boo) return _this8.$message.warning('流程名称重复，请重新输入');\n            for (var i = 0; i < _this8.flowList.length; i++) {\n              if (_this8.dataForm.flowId === _this8.flowList[i].flowId) {\n                _this8.$set(_this8.flowList[i], 'fullName', _this8.dataForm.fullName);\n                break;\n              }\n            }\n          }\n          _this8.visible = false;\n        }\n      });\n    },\n    transformFieldList: function transformFieldList(formFieldList) {\n      var list = [];\n      var loop = function loop(data, parent) {\n        if (!data) return;\n        if (data.__vModel__) {\n          var isTableChild = parent && parent.__config__ && parent.__config__.jnpfKey === 'table';\n          var obj = _objectSpread(_objectSpread({}, data), {}, {\n            id: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n            __vModel__: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n            fullName: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label,\n            __config__: {\n              label: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label,\n              jnpfKey: data.__config__.jnpfKey,\n              required: data.__config__.required,\n              isSubTable: data.__config__.isSubTable\n            }\n          });\n          delete obj.on;\n          delete obj.style;\n          delete obj.options;\n          delete obj.props;\n          delete obj.templateJson;\n          delete obj.columnOptions;\n          delete obj.addTableConf;\n          delete obj.tableConf;\n          list.push(obj);\n        }\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d, parent);\n        });\n        if (data.__config__ && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data);\n        }\n      };\n      loop(formFieldList);\n      return list;\n    },\n    initFormOperates: function initFormOperates(target, isUpdate, isSameForm) {\n      var formOperates = target.properties && target.properties.formOperates || [];\n      var res = [];\n      var getWriteById = function getWriteById(id) {\n        var arr = formOperates.filter(function (o) {\n          return o.id === id;\n        });\n        return arr.length ? arr[0].write : _util.NodeUtils.isStartNode(target);\n      };\n      var getReadById = function getReadById(id) {\n        var arr = formOperates.filter(function (o) {\n          return o.id === id;\n        });\n        return arr.length ? arr[0].read : true;\n      };\n      var getRequiredById = function getRequiredById(id) {\n        var arr = formOperates.filter(function (o) {\n          return o.id === id;\n        });\n        return arr.length ? arr[0].required : false;\n      };\n      if (!formOperates.length || isUpdate) {\n        for (var i = 0; i < this.formFieldList.length; i++) {\n          var data = this.formFieldList[i];\n          res.push({\n            id: data.__vModel__,\n            name: data.__config__.label,\n            required: !isSameForm ? data.__config__.required : data.__config__.required || getRequiredById(data.__vModel__),\n            requiredDisabled: requiredDisabled(data.__config__.jnpfKey) || data.__config__.required,\n            jnpfKey: data.__config__.jnpfKey,\n            dataType: getDataType(data),\n            read: !isSameForm ? true : getReadById(data.__vModel__),\n            write: !isSameForm ? _util.NodeUtils.isStartNode(target) : getWriteById(data.__vModel__)\n          });\n        }\n      } else {\n        res = formOperates;\n      }\n      return res;\n    },\n    updateData: function updateData() {\n      for (var i = 0; i < this.flowList.length; i++) {\n        this.flowList[i].flowTemplateJson = Object.assign(_util.NodeUtils.createNode('start'), this.flowList[i].flowTemplateJson);\n        this.updateAllFormMap(this.flowList[i].flowTemplateJson);\n      }\n    },\n    updateAllFormMap: function updateAllFormMap(flowTemplateJson) {\n      var _this9 = this;\n      if (!flowTemplateJson.properties.allFormMap) flowTemplateJson.properties.allFormMap = {};\n      if (!flowTemplateJson.properties.formFieldList && (!this.formInfo.onlineDev || !this.formInfo.onlineFormId)) return;\n      if (this.formInfo.onlineDev && this.formInfo.onlineFormId) {\n        flowTemplateJson.properties.allFormMap['form_' + flowTemplateJson.properties.formId] = this.formFieldList;\n      }\n      var loop = function loop(data) {\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d);\n        });\n        if (data.type === 'approver' || data.type === 'start') {\n          var _data$properties$form;\n          // 兼容旧数据，将表单字段都整理到allFormMap\n          if ((_data$properties$form = data.properties.formFieldList) !== null && _data$properties$form !== void 0 && _data$properties$form.length) {\n            if (data.properties.formId) {\n              var formFieldList = data.properties.formFieldList.map(function (o) {\n                return o.id ? o : _objectSpread(_objectSpread({}, o), {}, {\n                  id: o.__vModel__,\n                  fullName: o.__config__.label\n                });\n              });\n              flowTemplateJson.properties.allFormMap['form_' + data.properties.formId] = formFieldList;\n            }\n            delete data.properties.formFieldList;\n          }\n          if (_this9.formInfo.onlineDev && _this9.formInfo.onlineFormId) data.properties.formOperates = _this9.initFormOperates(data, true, true);\n        }\n        if (data.conditionNodes && Array.isArray(data.conditionNodes)) loop(data.conditionNodes);\n        if (data.childNode) loop(data.childNode);\n      };\n      loop(flowTemplateJson);\n    }\n  }\n};",null]}