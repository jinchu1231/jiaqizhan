{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/flowEngine/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/flowEngine/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { FlowEngineInfo, Update, Create, mainVersion } from '@/api/workFlow/FlowEngine'\nimport iconBox from '@/components/JNPF-iconBox'\nimport Process from \"@/components/Process\"\n\nexport default {\n  components: { iconBox, Process },\n  data() {\n    return {\n      visible: false,\n      activeStep: 0,\n      dataForm: {\n        id: '',\n        category: '',\n        fullName: '',\n        enCode: '',\n        description: '',\n        type: 0,\n        sortCode: 0,\n        icon: '',\n        iconBackground: '#008cff',\n        flowTemplateJson: null\n      },\n      dataRule: {\n        fullName: [\n          { required: true, message: '流程名称不能为空', trigger: 'blur' }\n        ],\n        enCode: [\n          { required: true, message: '流程编码不能为空', trigger: 'blur' },\n          { pattern: /^\\w+$/, message: '请输入正确的流程编码', trigger: 'blur' },\n        ],\n        category: [\n          { required: true, message: '流程分类不能为空', trigger: 'change' }\n        ],\n        type: [\n          { required: true, message: '流程类型不能为空', trigger: 'change' }\n        ],\n        formType: [\n          { required: true, message: '功能类型不能为空', trigger: 'change' }\n        ],\n        formId: [\n          { required: true, message: '关联功能不能为空', trigger: 'click' }\n        ],\n        icon: [\n          { required: true, message: '流程图标不能为空', trigger: 'click' }\n        ],\n      },\n      btnLoading: false,\n      flowTemplateJson: {},\n      iconBoxVisible: false,\n      loading: false,\n      categoryList: [],\n      type: '功能流程'\n    }\n  },\n  methods: {\n    init(categoryList, id, type) {\n      this.categoryList = categoryList\n      this.activeStep = 0\n      this.dataForm.id = id || ''\n      this.dataForm.icon = ''\n      this.dataForm.iconBackground = '#008cff'\n      this.visible = true\n      this.loading = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        if (this.dataForm.id) {\n          FlowEngineInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.type = this.dataForm.type == 1 ? '功能流程' : '发起流程'\n            this.dataForm.flowTemplateJson && (this.flowTemplateJson = JSON.parse(this.dataForm.flowTemplateJson))\n            this.loading = false\n            this.$nextTick(() => {\n              this.next()\n            })\n          }).catch(() => { this.loading = false })\n        } else {\n          this.dataForm.type = type\n          this.type = type == 1 ? '功能流程' : '发起流程'\n          this.loading = false\n        }\n      })\n    },\n    dataFormSubmit() {\n      if (this.activeStep === 1) {\n        this.$refs['processDesign'].getData().then(res => {\n          this.flowTemplateJson = res.formData\n          this.dataForm.flowTemplateJson = JSON.stringify(this.flowTemplateJson)\n          this.submit()\n        }).catch(err => {\n          err.msg && this.$message.warning(err.msg)\n        })\n      } else {\n        this.$refs['dataForm'].validate((valid) => {\n          if (!valid) return\n          this.submit()\n        })\n      }\n    },\n    submit() {\n      this.btnLoading = true\n      const formMethod = this.dataForm.id ? Update : Create\n      formMethod(this.dataForm).then((res) => {\n        if (this.activeStep == 1 && res.data && res.data.isMainVersion) {\n          this.setMainVersion(res.data.id, res.msg)\n        } else {\n          this.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: () => {\n              this.btnLoading = false\n              this.closeDialog(true)\n            }\n          })\n        }\n      }).catch(() => { this.btnLoading = false })\n    },\n    setMainVersion(id, msg) {\n      this.$confirm('流程已被使用，此版本是否覆盖线上流程。覆盖后，新发起的流程按此版本流转?', '提示', {\n        confirmButtonText: '覆盖',\n        cancelButtonText: '存为新版本',\n        type: 'warning'\n      }).then(() => {\n        mainVersion(id).then(res => {\n          this.$message({\n            message: msg,\n            type: 'success',\n            duration: 1500,\n            onClose: () => {\n              this.btnLoading = false\n              this.closeDialog(true)\n            }\n          })\n        }).catch(() => { this.btnLoading = false });\n      }).catch(() => {\n        this.btnLoading = false\n        this.closeDialog(true)\n      });\n    },\n    prev() {\n      this.activeStep -= 1\n    },\n    next() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.activeStep += 1\n        }\n      })\n    },\n    closeDialog(isRefresh) {\n      this.visible = false\n      this.$emit('close', isRefresh)\n    },\n    stepChick(key) {\n      if (this.activeStep <= key) return\n      this.activeStep = key\n    },\n    openIconBox() { this.iconBoxVisible = true },\n    choiceIcon(value) {\n      this.dataForm.icon = value\n    },\n  }\n}\n",null]}