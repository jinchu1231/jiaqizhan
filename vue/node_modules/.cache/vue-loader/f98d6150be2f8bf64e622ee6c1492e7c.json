{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/msgCenter/accountConfig/webhookConfig/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/msgCenter/accountConfig/webhookConfig/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Form from './Form'\nimport {\n  getConfigList,\n  delConfig,\n  copyConfig,\n  exportConfig\n} from '@/api/msgCenter/accountConfig'\nexport default {\n  name: 'msgCenter-accountConfig-webhook',\n  components: {\n    Form\n  },\n  data() {\n    return {\n      list: [],\n      webhookList: [{ fullName: '钉钉', enCode: '1' }, { fullName: '企业微信', enCode: '2' }, { fullName: '其它', enCode: '3' }],\n      categoryList: [{ fullName: '启用', enCode: 1 }, { fullName: '禁用', enCode: 0 }],\n      keyword: '',\n      webhookType: '',\n      enabledMark: '',\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      },\n      total: 0,\n      listLoading: true,\n      formVisible: false\n    }\n  },\n  created() {\n    this.initData()\n  },\n  methods: {\n    reset() {\n      this.keyword = ''\n      this.enabledMark = ''\n      this.webhookType = ''\n      this.search()\n    },\n    search() {\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      }\n      this.initData()\n    },\n    initData() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'msgWebHookSendType' }).then((res) => {\n        this.webhookList = res\n      })\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        keyword: this.keyword,\n        enabledMark: this.enabledMark,\n        webhookType: this.webhookType,\n        type: 6\n      }\n      getConfigList(query).then(res => {\n        this.list = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      }).catch(() => {\n        this.listLoading = false\n      })\n    },\n    addOrUpdateHandle(id) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.Form.init(id, this.webhookList)\n      })\n    },\n    copy(id) {\n      this.$confirm('您确定要复制该数据, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        copyConfig(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    exportTpl(id) {\n      this.$confirm('您确定要导出该数据, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        exportConfig(id).then(res => {\n          this.jnpf.downloadFile(res.data.url)\n        })\n      }).catch(() => { });\n    },\n    closeForm(isRefresh) {\n      this.formVisible = false\n      if (isRefresh) {\n        this.initData()\n      }\n    },\n    handleDel(id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        delConfig(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: () => {\n              this.initData()\n            }\n          })\n        })\n      }).catch(() => { })\n    },\n  }\n}\n",null]}