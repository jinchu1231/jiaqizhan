{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RuleDialog/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RuleDialog/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { noAllowRelationList } from '@/components/Generator/generator/comConfig'\nexport default {\n  name: 'ruleDialog',\n  props: {\n    type: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      visible: false,\n      transferList: [],\n      fieldList: [],\n      formFieldsList: [],\n    }\n  },\n  methods: {\n    init(data) {\n      this.visible = true\n      this.transferList = JSON.parse(JSON.stringify(data.transferList)) || []\n      if (!this.transferList.length) this.transferList.push({ targetField: '', sourceValue: '' })\n      this.fieldList = data.fieldList || []\n      this.formFieldsList = data.formFieldsList.filter(o => ['input', 'textarea'].includes(o.__config__.jnpfKey)) || []\n    },\n    getTargetOptions(index) {\n      let ignoreOptions = [];\n      for (let i = 0; i < this.transferList.length; i++) {\n        const e = this.transferList[i];\n        if (e.sourceValue && index !== i) ignoreOptions.push(e.sourceValue);\n      }\n      const list = this.formFieldsList.filter(o => !ignoreOptions.includes(o.id));\n      return list;\n    },\n    addTransferItem() {\n      this.transferList.push({ targetField: '', sourceValue: '' });\n    },\n    delTransferItem(index) {\n      this.transferList.splice(index, 1);\n    },\n    handleGenerate() {\n      if (!this.formFieldListExist()) return;\n      this.visible = false\n      this.$emit('confirm', this.transferList)\n    },\n    close() {\n      this.visible = false\n    },\n    formFieldListExist() {\n      const list = this.transferList;\n      let isOk = true;\n      for (let i = 0; i < list.length; i++) {\n        const e = list[i];\n        if (!e.targetField) {\n          this.$message.warning(`第${i + 1}行${this.type == 1 ? '关联表单字段' : '远端数据字段'}不能为空`);\n          isOk = false;\n          break;\n        }\n        if (!e.sourceValue) {\n          this.$message.warning(`第${i + 1} 行当前表单字段不能为空`);\n          isOk = false;\n          break;\n        }\n      }\n      return isOk;\n    },\n    querySearch(queryString, cb) {\n      var restaurants = this.fieldList || [];\n      var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createStateFilter(queryString) {\n      return (state) => {\n        return (state.field.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n      };\n    },\n    handleSelect(item, index) {\n      this.transferList[index].targetField = item.defaultValue\n    }\n  }\n}\n",null]}