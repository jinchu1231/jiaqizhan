{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/menu/menuForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/menu/menuForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es6.regexp.replace\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _menu = require(\"@/api/system/menu\");\nvar _visualDev = require(\"@/api/onlineDev/visualDev\");\nvar _dictionary = require(\"@/api/systemData/dictionary\");\nvar _dataReport = require(\"@/api/onlineDev/dataReport\");\nvar _dataV = require(\"@/api/onlineDev/dataV\");\nvar _portal = require(\"@/api/onlineDev/portal\");\nvar _JNPFIconBox = _interopRequireDefault(require(\"@/components/JNPF-iconBox\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar appTypeData = [{\n  enCode: 1,\n  fullName: \"目录\"\n}, {\n  enCode: 2,\n  fullName: \"页面\"\n}, {\n  enCode: 3,\n  fullName: \"功能\"\n}, {\n  enCode: 5,\n  fullName: \"报表\"\n}, {\n  enCode: 8,\n  fullName: \"门户\"\n}, {\n  enCode: 7,\n  fullName: \"外链\"\n}];\nvar typeData = [{\n  enCode: 1,\n  fullName: \"目录\"\n}, {\n  enCode: 2,\n  fullName: \"页面\"\n}, {\n  enCode: 3,\n  fullName: \"功能\"\n}, {\n  enCode: 4,\n  fullName: \"字典\"\n}, {\n  enCode: 5,\n  fullName: \"报表\"\n}, {\n  enCode: 6,\n  fullName: \"大屏\"\n}, {\n  enCode: 8,\n  fullName: \"门户\"\n}, {\n  enCode: 7,\n  fullName: \"外链\"\n}];\nvar defaultDataForm = {\n  id: '',\n  parentId: '',\n  fullName: '',\n  enCode: '',\n  sortCode: 0,\n  icon: '',\n  type: null,\n  urlAddress: '',\n  category: 'Web',\n  linkTarget: '_self',\n  isButtonAuthorize: 0,\n  isColumnAuthorize: 0,\n  isFormAuthorize: 0,\n  isDataAuthorize: 0,\n  enabledMark: 1,\n  description: '',\n  systemId: '',\n  //系统id\n  propertyJson: {\n    moduleId: '',\n    iconBackgroundColor: '',\n    isTree: 0\n  }\n};\nvar _default = exports.default = {\n  components: {\n    iconBox: _JNPFIconBox.default\n  },\n  data: function data() {\n    return {\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      treeData: [],\n      typeData: [],\n      featureWebData: [],\n      dictionaryData: [],\n      reportData: [],\n      screenData: [],\n      portalData: [],\n      tempData: [],\n      labelName: '',\n      related: false,\n      oldUrlAddress: '',\n      dataForm: {\n        id: '',\n        parentId: '',\n        fullName: '',\n        enCode: '',\n        sortCode: 0,\n        icon: '',\n        type: null,\n        urlAddress: '',\n        category: 'Web',\n        linkTarget: '_self',\n        isButtonAuthorize: 0,\n        isColumnAuthorize: 0,\n        isFormAuthorize: 0,\n        isDataAuthorize: 0,\n        enabledMark: 1,\n        description: '',\n        systemId: '',\n        //系统id\n        propertyJson: {\n          moduleId: '',\n          iconBackgroundColor: '',\n          isTree: 0\n        }\n      },\n      iconBoxVisible: false,\n      dataRule: {\n        parentId: [{\n          required: true,\n          message: '上级菜单不能为空',\n          trigger: 'input'\n        }],\n        fullName: [{\n          required: true,\n          message: '菜单名称不能为空',\n          trigger: 'blur'\n        }, {\n          max: 50,\n          message: '菜单名称最多为50个字符！',\n          trigger: 'blur'\n        }],\n        enCode: [{\n          required: true,\n          message: '菜单编码不能为空',\n          trigger: 'blur'\n        }, {\n          max: 50,\n          message: '菜单编码最多为50个字符！',\n          trigger: 'blur'\n        }],\n        icon: [{\n          required: true,\n          message: '菜单图标不能为空',\n          trigger: 'click'\n        }],\n        type: [{\n          required: true,\n          message: '请选择菜单类型',\n          trigger: 'change'\n        }],\n        category: [{\n          required: true,\n          message: '请选择菜单分类',\n          trigger: 'input'\n        }],\n        urlAddress: [{\n          required: true,\n          message: '地址不能为空',\n          trigger: 'blur'\n        }],\n        'propertyJson.moduleId': [{\n          required: true,\n          message: '关联不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  watch: {\n    'dataForm.parentId': function dataFormParentId(val) {\n      this.onChange(val);\n    }\n  },\n  methods: {\n    init: function init(id, category, systemId, parentId) {\n      var _this = this;\n      this.dataForm = JSON.parse(JSON.stringify(defaultDataForm));\n      this.dataForm.id = id || '';\n      this.related = false;\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.$refs['dataForm'].resetFields();\n        _this.dataForm.category = category;\n        _this.dataForm.systemId = systemId;\n        _this.featureWebData = [];\n        _this.dictionaryData = [];\n        _this.reportData = [];\n        _this.screenData = [];\n        _this.portalData = [];\n\n        // 获取上级菜单\n        (0, _menu.getMenuSelector)({\n          category: category\n        }, id || 0, systemId).then(function (res) {\n          var topItem = {\n            fullName: \"顶级节点\",\n            hasChildren: true,\n            id: \"-1\",\n            children: res.data.list\n          };\n          _this.treeData = [topItem];\n        });\n        _this.dataForm.parentId = parentId || '';\n        // 获取菜单类型\n        _this.typeData = _this.dataForm.category === 'App' ? appTypeData : typeData;\n        // 获取表单数据\n        if (_this.dataForm.id) {\n          _this.formLoading = true;\n          (0, _menu.getMenuInfo)(_this.dataForm.id).then(function (res) {\n            _this.dataForm = res.data;\n            var propertyJson = res.data.propertyJson ? JSON.parse(res.data.propertyJson) : null;\n            _this.dataForm.propertyJson = propertyJson || {\n              moduleId: '',\n              iconBackgroundColor: ''\n            };\n            var menuType = _this.dataForm.type;\n            if ([2, 3, 4].includes(menuType)) {\n              _this.dataForm.isButtonAuthorize = 1;\n              _this.dataForm.isColumnAuthorize = 1;\n              _this.dataForm.isFormAuthorize = 1;\n              _this.dataForm.isDataAuthorize = 1;\n            }\n            _this.oldUrlAddress = res.data.urlAddress;\n            _this.switchType(menuType);\n            _this.$nextTick(function () {\n              _this.formLoading = false;\n            });\n          }).catch(function () {});\n        }\n      });\n    },\n    // 功能列表\n    fetchFeatureList: function fetchFeatureList() {\n      var _this2 = this;\n      if (!this.featureWebData.length) {\n        (0, _visualDev.getFeatureSelector)({\n          type: 1,\n          isRelease: 1\n        }).then(function (res) {\n          _this2.featureWebData = res.data.list;\n          _this2.tempData = _this2.featureWebData;\n        });\n        return;\n      }\n      this.tempData = this.featureWebData;\n    },\n    // 字典类型\n    fetchDictionaryType: function fetchDictionaryType() {\n      var _this3 = this;\n      if (!this.dictionaryData.length) {\n        (0, _dictionary.getDictionaryType)().then(function (res) {\n          _this3.dictionaryData = res.data.list;\n          _this3.tempData = _this3.dictionaryData;\n        });\n        return;\n      }\n      this.tempData = this.dictionaryData;\n    },\n    // 报表列表\n    fetchDataReportList: function fetchDataReportList() {\n      var _this4 = this;\n      if (!this.reportData.length) {\n        this.$store.dispatch('base/getDictionaryData', {\n          sort: 'ReportSort'\n        }).then(function (t) {\n          var ReportSortTypeList = JSON.parse(JSON.stringify(t));\n          (0, _dataReport.getDataReportSelector)().then(function (res) {\n            var reportData = res.data.list;\n            _this4.reportData = ReportSortTypeList;\n            _this4.$nextTick(function () {\n              var _loop = function _loop(i) {\n                var child = reportData.filter(function (o) {\n                  return _this4.reportData[i].id === o.categoryId;\n                });\n                _this4.$set(_this4.reportData[i], 'children', child);\n              };\n              for (var i = 0; i < _this4.reportData.length; i++) {\n                _loop(i);\n              }\n              _this4.reportData = _this4.reportData.filter(function (o) {\n                return o.children.length;\n              });\n              _this4.tempData = _this4.reportData;\n            });\n          });\n        });\n        return;\n      }\n      this.tempData = this.reportData;\n    },\n    // 大屏列表\n    fetchDataVList: function fetchDataVList() {\n      var _this5 = this;\n      if (!this.screenData.length) {\n        (0, _dataV.getDataVSelector)().then(function (res) {\n          _this5.screenData = res.data.list;\n          _this5.tempData = _this5.screenData;\n        });\n        return;\n      }\n      this.tempData = this.screenData;\n    },\n    // 门户列表\n    fetchPortalList: function fetchPortalList() {\n      var _this6 = this;\n      if (!this.portalData.length) {\n        (0, _portal.getPortalSelector)().then(function (res) {\n          _this6.portalData = res.data.list.filter(function (o) {\n            return o.children && o.children.length;\n          });\n          _this6.tempData = _this6.portalData;\n        });\n        return;\n      }\n      this.tempData = this.portalData;\n    },\n    switchType: function switchType(val) {\n      switch (val) {\n        case 3:\n          this.fetchFeatureList();\n          break;\n        case 4:\n          this.fetchDictionaryType();\n          break;\n        case 5:\n          this.fetchDataReportList();\n          break;\n        case 6:\n          this.fetchDataVList();\n          break;\n        case 8:\n          this.fetchPortalList();\n          break;\n      }\n    },\n    onChange: function onChange(val) {\n      if (this.dataForm.category !== 'App') return;\n      if (val === '-1') {\n        this.typeData = appTypeData.filter(function (o) {\n          return o.enCode == 1;\n        });\n        if (this.dataForm.type && this.dataForm.type != 1) this.dataForm.type = '';\n      } else {\n        this.typeData = appTypeData.filter(function (o) {\n          return o.enCode != 1;\n        });\n        if (this.dataForm.type == 1) this.dataForm.type = '';\n      }\n    },\n    // 切换类型\n    changeMenuType: function changeMenuType(val) {\n      // 重置关联下拉框的值及链接处理\n      this.dataForm.propertyJson.moduleId = '';\n      var menuId = this.dataForm.id;\n      if (menuId) this.dataForm.urlAddress = '';\n      if ([2, 3, 4].includes(val)) {\n        this.dataForm.isButtonAuthorize = 1;\n        this.dataForm.isColumnAuthorize = 1;\n        this.dataForm.isFormAuthorize = 1;\n        this.dataForm.isDataAuthorize = 1;\n      } else {\n        this.dataForm.isButtonAuthorize = 0;\n        this.dataForm.isColumnAuthorize = 0;\n        this.dataForm.isFormAuthorize = 0;\n        this.dataForm.isDataAuthorize = 0;\n      }\n      if (val == 6) {\n        this.dataForm.linkTarget = '_blank';\n      } else {\n        this.dataForm.linkTarget = '_self';\n      }\n      this.switchType(this.dataForm.type);\n    },\n    // 树转数组\n    treeToArray: function treeToArray(list) {\n      var _this7 = this;\n      var newArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      list.forEach(function (item) {\n        var children = item.children;\n        if (children) {\n          // delete item.children\n          if (children.length) {\n            newArr.push(item);\n            return _this7.treeToArray(children, newArr);\n          }\n        }\n        newArr.push(item);\n      });\n      return newArr;\n    },\n    handleSelectModule: function handleSelectModule(val) {\n      if (this.dataForm.type == 4) {\n        var item = this.treeToArray(this.dictionaryData).filter(function (o) {\n          return o.id === val;\n        });\n        this.dataForm.propertyJson.isTree = item[0].isTree;\n      }\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this8 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        var menuEnCode = _this8.dataForm.enCode.replace('.', '');\n        var moduleId = _this8.dataForm.propertyJson.moduleId;\n        if (_this8.dataForm.category === 'Web') {\n          switch (_this8.dataForm.type) {\n            case 3:\n              // 功能\n              _this8.dataForm.urlAddress = \"model/\".concat(menuEnCode);\n              break;\n            case 4:\n              // 字典\n              _this8.dataForm.urlAddress = \"dictionary/\".concat(menuEnCode);\n              break;\n            case 5:\n              // 报表\n              _this8.dataForm.urlAddress = \"dataReport/\".concat(menuEnCode);\n              break;\n            case 6:\n              // 大屏\n              _this8.dataForm.urlAddress = \"dataScreen/\".concat(menuEnCode);\n              break;\n            case 8:\n              // 门户\n              _this8.dataForm.urlAddress = \"portal/\".concat(menuEnCode);\n              break;\n          }\n        } else {\n          if (_this8.dataForm.type == 3) {\n            _this8.dataForm.urlAddress = \"/pages/apply/dynamicModel/index?id=\".concat(moduleId);\n          }\n          if (_this8.dataForm.type == 5) {\n            _this8.dataForm.urlAddress = menuEnCode;\n          }\n          if (_this8.dataForm.type == 8) {\n            _this8.dataForm.urlAddress = menuEnCode;\n          }\n        }\n        if (valid) {\n          _this8.btnLoading = true;\n          var formMethod = _this8.dataForm.id ? _menu.updateMenu : _menu.createMenu;\n          var query = _objectSpread(_objectSpread({}, _this8.dataForm), {}, {\n            propertyJson: JSON.stringify(_this8.dataForm.propertyJson)\n          });\n          formMethod(query).then(function (res) {\n            _this8.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: function onClose() {\n                _this8.visible = false;\n                _this8.btnLoading = false;\n                _this8.$emit('refreshDataList');\n              }\n            });\n          }).catch(function () {\n            _this8.btnLoading = false;\n          });\n        }\n      });\n    },\n    openIconBox: function openIconBox() {\n      this.iconBoxVisible = true;\n    },\n    choiceIcon: function choiceIcon(value) {\n      this.dataForm.icon = value;\n    }\n  }\n};",null]}