{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/JNPFEditor/components/EditorImage.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/JNPFEditor/components/EditorImage.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.constructor\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'EditorImage',\n  props: {\n    color: {\n      type: String,\n      default: '#1890ff'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'annexpic'\n    },\n    autoUpload: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      dialogVisible: false,\n      listObj: {},\n      fileList: [],\n      uploading: false\n    };\n  },\n  computed: {\n    getAction: function getAction() {\n      return this.define.comUploadUrl + '/' + this.type;\n    },\n    uploadHeaders: function uploadHeaders() {\n      return {\n        Authorization: this.$store.getters.token\n      };\n    }\n  },\n  methods: {\n    handleChange: function handleChange(file) {\n      this.beforeUpload(file.raw);\n    },\n    handleUploadError: function handleUploadError(err, file, fileList) {\n      // 处理上传失败的回调\n      console.error(\"图片上传失败！\", err);\n    },\n    beforeUpload: function beforeUpload(file) {\n      var _this = this;\n      var isAccept = new RegExp('image/*').test(file.type);\n      if (!isAccept) {\n        this.$message.error(\"\\u8BF7\\u4E0A\\u4F20\\u56FE\\u7247\");\n        return isAccept;\n      }\n      this.getBase64WithFile(file).then(function (_ref) {\n        var thumbUrl = _ref.result;\n        _this.$emit('successOK', thumbUrl);\n      });\n    },\n    handleSuccess: function handleSuccess(res, file) {\n      var _this2 = this;\n      if (res.code == 200) {\n        this.urlToBase64(this.define.APIURl + res.data.url).then(function (base64) {\n          _this2.$emit('successOK', base64);\n        });\n      } else {\n        this.$message({\n          message: res.msg,\n          type: 'error',\n          duration: 1500\n        });\n      }\n    },\n    urlToBase64: function urlToBase64(url, mineType) {\n      return new Promise(function (resolve, reject) {\n        var canvas = document.createElement('CANVAS');\n        var ctx = canvas.getContext('2d');\n        var img = new Image();\n        img.crossOrigin = '';\n        img.onload = function () {\n          if (!canvas || !ctx) {\n            return reject();\n          }\n          canvas.height = img.height;\n          canvas.width = img.width;\n          ctx.drawImage(img, 0, 0);\n          var dataURL = canvas.toDataURL(mineType || 'image/*');\n          canvas = null;\n          resolve(dataURL);\n        };\n        img.src = url;\n      });\n    },\n    getBase64WithFile: function getBase64WithFile(file) {\n      return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function () {\n          return resolve({\n            result: reader.result,\n            file: file\n          });\n        };\n        reader.onerror = function (error) {\n          return reject(error);\n        };\n      });\n    }\n  }\n};",null]}