{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/msgCenter/sendConfig/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/msgCenter/sendConfig/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.array.find\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _sendConfig = require(\"@/api/msgCenter/sendConfig\");\nvar _TemplateForm = _interopRequireDefault(require(\"./TemplateForm\"));\nvar _Detail = _interopRequireDefault(require(\"../msgTemplate/Detail\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    Detail: _Detail.default,\n    TemplateForm: _TemplateForm.default\n  },\n  name: 'sendConfig-Form',\n  data: function data() {\n    return {\n      dataForm: {\n        id: '',\n        fullName: '',\n        enCode: '',\n        description: '',\n        enabledMark: 1,\n        sortCode: 0,\n        messageSource: '',\n        templateType: 0,\n        sendConfigTemplateList: []\n      },\n      dataRule: {\n        fullName: [{\n          required: true,\n          message: '模板名称不能为空',\n          trigger: 'blur'\n        }],\n        enCode: [{\n          required: true,\n          message: '模板编码不能为空',\n          trigger: 'blur'\n        }, {\n          validator: this.formValidate('enCode'),\n          trigger: 'blur'\n        }],\n        messageSource: [{\n          required: true,\n          message: '请选择消息来源',\n          trigger: 'change'\n        }]\n      },\n      msgSourceList: [],\n      btnLoading: false,\n      loading: false,\n      templateVisible: false,\n      messageTypeList: [],\n      viewVisible: false\n    };\n  },\n  methods: {\n    init: function init(id) {\n      var _this = this;\n      this.dataForm.id = id || '';\n      this.getConfig();\n      this.$nextTick(function () {\n        _this.dataForm.sendConfigTemplateList = [];\n        _this.$refs['dataForm'].resetFields();\n        if (_this.dataForm.id) {\n          _this.loading = true;\n          (0, _sendConfig.getSendConfigDetail)(_this.dataForm.id).then(function (res) {\n            _this.dataForm = res.data;\n            _this.dataForm.enabledMark = Number(_this.dataForm.enabledMark);\n            _this.loading = false;\n          }).catch(function () {\n            _this.loading = false;\n          });\n        }\n      });\n    },\n    getConfig: function getConfig() {\n      var _this2 = this;\n      this.$store.dispatch('base/getDictionaryData', {\n        sort: 'msgSendType'\n      }).then(function (res) {\n        _this2.messageTypeList = res;\n      });\n      this.$store.dispatch('base/getDictionaryData', {\n        sort: 'msgSourceType'\n      }).then(function (res) {\n        _this2.msgSourceList = res;\n      });\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this3 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          _this3.btnLoading = true;\n          var formMethod = _this3.dataForm.id ? _sendConfig.editMsgTemplate : _sendConfig.addMsgTemplate;\n          formMethod(_this3.dataForm).then(function (res) {\n            _this3.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: function onClose() {\n                _this3.visible = false;\n                _this3.btnLoading = false;\n                _this3.$emit('close', true);\n              }\n            });\n          }).catch(function () {\n            _this3.btnLoading = false;\n          });\n        }\n      });\n    },\n    addTemplateData: function addTemplateData(row, index) {\n      var _this4 = this;\n      if (!this.dataForm.messageSource) return this.$message({\n        message: '请选择消息来源',\n        type: 'error'\n      });\n      this.templateVisible = true;\n      this.$nextTick(function () {\n        _this4.$refs.TemplateRef.init(row, index, _this4.dataForm.messageSource);\n      });\n    },\n    addEditTemplate: function addEditTemplate(e, index) {\n      if (!index && index != 0) {\n        this.dataForm.sendConfigTemplateList.push(e);\n      } else {\n        this.$set(this.dataForm.sendConfigTemplateList, index, e);\n      }\n    },\n    handleDel: function handleDel(index) {\n      var _this5 = this;\n      this.$confirm('删除记录，不可恢复?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this5.dataForm.sendConfigTemplateList.splice(index, 1);\n      }).catch(function () {});\n    },\n    goBack: function goBack() {\n      this.$emit('close');\n    },\n    getMsgTypeTitle: function getMsgTypeTitle(messageType) {\n      var item = this.messageTypeList.find(function (res) {\n        return messageType == res.enCode;\n      });\n      return item.fullName;\n    },\n    closeViewForm: function closeViewForm() {\n      this.viewVisible = false;\n    },\n    handleView: function handleView(id) {\n      var _this6 = this;\n      this.viewVisible = true;\n      this.$nextTick(function () {\n        _this6.$refs.View.init(id, _this6.messageTypeList);\n      });\n    },\n    onMessageSourceChange: function onMessageSourceChange() {\n      this.dataForm.sendConfigTemplateList = [];\n    }\n  }\n};",null]}