{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/menu/components/dataAuthorize/DataAuthorizeForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/menu/components/dataAuthorize/DataAuthorizeForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  createDataAuthorize,\n  updateDataAuthorize,\n  getDataAuthorizeInfo\n} from \"@/api/system/dataAuthorize\";\nimport nameSelects from '../NameSelect.vue'\nimport { getVisualTables } from \"@/api/system/authorize\"\nconst textOptions = [{\n  value: \"input\",\n  label: \"任意文本\"\n},\n{\n  value: \"@userId\",\n  label: \"当前用户\"\n},\n{\n  value: \"@organizeId\",\n  label: \"当前组织\"\n}]\nconst organizeOptions = [\n  ...textOptions,\n  {\n    value: \"organizeSelect\",\n    label: \"组织选择\"\n  }, {\n    value: \"depSelect\",\n    label: \"部门选择\"\n  }, {\n    value: \"posSelect\",\n    label: \"岗位选择\"\n  }, {\n    value: \"roleSelect\",\n    label: \"角色选择\"\n  }, {\n    value: \"groupSelect\",\n    label: \"分组选择\"\n  }, {\n    value: \"userSelect\",\n    label: \"用户选择\"\n  },\n  {\n    value: \"@userAraSubordinates\",\n    label: \"当前用户及下属\"\n  },\n  {\n    value: \"@organizationAndSuborganization\",\n    label: \"当前组织及子组织\"\n  },\n  {\n    value: \"@branchManageOrganize\",\n    label: \"当前分管组织\"\n  }\n]\nconst numberOptions = [\n  {\n    value: \"inputNumber\",\n    label: \"数字输入\"\n  }\n]\nconst dataTimeOptions = [\n  {\n    value: \"datePicker\",\n    label: \"日期选择\"\n  }\n]\nconst formatOptions = [\n  {\n    label: 'yyyy',\n    value: 'yyyy'\n  },\n  {\n    label: 'yyyy-MM',\n    value: 'yyyy-MM'\n  },\n  {\n    label: 'yyyy-MM-dd',\n    value: 'yyyy-MM-dd'\n  },\n  {\n    label: 'yyyy-MM-dd HH:mm',\n    value: 'yyyy-MM-dd HH:mm'\n  },\n  {\n    label: 'yyyy-MM-dd HH:mm:ss',\n    value: 'yyyy-MM-dd HH:mm:ss'\n  }\n]\nexport default {\n  components: { nameSelects },\n\n  data() {\n    return {\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      typeOptions: [\n        {\n          value: \"string\",\n          label: \"string\"\n        },\n        {\n          value: \"int\",\n          label: \"int\"\n        },\n        {\n          value: \"double\",\n          label: \"double\"\n        },\n        {\n          value: \"varchar\",\n          label: \"varchar\"\n        },\n        {\n          value: \"datetime\",\n          label: \"datetime\"\n        },\n        {\n          value: \"text\",\n          label: \"text\"\n        },\n        {\n          value: \"bigint\",\n          label: \"bigint\"\n        }\n      ],\n      fieldRuleOptions: [\n        { value: 0, label: \"主表规则\" },\n        { value: 1, label: \"副表规则\" },\n        { value: 2, label: \"子表规则\" }\n      ],\n      treeData: [],\n      textOptions,\n      organizeOptions,\n      dataTimeOptions,\n      numberOptions,\n      formatOptions,\n      symbolOptionsBase: [\n        {\n          label: \"等于\",\n          value: \"==\"\n        },\n        {\n          label: \"不等于\",\n          value: \"<>\"\n        },\n        {\n          label: \"包含\",\n          value: \"like\"\n        },\n        {\n          label: \"不包含\",\n          value: \"notLike\"\n        },\n        {\n          label: \"为空\",\n          value: \"null\"\n        },\n        {\n          label: \"不为空\",\n          value: \"notNull\"\n        },\n      ],\n      symbolOptionsDateNum: [\n        {\n          label: \"等于\",\n          value: \"==\"\n        },\n        {\n          label: \"不等于\",\n          value: \"<>\"\n        },\n        {\n          label: \"大于\",\n          value: \">\"\n        },\n        {\n          label: \"小于\",\n          value: \"<\"\n        },\n        {\n          label: \"介于\",\n          value: \"between\"\n        },\n        {\n          label: \"大于等于\",\n          value: \">=\"\n        },\n        {\n          label: \"小于等于\",\n          value: \"<=\"\n        },\n        {\n          label: \"为空\",\n          value: \"null\"\n        },\n        {\n          label: \"不为空\",\n          value: \"notNull\"\n        },\n      ],\n      symbolOptionsSelect: [\n        {\n          label: \"等于\",\n          value: \"==\"\n        },\n        {\n          label: \"不等于\",\n          value: \"<>\"\n        },\n        {\n          label: \"包含任意一个\",\n          value: \"in\"\n        },\n        {\n          label: \"不包含任意一个\",\n          value: \"notIn\"\n        },\n        {\n          label: \"为空\",\n          value: \"null\"\n        },\n        {\n          label: \"不为空\",\n          value: \"notNull\"\n        },\n      ],\n      symbolOptions: [\n        {\n          label: \"大于等于\",\n          value: \">=\"\n        },\n        {\n          label: \"大于\",\n          value: \">\"\n        },\n        {\n          label: \"等于\",\n          value: \"==\"\n        },\n        {\n          label: \"小于等于\",\n          value: \"<=\"\n        },\n        {\n          label: \"小于\",\n          value: \"<\"\n        },\n        {\n          label: \"不等于\",\n          value: \"<>\"\n        },\n        {\n          label: \"介于\",\n          value: \"between\"\n        },\n        {\n          label: \"包含任意一个\",\n          value: \"in\"\n        },\n        {\n          label: \"不包含任意一个\",\n          value: \"notIn\"\n        },\n        {\n          label: \"包含\",\n          value: \"like\"\n        },\n        {\n          label: \"不包含\",\n          value: \"notLike\"\n        },\n        {\n          label: \"为空\",\n          value: \"null\"\n        },\n        {\n          label: \"不为空\",\n          value: \"notNull\"\n        },\n      ],\n      dataForm: {\n        id: \"\",\n        moduleId: \"\",\n        fullName: \"\",\n        enCode: \"\",\n        type: \"\",\n        conditionSymbol: \"\",\n        conditionText: \"\",\n        description: \"\",\n        fieldRule: 0,\n        childTableKey: '',\n        format: 'yyyy-MM-dd HH:mm:ss'\n      },\n      conditionSymbol: [],\n      menuType: 2,\n      nameVisible: false,\n      dataRule: {\n        enCode: [\n          { required: true, message: \"字段名称不能为空\", trigger: \"blur\" }\n        ],\n        fieldRule: [\n          { required: true, message: \"主表规则不能为空\", trigger: \"blur\" }\n        ],\n        fullName: [\n          { required: true, message: \"字段说明不能为空\", trigger: \"blur\" }\n        ],\n        childTableKey: [\n          { required: true, message: \"关联字段不能为空\", trigger: \"blur\" }\n        ],\n        type: [{ required: true, message: \"请选择字段类型\", trigger: \"blur\" }],\n        conditionSymbol: [\n          { required: true, message: \"请选择条件符号\", trigger: \"blur\" }\n        ],\n        conditionText: [\n          { required: true, message: \"请选择条件内容\", trigger: \"blur\" }\n        ]\n      },\n      enCodeOptions: [],\n      dataType: \"\"\n    };\n  },\n  methods: {\n    init(moduleId, id, menuType, dataType) {\n      this.menuType = menuType;\n      this.dataType = dataType\n      this.dataForm.id = id || \"\";\n      this.dataForm.moduleId = moduleId;\n      this.conditionSymbol = [];\n      this.visible = true;\n      this.formLoading = true\n      this.treeData = []\n      getVisualTables(moduleId, dataType).then(res => {\n        let data = []\n        for (const key in res.data.linkTables) {\n          data.push({\n            tableName: res.data.linkTables[key],\n            dbLink: res.data.linkId\n          })\n        }\n        this.treeData = data\n      })\n      this.$nextTick(() => {\n        this.$refs[\"dataForm\"].resetFields();\n        this.dataForm.bindTable = ''\n        this.dataForm.conditionText = ''\n        this.dataForm.type = ''\n        this.dataForm.fieldRule = 0\n        // 获取字段数据\n        if (this.dataForm.id) {\n          getDataAuthorizeInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data;\n            this.conditionSymbol = res.data.conditionSymbol\n              ? res.data.conditionSymbol.split(\",\")\n              : [];\n          });\n        }\n        this.formLoading = false;\n      });\n    },\n    typeChange() {\n      this.dataForm.conditionText = ''\n      this.conditionSymbol = ''\n    },\n    conditionTextChange() {\n      this.conditionSymbol = ''\n    },\n    selectName() {\n      this.nameVisible = true\n      this.$nextTick(() => {\n        this.$refs.nameForm.openDialog();\n      });\n    },\n    changeFieldRule() {\n      this.dataForm.childTableKey = ''\n    },\n    closeForm(val, value) {\n      this.dataForm.enCode = val\n      if (value.tableName) this.dataForm.bindTable = value.tableName\n      if (value.fieldName) this.dataForm.fullName = value.fieldName\n    },\n    onEnCodeChange(e) {\n      let objVal;\n      this.dataForm.fullName = \"\";\n      this.dataForm.type = \"\";\n      if (!!e) {\n        this.enCodeOptions.forEach(o => {\n          if (o.field === e) {\n            objVal = {\n              fullName: o.fieldName,\n              type: o.dataType\n            };\n            return objVal;\n          }\n        });\n        this.dataForm.fullName = objVal[\"fullName\"];\n        this.dataForm.type = objVal[\"type\"];\n      }\n    },\n    dataFormSubmit() {\n      this.dataForm.conditionSymbol = ''\n      if (this.conditionSymbol) this.dataForm.conditionSymbol = this.conditionSymbol.join();\n      this.$refs[\"dataForm\"].validate(valid => {\n        if (valid) {\n          this.btnLoading = true;\n          const formMethod = this.dataForm.id\n            ? updateDataAuthorize\n            : createDataAuthorize;\n          formMethod(this.dataForm)\n            .then(res => {\n              this.$message({\n                message: res.msg,\n                type: \"success\",\n                duration: 1500,\n                onClose: () => {\n                  this.visible = false;\n                  this.btnLoading = false;\n                  this.$emit(\"refreshDataList\");\n                }\n              });\n            })\n            .catch(() => {\n              this.btnLoading = false;\n            });\n        }\n      });\n    }\n  }\n};\n",null]}