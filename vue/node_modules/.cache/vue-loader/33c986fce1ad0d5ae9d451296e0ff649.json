{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/chat/Chart.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/chat/Chart.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport {\n  alignList,\n  underLineList,\n  linkTypeList,\n  barStyleList,\n  lineStyleList,\n  pieStyleList,\n  radarStyleList,\n  rankStyleList,\n  timeStyleList,\n  layoutStyleList,\n  appLayoutStyleList,\n  textStyleList,\n  mapStyleList,\n  directionList,\n  indicatorPositionList,\n  arrowList,\n  fillStyleList,\n  imageStyleList,\n  videoStyleList,\n  playNumberList,\n  sortList,\n  noStyleTypeList,\n  appTodoStyleList,\n  commonFuncStyleList,\n  tableTypeList\n} from '../../components/config'\nimport draggable from 'vuedraggable'\nimport InterfaceDialog from '@/components/Process/PropPanel/InterfaceDialog'\nimport popupEditor from '../../components/popupEditor'\nimport todoData from '../common/TodoData'\nimport CommonFunData from '../common/CommonFunData'\nimport DataBoardData from '../common/DataBoardData'\nimport CarouselData from '../common/CarouselData'\nimport TableList from '../common/Table'\nimport textSet from '../common/Text'\nimport MapSet from '../common/MapSet'\nimport Link from '../common/Link'\nimport { getFeatureSelector } from '@/api/onlineDev/visualDev'\nimport { getAtlas } from '@/api/onlineDev/portal'\nimport Refresh from '../common/Refresh'\nimport singleImg from '@/components/Upload/SingleImg'\nexport default {\n  props: ['activeData', 'menuList', 'appMenuList', 'showType'],\n  components: {\n    draggable,\n    popupEditor,\n    todoData,\n    CommonFunData,\n    DataBoardData,\n    CarouselData,\n    InterfaceDialog,\n    textSet,\n    MapSet,\n    Link,\n    TableList,\n    Refresh,\n    singleImg\n  },\n  data() {\n    return {\n      cascaderOptions: [],\n      styleTypeOptions: [],\n      tempData: [],\n      fileList: [],\n      editorVisible: false,\n      todoDataVisible: false,\n      commonFunDataVisible: false,\n      dataBoardDataVisible: false,\n      carouselDataVisible: false,\n      alignList,\n      underLineList,\n      linkTypeList,\n      directionList,\n      indicatorPositionList,\n      arrowList,\n      fillStyleList,\n      playNumberList,\n      layoutStyleList,\n      appLayoutStyleList,\n      sortList,\n      textStyleList,\n      noStyleTypeList,\n      appTodoStyleList,\n      commonFuncStyleList,\n    }\n  },\n  watch: {\n    'activeData.jnpfKey': {\n      handler(val) {\n        this.getStyleTypeOptions()\n      },\n      immediate: true,\n    }\n  },\n  computed: {\n    linkType() {\n      return this.activeData.option.linkType || ''\n    },\n  },\n  created() {\n    getAtlas().then((res) => {\n      this.cascaderOptions = res.data\n    })\n    this.fileList = []\n    if (this.activeData.jnpfKey == 'video' && this.activeData.option.defaultValue && this.activeData.option.styleType == 1) {\n      this.fileList = [this.activeData.option.defaultValue]\n    }\n  },\n  methods: {\n    initBarType() {\n      if (this.activeData.option.styleType != 7 || this.activeData.jnpfKey != 'barChart') return\n      const optionData = this.activeData.option.defaultValue || []\n      if (!Array.isArray(optionData)) return\n      this.activeData.option.barType = []\n      let typeArr = Array.from(new Set(optionData.map((item) => item.type)))\n      typeArr.map((item, index) => {\n        this.activeData.option.barType.push({\n          title: item,\n          type: index == 1 ? 'line' : 'bar'\n        })\n      })\n    },\n    getStyleTypeOptions() {\n      this.styleTypeOptions = []\n      const jnpfKey = this.activeData.jnpfKey\n      if (jnpfKey == 'barChart') this.styleTypeOptions = JSON.parse(JSON.stringify(barStyleList))\n      if (jnpfKey == 'lineChart') this.styleTypeOptions = lineStyleList\n      if (jnpfKey == 'pieChart') this.styleTypeOptions = pieStyleList\n      if (jnpfKey == 'radarChart') this.styleTypeOptions = radarStyleList\n      if (jnpfKey == 'rankList') this.styleTypeOptions = rankStyleList\n      if (jnpfKey == 'timeAxis') this.styleTypeOptions = timeStyleList\n      if (jnpfKey == 'image') this.styleTypeOptions = imageStyleList\n      if (jnpfKey == 'video') this.styleTypeOptions = videoStyleList\n      if (jnpfKey == 'mapChart') this.styleTypeOptions = mapStyleList\n      if (jnpfKey == 'tableList') this.styleTypeOptions = tableTypeList\n    },\n    getTitle() {\n      const jnpfKey = this.activeData.jnpfKey\n      if (jnpfKey == 'barChart') return '柱状图设置'\n      if (jnpfKey == 'lineChart') return '折线图设置'\n      if (jnpfKey == 'pieChart') return '饼图设置'\n      if (jnpfKey == 'radarChart') return '雷达图设置'\n      if (jnpfKey == 'rankList') return '排行榜设置'\n      if (jnpfKey == 'timeAxis') return '时间轴设置'\n      if (jnpfKey == 'text') return '文本设置'\n      if (jnpfKey == 'image') return '图片设置'\n      if (jnpfKey == 'carousel') return '轮播图设置'\n      if (jnpfKey == 'video') return '视频设置'\n      if (jnpfKey == 'iframe') return 'iframe设置'\n      if (jnpfKey == 'mapChart') return '地图设置'\n      if (jnpfKey == 'todo') return '待办设置'\n      if (jnpfKey == 'commonFunc') return '常用功能设置'\n      if (jnpfKey == 'dataBoard') return '数据面板设置'\n      if (jnpfKey == 'tableList') return '表格列表设置'\n    },\n    getTipLabel() {\n      const jnpfKey = this.activeData.jnpfKey\n      if (jnpfKey == 'barChart') return 'APP不支持背景类型，默认显示基础类型'\n      if (jnpfKey == 'lineChart') return 'APP不支持堆叠类型，默认显示基础类型'\n      if (jnpfKey == 'mapChart') return 'APP不支持柱形和柱形排名类型，默认显示散点类型'\n      return ''\n    },\n    addSelectItem() {\n      this.activeData.option.columnOptions.push({\n        value: '',\n        label: ''\n      })\n    },\n    delSelectItem(index) {\n      if (this.activeData.option.columnOptions.length > 1) this.activeData.option.columnOptions.splice(index, 1)\n    },\n    showEditor() {\n      this.editorVisible = true\n      this.$nextTick(() => {\n        this.$refs.popupEditor.init(this.activeData.option.defaultValue)\n      })\n    },\n    getTempData() {\n      if (!this.tempData.length) {\n        getFeatureSelector({ type: 1 }).then(res => {\n          this.tempData = res.data.list\n        })\n      }\n    },\n    showData(refName, visible) {\n      this[visible] = true\n      this.$nextTick(() => {\n        if (this.showType == 'pc') {\n          this.$refs[refName].init(this.activeData.option.defaultValue)\n        } else {\n          this.$refs[refName].init(this.activeData.option.appDefaultValue)\n        }\n      })\n    },\n    showDataTodoData() {\n      this.todoDataVisible = true\n      this.$nextTick(() => {\n        this.$refs.todoData.init(this.activeData.option.defaultValue)\n      })\n    },\n    refresh(val) {\n      const type = this.showType == 'pc' ? 'defaultValue' : 'appDefaultValue'\n      this.activeData.option[type] = val\n      this.renderKeyChange()\n    },\n    commonRefresh(val) {\n      this.activeData.option.defaultValue = val\n      this.renderKeyChange()\n    },\n    uploadFileChange(e) {\n      this.activeData.option.defaultValue = e.length ? e[0] : ''\n    },\n    textChange() {\n      this.activeData.option.defaultValue = ''\n      if (this.activeData.dataType == 'static') this.activeData.option.defaultValue = 'JNPF快速开发平台'\n    },\n    dataTypeChange() {\n      this.activeData.option.defaultValue = ''\n      if (this.activeData.dataType == 'static') this.activeData.option.defaultValue = 'JNPF快速开发平台'\n      this.activeData.propsApi = ''\n      this.activeData.propsName = ''\n    },\n    dataBoardDataTypeChange() {\n      this.activeData.propsApi = '';\n      this.activeData.propsName = '';\n      this.renderKeyChange()\n    },\n    propsApiChange(val, item) {\n      if (val) {\n        this.activeData.propsApi = val\n        this.activeData.propsName = item.fullName\n        this.activeData.refresh.autoRefresh = false\n      } else {\n        this.activeData.propsApi = ''\n        this.activeData.propsName = ''\n      }\n      this.renderKeyChange()\n    },\n    renderKeyChange() {\n      this.activeData.renderKey = +new Date()\n    },\n    styleTypeChange(val) {\n      const jnpfKey = this.activeData.jnpfKey\n      if (jnpfKey == 'image' || jnpfKey == 'video') {\n        this.activeData.propsApi = \"\"\n        this.activeData.propsName = \"\"\n        this.activeData.dataType = 'static'\n        this.activeData.option.defaultValue = ''\n        if (val == '3') this.activeData.dataType = 'dynamic'\n      }\n    }\n  }\n}\n",null]}