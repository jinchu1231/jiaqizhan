{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Jnpf/InputTable/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Jnpf/InputTable/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.number.is-integer\");\nrequire(\"core-js/modules/es6.number.is-nan\");\nrequire(\"core-js/modules/es6.number.constructor\");\nrequire(\"core-js/modules/es6.array.find\");\nvar _typeof2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/typeof.js\"));\nrequire(\"core-js/modules/es6.array.find-index\");\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _comConfig = require(\"@/components/Generator/generator/comConfig\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _index2 = _interopRequireDefault(require(\"@/components/SelectDialog/index\"));\nvar _index3 = require(\"@/components/Generator/utils/index\");\nvar _vuex = require(\"vuex\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = exports.default = {\n  name: 'JnpfInputTable',\n  components: {\n    SelectDialog: _index2.default\n  },\n  inject: ['parameter'],\n  props: {\n    config: {\n      type: Object,\n      default: function _default() {}\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    formData: Object,\n    relations: Object,\n    vModel: String,\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      tableFormData: [],\n      tableData: [],\n      dataInterfaceInfo: [],\n      activeRowIndex: 0,\n      selectDialogVisible: false,\n      isAddRow: true,\n      // list类型下 添加行数据 number类型组件会进行校验 产生不需要的结果 在这里进行添加行数据判断 hack\n      complexHeaderList: [],\n      childColumns: [],\n      hasBatchBtn: false,\n      isOperate: false,\n      selectedList: [],\n      actionConfig: {}\n    };\n  },\n  created: function created() {\n    var _this = this;\n    this.tableData = this.config.__config__.children;\n    this.tableData = this.tableData.filter(function (o) {\n      return !o.__config__.noShow && (!o.__config__.visibility || Array.isArray(o.__config__.visibility) && o.__config__.visibility.includes('pc'));\n    });\n    var complexHeaderList = this.config.__config__.complexHeaderList || [];\n    if (complexHeaderList.length) {\n      var childColumns = [];\n      for (var i = 0; i < complexHeaderList.length; i++) {\n        var e = complexHeaderList[i];\n        e.align = e.align;\n        e.children = [];\n        e.label = e.fullName;\n        e.jnpfKey = 'complexHeader';\n        if (e.childColumns && e.childColumns.length) {\n          e.childColumns = e.childColumns.filter(function (o) {\n            return _this.tableData.some(function (item) {\n              return item.__config__.tableFixed == 'none' && item.__vModel__ == o;\n            });\n          });\n          childColumns.push.apply(childColumns, (0, _toConsumableArray2.default)(e.childColumns));\n          for (var j = 0; j < this.tableData.length; j++) {\n            var o = this.tableData[j];\n            if (e.childColumns.includes(o.__vModel__)) e.children.push(_objectSpread(_objectSpread({}, o), {}, {\n              align: o.__config__.tableAlign\n            }));\n          }\n        }\n      }\n      complexHeaderList = complexHeaderList.filter(function (o) {\n        return o.children.length;\n      });\n      this.complexHeaderList = complexHeaderList;\n      this.childColumns = childColumns;\n    }\n    this.buildOptions();\n    if (this.value && this.value.length) {\n      this.value.forEach(function (t) {\n        return _this.addRow(t, false);\n      });\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['userInfo'])), {}, {\n    childRelations: function childRelations() {\n      var obj = {};\n      for (var key in this.relations) {\n        if (key.includes('-')) {\n          var tableVModel = key.split('-')[0];\n          if (tableVModel === this.vModel) {\n            var newKey = key.split('-')[1];\n            obj[newKey] = this.relations[key];\n          }\n        }\n      }\n      return obj;\n    },\n    getHasColumnBtn: function getHasColumnBtn() {\n      return this.config.columnBtnsList && this.config.columnBtnsList.some(function (o) {\n        return o.show;\n      }) || false;\n    },\n    getHasBatchBtn: function getHasBatchBtn() {\n      return this.config.footerBtnsList && this.config.footerBtnsList.some(function (o) {\n        return ['batchRemove'].includes(o.value) && o.show;\n      }) || false;\n    },\n    getWidth: function getWidth() {\n      return this.config.columnBtnsList && this.config.columnBtnsList.filter(function (o) {\n        return o.show;\n      }).length * 50 || 100;\n    }\n  }),\n  methods: {\n    columnBtnsHandel: function columnBtnsHandel(item, index) {\n      if (item.value == 'remove') return this.remove(item, index);\n      if (item.value == 'copy') return this.copy(index);\n      if (item.value == 'add') return this.addRow();\n      if (item.value == 'batchRemove') return this.batchRemove(item);\n      this.openSelectDialog(item);\n    },\n    remove: function remove(item, index) {\n      var _this2 = this;\n      if (item.showConfirm) {\n        this.$confirm('确定删除该数据？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          _this2.del(index);\n        }).catch(function () {});\n      } else {\n        this.del(index);\n      }\n      this.updateParentData();\n    },\n    del: function del(index) {\n      this.tableFormData.splice(index, 1);\n    },\n    copy: function copy(index) {\n      var item = JSON.parse(JSON.stringify(this.tableFormData[index]));\n      item.length && item.map(function (o) {\n        return delete o.rowData;\n      });\n      this.tableFormData.push(item);\n      this.updateParentData();\n    },\n    batchRemove: function batchRemove(item) {\n      var _this3 = this;\n      if (!this.selectedList.length) return this.$message.error('请选择一条数据');\n      var handleBatchRemove = function handleBatchRemove() {\n        _this3.selectedList.forEach(function (row) {\n          var index = _this3.tableFormData.indexOf(row);\n          _this3.del(index);\n        });\n        _this3.$nextTick(function () {\n          _this3.updateParentData();\n        });\n      };\n      if (!item.showConfirm) return handleBatchRemove();\n      this.$confirm('确定删除该数据？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        handleBatchRemove();\n      }).catch(function () {});\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.selectedList = val;\n    },\n    setTransferFormData: function setTransferFormData(data, config, jnpfKey) {\n      if (!config.transferList || !config.transferList.length) return;\n      var row = this.tableFormData[this.activeRowIndex];\n      for (var index = 0; index < config.transferList.length; index++) {\n        var element = config.transferList[index];\n        if (element.sourceValue.includes('-')) {\n          element.sourceValue = element.sourceValue.split('-')[1];\n        }\n        for (var _index = 0; _index < row.length; _index++) {\n          var e = row[_index];\n          if (e.__vModel__ == element.sourceValue) {\n            e.value = data[element.targetField];\n            this.updateParentData();\n          }\n        }\n      }\n    },\n    buildOptions: function buildOptions() {\n      var _this4 = this;\n      this.tableData.forEach(function (cur, index) {\n        var config = cur.__config__;\n        if (_comConfig.dyOptionsList.indexOf(config.jnpfKey) > -1) {\n          if (config.dataType === 'dictionary' && config.dictionaryType) {\n            cur.options = [];\n            _this4.$store.dispatch('base/getDicDataSelector', config.dictionaryType).then(function (res) {\n              cur.options = res;\n            });\n          }\n          if (config.dataType === 'dynamic' && config.propsUrl) {\n            cur.options = [];\n            var query = {\n              paramList: config.templateJson ? _this4.getDefaultParamList(config.templateJson, _this4.formData) : []\n            };\n            var matchInfo = JSON.stringify({\n              id: config.propsUrl,\n              query: query\n            });\n            var item = {\n              matchInfo: matchInfo,\n              rowIndex: -1,\n              colIndex: index\n            };\n            _this4.dataInterfaceInfo.push(item);\n            (0, _dataInterface.getDataInterfaceRes)(config.propsUrl, query).then(function (res) {\n              cur.options = Array.isArray(res.data) ? res.data : [];\n            });\n          }\n        }\n      });\n    },\n    handleRelationForParent: function handleRelationForParent(e, defaultValue, notSetDefault) {\n      var _this5 = this;\n      if (!this.tableFormData.length) return;\n      for (var i = 0; i < this.tableFormData.length; i++) {\n        var row = this.tableFormData[i];\n        var _loop = function _loop() {\n          var item = row[j];\n          var vModel = item.jnpfKey === 'popupSelect' ? item.__vModel__.substring(0, item.__vModel__.indexOf('_jnpfRelation_')) : item.__vModel__;\n          if (e.__vModel__ === vModel) {\n            if (!notSetDefault) item.value = defaultValue;\n            if (e.opType === 'setOptions') {\n              item.config.options = [];\n              var query = {\n                paramList: _this5.getParamList(e.__config__.templateJson, _this5.formData, i)\n              };\n              (0, _dataInterface.getDataInterfaceRes)(e.__config__.propsUrl, query).then(function (res) {\n                item.config.options = Array.isArray(res.data) ? res.data : [];\n              });\n            }\n            if (e.opType === 'setUserOptions') {\n              var value = _this5.formData[e.relationField] || [];\n              item.config.ableRelationIds = Array.isArray(value) ? value : [value];\n            }\n            if (e.opType === 'setPopupOptions') {}\n            if (e.opType === 'setDate') {\n              var startTime = 0;\n              var endTime = 0;\n              if (e.__config__.startRelationField && e.__config__.startTimeType == 2) {\n                startTime = _this5.formData[e.__config__.startRelationField] || 0;\n              } else {\n                startTime = e.startTime;\n              }\n              if (e.__config__.endRelationField && e.__config__.endTimeType == 2) {\n                endTime = _this5.formData[e.__config__.endRelationField] || 0;\n              } else {\n                endTime = e.endTime;\n              }\n              item.config.startTime = startTime;\n              item.config.endTime = endTime;\n            }\n            if (e.opType === 'setTime') {\n              var _startTime = '';\n              var _endTime = '';\n              if (e.__config__.startRelationField && e.__config__.startTimeType == 2) {\n                _startTime = _this5.formData[e.__config__.startRelationField] || '00:00:00';\n                _startTime = _startTime + ':00';\n                if (_startTime.split(':').length == 3) {\n                  _startTime = _startTime;\n                } else {\n                  _startTime = _startTime + ':00';\n                }\n              } else {\n                _startTime = e.startTime || '00:00:00';\n              }\n              if (e.__config__.endRelationField && e.__config__.endTimeType == 2) {\n                _endTime = _this5.formData[e.__config__.endRelationField] || '23:59:59';\n                if (_endTime.split(':').length == 3) {\n                  _endTime = _endTime;\n                } else {\n                  _endTime = _endTime + ':00';\n                }\n              } else {\n                _endTime = e.endTime || '23:59:59';\n              }\n              item.config.startTime = _startTime;\n              item.config.endTime = _endTime;\n            }\n          }\n        };\n        for (var j = 0; j < row.length; j++) {\n          _loop();\n        }\n      }\n      this.updateParentData();\n    },\n    handleRelation: function handleRelation(data, rowIndex) {\n      var _this6 = this;\n      var currRelations = this.childRelations;\n      for (var key in currRelations) {\n        if (key === data.__vModel__) {\n          for (var i = 0; i < currRelations[key].length; i++) {\n            var e = currRelations[key][i];\n            var config = e.__config__;\n            var jnpfKey = config.jnpfKey;\n            var defaultValue = null;\n            if (['checkbox', 'cascader'].includes(jnpfKey) || ['select', 'treeSelect', 'popupSelect', 'popupTableSelect', 'userSelect'].includes(jnpfKey) && e.multiple) {\n              defaultValue = [];\n            }\n            var row = this.tableFormData[rowIndex];\n            var _loop2 = function _loop2() {\n              var item = row[j];\n              var vModel = item.jnpfKey === 'popupSelect' ? item.__vModel__.substring(0, item.__vModel__.indexOf('_jnpfRelation_')) : item.__vModel__;\n              if (e.__vModel__ === vModel) {\n                if (e.opType === 'setOptions') {\n                  item.config.options = [];\n                  var query = {\n                    paramList: _this6.getParamList(e.__config__.templateJson, _this6.formData, rowIndex)\n                  };\n                  (0, _dataInterface.getDataInterfaceRes)(e.__config__.propsUrl, query).then(function (res) {\n                    item.config.options = Array.isArray(res.data) ? res.data : [];\n                  });\n                }\n                if (e.opType === 'setUserOptions') {\n                  var value = _this6.getFieldVal(e.relationField, rowIndex) || [];\n                  item.config.ableRelationIds = Array.isArray(value) ? value : [value];\n                }\n                if (e.opType === 'setPopupOptions') {}\n                if (e.opType === 'setDate') {\n                  var startTime = 0;\n                  var endTime = 0;\n                  if (e.__config__.startRelationField && e.__config__.startTimeType == 2) {\n                    startTime = _this6.getFieldVal(e.__config__.startRelationField, rowIndex) || 0;\n                  } else {\n                    startTime = e.startTime;\n                  }\n                  if (e.__config__.endRelationField && e.__config__.endTimeType == 2) {\n                    endTime = _this6.getFieldVal(e.__config__.endRelationField, rowIndex) || 0;\n                  } else {\n                    endTime = e.endTime;\n                  }\n                  item.config.startTime = startTime;\n                  item.config.endTime = endTime;\n                }\n                if (e.opType === 'setTime') {\n                  var _startTime2 = 0;\n                  var _endTime2 = 0;\n                  if (e.__config__.startRelationField && e.__config__.startTimeType == 2) {\n                    _startTime2 = _this6.getFieldVal(e.__config__.startRelationField, rowIndex) || '00:00:00';\n                    if (_startTime2.split(':').length == 3) {\n                      _startTime2 = _startTime2;\n                    } else {\n                      _startTime2 = _startTime2 + ':00';\n                    }\n                  } else {\n                    _startTime2 = e.startTime;\n                  }\n                  if (e.__config__.endRelationField && e.__config__.endTimeType == 2) {\n                    _endTime2 = _this6.getFieldVal(e.__config__.endRelationField, rowIndex) || '23:59:59';\n                    if (_endTime2.split(':').length == 3) {\n                      _endTime2 = _endTime2;\n                    } else {\n                      _endTime2 = _endTime2 + ':00';\n                    }\n                  } else {\n                    _endTime2 = e.endTime;\n                  }\n                  item.config.startTime = _startTime2;\n                  item.config.endTime = _endTime2;\n                }\n                if (item.value != defaultValue) {\n                  item.value = defaultValue;\n                  _this6.$nextTick(function () {\n                    return _this6.handleRelation(item, rowIndex);\n                  });\n                }\n              }\n            };\n            for (var j = 0; j < row.length; j++) {\n              _loop2();\n            }\n          }\n        }\n      }\n      this.updateParentData();\n    },\n    buildRowAttr: function buildRowAttr(rowIndex) {\n      var _this7 = this;\n      var row = this.tableFormData[rowIndex];\n      var _loop3 = function _loop3() {\n        var item = row[i];\n        var cur = row[i].config;\n        var config = cur.__config__;\n        for (var key in _this7.value[rowIndex]) {\n          if (key === item.__vModel__) {\n            item.value = _this7.value[rowIndex][key];\n          }\n        }\n        if (_comConfig.dyOptionsList.indexOf(config.jnpfKey) > -1) {\n          if (config.dataType === 'dictionary' && config.dictionaryType) {\n            _this7.$store.dispatch('base/getDicDataSelector', config.dictionaryType).then(function (res) {\n              cur.options = res;\n            });\n          }\n          if (config.dataType === 'dynamic' && config.propsUrl) {\n            if (cur.options && cur.options.length && (!config.templateJson || !config.templateJson.length || !_this7.hasTemplateJsonRelation(config.templateJson))) return 1; // continue\n            var query = {\n              paramList: config.templateJson ? _this7.getParamList(config.templateJson, _this7.formData, rowIndex) : []\n            };\n            var matchInfo = JSON.stringify({\n              id: config.propsUrl,\n              query: query\n            });\n            var _item = {\n              matchInfo: matchInfo,\n              rowIndex: rowIndex,\n              colIndex: i\n            };\n            var infoIndex = _this7.dataInterfaceInfo.findIndex(function (item) {\n              return item.matchInfo === matchInfo;\n            });\n            var useCacheOptions = false;\n            if (infoIndex === -1) {\n              _this7.dataInterfaceInfo.push(_item);\n            } else {\n              var cacheOptions = _this7.getCacheOptions(infoIndex);\n              if (cacheOptions.length) {\n                cur.options = cacheOptions;\n                useCacheOptions = true;\n              }\n            }\n            if (!useCacheOptions) {\n              (0, _dataInterface.getDataInterfaceRes)(config.propsUrl, query).then(function (res) {\n                cur.options = Array.isArray(res.data) ? res.data : [];\n              });\n            }\n          }\n        }\n        if (config.jnpfKey === 'userSelect' && cur.relationField && cur.selectType !== 'all' && cur.selectType !== 'custom') {\n          var value = _this7.getFieldVal(cur.relationField, rowIndex) || [];\n          cur.ableRelationIds = Array.isArray(value) ? value : [value];\n        }\n        if (config.jnpfKey === 'datePicker') {\n          var startTime = 0;\n          var endTime = 0;\n          if (cur.__config__.startRelationField && cur.__config__.startTimeType == 2) {\n            startTime = _this7.getFieldVal(cur.__config__.startRelationField, rowIndex) || 0;\n          } else {\n            startTime = cur.startTime;\n          }\n          if (cur.__config__.endRelationField && cur.__config__.endTimeType == 2) {\n            endTime = _this7.getFieldVal(cur.__config__.endRelationField, rowIndex) || 0;\n          } else {\n            endTime = cur.endTime;\n          }\n          item.config.startTime = startTime;\n          item.config.endTime = endTime;\n        }\n        if (config.jnpfKey === 'timePicker') {\n          var _startTime3 = 0;\n          var _endTime3 = 0;\n          if (cur.__config__.startRelationField && cur.__config__.startTimeType == 2) {\n            _startTime3 = _this7.getFieldVal(cur.__config__.startRelationField, rowIndex) || '00:00:00';\n            if (_startTime3 && _startTime3.split(':').length == 3) {\n              _startTime3 = _startTime3;\n            } else {\n              _startTime3 = _startTime3 + ':00';\n            }\n          } else {\n            _startTime3 = cur.startTime;\n          }\n          if (cur.__config__.endRelationField && cur.__config__.endTimeType == 2) {\n            _endTime3 = _this7.getFieldVal(cur.__config__.endRelationField, rowIndex) || '23:59:59';\n            if (_startTime3.split(':').length == 3) {\n              _endTime3 = _endTime3;\n            } else {\n              _endTime3 = _endTime3 + ':00';\n            }\n          } else {\n            _endTime3 = cur.endTime;\n          }\n          item.config.startTime = _startTime3;\n          item.config.endTime = _endTime3;\n        }\n      };\n      for (var i = 0; i < row.length; i++) {\n        if (_loop3()) continue;\n      }\n    },\n    // 获取缓存options数据\n    getCacheOptions: function getCacheOptions(index) {\n      var item = this.dataInterfaceInfo[index];\n      if (item.rowIndex === -1) {\n        return this.tableData[item.colIndex].options || [];\n      } else {\n        return this.tableFormData[item.rowIndex][item.colIndex].config.options || [];\n      }\n    },\n    // 判断templateJson里是否有关联字段\n    hasTemplateJsonRelation: function hasTemplateJsonRelation(templateJson) {\n      return templateJson.some(function (o) {\n        return o.relationField;\n      });\n    },\n    getParamList: function getParamList(templateJson, formData, index) {\n      var _this8 = this;\n      var _loop4 = function _loop4() {\n        if (templateJson[i].relationField) {\n          if (templateJson[i].relationField.includes('-')) {\n            var childVModel = templateJson[i].relationField.split('-')[1];\n            var list = _this8.tableFormData[index].filter(function (o) {\n              return o.__vModel__ === childVModel;\n            });\n            if (!list.length) {\n              templateJson[i].defaultValue = '';\n            } else {\n              var item = list[0];\n              templateJson[i].defaultValue = item.value;\n            }\n          } else {\n            templateJson[i].defaultValue = formData[templateJson[i].relationField] || '';\n          }\n        }\n      };\n      for (var i = 0; i < templateJson.length; i++) {\n        _loop4();\n      }\n      return templateJson;\n    },\n    getDefaultParamList: function getDefaultParamList(templateJson, formData) {\n      var _this9 = this;\n      var _loop5 = function _loop5() {\n        if (templateJson[i].relationField) {\n          if (templateJson[i].relationField.includes('-')) {\n            var childVModel = templateJson[i].relationField.split('-')[1];\n            var list = _this9.tableData.filter(function (o) {\n              return o.__vModel__ === childVModel;\n            });\n            templateJson[i].defaultValue = '';\n            if (list.length) templateJson[i].defaultValue = list[0].__config__.defaultValue || '';\n          } else {\n            templateJson[i].defaultValue = formData[templateJson[i].relationField] || '';\n          }\n        }\n      };\n      for (var i = 0; i < templateJson.length; i++) {\n        _loop5();\n      }\n      return templateJson;\n    },\n    getFieldVal: function getFieldVal(field, rowIndex) {\n      var val = '';\n      if (field.includes('-')) {\n        var childVModel = field.split('-')[1];\n        var list = this.tableFormData[rowIndex].filter(function (o) {\n          return o.__vModel__ === childVModel;\n        });\n        if (!list.length) {\n          val = '';\n        } else {\n          var item = list[0];\n          val = item.value;\n        }\n      } else {\n        val = this.formData[field] || '';\n      }\n      return val;\n    },\n    clearAddRowFlag: function clearAddRowFlag() {\n      var _this10 = this;\n      this.$nextTick(function () {\n        _this10.isAddRow = false;\n      });\n    },\n    /**\n     * @event cell-click Table 单元格点击事件\n     * 点击单元格 聚焦单元格中的input\n     */\n    focusInput: function focusInput(row, column, cell, event) {\n      var child = cell.querySelector('.cell').firstElementChild;\n      var input = child && child.querySelector('input');\n      input && input.focus();\n    },\n    setTableFormData: function setTableFormData(prop, value) {\n      var activeRow = this.tableFormData[this.activeRowIndex];\n      for (var i = 0; i < activeRow.length; i++) {\n        var vModel = activeRow[i].__vModel__;\n        if (activeRow[i].__vModel__.indexOf('_jnpfRelation_') >= 0) {\n          vModel = activeRow[i].__vModel__.substring(0, activeRow[i].__vModel__.indexOf('_jnpfRelation_'));\n        }\n        // this.comSet('defaultValue', vModel, value)\n        if (vModel === prop) {\n          activeRow[i].value = value;\n          this.handleRelation(activeRow[i], this.activeRowIndex);\n          break;\n        }\n      }\n    },\n    getTableFieldOptions: function getTableFieldOptions(prop) {\n      var res = [];\n      for (var i = 0; i < this.tableData.length; i++) {\n        if (this.tableData[i].__vModel__ === prop) {\n          var item = this.tableData[i];\n          res = item.options || [];\n          break;\n        }\n      }\n      return res;\n    },\n    setTableShowOrHide: function setTableShowOrHide(prop, value) {\n      for (var i = 0; i < this.tableData.length; i++) {\n        if (this.tableData[i].__vModel__ === prop) {\n          this.tableData[i].__config__.noShow = value;\n          break;\n        }\n      }\n    },\n    onFormBlur: function onFormBlur(rowIndex, colIndex, tag) {\n      var data = this.tableFormData[rowIndex][colIndex];\n      if (data && data.on && data.on.blur) {\n        var func = this.jnpf.getScriptFunc.call(this, data.on.blur);\n        if (!func) return;\n        func.call(this, _objectSpread({\n          data: null,\n          rowIndex: rowIndex\n        }, this.parameter));\n      }\n    },\n    onFormDataChange: function onFormDataChange(rowIndex, colIndex, tag, params) {\n      if (this.isAddRow) return;\n      var data = this.tableFormData[rowIndex][colIndex];\n      this.activeRowIndex = rowIndex;\n      data.required && (data.valid = this.checkData(data));\n      data.regList && data.regList.length && (data.regValid = this.checkRegData(data));\n      this.updateParentData();\n      this.handleRelation(data, rowIndex);\n      if (data && data.on && data.on.change) {\n        var func = this.jnpf.getScriptFunc.call(this, data.on.change);\n        if (!func) return;\n        var value = '';\n        if (['select', 'radio', 'checkbox'].includes(data.jnpfKey)) {\n          var options = data.options;\n          if (data.config.multiple || data.jnpfKey === 'checkbox') {\n            var _value = [];\n            outer: for (var i = 0; i < params[0].length; i++) {\n              inner: for (var j = 0; j < options.length; j++) {\n                if (params[0][i] === options[j][data.config.props.value]) {\n                  _value.push(options[j]);\n                  break inner;\n                }\n              }\n            }\n            value = _value;\n          } else {\n            var _value2 = {};\n            for (var _i = 0; _i < options.length; _i++) {\n              if (params[0] === options[_i][data.config.props.value]) {\n                _value2 = options[_i];\n                break;\n              }\n            }\n            value = _value2;\n          }\n        } else if (data.jnpfKey === 'inputNumber') {\n          value = params[0];\n        } else {\n          value = params.length > 1 ? params[1] : params[0];\n        }\n        if (data && (data.jnpfKey == \"popupSelect\" || data.jnpfKey === 'relationForm')) this.setTransferFormData(value, data.config.__config__, data.jnpfKey);\n        func.call(this, _objectSpread({\n          data: value,\n          rowIndex: rowIndex\n        }, this.parameter));\n      }\n    },\n    /**\n     * 校验单个表单数据\n     * @param {CmpConfig} 组件配置对象\n     */\n    checkData: function checkData(_ref) {\n      var tag = _ref.tag,\n        value = _ref.value;\n      if ([null, undefined, ''].includes(value)) return false;\n      // if (tag === 'org-select') return this.checkOrgData(value)\n      if (Array.isArray(value)) return value.length > 0;\n      return true;\n    },\n    /**\n     * 对组织机构部门控数据单独校验\n     */\n    checkOrgData: function checkOrgData(data) {\n      var isArray = Array.isArray;\n      if ((0, _typeof2.default)(data) !== 'object' || isArray(data)) return false;\n      var count = 0;\n      for (var key in data) {\n        count += isArray(data[key]) ? data[key].length : 0;\n      }\n      return count > 0;\n    },\n    checkRegData: function checkRegData(col) {\n      var res = true;\n      for (var i = 0; i < col.regList.length; i++) {\n        var item = col.regList[i];\n        if (item.pattern) {\n          var pattern = eval(item.pattern);\n          if (col.value && !pattern.test(col.value)) {\n            res = false;\n            col.regErrorText = item.message;\n            break;\n          }\n        }\n      }\n      return res;\n    },\n    /**\n     * 校验表格数据必填项\n     */\n    submit: function submit() {\n      var _this11 = this;\n      var res = true;\n      var checkCol = function checkCol(col) {\n        col.required && !_this11.checkData(col) && (res = col.valid = false);\n        col.regList && col.regList.length && !_this11.checkRegData(col) && (res = col.regValid = false);\n      };\n      this.tableFormData.forEach(function (row) {\n        return row.forEach(checkCol);\n      });\n      return res ? this.getTableValue() : false;\n    },\n    /**\n     * 根据formId获取完整组件配置\n     */\n    getConfById: function getConfById(formId, rowIndex) {\n      var item = this.tableFormData[rowIndex].find(function (t) {\n        return t.formId === formId;\n      }).config;\n      var itemConfig = item.__config__;\n      var newObj = {};\n      for (var key in item) {\n        if (!['__config__', '__slot__', '__vModel__', 'props', 'on'].includes(key)) {\n          newObj[key] = item[key];\n        }\n        if (key === 'props') {\n          newObj[key] = item[key];\n        }\n        if (key === 'disabled') {\n          newObj[key] = this.disabled || item[key];\n        }\n      }\n      if (['relationForm', 'popupSelect'].includes(itemConfig.jnpfKey)) {\n        newObj['field'] = this.config.__vModel__ + item.__vModel__ + '_jnpfRelation_' + rowIndex;\n      }\n      if (['relationFormAttr', 'popupAttr'].includes(itemConfig.jnpfKey)) {\n        var prop = newObj['relationField'].split('_jnpfTable_')[0];\n        newObj['relationField'] = this.config.__vModel__ + prop + '_jnpfRelation_' + rowIndex;\n      }\n      return newObj;\n    },\n    /**\n     * 获取默认行数据\n     */\n    getEmptyRow: function getEmptyRow(val, rowIndex) {\n      var _this12 = this;\n      return this.tableData.map(function (t, index) {\n        var options = [];\n        if (_comConfig.dyOptionsList.indexOf(t.__config__.jnpfKey) > -1) {\n          options = t.options;\n        }\n        if (t.__config__.jnpfKey === 'datePicker' && t.__config__.defaultCurrent) {\n          var format = t.format;\n          var dateStr = _this12.jnpf.toDate(new Date().getTime(), format);\n          var time = format === 'yyyy' ? '-01-01 00:00:00' : format === 'yyyy-MM' ? '-01 00:00:00' : format === 'yyyy-MM-dd' ? ' 00:00:00' : '';\n          t.__config__.defaultValue = new Date(dateStr + time).getTime();\n        }\n        if (t.__config__.jnpfKey === 'timePicker' && t.__config__.defaultCurrent) {\n          t.__config__.defaultValue = _this12.jnpf.toDate(new Date(), t.format);\n        }\n        if (t.__config__.jnpfKey === 'organizeSelect' && t.__config__.defaultCurrent) {\n          if (_this12.userInfo.organizeIdList instanceof Array && _this12.userInfo.organizeIdList.length > 0) {\n            t.__config__.defaultValue = t.multiple ? [_this12.userInfo.organizeIdList] : _this12.userInfo.organizeIdList;\n          } else {\n            t.__config__.defaultValue = [];\n          }\n        }\n        if (t.__config__.jnpfKey == 'sign' && t.__config__.defaultCurrent && _this12.userInfo.signImg) t.__config__.defaultValue = _this12.userInfo.signImg;\n        var res = {\n          tag: t.__config__.tag,\n          formId: t.__config__.formId,\n          value: val ? val[t.__vModel__] : t.__config__.defaultValue,\n          options: options,\n          valid: true,\n          regValid: true,\n          regErrorText: '',\n          on: t.on || {},\n          jnpfKey: t.__config__.jnpfKey,\n          __vModel__: ['relationForm', 'popupSelect'].includes(t.__config__.jnpfKey) ? t.__vModel__ + '_jnpfRelation_' + rowIndex : t.__vModel__,\n          regList: t.__config__.regList || [],\n          required: t.__config__.required,\n          rowData: val || {},\n          config: t\n        };\n        return res;\n      });\n    },\n    // 获取表格数据\n    getTableValue: function getTableValue() {\n      return this.tableFormData.map(function (row) {\n        return row.reduce(function (p, c) {\n          var str = c.__vModel__;\n          if (c.__vModel__ && c.__vModel__.indexOf('_jnpfRelation_') >= 0) {\n            str = c.__vModel__.substring(0, c.__vModel__.indexOf('_jnpfRelation_'));\n          }\n          p[str] = c.value;\n          if (c.rowData) p = _objectSpread(_objectSpread({}, c.rowData), p);\n          return p;\n        }, {});\n      });\n    },\n    // 更新父级数据 触发计算公式更新\n    updateParentData: function updateParentData() {\n      var newVal = this.getTableValue();\n      this.$emit('input', newVal);\n    },\n    removeRow: function removeRow(index) {\n      var _this13 = this;\n      this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this13.tableFormData.splice(index, 1);\n        _this13.updateParentData();\n      }).catch(function () {});\n    },\n    addRow: function addRow(val) {\n      var isUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.isAddRow = true;\n      if (!Array.isArray(this.tableFormData)) this.tableFormData = [];\n      var rowIndex = this.tableFormData.length;\n      this.tableFormData.push(JSON.parse(JSON.stringify(this.getEmptyRow(val, rowIndex))));\n      this.buildRowAttr(rowIndex);\n      this.clearAddRowFlag();\n      if (isUpdate) this.updateParentData();\n    },\n    openSelectDialog: function openSelectDialog(item) {\n      var _this14 = this;\n      this.actionConfig = item.actionConfig || {};\n      this.selectDialogVisible = true;\n      this.$nextTick(function () {\n        _this14.$refs.selectDialog.init();\n      });\n    },\n    addForSelect: function addForSelect(data) {\n      var _this15 = this;\n      this.selectDialogVisible = false;\n      if (data) data.forEach(function (t) {\n        return _this15.addRow(t);\n      });\n    },\n    getCmpValOfRow: function getCmpValOfRow(row, key) {\n      var _this16 = this;\n      // 获取数字相关组件的输入值\n      // const isNumCmp = tag => ['fc-amount', 'el-input-number', 'el-slider'].includes(tag)\n      if (!this.config.summaryField.length) return NaN;\n      var isSummary = function isSummary(key) {\n        return _this16.config.summaryField.includes(key);\n      };\n      var target = row.find(function (t) {\n        return t.__vModel__ === key;\n      });\n      if (!target) return NaN;\n      var data = isNaN(target.value) ? 0 : Number(target.value);\n      if (isSummary(key)) return data || 0;\n      return NaN;\n    },\n    /**\n     * 对表格进行合计 目前只支持数字，金额，滑块\n     */\n    getTableSummaries: function getTableSummaries(param) {\n      var _this17 = this;\n      var columns = param.columns,\n        data = param.data;\n      var sums = [];\n      var thousandsField = [];\n      var tableData = this.tableData.filter(function (o) {\n        return !o.__config__.noShow;\n      });\n      tableData.forEach(function (res) {\n        if (res.thousands) thousandsField.push(res.__vModel__);\n      });\n      // if (tableData.length + 1 !== columns.length) return []  // 防止多次加载\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '合计';\n          return;\n        }\n        var sumVal = data.reduce(function (sum, d) {\n          return sum + _this17.getCmpValOfRow(d, column.property);\n        }, 0);\n        sums[index] = Number.isNaN(sumVal) ? '' : sumVal;\n        if (sums[index] && !Number.isInteger(sums[index])) sums[index] = sums[index].toFixed(2);\n        if (thousandsField.includes(column.property)) sums[index] = (0, _index3.thousandsFormat)(sums[index]);\n      });\n      return sums;\n    },\n    resetTable: function resetTable() {\n      this.tableData = this.config.__config__.children;\n      this.tableFormData = [];\n      // this.addRow()\n    },\n    reset: function reset() {\n      var _this18 = this;\n      this.tableData.map(function (t) {\n        var index = _this18.tableFormData[0].findIndex(function (c) {\n          return c.vModel === t.vModel;\n        });\n        if (index === -1) return;\n        for (var i = 0; i < _this18.tableFormData.length; i++) {\n          _this18.tableFormData[i][index].value = t.defaultValue;\n        }\n      });\n    }\n  }\n};",null]}