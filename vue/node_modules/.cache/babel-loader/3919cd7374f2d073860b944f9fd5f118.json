{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/handelFlidMixin.js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/handelFlidMixin.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es7.array.includes\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar useSelect = ['treeSelect', 'radio', 'checkbox', 'select', 'cascader'];\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      fieldJsonList: [],\n      hasPage: false\n    };\n  },\n  methods: {\n    getDataInterfaceInfo: function getDataInterfaceInfo() {\n      var _this = this;\n      var url = this.activeData.interfaceId ? this.activeData.interfaceId : this.activeData.__config__.propsUrl;\n      (0, _dataInterface.getDataInterfaceInfo)(url).then(function (res) {\n        _this.fieldJsonList = res.data && res.data.fieldJson && (JSON.parse(res.data.fieldJson) || []) || [];\n        _this.hasPage = res.data && res.data.hasPage == 1 ? true : false;\n        _this.activeData.interfaceHasPage = _this.hasPage;\n        _this.activeData.hasPage = _this.hasPage;\n      });\n    },\n    querySearch: function querySearch(queryString, cb) {\n      var restaurants = this.fieldJsonList || [];\n      var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createStateFilter: function createStateFilter(queryString) {\n      return function (state) {\n        return state.defaultValue.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleSelect: function handleSelect(item, field, index) {\n      var jnpfKey = this.activeData.__config__.jnpfKey;\n      if (jnpfKey === 'autoComplete') this.activeData[field] = item.defaultValue;\n      if (jnpfKey === 'popupSelect' || jnpfKey === 'popupTableSelect') {\n        if (isNaN(index)) {\n          this.activeData[field] = item.defaultValue;\n        } else {\n          this.activeData.columnOptions[index][field] = item.defaultValue;\n        }\n      }\n      if (useSelect.includes(jnpfKey)) this.activeData.props[field] = item.defaultValue;\n      this.activeData.__config__.renderKey = +new Date();\n    }\n  }\n};",null]}