{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/task/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/task/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _timeTask = require(\"@/api/system/timeTask\");\nvar _vcrontab = _interopRequireDefault(require(\"vcrontab\"));\nvar _InterfaceDialog = _interopRequireDefault(require(\"@/components/Process/PropPanel/InterfaceDialog\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    vcrontab: _vcrontab.default,\n    InterfaceDialog: _InterfaceDialog.default\n  },\n  data: function data() {\n    var _this = this;\n    var checkStartTime = function checkStartTime(rule, value, callback) {\n      if (!_this.dataForm.executeContent.endTime) {\n        callback();\n      } else {\n        if (_this.dataForm.executeContent.endTime <= value) {\n          callback(new Error('任务结束时间不能早于任务开始时间'));\n        } else {\n          _this.$refs.dataForm.validateField('executeContent.endTime');\n          callback();\n        }\n      }\n    };\n    var checkEndTime = function checkEndTime(rule, value, callback) {\n      if (!_this.dataForm.executeContent.startTime || !value) {\n        callback();\n      } else {\n        if (_this.dataForm.executeContent.startTime >= value) {\n          callback(new Error('任务结束时间不能早于任务开始时间'));\n        } else {\n          callback();\n        }\n      }\n    };\n    return {\n      showCron: false,\n      showCrontab: true,\n      dataForm: {\n        id: '',\n        fullName: '',\n        enCode: '',\n        executeType: '1',\n        enabledMark: 1,\n        description: '',\n        executeContent: {\n          cron: '',\n          interfaceId: '',\n          interfaceName: '',\n          parameter: [],\n          localHostTaskId: '',\n          startTime: null,\n          endTime: null\n        }\n      },\n      dataRule: {\n        fullName: [{\n          required: true,\n          message: '任务名称不能为空',\n          trigger: 'blur'\n        }],\n        enCode: [{\n          required: true,\n          message: '任务编码不能为空',\n          trigger: 'blur'\n        }, {\n          validator: this.formValidate('enCode', '任务编码只能输入英文、数字和小数点且小数点不能放在首尾'),\n          trigger: 'blur'\n        }],\n        'executeContent.cron': [{\n          required: true,\n          message: 'Cron表达式不能为空',\n          trigger: 'click'\n        }],\n        'executeContent.interfaceId': [{\n          required: true,\n          message: '接口选择不能为空',\n          trigger: 'click'\n        }],\n        'executeContent.localHostTaskId': [{\n          required: true,\n          message: '方法选择不能为空',\n          trigger: 'change'\n        }],\n        'executeContent.startTime': [{\n          required: true,\n          message: '任务开始时间不能为空',\n          trigger: 'change'\n        }, {\n          validator: checkStartTime,\n          trigger: 'change'\n        }],\n        'executeContent.endTime': [{\n          validator: checkEndTime,\n          trigger: 'change'\n        }]\n      },\n      formVisible: false,\n      btnLoading: false,\n      taskOptions: []\n    };\n  },\n  methods: {\n    goBack: function goBack() {\n      this.$emit('close');\n    },\n    init: function init(id) {\n      var _this2 = this;\n      this.dataForm = {\n        id: '',\n        fullName: '',\n        enCode: '',\n        executeType: '1',\n        enabledMark: 1,\n        description: '',\n        executeContent: {\n          cron: '',\n          interfaceId: '',\n          interfaceName: '',\n          parameter: [],\n          localHostTaskId: '',\n          startTime: null,\n          endTime: null\n        }\n      };\n      this.dataForm.id = id || '';\n      this.$nextTick(function () {\n        _this2.$refs['dataForm'].resetFields();\n        (0, _timeTask.getTaskMethods)().then(function (res) {\n          _this2.taskOptions = res.data || [];\n          if (_this2.dataForm.id) {\n            (0, _timeTask.TimeTaskInfo)(_this2.dataForm.id).then(function (res) {\n              _this2.dataForm = res.data;\n              _this2.dataForm.executeContent = JSON.parse(res.data.executeContent);\n            });\n          }\n        });\n      });\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this3 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          if (_this3.dataForm.executeType === '1' || _this3.dataForm.executeType === '2') {\n            var boo = false;\n            for (var i = 0; i < _this3.dataForm.executeContent.parameter.length; i++) {\n              var item = _this3.dataForm.executeContent.parameter[i];\n              if (item.required && !item.value) {\n                _this3.$message.error(\"\".concat(item.field, \"\\u7684\\u53C2\\u6570\\u503C\\u4E3A\\u5FC5\\u586B\"));\n                boo = true;\n                break;\n              }\n            }\n            if (boo) return;\n          }\n          _this3.btnLoading = true;\n          var executeContent = JSON.stringify(_this3.dataForm.executeContent);\n          var query = _objectSpread(_objectSpread({}, _this3.dataForm), {}, {\n            executeContent: executeContent\n          });\n          var formMethod = _this3.dataForm.id ? _timeTask.TimeTaskUpdate : _timeTask.TimeTaskCreate;\n          formMethod(query).then(function (res) {\n            _this3.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: function onClose() {\n                _this3.visible = false;\n                _this3.btnLoading = false;\n                _this3.$emit('close', true);\n              }\n            });\n          }).catch(function () {\n            _this3.btnLoading = false;\n          });\n        }\n      });\n    },\n    onFuncChange: function onFuncChange(id, row) {\n      if (!id) {\n        this.dataForm.executeContent.interfaceId = '';\n        this.dataForm.executeContent.interfaceName = '';\n        this.dataForm.executeContent.parameter = [];\n        return;\n      }\n      if (this.dataForm.executeContent.interfaceId === id) return;\n      this.dataForm.executeContent.interfaceId = id;\n      this.dataForm.executeContent.interfaceName = row.fullName;\n      this.dataForm.executeContent.parameter = row.templateJson.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          value: ''\n        });\n      });\n    },\n    onExecuteTypeChange: function onExecuteTypeChange() {\n      this.dataForm.executeContent.interfaceId = '';\n      this.dataForm.executeContent.interfaceName = '';\n      this.dataForm.executeContent.parameter = [];\n      this.dataForm.executeContent.localHostTaskId = '';\n    },\n    onLocalHostTaskIdChange: function onLocalHostTaskIdChange(val) {\n      if (!val) return;\n      var list = this.taskOptions.filter(function (o) {\n        return o.id === val;\n      }) || [];\n      if (!list.length) return;\n      var item = list[0];\n      if (!item.cron) return;\n      this.dataForm.executeContent.cron = item.cron;\n    },\n    getCrontabValue: function getCrontabValue() {\n      this.$refs.vcrontab && this.$refs.vcrontab.submitFill();\n    },\n    resetCrontab: function resetCrontab() {\n      this.$refs.vcrontab && this.$refs.vcrontab.clearCron();\n    },\n    crontabFill: function crontabFill(value) {\n      this.dataForm.executeContent.cron = value;\n    },\n    showDialog: function showDialog() {\n      this.showCron = true;\n      this.showCrontab = true;\n    }\n  }\n};",null]}