{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/FlowCondition.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/FlowCondition.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _typeof2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/typeof.js\"));\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _condition = _interopRequireDefault(require(\"./condition\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = exports.default = {\n  props: {\n    modelType: {\n      type: [String, Number],\n      default: \"\"\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    formFieldsOptions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    options: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      tempCondition: [],\n      dialogVisible: false,\n      conditionList: [],\n      columnOptions: [],\n      matchLogic: 'and'\n    };\n  },\n  methods: {\n    init: function init(data) {\n      // 从缓存拿暂存数据\n      var ruleData = this.$store.getters.ruleData;\n      if (ruleData && ruleData.length > 0) {\n        this.conditionList = JSON.parse(JSON.stringify(ruleData.conditionList));\n        this.matchLogic = ruleData.matchLogic;\n      } else {\n        this.$store.commit(\"generator/SET_FILTER_DATA\", JSON.parse(JSON.stringify(data)));\n        this.conditionList = data.conditionList;\n        this.matchLogic = data.matchLogic;\n      }\n    },\n    validData: function validData() {\n      var isOk = true;\n      for (var i = 0; i < this.conditionList.length; i++) {\n        var e = this.conditionList[i];\n        for (var j = 0; j < e.groups.length; j++) {\n          var child = e.groups[j];\n          if (!child.field) {\n            this.$message.warning('条件字段不能为空');\n            isOk = false;\n            return;\n          }\n          if (!child.symbol) {\n            this.$message.warning('条件符号不能为空');\n            isOk = false;\n            return;\n          }\n          if (!['null', 'notNull'].includes(child.symbol) && !['switch'].includes(child.jnpfKey) && (!child.fieldValue && child.fieldValue !== 0 || (0, _typeof2.default)(child.fieldValue) === \"object\" && child.fieldValue.length == 0 || this.jnpf.isEmpty(child.fieldValue))) {\n            this.$message.warning('数据值不能为空');\n            isOk = false;\n            return;\n          }\n        }\n      }\n      return isOk;\n    },\n    confirm: function confirm() {\n      var _this = this;\n      // 获取属性配置\n      this.$nextTick(function () {\n        var item = _this.$refs.base && _this.$refs.base.getData() || '';\n        _this.conditionList = item ? item.conditionList : [];\n        if (!_this.validData()) {\n          return;\n        }\n        var cloneConditions = {\n          conditionList: JSON.parse(JSON.stringify(_this.conditionList)),\n          matchLogic: item.matchLogic\n        };\n        _this.$store.commit(\"generator/SET_FILTER_DATA\", cloneConditions);\n        _this.$emit(\"ruleConfig\", cloneConditions);\n        _this.dialogVisible = false;\n      });\n    },\n    handleClose: function handleClose() {\n      this.$emit(\"ruleConfig\", this.$store.getters.ruleData);\n      this.dialogVisible = false;\n    },\n    show: function show(data) {\n      this.dialogVisible = true;\n      if (data && (0, _typeof2.default)(data) === \"object\" && data.length == 0 || data.conditionList.length == 0) {\n        this.conditionList = [];\n        this.addCondition();\n      } else {\n        this.init(data);\n      }\n    },\n    addCondition: function addCondition() {\n      var item = {\n        logic: \"and\",\n        groups: [{\n          fieldValue: '',\n          field: '',\n          symbol: '',\n          jnpfKey: '',\n          cellKey: +new Date()\n        }]\n      };\n      this.conditionList.push(item);\n    }\n  },\n  components: {\n    Condition: _condition.default\n  }\n};",null]}