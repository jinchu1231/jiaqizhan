{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RLocation/MapModal.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RLocation/MapModal.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.number.constructor\");\nrequire(\"core-js/modules/es6.regexp.split\");\nvar _slicedToArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/slicedToArray.js\"));\nrequire(\"core-js/modules/es6.function.name\");\nvar _amapJsapiLoader = _interopRequireDefault(require(\"@amap/amap-jsapi-loader\"));\nvar _common = require(\"@/api/common\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {},\n  data: function data() {\n    return {\n      visible: false,\n      AMap: null,\n      map: null,\n      innerValue: {\n        lng: '',\n        lat: '',\n        name: '',\n        radius: 500\n      },\n      options: [],\n      marker: undefined,\n      keyword: ''\n    };\n  },\n  methods: {\n    init: function init(data) {\n      var _this = this;\n      this.visible = true;\n      this.keyword = '';\n      this.innerValue = {\n        lng: '',\n        lat: '',\n        radius: 500\n      };\n      if (data.item) {\n        this.innerValue = data.item;\n        this.keyword = this.innerValue.name;\n      }\n      this.$nextTick(function () {\n        _this.initMap();\n      });\n    },\n    initMap: function initMap() {\n      var _this2 = this;\n      _amapJsapiLoader.default.reset();\n      _amapJsapiLoader.default.load({\n        key: this.define.aMapJsKey,\n        version: '2.0',\n        plugins: ['AMap.PlaceSearch', 'AMap.Geolocation', 'AMap.Geocoder']\n      }).then(function (AMap) {\n        _this2.AMap = AMap;\n        var query = {\n          viewMode: '3D',\n          zoom: 16\n        };\n        var isEdit = _this2.innerValue && _this2.innerValue.lng && _this2.innerValue.lat;\n        if (isEdit) query.center = [_this2.innerValue.lng, _this2.innerValue.lat];\n        _this2.map = new AMap.Map('container', query);\n        if (isEdit) _this2.handleMarker(_this2.innerValue.lng, _this2.innerValue.lat);\n        _this2.map.on('click', _this2.handleCenter);\n      });\n    },\n    handleCenter: function handleCenter(e) {\n      var _e$lnglat = e.lnglat,\n        lng = _e$lnglat.lng,\n        lat = _e$lnglat.lat;\n      this.handleMarker(lng, lat);\n      this.handleGetAddress([lng, lat]);\n    },\n    onSearch: function onSearch(searchText, cb) {\n      var _this3 = this;\n      var query = {\n        key: this.define.aMapWebKey,\n        keywords: searchText\n      };\n      (0, _common.getInputTips)(query).then(function (res) {\n        _this3.options = res.data.tips || [];\n        cb(_this3.options);\n      });\n    },\n    onSelect: function onSelect(item) {\n      this.keyword = item.name;\n      if (!item.location || !item.location.length) {\n        this.handleGetLngLat(item.name);\n      } else {\n        var _item$location$split = item.location.split(','),\n          _item$location$split2 = (0, _slicedToArray2.default)(_item$location$split, 2),\n          lng = _item$location$split2[0],\n          lat = _item$location$split2[1];\n        this.handleMarker(lng, lat);\n      }\n    },\n    handleMarker: function handleMarker(lng, lat) {\n      this.innerValue.lng = lng;\n      this.innerValue.lat = lat;\n      this.marker && this.map.remove(this.marker);\n      this.marker = new this.AMap.Marker({\n        icon: 'https://webapi.amap.com/theme/v1.3/markers/n/mark_b.png',\n        position: [lng, lat],\n        offset: new this.AMap.Pixel(-12, -30)\n      });\n      this.map.add(this.marker);\n      this.map.setFitView();\n    },\n    handleGetAddress: function handleGetAddress(position) {\n      var geocoder = new this.AMap.Geocoder();\n      var that = this;\n      geocoder.getAddress(position, function (status, res) {\n        if (status === 'complete' && res.info === 'OK') {\n          that.keyword = res.regeocode.formattedAddress;\n          that.$forceUpdate();\n        }\n      });\n    },\n    handleGetLngLat: function handleGetLngLat(address) {\n      var geocoder = new this.AMap.Geocoder();\n      var that = this;\n      geocoder.getLocation(address, function (status, res) {\n        if (status === 'complete' && res.info === 'OK') {\n          var _res$geocodes$0$locat = res.geocodes[0].location,\n            lng = _res$geocodes$0$locat.lng,\n            lat = _res$geocodes$0$locat.lat;\n          that.handleMarker(lng, lat);\n        }\n      });\n    },\n    handleSubmit: function handleSubmit() {\n      this.innerValue.name = this.keyword;\n      if (!this.innerValue.lat || !this.innerValue.lng) return this.$message.error('请输入定位中心');\n      if (!this.innerValue.radius) return this.$message.warning('定位范围不能为空');\n      this.$emit('confirm', this.innerValue);\n      this.handleCancel();\n    },\n    onDropdownVisibleChange: function onDropdownVisibleChange(e) {\n      if (e) options = [];\n    },\n    handleCancel: function handleCancel() {\n      var _this4 = this;\n      this.visible = false;\n      this.$nextTick(function () {\n        _this4.map && _this4.map.destroy();\n      });\n    },\n    handleNumber: function handleNumber(val) {\n      var _this5 = this;\n      this.$nextTick(function () {\n        _this5.innerValue.radius = val && val > 0 ? Number(val) : 1;\n      });\n    }\n  }\n};",null]}