{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/webViewMixin.js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/webViewMixin.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es7.array.includes\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es6.reflect.has\");\nvar _vuedraggable = _interopRequireDefault(require(\"vuedraggable\"));\nvar _BatchEditing = _interopRequireDefault(require(\"../Generator/index/RightComponents/BatchEditing\"));\nvar _dictionary = require(\"@/api/systemData/dictionary\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _index = _interopRequireDefault(require(\"@/views/systemData/dictionary/index.vue\"));\nvar _InterfaceDialog = _interopRequireDefault(require(\"@/components/Process/PropPanel/InterfaceDialog\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar useSelect = ['treeSelect', 'radio', 'checkbox', 'select', 'cascader'];\nvar _default = exports.default = {\n  components: {\n    draggable: _vuedraggable.default,\n    BatchEditing: _BatchEditing.default,\n    dicIndex: _index.default,\n    InterfaceDialog: _InterfaceDialog.default\n  },\n  data: function data() {\n    return {\n      dicOptions: [],\n      dictionaryId: '',\n      fieldJsonList: [],\n      hasPage: false\n    };\n  },\n  methods: {\n    addSelectItem: function addSelectItem() {\n      var id = this.jnpf.idGenerator();\n      this.activeData.options.push({\n        id: id,\n        fullName: '选项' + id\n      });\n    },\n    updateSelectItem: function updateSelectItem() {\n      var _this = this;\n      this.updateVisible = true;\n      this.$nextTick(function () {\n        _this.$refs.batchEditing.init(_this.activeData.options);\n      });\n    },\n    dataTypeChange: function dataTypeChange(val) {\n      this.activeData.options = [];\n      this.activeData.props.value = 'id';\n      this.activeData.props.label = 'fullName';\n      if (Reflect.has(this.activeData.props, 'children')) this.activeData.props.children = 'children';\n      this.activeData.__config__.dictionaryType = '';\n      this.activeData.__config__.propsUrl = '';\n      this.activeData.__config__.propsName = '';\n      this.activeData.__config__.templateJson = [];\n    },\n    handleSure: function handleSure(arr) {\n      this.activeData.options = arr || [];\n    },\n    // static end \n    selectChange: function selectChange() {\n      this.$emit('changeSelect');\n      this.dictionaryTypeChange(this.dictionaryId);\n    },\n    defaultValueChange: function defaultValueChange() {\n      this.selectChange();\n    },\n    dictionaryTypeChange: function dictionaryTypeChange(val) {\n      var _this2 = this;\n      this.dictionaryId = val;\n      this.activeData.__config__.defaultValue = this.defaultValue;\n      if (!val) {\n        this.activeData.options = [];\n        return;\n      }\n      (0, _dictionary.getDictionaryDataSelector)(val).then(function (res) {\n        _this2.activeData.options = res.data.list;\n      });\n    },\n    goDictionary: function goDictionary() {\n      var _this3 = this;\n      this.dicVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs.dicIndex.initData();\n      });\n    },\n    getDicOptions: function getDicOptions() {\n      var _this4 = this;\n      (0, _dictionary.getDictionaryTypeSelector)().then(function (res) {\n        _this4.dicOptions = res.data.list;\n      });\n    },\n    // dictionary end \n    propsUrlChange: function propsUrlChange(val, row) {\n      var _this5 = this;\n      var jnpfKey = this.activeData.__config__.jnpfKey;\n      if (jnpfKey === 'cascader') {\n        this.activeData.__config__.defaultValue = [];\n      } else if (jnpfKey === 'treeSelect') {\n        this.activeData.__config__.defaultValue = this.activeData.multiple ? [] : '';\n      } else {\n        this.activeData.__config__.defaultValue = this.defaultValue;\n      }\n      if (!val) {\n        this.activeData.__config__.propsUrl = '';\n        this.activeData.__config__.propsName = '';\n        this.activeData.__config__.templateJson = [];\n        this.activeData.options = [];\n        return;\n      }\n      var list = row.parameterJson ? JSON.parse(row.parameterJson) : [];\n      this.activeData.__config__.propsUrl = val;\n      this.activeData.__config__.propsName = row.fullName;\n      this.activeData.__config__.templateJson = list.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          relationField: ''\n        });\n      });\n      var query = {\n        paramList: this.activeData.__config__.templateJson || []\n      };\n      (0, _dataInterface.getDataInterfaceRes)(val, query).then(function (res) {\n        var data = res.data;\n        if (Array.isArray(data)) {\n          _this5.activeData.options = data;\n        } else {\n          _this5.activeData.options = [];\n        }\n      }).catch(function () {\n        _this5.activeData.__config__.propsUrl = '';\n        _this5.activeData.__config__.propsName = '';\n        _this5.activeData.__config__.templateJson = [];\n        _this5.activeData.options = [];\n      });\n    },\n    querySearch: function querySearch(queryString, cb) {\n      var restaurants = this.fieldJsonList || [];\n      var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createStateFilter: function createStateFilter(queryString) {\n      return function (state) {\n        return state.defaultValue.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleSelect: function handleSelect(item, field, index) {\n      var jnpfKey = this.activeData.__config__.jnpfKey;\n      if (jnpfKey === 'autoComplete') this.activeData[field] = item.defaultValue;\n      if (jnpfKey === 'popupSelect' || jnpfKey === 'popupTableSelect') {\n        if (isNaN(index)) {\n          this.activeData[field] = item.defaultValue;\n        } else {\n          this.activeData.columnOptions[index][field] = item.defaultValue;\n        }\n      }\n      if (useSelect.includes(jnpfKey)) this.activeData.props[field] = item.defaultValue;\n      this.activeData.__config__.renderKey = +new Date();\n    } // dynamic end\n  }\n};",null]}