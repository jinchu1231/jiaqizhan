{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/extend/tableDemo/commonTable/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/tableDemo/commonTable/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es6.regexp.search\");\nvar _tableExample = require(\"@/api/extend/tableExample\");\nvar _common = require(\"@/api/common\");\nvar _commonForm = _interopRequireDefault(require(\"../commonForm\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'extend-tableDemo-commonTable',\n  components: {\n    JNPFForm: _commonForm.default\n  },\n  data: function data() {\n    return {\n      keyword: '',\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc'\n      },\n      formVisible: false,\n      industryTypeList: [],\n      defaultColumnOptions: [{\n        label: '项目名称',\n        prop: 'projectName'\n      }, {\n        label: '项目类型',\n        prop: 'projectType'\n      }, {\n        label: '项目编码',\n        prop: 'projectCode'\n      }, {\n        label: '项目阶段',\n        prop: 'projectPhase'\n      }, {\n        label: '客户名称',\n        prop: 'customerName'\n      }, {\n        label: '负责人',\n        prop: 'principal'\n      }, {\n        label: '立项人',\n        prop: 'jackStands'\n      }, {\n        label: '交互时间',\n        prop: 'interactionDate'\n      }, {\n        label: '费用金额',\n        prop: 'costAmount'\n      }, {\n        label: '已用金额',\n        prop: 'tunesAmount'\n      }, {\n        label: '预计收入',\n        prop: 'projectedIncome'\n      }, {\n        label: '登记人',\n        prop: 'registrant'\n      }, {\n        label: '登记时间',\n        prop: 'registerDate'\n      }, {\n        label: '备注',\n        prop: 'description'\n      }],\n      useColumnPermission: false,\n      columnList: []\n    };\n  },\n  created: function created() {\n    this.getDictionaryData();\n  },\n  filters: {\n    getTypeText: function getTypeText(id, industryTypeList) {\n      var item = industryTypeList.filter(function (o) {\n        return o.id == id;\n      })[0];\n      return item && item.fullName ? item.fullName : '';\n    }\n  },\n  methods: {\n    getColumnsByModuleId: function getColumnsByModuleId() {\n      var _this = this;\n      if (!this.currMenuId) return;\n      this.listLoading = true;\n      (0, _common.getColumnsByModuleId)(this.currMenuId).then(function (res) {\n        _this.settingsColumnList = res.data || [];\n        _this.getRealColumnList();\n        _this.$nextTick(function () {\n          _this.getDictionaryData();\n        });\n      });\n    },\n    getDictionaryData: function getDictionaryData() {\n      var _this2 = this;\n      this.$store.dispatch('base/getDictionaryData', {\n        sort: 'IndustryType'\n      }).then(function (res) {\n        _this2.industryTypeList = res;\n        _this2.initData();\n      });\n    },\n    refresh: function refresh() {\n      this.keyword = '';\n      this.search();\n    },\n    search: function search() {\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc'\n      };\n      this.initData();\n    },\n    initData: function initData() {\n      var _this3 = this;\n      this.listLoading = true;\n      var query = _objectSpread(_objectSpread({}, this.listQuery), {}, {\n        keyword: this.keyword\n      });\n      (0, _tableExample.TableExampleList)(query).then(function (res) {\n        _this3.list = res.data.list;\n        _this3.total = res.data.pagination.total;\n        _this3.listLoading = false;\n      });\n    },\n    handleDel: function handleDel(index, id) {\n      var _this4 = this;\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(function () {\n        (0, _tableExample.TableExampleDelete)(id).then(function (res) {\n          _this4.list.splice(index, 1);\n          _this4.$message({\n            type: 'success',\n            message: res.msg\n          });\n        });\n      }).catch(function () {});\n    },\n    // 新增 / 修改\n    addOrUpdateHandle: function addOrUpdateHandle(id) {\n      var _this5 = this;\n      this.formVisible = true;\n      this.$nextTick(function () {\n        _this5.$refs.JNPFForm.init(_this5.industryTypeList, id);\n      });\n    }\n  }\n};",null]}