{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/flowLaunch/Flow.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/flowLaunch/Flow.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { FlowEnginePageList, getFlowList } from '@/api/workFlow/FlowEngine'\nimport SelectFlow from '@/components/SelectFlowDialog'\nexport default {\n  components: { SelectFlow },\n  data() {\n    return {\n      keyword: '',\n      category: '',\n      listQuery: {\n        currentPage: 1,\n        pageSize: 50,\n        sort: 'desc',\n        sidx: ''\n      },\n      total: 0,\n      finish: false,\n      list: [],\n      listLoading: true,\n      categoryList: [],\n      flowListVisible: false,\n      flowList: [],\n      activeFlow: {},\n      showTitle: true\n    }\n  },\n  watch: {\n    category(val) {\n      this.reset()\n    }\n  },\n  methods: {\n    goBack() {\n      this.$emit('close')\n    },\n    init(flag) {\n      this.showTitle = !flag\n      this.getDictionaryData()\n      this.$nextTick(() => {\n        this.bindScroll()\n      })\n    },\n    reset() {\n      this.keyword = ''\n      this.search()\n    },\n    search() {\n      this.list = []\n      this.finish = false\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 50,\n        sort: 'desc',\n        sidx: ''\n      }\n      this.initData()\n    },\n    bindScroll() {\n      let _this = this,\n        vBody = _this.$refs.infiniteBody;\n      vBody.addEventListener(\"scroll\", function () {\n        if (vBody.scrollHeight - vBody.clientHeight - vBody.scrollTop <= 200 && !_this.listLoading && !_this.finish) {\n          _this.listQuery.currentPage += 1\n          _this.initData()\n        }\n      });\n    },\n    initData() {\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        keyword: this.keyword,\n        category: this.category == 0 ? '' : this.category,\n        flowType: 0\n      }\n      FlowEnginePageList(query).then((res) => {\n        if (res.data.list.length < this.listQuery.pageSize) {\n          this.finish = true\n        }\n        this.list = [...this.list, ...res.data.list]\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      })\n    },\n    getDictionaryData() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'WorkFlowCategory' }).then((res) => {\n        this.categoryList = res\n      })\n    },\n    jump(item) {\n      if (!item.id) {\n        this.$message({\n          type: 'error',\n          message: '流程不存在'\n        });\n        return\n      }\n      getFlowList(item.id, '1').then(res => {\n        this.flowList = res.data\n        if (!this.flowList.length) {\n          this.$message({\n            type: 'error',\n            message: '流程不存在'\n          });\n        } else if (this.flowList.length === 1) {\n          this.activeFlow = this.flowList[0]\n          this.$emit('choiceFlow', this.activeFlow)\n        } else {\n          this.flowListVisible = true\n          this.$nextTick(() => {\n            this.$refs.selectFlow.init(this.flowList)\n          })\n        }\n      })\n    },\n    selectFlow(item) {\n      this.activeFlow = item\n      this.flowListVisible = false\n      this.$emit('choiceFlow', this.activeFlow)\n    }\n  }\n}\n",null]}