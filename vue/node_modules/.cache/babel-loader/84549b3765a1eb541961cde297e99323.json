{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/msgCenter/msgTemplate/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/msgCenter/msgTemplate/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.string.starts-with\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _msgTemplate = require(\"@/api/msgCenter/msgTemplate\");\nvar _utils = require(\"@/utils\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar defaultParameterList = [{\n  field: '@Title',\n  fieldName: '标题'\n}, {\n  field: '@CreatorUserName',\n  fieldName: '创建人'\n}];\nvar noticeParameterList = [].concat(defaultParameterList, [{\n  field: '@Content',\n  fieldName: '内容'\n}, {\n  field: '@Remark',\n  fieldName: '摘要'\n}]);\nvar flowParameterList = [].concat(defaultParameterList, [{\n  field: '@FlowLink',\n  fieldName: '流程链接'\n}]);\nvar systemParameterList = defaultParameterList;\nvar scheduleParameterList = [].concat(defaultParameterList, [{\n  field: '@Content',\n  fieldName: '内容'\n}, {\n  field: '@StartDate',\n  fieldName: '开始日期'\n}, {\n  field: '@StartTime',\n  fieldName: '开始时间'\n}, {\n  field: '@EndDate',\n  fieldName: '结束日期'\n}, {\n  field: '@EndTime',\n  fieldName: '结束时间'\n}]);\nvar _default = exports.default = {\n  name: 'msgTemplate-Form',\n  data: function data() {\n    return {\n      dataForm: {\n        id: '',\n        fullName: '',\n        enCode: '',\n        templateType: 0,\n        messageType: '',\n        messageSource: '',\n        enabledMark: 1,\n        sortCode: 0,\n        description: '',\n        title: '',\n        content: '',\n        templateCode: '',\n        wxSkip: '1',\n        xcxAppId: ''\n      },\n      dataRule: {\n        fullName: [{\n          required: true,\n          message: '模板名称不能为空',\n          trigger: 'blur'\n        }],\n        enCode: [{\n          required: true,\n          message: '模板编码不能为空',\n          trigger: 'blur'\n        }, {\n          validator: this.formValidate('enCode'),\n          trigger: 'blur'\n        }],\n        messageSource: [{\n          required: true,\n          message: '请选择消息来源',\n          trigger: 'change'\n        }],\n        messageType: [{\n          required: true,\n          message: '请选择消息类型',\n          trigger: 'change'\n        }],\n        title: [{\n          required: true,\n          message: '消息标题不能为空',\n          trigger: 'blur'\n        }],\n        content: [{\n          required: true,\n          message: '消息内容不能为空',\n          trigger: 'blur'\n        }],\n        templateCode: [{\n          required: true,\n          message: '模版编号不能为空',\n          trigger: 'blur'\n        }],\n        wxSkip: [{\n          required: true,\n          message: '跳转方式不能为空',\n          trigger: 'blur'\n        }],\n        xcxAppId: [{\n          required: true,\n          message: '关联小程序ID不能为空',\n          trigger: 'blur'\n        }]\n      },\n      fieldRule: {\n        field: [{\n          required: true,\n          message: '参数名称不能为空',\n          trigger: 'blur'\n        }, {\n          validator: this.formValidate('filed'),\n          trigger: 'blur'\n        }],\n        fieldName: [{\n          required: true,\n          message: '参数说明不能为空',\n          trigger: 'blur'\n        }]\n      },\n      fieldForm: {\n        field: '',\n        fieldName: ''\n      },\n      dialogVisible: false,\n      btnLoading: false,\n      loading: false,\n      messageSourceList: [],\n      messageTypeList: [],\n      isEdit: false,\n      keyword: \"\",\n      parameterList: [],\n      allParameterList: [],\n      smsList: [],\n      wxSkipList: [{\n        enCode: \"1\",\n        fullName: '小程序'\n      }, {\n        enCode: \"2\",\n        fullName: '页面'\n      }]\n    };\n  },\n  methods: {\n    init: function init(id) {\n      var _this = this;\n      this.dataForm.id = id || '';\n      this.parameterList = [];\n      this.allParameterList = this.parameterList;\n      this.getConfig();\n      this.$nextTick(function () {\n        _this.$refs['dataForm'].resetFields();\n        if (_this.dataForm.id) {\n          _this.loading = true;\n          (0, _msgTemplate.getMsgTemplateDetail)(_this.dataForm.id).then(function (res) {\n            _this.loading = false;\n            _this.dataForm = res.data;\n            _this.parameterList = res.data.templateParamList;\n            _this.allParameterList = _this.parameterList;\n            _this.smsList = res.data.smsFieldList;\n          }).catch(function () {\n            _this.loading = false;\n          });\n        }\n      });\n    },\n    getConfig: function getConfig() {\n      var _this2 = this;\n      this.$store.dispatch('base/getDictionaryData', {\n        sort: 'msgSendType'\n      }).then(function (res) {\n        _this2.messageTypeList = res;\n        if (_this2.messageTypeList.length) _this2.dataForm.messageType = _this2.messageTypeList[0].enCode;\n      });\n      this.$store.dispatch('base/getDictionaryData', {\n        sort: 'msgSourceType'\n      }).then(function (res) {\n        _this2.messageSourceList = res;\n      });\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this3 = this;\n      this.dataForm.templateParamList = [];\n      this.dataForm.smsFieldList = [];\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          _this3.dataForm.templateParamList = _this3.parameterList;\n          _this3.dataForm.smsFieldList = _this3.smsList;\n          _this3.btnLoading = true;\n          var formMethod = _this3.dataForm.id ? _msgTemplate.editMsgTemplate : _msgTemplate.addMsgTemplate;\n          var isOk = true;\n          var _loop = function _loop() {\n            var list = _this3.dataForm.smsFieldList[i];\n            var num = _this3.dataForm.smsFieldList.filter(function (o) {\n              return o.smsField == list.smsField;\n            });\n            if (num.length > 1) {\n              _this3.$message({\n                showClose: true,\n                message: \"\\u7B2C\".concat(i + 1, \"\\u884C\\u77ED\\u4FE1\\u53D8\\u91CF'\").concat(list.smsField, \"'\\u5DF2\\u91CD\\u590D\"),\n                type: 'error',\n                duration: 1000\n              });\n              _this3.visible = false;\n              _this3.btnLoading = false;\n              isOk = false;\n              return 1; // break\n            }\n          };\n          for (var i = 0; i < _this3.dataForm.smsFieldList.length; i++) {\n            if (_loop()) break;\n          }\n          if (isOk) {\n            formMethod(_this3.dataForm).then(function (res) {\n              _this3.$message({\n                message: res.msg,\n                type: 'success',\n                duration: 1500,\n                onClose: function onClose() {\n                  _this3.visible = false;\n                  _this3.btnLoading = false;\n                  _this3.$emit('close', true);\n                }\n              });\n            }).catch(function () {\n              _this3.btnLoading = false;\n            });\n          }\n        }\n      });\n    },\n    addEditParameter: function addEditParameter(item) {\n      var _this4 = this;\n      this.dialogVisible = true;\n      this.isEdit = false;\n      this.$nextTick(function () {\n        _this4.$refs['fieldForm'].resetFields();\n        if (item) {\n          _this4.isEdit = true;\n          _this4.fieldForm = JSON.parse(JSON.stringify(item));\n        }\n      });\n    },\n    removeParameter: function removeParameter(index) {\n      var _this5 = this;\n      this.$confirm('此操作删除该参数, 不能恢复，是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this5.parameterList.splice(index, 1);\n        _this5.allParameterList = _this5.parameterList;\n      }).catch(function () {});\n    },\n    /**\n     * 查找是否有相同参数，没有则添加\n     */\n    addParameter: function addParameter() {\n      var _this6 = this;\n      this.$refs['fieldForm'].validate(function (valid) {\n        if (valid) {\n          if (!_this6.isEdit) {\n            var boo = _this6.parameterList.some(function (o) {\n              return o.field === _this6.fieldForm.field;\n            });\n            if (boo) {\n              _this6.$message({\n                type: 'error',\n                message: '参数名重复，请重新输入'\n              });\n              return;\n            }\n            _this6.parameterList.push((0, _utils.deepClone)(_this6.fieldForm));\n          } else {\n            for (var index = 0; index < _this6.parameterList.length; index++) {\n              if (_this6.fieldForm.field === _this6.parameterList[index].field) {\n                _this6.$set(_this6.parameterList, index, (0, _utils.deepClone)(_this6.fieldForm));\n                break;\n              }\n            }\n          }\n          _this6.allParameterList = _this6.parameterList;\n          _this6.dialogVisible = false;\n        }\n      });\n    },\n    addContent: function addContent(item) {\n      var content = '{' + item.field + '}';\n      this.dataForm.content += content;\n      this.dataForm.title += content;\n      this.$refs.dataForm.clearValidate(['title', 'content']);\n    },\n    searchParameter: function searchParameter() {\n      var _this7 = this;\n      this.parameterList = this.allParameterList.filter(function (item) {\n        if (item.field.toLowerCase().includes(_this7.keyword.toLowerCase()) || item.fieldName.toLowerCase().includes(_this7.keyword.toLowerCase())) {\n          return item;\n        }\n      });\n    },\n    addSmsData: function addSmsData() {\n      this.smsList.push({\n        smsField: \"\",\n        field: \"\",\n        fieldId: this.jnpf.idGenerator()\n      });\n    },\n    removeSmsData: function removeSmsData(index) {\n      this.smsList.splice(index, 1);\n    },\n    onMsgTypeChange: function onMsgTypeChange(e) {\n      this.dataForm.content = '';\n    },\n    goBack: function goBack() {\n      this.$emit('close');\n    },\n    changeKey: function changeKey(val, row) {\n      if (!val) return;\n      for (var i = 0; i < this.smsList.length; i++) {\n        if (row.fieldId != this.smsList[i].fieldId) {\n          this.$set(this.smsList[i], 'isTitle', 0);\n        }\n      }\n    },\n    onMessageSourceChange: function onMessageSourceChange(val) {\n      if (val == 1) this.parameterList = JSON.parse(JSON.stringify(noticeParameterList));\n      if (val == 2) this.parameterList = JSON.parse(JSON.stringify(flowParameterList));\n      if (val == 3) this.parameterList = JSON.parse(JSON.stringify(systemParameterList));\n      if (val == 4) this.parameterList = JSON.parse(JSON.stringify(scheduleParameterList));\n      this.allParameterList = this.parameterList;\n    },\n    getIsSystem: function getIsSystem(val) {\n      return val && val.startsWith('@') ? true : false;\n    },\n    getTipLabel: function getTipLabel() {\n      return this.dataForm.messageSource == '2' ? '系统参数格式：{@系统参数名}；自定义参数格式：{自定义参数名}' : '系统参数格式：{@系统参数名}';\n    }\n  }\n};",null]}