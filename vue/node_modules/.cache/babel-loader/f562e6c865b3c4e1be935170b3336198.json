{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Jnpf/PopupTableSelect/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Jnpf/PopupTableSelect/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _readOnlyError2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/readOnlyError.js\"));\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _resizeEvent = require(\"element-ui/src/utils/resize-event\");\nvar _emitter = _interopRequireDefault(require(\"element-ui/src/mixins/emitter\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar dispatch = _emitter.default.methods.dispatch;\nvar _default2 = exports.default = {\n  name: 'JnpfPopupTableSelect',\n  inject: {\n    elForm: {\n      default: ''\n    },\n    elFormItem: {\n      default: ''\n    }\n  },\n  props: {\n    value: {\n      type: [String, Number, Array],\n      default: ''\n    },\n    rowIndex: {\n      default: null\n    },\n    formData: {\n      type: Object\n    },\n    templateJson: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    interfaceId: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '请选择'\n    },\n    propsValue: {\n      type: String,\n      default: 'id'\n    },\n    relationField: {\n      type: String,\n      default: 'fullName'\n    },\n    popupType: {\n      type: String,\n      default: 'popover'\n    },\n    popupTitle: {\n      type: String,\n      default: '选择数据'\n    },\n    popupWidth: {\n      type: String,\n      default: '800px'\n    },\n    field: {\n      type: String,\n      default: ''\n    },\n    columnOptions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    hasPage: {\n      type: Boolean,\n      default: false\n    },\n    pageSize: {\n      type: Number,\n      default: 20\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    filterable: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    collapseTags: {\n      type: Boolean,\n      default: false\n    },\n    size: String\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  data: function data() {\n    return {\n      list: [],\n      innerValue: '',\n      listQuery: {\n        keyword: '',\n        currentPage: 1,\n        pageSize: 20\n      },\n      total: 0,\n      checked: '',\n      checkedTxt: '',\n      checkedRow: {},\n      selectedData: [],\n      selectedIds: [],\n      tagsIds: [],\n      tagsList: [],\n      listLoading: false,\n      inputHovering: false,\n      inputWidth: 0,\n      initialInputHeight: 0\n    };\n  },\n  watch: {\n    value: function value(val) {\n      this.setDefault();\n    },\n    selectDisabled: function selectDisabled() {\n      var _this = this;\n      this.$nextTick(function () {\n        _this.resetInputHeight();\n      });\n    }\n  },\n  computed: {\n    showClose: function showClose() {\n      var hasValue = this.multiple ? Array.isArray(this.value) && this.value.length > 0 : this.value !== undefined && this.value !== null && this.value !== '';\n      var criteria = this.clearable && !this.selectDisabled && this.inputHovering && hasValue;\n      return criteria;\n    },\n    currentPlaceholder: function currentPlaceholder() {\n      if (this.multiple && Array.isArray(this.value) && this.value.length) {\n        return '';\n      } else {\n        return this.placeholder;\n      }\n    },\n    selectDisabled: function selectDisabled() {\n      return this.disabled || (this.elForm || {}).disabled;\n    },\n    _elFormItemSize: function _elFormItemSize() {\n      return (this.elFormItem || {}).elFormItemSize;\n    },\n    selectSize: function selectSize() {\n      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n    },\n    collapseTagSize: function collapseTagSize() {\n      return ['small', 'mini'].indexOf(this.selectSize) > -1 ? 'mini' : 'small';\n    }\n  },\n  created: function created() {\n    this.listQuery.pageSize = this.hasPage ? this.pageSize : 10000;\n    this.setDefault();\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    (0, _resizeEvent.addResizeListener)(this.$el, this.handleResize);\n    var reference = this.$refs.reference;\n    if (reference && reference.$el) {\n      var sizeMap = {\n        medium: 36,\n        small: 32,\n        mini: 28\n      };\n      var input = reference.$el.querySelector('input');\n      this.initialInputHeight = input.getBoundingClientRect().height || sizeMap[this.selectSize];\n    }\n    if (this.multiple) {\n      this.resetInputHeight();\n    }\n    this.$nextTick(function () {\n      if (reference && reference.$el) {\n        _this2.inputWidth = reference.$el.getBoundingClientRect().width;\n      }\n    });\n    this.setDefault();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$el && this.handleResize) (0, _resizeEvent.removeResizeListener)(this.$el, this.handleResize);\n  },\n  methods: (0, _defineProperty2.default)((0, _defineProperty2.default)({\n    closePopover: function closePopover() {\n      this.$refs.popover.doClose();\n    },\n    onClose: function onClose() {\n      if (this.multiple) {\n        this.$emit('input', this.tagsIds);\n        this.$emit('change', this.tagsIds, this.tagsList);\n        dispatch.call(this, 'ElFormItem', 'el.form.change', this.tagsIds);\n      }\n      this.closePopover();\n    },\n    initData: function initData() {\n      var _this3 = this;\n      if (!this.interfaceId) return;\n      this.listLoading = true;\n      var paramList = this.getParamList();\n      var columnOptions = this.columnOptions.map(function (o) {\n        return o.value;\n      });\n      var query = _objectSpread(_objectSpread({}, this.listQuery), {}, {\n        interfaceId: this.interfaceId,\n        propsValue: this.propsValue,\n        relationField: this.relationField,\n        columnOptions: columnOptions.join(','),\n        paramList: paramList\n      });\n      (0, _dataInterface.getDataInterfaceDataSelect)(this.interfaceId, query).then(function (res) {\n        _this3.list = res.data.list;\n        _this3.total = res.data.pagination.total;\n        _this3.listLoading = false;\n      }).catch(function () {\n        _this3.listLoading = false;\n      });\n    },\n    getParamList: function getParamList() {\n      var templateJson = this.templateJson;\n      for (var i = 0; i < templateJson.length; i++) {\n        if (templateJson[i].relationField && this.formData) {\n          if (templateJson[i].relationField.includes('-')) {\n            var tableVModel = templateJson[i].relationField.split('-')[0];\n            var childVModel = templateJson[i].relationField.split('-')[1];\n            templateJson[i].defaultValue = this.formData[tableVModel] && this.formData[tableVModel][this.rowIndex] && this.formData[tableVModel][this.rowIndex][childVModel] || '';\n          } else {\n            templateJson[i].defaultValue = this.formData[templateJson[i].relationField] || '';\n          }\n        }\n      }\n      return templateJson;\n    },\n    interfaceDataHandler: function interfaceDataHandler(data) {\n      if (!data.dataProcessing) return data.list;\n      var dataHandler = this.jnpf.getScriptFunc.call(this, data.dataProcessing);\n      if (!dataHandler) return data.list;\n      return dataHandler(data.list);\n    },\n    search: function search() {\n      this.initData();\n      this.listQuery.currentPage = 1;\n      this.listQuery.pageSize = this.hasPage ? this.pageSize : 10000;\n    },\n    reset: function reset() {\n      this.listQuery.keyword = '';\n      this.listQuery.currentPage = 1;\n      this.listQuery.pageSize = this.hasPage ? this.pageSize : 10000;\n      this.initData();\n    },\n    openDialog: function openDialog() {\n      if (this.disabled) return;\n      this.reset();\n    },\n    confirm: function confirm() {\n      var _this4 = this;\n      if (this.multiple) {\n        this.innerValue = '';\n        this.tagsList = JSON.parse(JSON.stringify(this.selectedData));\n        this.selectedIds = this.selectedData.map(function (o) {\n          return o[_this4.propsValue];\n        });\n        this.tagsIds = JSON.parse(JSON.stringify(this.selectedIds));\n        this.$emit('input', this.selectedIds);\n        this.$emit('change', this.selectedIds, this.selectedData);\n        this.closePopover();\n        dispatch.call(this, 'ElFormItem', 'el.form.change', this.selectedIds);\n      } else {\n        if (!this.checked) {\n          this.innerValue = '';\n          this.checkedRow = {};\n          this.$emit('input', '');\n          this.$emit('change', '', {});\n          this.closePopover();\n          dispatch.call(this, 'ElFormItem', 'el.form.change', '');\n          return;\n        }\n        this.innerValue = this.checkedTxt;\n        this.$emit('input', this.checked);\n        this.$emit('change', this.checked, this.checkedRow);\n        this.closePopover();\n        dispatch.call(this, 'ElFormItem', 'el.form.change', this.checked);\n      }\n    },\n    rowClick: function rowClick(row) {\n      var _this5 = this;\n      if (this.multiple) {\n        var boo = this.selectedData.some(function (o) {\n          return o[_this5.propsValue] === row[_this5.propsValue];\n        });\n        if (boo) {\n          this.selectedData = this.selectedData.filter(function (o) {\n            return o[_this5.propsValue] !== row[_this5.propsValue];\n          });\n          this.selectedIds = this.selectedIds.filter(function (o) {\n            return o !== row[_this5.propsValue];\n          });\n        } else {\n          this.selectedData.push(row);\n          this.selectedIds.push(row[this.propsValue]);\n        }\n      } else {\n        this.checked = row[this.propsValue];\n        this.checkedTxt = row[this.relationField];\n        this.checkedRow = row;\n      }\n    },\n    setDefault: function setDefault() {\n      var _this6 = this;\n      if (!this.value || this.multiple && !this.value.length) {\n        this.innerValue = '';\n        this.checked = '';\n        this.selectedIds = [];\n        this.tagsIds = [];\n        this.selectedData = [];\n        this.tagsList = [];\n        // if (!this.field) return\n        // let relationData = this.$store.state.generator.relationData\n        // this.$set(relationData, this.field, [])\n        // this.$store.commit('generator/UPDATE_RELATION_DATA', relationData)\n        return;\n      }\n      if (!this.interfaceId) return;\n      var arr = this.multiple ? this.value : [this.value];\n      if (this.multiple && !Array.isArray(this.value)) {\n        this.value = [];\n        [], (0, _readOnlyError2.default)(\"arr\");\n      }\n      var paramList = this.getParamList();\n      var query = {\n        ids: arr,\n        interfaceId: this.interfaceId,\n        propsValue: this.propsValue,\n        relationField: this.relationField,\n        paramList: paramList\n      };\n      (0, _dataInterface.getDataInterfaceDataInfoByIds)(this.interfaceId, query).then(function (res) {\n        _this6.selectedData = res.data;\n        _this6.selectedIds = _this6.selectedData.map(function (o) {\n          return o[_this6.propsValue];\n        });\n        if (_this6.multiple) {\n          _this6.innerValue = '';\n          _this6.tagsList = JSON.parse(JSON.stringify(_this6.selectedData));\n          _this6.tagsIds = JSON.parse(JSON.stringify(_this6.selectedIds));\n        } else {\n          _this6.checked = _this6.value;\n          _this6.innerValue = _this6.selectedData.length ? _this6.selectedData[0][_this6.relationField] : '';\n          _this6.checkedRow = _this6.selectedData[0];\n        }\n        // if (!this.field) return\n        // let relationData = this.$store.state.generator.relationData\n        // this.$set(relationData, this.field, res.data)\n        // this.$store.commit('generator/UPDATE_RELATION_DATA', relationData)\n        _this6.$nextTick(function () {\n          if (_this6.multiple) {\n            _this6.resetInputHeight();\n          }\n        });\n      });\n    },\n    deleteTag: function deleteTag(event, index) {\n      this.selectedData.splice(index, 1);\n      this.confirm();\n      event.stopPropagation();\n    },\n    handleClearClick: function handleClearClick(event) {\n      this.checked = '';\n      this.innerValue = '';\n      this.checkedRow = {};\n      this.selectedIds = [];\n      this.selectedData = [];\n      this.$emit('input', this.checked);\n      this.$emit('change', this.checked, this.checkedRow);\n      dispatch.call(this, 'ElFormItem', 'el.form.change', this.checked);\n      event.stopPropagation();\n    },\n    resetInputWidth: function resetInputWidth() {\n      this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;\n    },\n    handleResize: function handleResize() {\n      this.resetInputWidth();\n      if (this.multiple) this.resetInputHeight();\n    },\n    resetInputHeight: function resetInputHeight() {\n      var _this7 = this;\n      if (this.collapseTags) return;\n      this.$nextTick(function () {\n        if (!_this7.$refs.reference) return;\n        var inputChildNodes = _this7.$refs.reference.$el.childNodes;\n        var input = [].filter.call(inputChildNodes, function (item) {\n          return item.tagName === 'INPUT';\n        })[0];\n        var tags = _this7.$refs.tags;\n        var tagsHeight = tags ? Math.round(tags.getBoundingClientRect().height) : 0;\n        var sizeInMap = _this7.initialInputHeight || 40;\n        input.style.height = _this7.selectedData.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tagsHeight + (tagsHeight > sizeInMap ? 6 : 0) : 0, sizeInMap) + 'px';\n      });\n    }\n  }, \"resetInputWidth\", function resetInputWidth() {\n    this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;\n  }), \"handleResize\", function handleResize() {\n    this.resetInputWidth();\n    if (this.multiple) this.resetInputHeight();\n  })\n};",null]}