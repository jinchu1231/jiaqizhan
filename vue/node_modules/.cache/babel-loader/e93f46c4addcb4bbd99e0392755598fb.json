{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/HSchedule/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/HSchedule/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _vuex = require(\"vuex\");\nvar _msgDialog = _interopRequireDefault(require(\"@/components/Process/PropPanel/msgDialog\"));\nvar _schedule = require(\"@/api/onlineDev/schedule\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar reminderTimeList = [{\n  id: -2,\n  fullName: '不提醒'\n}, {\n  id: -1,\n  fullName: '开始时'\n}, {\n  id: 5,\n  fullName: '提前5分钟'\n}, {\n  id: 10,\n  fullName: '提前10分钟'\n}, {\n  id: 15,\n  fullName: '提前15分钟'\n}, {\n  id: 30,\n  fullName: '提前30分钟'\n}, {\n  id: 60,\n  fullName: '提前1小时'\n}, {\n  id: 120,\n  fullName: '提前2小时'\n}, {\n  id: 1440,\n  fullName: '1天前'\n}, {\n  id: 2880,\n  fullName: '2天前'\n}, {\n  id: 10080,\n  fullName: '1周前'\n}];\nvar timeList = [{\n  id: -2,\n  fullName: '不提醒'\n}, {\n  id: 1,\n  fullName: '当天8:00'\n}, {\n  id: 2,\n  fullName: '当天9:00'\n}, {\n  id: 3,\n  fullName: '当天10:00'\n}, {\n  id: 4,\n  fullName: '1天前8:00'\n}, {\n  id: 5,\n  fullName: '1天前9:00'\n}, {\n  id: 6,\n  fullName: '1天前10:00'\n}, {\n  id: 7,\n  fullName: '2天前8:00'\n}, {\n  id: 8,\n  fullName: '2天前9:00'\n}, {\n  id: 9,\n  fullName: '2天前10:00'\n}, {\n  id: 10,\n  fullName: '1周前8:00'\n}, {\n  id: 11,\n  fullName: '1周前9:00'\n}, {\n  id: 12,\n  fullName: '1周前10:00'\n}];\nvar _default = exports.default = {\n  components: {\n    MsgDialog: _msgDialog.default\n  },\n  data: function data() {\n    var _this = this;\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请选择结束时间'));\n      } else {\n        var startDay = _this.jnpf.toDate(_this.dataForm.startDay, \"yyyy-MM-dd 00:00:00\");\n        _this.dataForm.startDay = new Date(startDay).getTime();\n        var endDay = _this.jnpf.toDate(value, \"yyyy-MM-dd 00:00:00\");\n        value = new Date(endDay).getTime();\n        if (_this.dataForm.duration == -1) {\n          if (_this.dataForm.startDay == value) {\n            if (_this.dataForm.allDay == 0 && _this.dataForm.startTime > _this.dataForm.endTime) {\n              callback(new Error('结束时间必须晚于开始时间'));\n            }\n          }\n          if (_this.dataForm.startDay > value) {\n            callback(new Error('结束时间必须晚于开始时间'));\n          }\n        }\n        callback();\n      }\n    };\n    return {\n      visible: false,\n      btnLoading: false,\n      dataForm: {\n        id: 0,\n        category: '',\n        creatorUserId: '',\n        userName: '',\n        allDay: 0,\n        urgent: '1',\n        startDay: '',\n        startTime: '',\n        endDay: '',\n        endTime: '',\n        duration: 60,\n        content: '',\n        title: '',\n        toUserIds: [],\n        reminderTime: -2,\n        reminderType: 1,\n        send: '',\n        sendName: '',\n        repetition: 1,\n        repeatTime: '',\n        color: '#FFFFFF',\n        files: []\n      },\n      repetitionType: false,\n      checked: 1,\n      delVisible: false,\n      updateVisible: false,\n      dataRule: {\n        category: [{\n          required: true,\n          message: '请选择类型',\n          trigger: 'change'\n        }],\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }],\n        duration: [{\n          required: true,\n          message: '请选择时长',\n          trigger: 'change'\n        }],\n        startDay: [{\n          required: true,\n          message: '请选择开始时间',\n          trigger: 'change'\n        }],\n        endDay: [{\n          required: true,\n          validator: validatePass,\n          trigger: 'change'\n        }],\n        repeatTime: [{\n          required: true,\n          message: '请选择结束重复',\n          trigger: 'change'\n        }],\n        send: [{\n          required: true,\n          message: '请选择发送配置',\n          trigger: 'change'\n        }],\n        reminderType: [{\n          required: true,\n          message: '请选择提醒方式',\n          trigger: 'change'\n        }],\n        startTime: [{\n          required: true,\n          message: '请选择提醒方式',\n          trigger: 'change'\n        }]\n      },\n      urgentList: [{\n        id: \"1\",\n        fullName: '普通'\n      }, {\n        id: '2',\n        fullName: '重要'\n      }, {\n        id: '3',\n        fullName: '紧急'\n      }],\n      durationList: [{\n        id: 30,\n        fullName: '30分钟'\n      }, {\n        id: 60,\n        fullName: '1小时'\n      }, {\n        id: 90,\n        fullName: '1小时30分钟'\n      }, {\n        id: 120,\n        fullName: '2小时'\n      }, {\n        id: 180,\n        fullName: '3小时'\n      }, {\n        id: -1,\n        fullName: '自定义'\n      }],\n      typeOptions: [],\n      tableList: [{\n        id: 1,\n        fullName: '此日程'\n      }, {\n        id: 2,\n        fullName: '此日程及后续'\n      }],\n      deleteList: [{\n        id: 1,\n        fullName: '此日程'\n      }, {\n        id: 2,\n        fullName: '此日程及后续'\n      }, {\n        id: 3,\n        fullName: '所有日程'\n      }],\n      remindList: [{\n        id: 1,\n        fullName: '默认'\n      }, {\n        id: 2,\n        fullName: '自定义'\n      }],\n      repeatReminderList: [{\n        id: 1,\n        fullName: '不重复'\n      }, {\n        id: 2,\n        fullName: '每天重复'\n      }, {\n        id: 3,\n        fullName: '每周重复'\n      }, {\n        id: 4,\n        fullName: '每月重复'\n      }, {\n        id: 5,\n        fullName: '每年重复'\n      }],\n      reminderTimeList: reminderTimeList,\n      timeList: timeList,\n      files: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['userInfo'])), {}, {\n    getReminderTimeList: function getReminderTimeList() {\n      if (this.dataForm.allDay) return this.timeList;\n      return this.reminderTimeList;\n    }\n  }),\n  methods: {\n    init: function init(id, startTime, duration) {\n      var _this2 = this;\n      this.dataForm.id = id || 0;\n      this.visible = true;\n      this.dataForm.category = '';\n      this.delVisible = false;\n      this.updateVisible = false;\n      this.repetitionType = false;\n      this.checked = 1;\n      this.dataForm.endTime = '';\n      this.$nextTick(function () {\n        _this2.$refs.dataForm.clearValidate();\n        if (_this2.dataForm.id) {\n          (0, _schedule.ScheduleInfo)(_this2.dataForm.id).then(function (res) {\n            _this2.dataForm = res.data;\n            _this2.files = _this2.dataForm.files && _this2.dataForm.files.length && JSON.parse(_this2.dataForm.files) || [];\n            if (_this2.dataForm.repetition != 1) _this2.repetitionType = true;\n          });\n        } else {\n          _this2.$refs['dataForm'].resetFields();\n          _this2.dataForm.creatorUserId = _this2.userInfo.userId;\n          _this2.dataForm.toUserIds = [];\n          _this2.dataForm.startDay = startTime || '';\n          _this2.dataForm.endDay = startTime || '';\n          _this2.dataForm.color = '#FFFFFF';\n          _this2.dataForm.reminderTime = -2;\n          _this2.dataForm.duration = duration || 60;\n          _this2.dataForm.content = '';\n          _this2.dataForm.title = '';\n          _this2.dataForm.allDay = 0;\n          _this2.dataForm.category = '';\n          if (_this2.typeOptions.length) _this2.dataForm.type = _this2.typeOptions[0].id;\n          _this2.dataForm.repetition = 1;\n          _this2.dataForm.repeatTime = '';\n          _this2.dataForm.userName = '';\n          _this2.dataForm.urgent = '1';\n          _this2.dataForm.reminderType = 1;\n          _this2.dataForm.send = '';\n          _this2.dataForm.sendName = '';\n          _this2.files = [];\n          var time = _this2.jnpf.toDate(new Date(), \"HH\");\n          _this2.dataForm.startTime = Number(time) + 1 < 10 ? '0' + (Number(time) + 1) + ':00' : Number(time) + 1 + ':00';\n          _this2.dataForm.endTime = Number(time) + 2 < 10 ? '0' + (Number(time) + 2) + ':00' : Number(time) + 2 + ':00';\n        }\n      });\n      this.getDictionaryData();\n    },\n    startDayChange: function startDayChange(val) {\n      var startDay = this.jnpf.toDate(val, \"yyyy-MM-dd 00:00:00\");\n      this.dataForm.startDay = new Date(startDay).getTime();\n    },\n    durationChange: function durationChange() {\n      var arr = this.dataForm.startTime.split(\":\");\n      var time = Number(arr[0]) + 1;\n      if (Number(time) == 24) {\n        time = 0;\n      }\n      this.dataForm.endDay = this.dataForm.startDay;\n      this.dataForm.endTime = time < 10 ? '0' + time + ':' + arr[1] : time + ':' + arr[1];\n    },\n    getDictionaryData: function getDictionaryData() {\n      var _this3 = this;\n      this.$store.dispatch('base/getDictionaryData', {\n        sort: 'scheduleType'\n      }).then(function (res) {\n        _this3.typeOptions = res;\n        if (_this3.typeOptions.length) _this3.dataForm.category = _this3.typeOptions[0].id;\n      });\n    },\n    change_providerType: function change_providerType(val) {\n      var _this4 = this;\n      this.$nextTick(function () {\n        _this4.$refs.dataForm.clearValidate('duration');\n      });\n      this.dataForm.reminderTime = -2;\n      if (val) {\n        this.dataForm.endDay = this.dataForm.startDay;\n      } else {\n        this.dataForm.duration = 60;\n        this.dataForm.endDay = 0;\n      }\n    },\n    repetitionChange: function repetitionChange(val) {\n      var time = new Date();\n      time.setFullYear(time.getFullYear() + 1);\n      if (val != 1) this.dataForm.repeatTime = time.getTime();\n    },\n    onMsgChange: function onMsgChange(id, item) {\n      if (!id) {\n        this.dataForm.send = '';\n        this.dataForm.sendName = '';\n        return;\n      }\n      if (this.dataForm.send === id) return;\n      this.dataForm.send = id;\n      this.dataForm.sendName = item.fullName;\n    },\n    dataFormSubmit: function dataFormSubmit(type) {\n      var _this5 = this;\n      if (type == 1) {\n        if (!this.checked) return this.$message.warning('请选择日程');\n      }\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          if (_this5.dataForm.allDay == 0) {\n            if (!_this5.dataForm.startTime) return _this5.$message({\n              message: '开始时间不能为空',\n              type: 'error'\n            });\n            if (!_this5.dataForm.endTime && _this5.dataForm.duration == -1) return _this5.$message({\n              message: '结束时间不能为空',\n              type: 'error'\n            });\n          }\n          if (_this5.dataForm.duration == -1 && _this5.dataForm.allDay == 0 && _this5.dataForm.startDay == _this5.dataForm.endDay) {\n            if (!_this5.dataForm.endTime && _this5.dataForm.duration == -1) return _this5.$message({\n              message: '结束时间不能为空',\n              type: 'error'\n            });\n          }\n          if (_this5.dataForm.repetition != 1 && _this5.dataForm.allDay == 1) {\n            var startDay = _this5.jnpf.toDate(_this5.dataForm.startDay, \"yyyy-MM-dd 00:00:00\");\n            _this5.dataForm.startDay = new Date(startDay).getTime();\n          }\n          if (_this5.dataForm.repetition != 1 && _this5.dataForm.startDay > _this5.dataForm.repeatTime) return _this5.$message({\n            message: '结束重复必须晚于开始时间',\n            type: 'error'\n          });\n          _this5.dataForm.files = JSON.stringify(_this5.files);\n          var formMethod = _this5.dataForm.id ? _schedule.ScheduleUpdate : _schedule.ScheduleCreate;\n          if (_this5.dataForm.id && _this5.repetitionType) {\n            if (!_this5.updateVisible) {\n              _this5.updateVisible = true;\n            } else {\n              formMethod(_this5.dataForm, _this5.checked).then(function (res) {\n                _this5.$message({\n                  message: res.msg,\n                  type: 'success',\n                  duration: 1500,\n                  onClose: function onClose() {\n                    _this5.visible = false;\n                    _this5.btnLoading = false;\n                    _this5.$emit('refreshDataList');\n                  }\n                });\n              }).catch(function () {});\n            }\n          } else {\n            _this5.btnLoading = true;\n            if (!_this5.dataForm.id) delete _this5.dataForm.id;\n            formMethod(_this5.dataForm, 3).then(function (res) {\n              _this5.$message({\n                message: res.msg,\n                type: 'success',\n                duration: 1500,\n                onClose: function onClose() {\n                  _this5.visible = false;\n                  _this5.btnLoading = false;\n                  _this5.$emit('refreshDataList');\n                }\n              });\n            }).catch(function () {\n              _this5.btnLoading = false;\n            });\n          }\n        }\n      });\n    },\n    handleDel: function handleDel() {\n      var _this6 = this;\n      if (this.repetitionType) {\n        if (!this.delVisible) {\n          this.delVisible = true;\n        } else {\n          if (!this.checked) return this.$message.warning('请选择日程');\n          (0, _schedule.ScheduleDelete)(this.dataForm.id, this.checked).then(function (res) {\n            _this6.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500\n            });\n            _this6.delVisible = false;\n            _this6.visible = false;\n            _this6.$emit('refreshDataList');\n          });\n        }\n      } else {\n        this.$confirm('此操作将永久删除此日程，同时删除所有参与人的日程，是否继续？', '提示', {\n          type: 'warning'\n        }).then(function () {\n          (0, _schedule.ScheduleDelete)(_this6.dataForm.id, 3).then(function (res) {\n            _this6.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500\n            });\n            _this6.visible = false;\n            _this6.$emit('refreshDataList');\n          });\n        }).catch(function () {});\n      }\n    }\n  }\n};",null]}