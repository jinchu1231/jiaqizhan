{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/formShortLink/list/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/formShortLink/list/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.array.find-index\");\nrequire(\"core-js/modules/es6.regexp.search\");\nrequire(\"core-js/modules/es6.regexp.replace\");\nrequire(\"core-js/modules/es6.regexp.split\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es6.string.fixed\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es6.object.keys\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.array.sort\");\nrequire(\"regenerator-runtime/runtime\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/asyncToGenerator.js\"));\nrequire(\"core-js/modules/es7.array.includes\");\nvar _visualDev = require(\"@/api/onlineDev/visualDev\");\nvar _workFlowForm = require(\"@/api/workFlow/workFlowForm\");\nvar _dictionary = require(\"@/api/systemData/dictionary\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _common = require(\"@/api/common\");\nvar _comConfig = require(\"@/components/Generator/generator/comConfig\");\nvar _FlowBefore = require(\"@/api/workFlow/FlowBefore\");\nvar _Form = _interopRequireDefault(require(\"./Form\"));\nvar _FlowBox = _interopRequireDefault(require(\"@/views/workFlow/components/FlowBox\"));\nvar _detail = _interopRequireDefault(require(\"./detail\"));\nvar _ExportBox = _interopRequireDefault(require(\"@/components/ExportBox\"));\nvar _Search = _interopRequireDefault(require(\"./Search\"));\nvar _childTableColumn = _interopRequireDefault(require(\"./child-table-column\"));\nvar _SuperQuery = _interopRequireDefault(require(\"@/components/SuperQuery\"));\nvar _CandidateForm = _interopRequireDefault(require(\"@/views/workFlow/components/CandidateForm\"));\nvar _JNPFCustom = _interopRequireDefault(require(\"@/components/JNPFCustom\"));\nvar _webDesign = require(\"@/api/onlineDev/webDesign\");\nvar _qrcodejs = _interopRequireDefault(require(\"qrcodejs2\"));\nvar _jsMd = _interopRequireDefault(require(\"js-md5\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar getFormDataFields = function getFormDataFields(item) {\n  if (!item.__config__ || !item.__config__.jnpfKey) return true;\n  var jnpfKey = item.__config__.jnpfKey;\n  var list = ['input', 'textarea', 'inputNumber', 'switch', 'datePicker', 'timePicker', 'colorPicker', 'rate', 'slider', 'editor', 'link', 'text', 'alert', 'table', 'collapse', 'collapseItem', 'tabItem', 'tab', 'row', 'card', 'groupTitle', 'divider', 'tableGrid', 'tableGridTr', 'tableGridTd', 'sign', 'location'];\n  var fieldsSelectList = [\"radio\", \"checkbox\", \"select\", \"cascader\", \"treeSelect\"];\n  if (list.includes(jnpfKey) || fieldsSelectList.includes(jnpfKey) && item.__config__.dataType === 'static') return true;\n  return false;\n};\nvar _default = exports.default = {\n  name: 'dynamicModel',\n  components: {\n    Form: _Form.default,\n    ExportBox: _ExportBox.default,\n    Search: _Search.default,\n    Detail: _detail.default,\n    FlowBox: _FlowBox.default,\n    ChildTableColumn: _childTableColumn.default,\n    SuperQuery: _SuperQuery.default,\n    CandidateForm: _CandidateForm.default,\n    CustomBox: _JNPFCustom.default\n  },\n  props: ['config', 'modelId', 'isPreview', 'encryption'],\n  data: function data() {\n    return {\n      systemComponentsList: _comConfig.systemComponentsList,\n      keyword: '',\n      treeProps: {\n        children: 'children',\n        label: 'fullName',\n        value: 'id',\n        isLeaf: 'isLeaf'\n      },\n      list: [],\n      cacheList: [],\n      total: 0,\n      listLoading: false,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: '',\n        menuId: '',\n        queryJson: '',\n        superQueryJson: ''\n      },\n      defaultListQuery: {\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      },\n      flowVisible: false,\n      formVisible: false,\n      detailVisible: false,\n      importBoxVisible: false,\n      exportBoxVisible: false,\n      uploadBoxVisible: false,\n      customBoxVisible: false,\n      superQueryVisible: false,\n      treeData: [],\n      expandsTree: true,\n      treeActiveId: '',\n      columnData: {\n        columnBtnsList: []\n      },\n      formData: {},\n      columnList: [],\n      childColumnList: [],\n      columnOptions: [],\n      exportList: [],\n      columnBtnsList: [],\n      customBtnsList: [],\n      hasBatchBtn: false,\n      refreshTable: false,\n      expandsTable: true,\n      multipleSelection: [],\n      settingsColumnList: [],\n      mergeList: [],\n      expandObj: {},\n      flowTemplateJson: {},\n      isCustomCopy: false,\n      candidateVisible: false,\n      candidateType: 1,\n      branchList: [],\n      candidateList: [],\n      currRow: {},\n      workFlowFormData: {},\n      rowStyle: null,\n      cellStyle: null,\n      refreshTree: true,\n      searchList: [],\n      dataList: [],\n      formLink: '',\n      columnPassUse: 1,\n      password: '',\n      passwordLoading: false,\n      id: '',\n      ordersList: []\n    };\n  },\n  computed: {\n    operationWidth: function operationWidth() {\n      var customWidth = this.customBtnsList.length ? 50 : 0;\n      return this.columnBtnsList.length * 50 + customWidth;\n    }\n  },\n  watch: {\n    keyword: function keyword(val) {\n      if (this.columnData.treeMethod == 1) this.$refs.treeBox.filter(val);\n    }\n  },\n  created: function created() {\n    var _this = this;\n    (0, _webDesign.getConfig)(this.modelId, this.encryption).then(function (res) {\n      _this.searchList = res.data.columnCondition ? JSON.parse(res.data.columnCondition) : [];\n      _this.addSearchList();\n      _this.dataList = res.data.columnText ? JSON.parse(res.data.columnText) : [];\n      _this.formLink = res.data.formLink || '';\n      _this.id = res.data.id || 0;\n      _this.columnPassUse = res.data.columnPassUse || 0;\n      if (_this.columnPassUse == 1) return;\n      _this.init();\n    });\n  },\n  methods: {\n    init: function () {\n      var _init = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.listLoading = true;\n              this.listQuery.menuId = this.modelId;\n              this.refreshTable = false;\n              if (!(!this.config.columnData || !this.config.formData)) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 5:\n              this.columnData = JSON.parse(this.config.columnData);\n              this.columnData.type = 1;\n              this.columnData.searchList = this.searchList;\n              if (this.columnData.type === 3) {\n                this.columnData.columnList = this.columnData.columnList.filter(function (o) {\n                  return o.prop != _this2.columnData.groupField;\n                });\n              }\n              if (this.config.enableFlow == 1) {\n                this.flowTemplateJson = this.config.flowTemplateJson ? JSON.parse(this.config.flowTemplateJson) : {};\n                this.isCustomCopy = this.flowTemplateJson.properties && this.flowTemplateJson.properties.isCustomCopy;\n              }\n              this.hasBatchBtn = this.columnData.btnsList.some(function (o) {\n                return o.value == 'batchRemove';\n              });\n              this.formData = JSON.parse(this.config.formData);\n              this.formData.fields = this.recurSiveFilter(this.formData.fields);\n              this.listLoading = true;\n              if (this.isPreview) this.listQuery.menuId = \"270579315303777093\";\n              this.rowStyle = this.jnpf.getScriptFunc.call(this, this.columnData.funcs && this.columnData.funcs.rowStyle);\n              this.cellStyle = this.jnpf.getScriptFunc.call(this, this.columnData.funcs && this.columnData.funcs.cellStyle);\n              this.getColumnList();\n              this.$nextTick(function () {\n                _this2.refreshTable = true;\n              });\n              if (!this.isPreview) {\n                _context.next = 21;\n                break;\n              }\n              return _context.abrupt(\"return\", this.listLoading = false);\n            case 21:\n              this.listQuery.pageSize = this.columnData.pageSize;\n              this.listQuery.sort = this.columnData.sort;\n              this.listQuery.sidx = this.columnData.defaultSidx;\n              this.defaultListQuery.pageSize = this.columnData.pageSize;\n              this.defaultListQuery.sort = this.columnData.sort;\n              this.defaultListQuery.sidx = this.columnData.defaultSidx;\n              if (this.columnData.type === 3 || !this.columnData.hasPage) this.listQuery.pageSize = 10000;\n              this.initData();\n              this.setDefaultQuery(this.columnData.defaultSortConfig);\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }(),\n    setDefaultQuery: function setDefaultQuery(defaultSortList) {\n      var defaultSortConfig = (defaultSortList || []).map(function (o) {\n        return (o.sort === 'desc' ? '-' : '') + o.field;\n      });\n      this.listQuery.sidx = defaultSortConfig.join(',');\n    },\n    addSearchList: function addSearchList() {\n      var obj = {\n        label: '关键词',\n        __config__: {\n          jnpfKey: 'input'\n        },\n        value: undefined,\n        id: 'jnpfKeyword',\n        prop: 'jnpfKeyword'\n      };\n      for (var i = 0; i < this.searchList.length; i++) {\n        var item = this.searchList[i];\n        if (item.isKeyword) return this.searchList.unshift(obj);\n      }\n    },\n    recurSiveFilter: function recurSiveFilter(getDrawingList) {\n      var _this3 = this;\n      var newColumn = getDrawingList.filter(function (item) {\n        return getFormDataFields(item);\n      });\n      newColumn.forEach(function (x) {\n        return x.__config__ && x.__config__.children && Array.isArray(x.__config__.children) && (x.__config__.children = _this3.recurSiveFilter(x.__config__.children));\n      });\n      return newColumn;\n    },\n    initDefaultSearchData: function initDefaultSearchData() {\n      var searchList = this.columnData.searchList;\n      //处理搜索条件中的默认值\n      if (searchList != null && searchList.length > 0) {\n        var initQueryJson = {};\n        for (var i = 0, len = searchList.length; i < len; i++) {\n          if (searchList[i].jnpfKey === 'datePicker' && searchList[i].__config__.defaultCurrent == true) {\n            //日期\n            var startDateTime = new Date();\n            startDateTime.setHours(0, 0, 0, 0);\n            var endDateTime = new Date();\n            endDateTime.setHours(23, 59, 59, 999);\n            initQueryJson[searchList[i].__vModel__] = [startDateTime.getTime(), endDateTime.getTime()];\n          } else if (searchList[i].jnpfKey === 'organizeSelect' && searchList[i].__config__.defaultCurrent == true) {\n            //组织机构\n            if (this.userInfo.organizeIdList instanceof Array && this.userInfo.organizeIdList.length > 0) {\n              initQueryJson[searchList[i].__vModel__] = searchList[i].searchMultiple == true ? [this.userInfo.organizeIdList] : this.userInfo.organizeIdList;\n            } else {\n              initQueryJson[searchList[i].__vModel__] = [];\n            }\n          } else if (searchList[i].jnpfKey === 'depSelect' && searchList[i].__config__.defaultCurrent == true && this.userInfo.departmentId != null && this.userInfo.departmentId != '') {\n            if (searchList[i].__config__.defaultValue != null) {\n              initQueryJson[searchList[i].__vModel__] = searchList[i].__config__.defaultValue;\n            }\n          } else if (searchList[i].__config__.jnpfKey === 'userSelect' && searchList[i].__config__.defaultCurrent == true) {\n            if (searchList[i].__config__.defaultValue != null) {\n              initQueryJson[searchList[i].__vModel__] = searchList[i].__config__.defaultValue;\n            }\n          }\n        }\n        if (Object.keys(initQueryJson).length > 0) {\n          this.listQuery.queryJson = JSON.stringify(initQueryJson);\n        }\n      }\n    },\n    initData: function initData() {\n      var _this4 = this;\n      if (this.isPreview) return;\n      this.listLoading = true;\n      (0, _webDesign.getModelListLink)(this.modelId, this.listQuery, this.encryption).then(function (res) {\n        _this4.list = res.data.list;\n        if (_this4.columnData.type !== 3 && _this4.columnData.hasPage) _this4.total = res.data.pagination.total;\n        _this4.listLoading = false;\n      });\n    },\n    handleLogin: function handleLogin() {\n      var _this5 = this;\n      this.passwordLoading = true;\n      if (!this.password) {\n        this.$message({\n          message: '请输入验证码',\n          type: 'error'\n        });\n        this.passwordLoading = false;\n        return;\n      }\n      var param = {\n        id: this.id,\n        type: 1,\n        encryption: this.encryption,\n        password: (0, _jsMd.default)(this.password)\n      };\n      (0, _webDesign.checkPwd)(param).then(function (res) {\n        _this5.passwordLoading = false;\n        if (res.code == 200) {\n          _this5.columnPassUse = 0;\n          _this5.init();\n        }\n      }).catch(function () {\n        _this5.passwordLoading = false;\n      });\n    },\n    getQRimg: function getQRimg() {\n      if (!this.formLink) {\n        return;\n      }\n      this.$refs.qrCode.innerHTML = \"\";\n      this.qrcode = new _qrcodejs.default(this.$refs.qrCode, {\n        width: 150,\n        height: 150,\n        // 高度\n        text: this.formLink,\n        // 二维码内容\n        // render: 'canvas' // 设置渲染方式（有两种方式 table和canvas，默认是canvas）\n        // background: '#f0f'\n        // foreground: '#ff0'\n        correctLevel: _qrcodejs.default.CorrectLevel.H //容错级别 容错级别有：（1）QRCode.CorrectLevel.L （2）QRCode.CorrectLevel.M （3）QRCode.CorrectLevel.Q （4）QRCode.CorrectLevel.H\n      });\n    },\n    toDetail: function toDetail(item, defaultValue) {\n      var _this6 = this;\n      if (!defaultValue) return;\n      this.mainLoading = true;\n      (0, _visualDev.getConfigData)(item.modelId).then(function (res) {\n        _this6.mainLoading = false;\n        if (!res.data) return;\n        if (!res.data.formData) return;\n        var formData = JSON.parse(res.data.formData);\n        formData.popupType = _this6.formData.popupType;\n        _this6.detailVisible = true;\n        _this6.$nextTick(function () {\n          _this6.$refs.Detail.init(formData, item.modelId, defaultValue);\n        });\n      }).catch(function () {\n        _this6.mainLoading = false;\n      });\n    },\n    getTreeView: function getTreeView() {\n      var _this7 = this;\n      if (this.columnData.treeDataSource === \"dictionary\") {\n        if (!this.columnData.treeDictionary) return;\n        (0, _dictionary.getDictionaryDataSelector)(this.columnData.treeDictionary).then(function (res) {\n          _this7.treeData = res.data.list;\n          _this7.initData();\n        });\n      }\n      if (this.columnData.treeDataSource === \"organize\") {\n        this.$store.dispatch('generator/getDepTree').then(function (res) {\n          _this7.treeData = res;\n          _this7.initData();\n        });\n      }\n      if (this.columnData.treeDataSource === \"department\") {\n        this.$store.dispatch('generator/getDepTree').then(function (res) {\n          _this7.treeData = res;\n          _this7.initData();\n        });\n      }\n      if (this.columnData.treeDataSource === \"api\") {\n        if (!this.columnData.treePropsUrl) return;\n        (0, _dataInterface.getDataInterfaceRes)(this.columnData.treePropsUrl).then(function (res) {\n          _this7.treeData = Array.isArray(res.data) ? res.data : [];\n          _this7.initData();\n        });\n      }\n    },\n    getColumnList: function getColumnList() {\n      if (![3, 5].includes(this.columnData.type)) this.dataList = this.getComplexColumns(this.dataList);\n      this.columnList = this.transformColumnList(this.dataList);\n    },\n    getComplexColumns: function getComplexColumns(columns) {\n      var complexHeaderList = this.columnData.complexHeaderList || [];\n      if (!complexHeaderList.length) return columns;\n      var childColumns = [];\n      for (var i = 0; i < complexHeaderList.length; i++) {\n        var e = complexHeaderList[i];\n        e.label = e.fullName;\n        e.align = e.align;\n        e.dataIndex = e.id;\n        e.prop = e.id;\n        e.children = [];\n        e.jnpfKey = 'complexHeader';\n        e.sortable = false;\n        if (e.childColumns && e.childColumns.length) {\n          childColumns.push.apply(childColumns, (0, _toConsumableArray2.default)(e.childColumns));\n          for (var j = 0; j < columns.length; j++) {\n            var o = columns[j];\n            if (e.childColumns.includes(o.__vModel__) && o.fixed !== 'left' && o.fixed !== 'right') e.children.push(_objectSpread({}, o));\n          }\n        }\n      }\n      complexHeaderList = complexHeaderList.filter(function (o) {\n        return o.children.length;\n      });\n      for (var _i = 0; _i < columns.length; _i++) {\n        var item = columns[_i];\n        if (!childColumns.includes(item.__vModel__)) complexHeaderList.push(item);\n      }\n      return complexHeaderList;\n    },\n    transformColumnList: function transformColumnList(columnList) {\n      var _this8 = this;\n      var list = [];\n      var _loop = function _loop() {\n        var e = columnList[i];\n        if (!e.prop.includes('-')) {\n          list.push(e);\n        } else {\n          var prop = e.prop.split('-')[0];\n          var vModel = e.prop.split('-')[1];\n          var label = e.label.split('-')[0];\n          var childLabel = e.label.replace(label + '-', '');\n          var newItem = {\n            align: \"center\",\n            jnpfKey: \"table\",\n            prop: prop,\n            label: label,\n            children: []\n          };\n          e.vModel = vModel;\n          e.childLabel = childLabel;\n          if (!_this8.expandObj.hasOwnProperty(\"\".concat(prop, \"Expand\"))) _this8.$set(_this8.expandObj, \"\".concat(prop, \"Expand\"), false);\n          if (!list.some(function (o) {\n            return o.prop === prop;\n          })) list.push(newItem);\n          for (var _i2 = 0; _i2 < list.length; _i2++) {\n            if (list[_i2].prop === prop) {\n              list[_i2].children.push(e);\n              break;\n            }\n          }\n        }\n      };\n      for (var i = 0; i < columnList.length; i++) {\n        _loop();\n      }\n      this.getMergeList(list);\n      this.getExportList(list);\n      this.childColumnList = list.filter(function (o) {\n        return o.jnpfKey === 'table';\n      });\n      return list;\n    },\n    getExportList: function getExportList(list) {\n      var exportList = [];\n      for (var i = 0; i < list.length; i++) {\n        if (list[i].jnpfKey === 'table') {\n          for (var j = 0; j < list[i].children.length; j++) {\n            exportList.push(list[i].children[j]);\n          }\n        } else {\n          exportList.push(list[i]);\n        }\n      }\n      this.exportList = exportList;\n    },\n    getMergeList: function getMergeList(list) {\n      var _this9 = this;\n      list.forEach(function (item) {\n        if (item.children && item.children.length > 0 && item.jnpfKey == 'table') {\n          item.children.forEach(function (child, index) {\n            if (index == 0) {\n              _this9.mergeList.push({\n                prop: child.prop,\n                rowspan: 1,\n                colspan: item.children.length\n              });\n            } else {\n              _this9.mergeList.push({\n                prop: child.prop,\n                rowspan: 0,\n                colspan: 0\n              });\n            }\n          });\n        } else {\n          _this9.mergeList.push({\n            prop: item.prop,\n            rowspan: 1,\n            colspan: 1\n          });\n        }\n      });\n    },\n    arraySpanMethod: function arraySpanMethod(_ref) {\n      var column = _ref.column;\n      for (var i = 0; i < this.mergeList.length; i++) {\n        if (column.property == this.mergeList[i].prop) {\n          return [this.mergeList[i].rowspan, this.mergeList[i].colspan];\n        }\n      }\n    },\n    toggleExpand: function toggleExpand(row, field) {\n      row[field] = !row[field];\n    },\n    getNodePath: function getNodePath(node) {\n      var fullPath = [];\n      var loop = function loop(node) {\n        if (node.level) fullPath.unshift(node.data);\n        if (node.parent) loop(node.parent);\n      };\n      loop(node);\n      return fullPath;\n    },\n    handleNodeClick: function handleNodeClick(data, node) {\n      var _this10 = this;\n      if (this.treeActiveId == data[this.treeProps.value]) return;\n      this.treeActiveId = data[this.treeProps.value];\n      this.$refs.Search.treeReset();\n      var queryJson = {};\n      if (this.columnData.treeDataSource === \"organize\") {\n        var nodePath = this.getNodePath(node);\n        var currValue = nodePath.map(function (o) {\n          return o[_this10.treeProps.value];\n        });\n        queryJson = (0, _defineProperty2.default)({}, this.columnData.treeRelation, currValue);\n        this.treeActiveId = currValue;\n      } else {\n        queryJson = (0, _defineProperty2.default)({}, this.columnData.treeRelation, data[this.treeProps.value]);\n      }\n      this.search(JSON.stringify(queryJson));\n    },\n    handleDel: function handleDel(id, index) {\n      var _this11 = this;\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(function () {\n        if (id) {\n          (0, _visualDev.deleteModel)(_this11.modelId, id).then(function (res) {\n            _this11.$message({\n              type: 'success',\n              message: res.msg,\n              duration: 1000,\n              onClose: function onClose() {\n                _this11.initData();\n              }\n            });\n          });\n        } else {\n          _this11.list.splice(index, 1);\n        }\n      }).catch(function () {});\n    },\n    saveForRowEdit: function saveForRowEdit(row, status, candidateData) {\n      var _this12 = this;\n      if (this.isPreview) return this.$message({\n        message: '功能预览不支持数据保存',\n        type: 'warning'\n      });\n      if (this.config.enableFlow == 1) {\n        var query = {\n          id: row.id,\n          status: status || \"1\",\n          candidateType: this.candidateType,\n          formData: row,\n          flowId: this.config.flowId,\n          flowUrgent: 1\n        };\n        if (candidateData) query = _objectSpread(_objectSpread({}, query), candidateData);\n        var formMethod = query.id ? _workFlowForm.Update : _workFlowForm.Create;\n        formMethod(query).then(function (res) {\n          _this12.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: function onClose() {\n              _this12.candidateVisible = false;\n              _this12.initData();\n            }\n          });\n        });\n      } else {\n        var _query = {\n          id: row.id,\n          data: JSON.stringify(row)\n        };\n        var _formMethod = _query.id ? _visualDev.updateModel : _visualDev.createModel;\n        _formMethod(this.modelId, _query).then(function (res) {\n          _this12.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: function onClose() {\n              _this12.candidateVisible = false;\n              _this12.initData();\n            }\n          });\n        });\n      }\n    },\n    submitForRowEdit: function submitForRowEdit(row) {\n      var _this13 = this;\n      this.currRow = row;\n      if (this.isPreview) return this.$message({\n        message: '功能预览不支持数据保存',\n        type: 'warning'\n      });\n      this.workFlowFormData = {\n        id: row.id,\n        formData: row,\n        flowId: this.config.flowId\n      };\n      (0, _FlowBefore.Candidates)(0, this.workFlowFormData).then(function (res) {\n        var data = res.data;\n        _this13.candidateType = data.type;\n        if (data.type == 1) {\n          _this13.branchList = res.data.list.filter(function (o) {\n            return o.isBranchFlow;\n          });\n          _this13.candidateList = res.data.list.filter(function (o) {\n            return !o.isBranchFlow && o.isCandidates;\n          });\n          _this13.candidateVisible = true;\n        } else if (data.type == 2) {\n          _this13.branchList = [];\n          _this13.candidateList = res.data.list.filter(function (o) {\n            return o.isCandidates;\n          });\n          _this13.candidateVisible = true;\n        } else {\n          if (_this13.isCustomCopy) {\n            _this13.branchList = [];\n            _this13.candidateList = [];\n            _this13.candidateVisible = true;\n            return;\n          }\n          _this13.$confirm('您确定要提交当前流程吗, 是否继续?', '提示', {\n            type: 'warning'\n          }).then(function () {\n            _this13.saveForRowEdit(row, '0');\n          }).catch(function () {});\n        }\n      }).catch(function () {});\n    },\n    submitCandidate: function submitCandidate(data) {\n      this.saveForRowEdit(this.currRow, '0', data);\n    },\n    cancelRowEdit: function cancelRowEdit(row, index) {\n      if (!row.id) return this.list.splice(index, 1);\n      row.rowEdit = false;\n      var item = JSON.parse(JSON.stringify(this.cacheList[index]));\n      this.$set(this.list, index, item);\n    },\n    addHandleForRowEdit: function addHandleForRowEdit() {\n      var item = {\n        rowEdit: true\n      };\n      for (var i = 0; i < this.columnData.columnList.length; i++) {\n        var e = this.columnData.columnList[i];\n        item[e.__vModel__] = e.__config__.defaultValue;\n      }\n      this.list.unshift(item);\n    },\n    addOrUpdateHandle: function addOrUpdateHandle(id) {\n      var _this14 = this;\n      if (this.config.enableFlow == 1) {\n        var data = {\n          id: id || '',\n          enCode: this.config.flowEnCode,\n          flowId: this.config.flowId,\n          formType: 2,\n          type: 1,\n          opType: '-1',\n          modelId: this.modelId,\n          isPreview: this.isPreview,\n          formConf: JSON.stringify(this.formData)\n        };\n        this.flowVisible = true;\n        this.$nextTick(function () {\n          _this14.$refs.FlowBox.init(data);\n        });\n      } else {\n        this.formVisible = true;\n        this.$nextTick(function () {\n          _this14.$refs.Form.init(_this14.formData, _this14.modelId, id, _this14.isPreview, _this14.columnData.useFormPermission);\n        });\n      }\n    },\n    headBtnsHandel: function headBtnsHandel(key) {\n      var _this15 = this;\n      if (key === 'add') {\n        if (this.columnData.type === 4) {\n          this.addHandleForRowEdit();\n        } else {\n          this.addOrUpdateHandle();\n        }\n      }\n      if (key == 'download') {\n        this.exportBoxVisible = true;\n        this.$nextTick(function () {\n          _this15.$refs.ExportBox.init(_this15.exportList);\n        });\n      }\n      if (key == 'upload') {\n        this.uploadBoxVisible = true;\n        this.$nextTick(function () {\n          _this15.$refs.UploadBox.init(_this15.modelId);\n        });\n      }\n      if (this.isPreview) return;\n      if (key === 'batchRemove') {\n        this.batchRemove();\n      }\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      var res = val.map(function (item) {\n        return item.id;\n      });\n      this.multipleSelection = res;\n    },\n    batchRemove: function batchRemove() {\n      var _this16 = this;\n      if (!this.multipleSelection.length) {\n        this.$message({\n          type: 'error',\n          message: '请选择一条数据',\n          duration: 1500\n        });\n        return;\n      }\n      this.$confirm('您确定要删除这些数据吗, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        (0, _visualDev.batchDelete)(_this16.modelId, _this16.multipleSelection).then(function (res) {\n          _this16.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: function onClose() {\n              _this16.initData();\n            }\n          });\n        });\n      }).catch(function () {});\n    },\n    download: function download(data) {\n      var _this17 = this;\n      if (this.isPreview) return this.$message({\n        message: '功能预览不支持数据导出',\n        type: 'warning'\n      });\n      var query = _objectSpread(_objectSpread({}, this.listQuery), data);\n      (0, _visualDev.exportModel)(this.modelId, query).then(function (res) {\n        if (!res.data.url) return;\n        _this17.jnpf.downloadFile(res.data.url);\n        _this17.$refs.ExportBox.visible = false;\n        _this17.exportBoxVisible = false;\n      });\n    },\n    columnBtnHandel: function columnBtnHandel(row) {\n      this.goDetail(row.id, row);\n    },\n    goDetail: function goDetail(id, row) {\n      var _this18 = this;\n      this.detailVisible = true;\n      this.$nextTick(function () {\n        _this18.$refs.Detail.init(_this18.formData, _this18.modelId, id, _this18.encryption);\n      });\n    },\n    handleHeaderClass: function handleHeaderClass(_ref2) {\n      var column = _ref2.column;\n      column.order = column.multiOrder;\n    },\n    handleOrderChange: function handleOrderChange(orderColumn, orderState) {\n      var index = this.ordersList.findIndex(function (e) {\n        return e.field === orderColumn;\n      });\n      var sort = orderState === 'ascending' ? 'asc' : orderState === 'descending' ? 'desc' : '';\n      if (index > -1) {\n        this.ordersList[index].sort = orderState;\n      } else {\n        this.ordersList.push({\n          field: orderColumn,\n          sort: sort\n        });\n      }\n      this.ordersList = this.ordersList.filter(function (e) {\n        return e.sort;\n      });\n      this.setDefaultQuery(this.ordersList);\n      this.initData();\n    },\n    handleTableSort: function handleTableSort(_ref3) {\n      var column = _ref3.column;\n      if (column.sortable !== 'custom') return;\n      column.multiOrder = column.multiOrder === 'descending' ? 'ascending' : column.multiOrder ? '' : 'descending';\n      this.handleOrderChange(column.property, column.multiOrder);\n    },\n    refresh: function refresh(isRefresh) {\n      this.formVisible = false;\n      if (isRefresh) this.initData();\n    },\n    closeFlow: function closeFlow(isRefresh) {\n      this.flowVisible = false;\n      if (isRefresh) this.initData();\n    },\n    reset: function reset() {\n      this.listQuery.sort = this.defaultListQuery.sort;\n      this.listQuery.sidx = this.defaultListQuery.sidx;\n      this.search('');\n    },\n    searchData: function searchData(queryJson) {\n      this.search(queryJson);\n    },\n    search: function search(queryJson) {\n      // if (this.isPreview) return\n      // if (!queryJson) this.$refs.treeBox && this.$refs.treeBox.setCurrentKey(null);\n      this.listQuery.queryJson = queryJson;\n      this.listQuery.currentPage = 1;\n      this.setDefaultQuery(this.ordersList);\n      this.initData();\n    },\n    openSuperQuery: function openSuperQuery() {\n      var _this19 = this;\n      this.superQueryVisible = true;\n      this.$nextTick(function () {\n        _this19.$refs.SuperQuery.init();\n      });\n    },\n    superQuery: function superQuery(queryJson) {\n      if (this.isPreview) return;\n      this.listQuery.superQueryJson = queryJson;\n      this.listQuery.currentPage = 1;\n      this.initData();\n    },\n    customBtnsHandel: function customBtnsHandel(item, row, index) {\n      if (item.btnType == 1) this.handlePopup(item, row, index);\n      if (item.btnType == 2) this.handleScriptFunc(item, row, index);\n      if (item.btnType == 3) this.handleInterface(item, row, index);\n    },\n    handlePopup: function handlePopup(item, row, index) {\n      var _this20 = this;\n      this.customBoxVisible = true;\n      this.$nextTick(function () {\n        _this20.$refs.CustomBox.init(item, _this20.modelId, row.id, _this20.isPreview);\n      });\n    },\n    handleScriptFunc: function handleScriptFunc(item, row, index) {\n      var parameter = {\n        data: row,\n        index: index,\n        refresh: this.initData,\n        onlineUtils: this.jnpf.onlineUtils\n      };\n      var func = this.jnpf.getScriptFunc.call(this, item.func);\n      if (!func) return;\n      func.call(this, parameter);\n    },\n    handleInterface: function handleInterface(item, row, index) {\n      var _this21 = this;\n      var handlerInterface = function handlerInterface() {\n        if (item.templateJson && item.templateJson.length) {\n          item.templateJson.forEach(function (ele) {\n            ele.defaultValue = row[ele.relationField] || \"\";\n          });\n        }\n        var query = {\n          paramList: item.templateJson || []\n        };\n        (0, _dataInterface.getDataInterfaceRes)(item.interfaceId, query).then(function (res) {\n          _this21.$message({\n            message: res.msg,\n            type: 'success'\n          });\n        });\n      };\n      if (!item.useConfirm) return handlerInterface();\n      this.$confirm(item.confirmTitle || '确认执行此操作', '提示', {\n        type: 'warning'\n      }).then(function () {\n        handlerInterface();\n      }).catch(function () {});\n    },\n    setTableLoadFunc: function setTableLoadFunc() {\n      var JNPFTable = this.$refs.tableRef.$refs.JNPFTable;\n      var parameter = {\n        data: this.list,\n        tableRef: JNPFTable,\n        onlineUtils: this.jnpf.onlineUtils\n      };\n      var func = this.jnpf.getScriptFunc.call(this, this.columnData.funcs.afterOnload);\n      if (!func) return;\n      func.call(this, parameter);\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data[this.treeProps.label].indexOf(value) !== -1;\n    },\n    toggleTreeExpand: function toggleTreeExpand(expands) {\n      var _this22 = this;\n      this.refreshTree = false;\n      this.expandsTree = expands;\n      this.$nextTick(function () {\n        _this22.refreshTree = true;\n        _this22.$nextTick(function () {\n          _this22.$refs.treeBox.setCurrentKey(null);\n        });\n      });\n    },\n    toggleExpandList: function toggleExpandList() {\n      var _this23 = this;\n      this.refreshTable = false;\n      this.expandsTable = !this.expandsTable;\n      this.$nextTick(function () {\n        _this23.refreshTable = true;\n      });\n    },\n    loadNode: function loadNode(node, resolve) {\n      var nodeData = node.data;\n      var config = this.columnData;\n      if (config.treeInterfaceId) {\n        if (config.treeTemplateJson && config.treeTemplateJson.length) {\n          for (var i = 0; i < config.treeTemplateJson.length; i++) {\n            var element = config.treeTemplateJson[i];\n            element.defaultValue = nodeData[element.relationField] || '';\n          }\n        }\n        var query = {\n          paramList: config.treeTemplateJson || []\n        };\n        (0, _dataInterface.getDataInterfaceRes)(config.treeInterfaceId, query).then(function (res) {\n          var data = res.data;\n          if (Array.isArray(data)) {\n            resolve(data);\n          } else {\n            resolve([]);\n          }\n        });\n      }\n    },\n    treeLoad: function treeLoad(tree, treeNode, resolve) {\n      var _this24 = this;\n      (0, _visualDev.getModelSubList)(this.modelId, tree.id, this.listQuery).then(function (res) {\n        if (res.data.list && Array.isArray(res.data.list)) {\n          var list = res.data.list.map(function (o) {\n            return _objectSpread(_objectSpread(_objectSpread({}, o), _this24.expandObj), {}, {\n              hasChildren: true\n            });\n          });\n          resolve(list);\n        } else {\n          resolve([]);\n        }\n      });\n    }\n  }\n};",null]}