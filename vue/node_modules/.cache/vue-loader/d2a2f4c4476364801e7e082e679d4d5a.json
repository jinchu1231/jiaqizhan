{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/systemData/interfaceOauth/VerifySignatureInfo.vue?vue&type=template&id=644a8968&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/systemData/interfaceOauth/VerifySignatureInfo.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      staticClass: \"JNPF-dialog JNPF-dialog_center\",\n      attrs: {\n        title: \"验证签名使用说明\",\n        \"append-to-body\": \"\",\n        visible: _vm.verifySignatureVisible,\n        width: \"800px\",\n      },\n      on: {\n        \"update:visible\": function ($event) {\n          _vm.verifySignatureVisible = $event\n        },\n        close: _vm.goback,\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"doc-container\" }, [\n        _c(\"div\", { staticClass: \"docu-container\" }, [\n          _c(\"h4\", [\n            _c(\n              \"a\",\n              {\n                staticClass: \"anchor\",\n                attrs: { href: \"#验证开启\", id: \"验证开启\", name: \"验证开启\" },\n              },\n              [\n                _c(\"span\", { staticClass: \"octicon octicon-link\" }),\n                _vm._v(\"验证开启\"),\n              ]\n            ),\n          ]),\n          _c(\"p\", [_vm._v(\"验证签名关闭，不使用验证机制\")]),\n          _c(\"li\", [\n            _vm._v(\n              \"直接将appId和appSecret，按照 Authorization: appId::appSecret 格式加入到 Header 中。\"\n            ),\n          ]),\n          _c(\"p\", [_vm._v(\"验证签名开启，使用下列签名验证机制\")]),\n          _c(\"p\"),\n          _c(\"h4\", [\n            _c(\n              \"a\",\n              {\n                staticClass: \"anchor\",\n                attrs: {\n                  href: \"#签名验证机制\",\n                  id: \"签名验证机制\",\n                  name: \"签名验证机制\",\n                },\n              },\n              [\n                _c(\"span\", { staticClass: \"octicon octicon-link\" }),\n                _vm._v(\"签名验证机制\"),\n              ]\n            ),\n          ]),\n          _c(\"p\", [\n            _vm._v(\n              \"和第三方服务对接时，需要建立通讯双方的信任关系，以及确保通讯内容不被篡改，不被重放等。通常，我们采用 HTTPS 和 KeyId/SecretKey 的方式：\"\n            ),\n          ]),\n          _c(\"ol\", [\n            _c(\"li\", [\n              _vm._v(\"HTTPS 用来确定接收方的身份，利用公钥证书机制来保证。\"),\n            ]),\n            _c(\"li\", [\n              _vm._v(\n                \"根据双方共享的一对 keyId/secret，使用 HMAC 签名机制，发送方对请求内容进行签名，并加入到 Header\\n            中，接收方使用同样的方式对请求进行签名计算，比对签名结果用来判别发送方的身份。\"\n              ),\n            ]),\n          ]),\n          _c(\"p\", [\n            _vm._v(\n              \"当前HTTP授权证书支持globalsign, symantec, geotrust, comodo这四类，其余证书类型需要经过处理，暂时不推荐。\"\n            ),\n          ]),\n          _c(\"p\", [_vm._v(\"本系统内采用appId/appSecret来进行签名。\")]),\n          _c(\"h4\", [\n            _c(\n              \"a\",\n              {\n                staticClass: \"anchor\",\n                attrs: { href: \"#签名过程\", id: \"签名过程\", name: \"签名过程\" },\n              },\n              [\n                _c(\"span\", { staticClass: \"octicon octicon-link\" }),\n                _vm._v(\"签名过程\"),\n              ]\n            ),\n          ]),\n          _c(\"p\", [_vm._v(\"签名分为以下4个步骤:\")]),\n          _c(\"ol\", [\n            _c(\"li\", [_vm._v(\"选择合适的签名方法\")]),\n            _c(\"li\", [_vm._v(\"根据对应的签名，构建待签名的字符串\")]),\n            _c(\"li\", [\n              _vm._v(\n                \"根据对应的签名算法和对应的appSecret，计算待签名字符串的 Hmac 签名\"\n              ),\n            ]),\n            _c(\"li\", [\n              _vm._v(\n                \"将签名按规定格式加入到 Header: Authorization中。\\n            \"\n              ),\n              _c(\"p\", [\n                _vm._v(\n                  \"通常使用: Authorization: SignVersion:KeyId:Scope:Signature;\\n            \"\n                ),\n              ]),\n            ]),\n            _c(\"p\", [_vm._v(\"本系统内最终以KeyId:Signature规则展示\")]),\n          ]),\n          _c(\"h4\", [\n            _c(\n              \"a\",\n              {\n                staticClass: \"anchor\",\n                attrs: { href: \"#签名方法\", id: \"签名方法\", name: \"签名方法\" },\n              },\n              [\n                _c(\"span\", { staticClass: \"octicon octicon-link\" }),\n                _vm._v(\"签名方法\"),\n              ]\n            ),\n          ]),\n          _c(\"p\", [\n            _vm._v(\n              \"为了使双方采用一致的算法计算签名，需要规定签名字符串的构建和签名算法，为了满足后续的签名算法升级，当前支持的签名方式为： HmacSHA256\"\n            ),\n          ]),\n          _c(\"p\", [_vm._v(\"待签名字符串，请按照以下顺序构建\")]),\n          _c(\"ol\", [\n            _c(\"li\", [\n              _c(\"p\", [\n                _vm._v(\"Http Method, 大写。例如 GET, POST。加上换行符 \\\\n\"),\n              ]),\n            ]),\n            _c(\"li\", [\n              _c(\"p\", [\n                _vm._v(\n                  \"URI Path。query params string 之前的部分。 加上换行符 \\\\n\"\n                ),\n              ]),\n            ]),\n            _c(\"li\", [\n              _c(\"p\", [\n                _vm._v(\n                  \"Header 中的 YmDate， 以时间戳的形式，例如（2022-06-28 16:26:11=>1656404771000）。加上换行符 \\\\n\"\n                ),\n              ]),\n              _c(\"p\", [\n                _vm._v(\n                  \"该时间将会用来判断请求有效性，限定一分钟之内有效。若无效返回验证超时。\"\n                ),\n              ]),\n            ]),\n            _c(\"li\", [_c(\"p\", [_vm._v(\"UserKey用于用户认证 \\\\n\")])]),\n            _c(\"li\", [\n              _c(\"p\", [\n                _vm._v(\"Header 中的 Host，为开发者自身的域名，加上换行符 \\\\n\"),\n              ]),\n            ]),\n          ]),\n          _c(\"p\", [_vm._v(\"Header规范化方法如下:\")]),\n          _c(\"ol\", [\n            _c(\"li\", [\n              _vm._v(\"将所有的 header name 都变成小写，按照字典序排序。\"),\n            ]),\n            _c(\"li\", [\n              _vm._v(\n                \"对每一个小写的 name, 取出所有的对应的 value。如果有多个 value, 对所有的 value 进行字典序排序，用逗号 (,) 连接。\"\n              ),\n            ]),\n            _c(\"li\", [\n              _vm._v(\n                \"对每一对 name, value。按照如下方式拼接：name:value\\\\n (\\\\n 为换行)\"\n              ),\n            ]),\n          ]),\n          _c(\"h4\", [\n            _c(\n              \"a\",\n              {\n                staticClass: \"anchor\",\n                attrs: {\n                  href: \"#计算待签名字符串的签名\",\n                  id: \"计算待签名字符串的签名\",\n                  name: \"计算待签名字符串的签名\",\n                },\n              },\n              [\n                _c(\"span\", { staticClass: \"octicon octicon-link\" }),\n                _vm._v(\"计算待签名字符串的签名\"),\n              ]\n            ),\n          ]),\n          _c(\"p\", [_c(\"b\", [_vm._v(\"签名使用的 Key\")])]),\n          _c(\"ol\", [\n            _c(\"li\", [\n              _vm._v(\n                \"HmacSHA256 方式直接使用 appId 对应的 appSecret。通常这是一个32位 Base64 字符串，将其 Base64 decode 为字节数组。\\n          \"\n              ),\n            ]),\n            _c(\"li\", [\n              _vm._v(\n                \"其他方法，为了更加安全的保护 appSecret, 可能会使用特定的算法根据 appSecret 派生出新的签名用的 key。目前保留。\"\n              ),\n            ]),\n          ]),\n          _c(\"p\", [_c(\"b\", [_vm._v(\"计算签名\")])]),\n          _c(\"ol\", [\n            _c(\"li\", [_vm._v(\"使用 HmacSha256 计算 Hmac 签名。\")]),\n            _c(\"li\", [_vm._v(\"将待签名字符串，获取对应的 UTF-8 字节数组。\")]),\n            _c(\"li\", [_vm._v(\"使用签名算法对待签名字节数组计算 Hmac 签名。\")]),\n            _c(\"li\", [_vm._v(\"将签名结果变成 Hex 字符串。\")]),\n            _c(\"li\", [\n              _vm._v(\n                \"将签名结果，按照 Authorization: <KeyId>:<Signature> 格式加入到 Header 中。\"\n              ),\n            ]),\n          ]),\n          _c(\"h4\", [\n            _c(\n              \"a\",\n              {\n                staticClass: \"anchor\",\n                attrs: { href: \"#签名示例\", id: \"签名示例\", name: \"签名示例\" },\n              },\n              [\n                _c(\"span\", { staticClass: \"octicon octicon-link\" }),\n                _vm._v(\"签名示例\"),\n              ]\n            ),\n          ]),\n          _c(\"p\", [\n            _vm._v(\n              \"针对 appId, appSecret (abcde, xxxxxxxxxxxxxxxxyyyyyyyyyyyyyyyy)\"\n            ),\n          ]),\n          _c(\"p\", [\n            _vm._v(\n              \"appId和appSecret为必传参数。可以添加为请求头参数（Header）如：abcde:xxxxxxxxxxxxxxxxyyyyyyyyyyyyyyyy\"\n            ),\n          ]),\n          _c(\"p\", [\n            _vm._v(\n              \"其他参数：如果是GET请求，统一路径传参；如果是POST请求，统一Body-application/json传参。\\n        \"\n            ),\n          ]),\n          _c(\"h5\", [\n            _c(\n              \"a\",\n              {\n                staticClass: \"anchor\",\n                attrs: { href: \"#get-请求\", id: \"get-请求\", name: \"get-请求\" },\n              },\n              [\n                _c(\"span\", { staticClass: \"octicon octicon-link\" }),\n                _vm._v(\"GET 请求：\"),\n              ]\n            ),\n          ]),\n          _c(\"p\", [\n            _c(\"em\", [_vm._v(\"GET\")]),\n            _vm._v(\n              \"\\n          /api/system/DataInterface/{id}/Actions/Response?tenantId=xxxxx&name=abc\"\n            ),\n            _c(\"br\"),\n            _vm._v(\"\\n          Host : localhost:30000\"),\n            _c(\"br\"),\n            _vm._v(\"\\n          YmDate : 1656404771000\"),\n            _c(\"br\"),\n            _vm._v(\"\\n          UserKey : xxxxxxx\"),\n            _c(\"br\"),\n          ]),\n          _c(\"p\", [_vm._v(\"按照规则生成的待签名字符串如下：\")]),\n          _c(\"table\", { staticClass: \"table table-bordered\" }, [\n            _c(\"thead\", [\n              _c(\"tr\", [\n                _c(\"th\", [_vm._v(\"签名结果\")]),\n                _c(\"th\", [_vm._v(\"说明\")]),\n              ]),\n            ]),\n            _c(\"tbody\", [\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"待签名字段名\")]),\n                _c(\"td\", [_vm._v(\"待签名字段值\")]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"Http Method\")]),\n                _c(\"td\", [_vm._v(\"GET\")]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"URL Path\")]),\n                _c(\"td\", [\n                  _vm._v(\" /api/system/DataInterface/{id}/Actions/Response\"),\n                ]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"YmDate\")]),\n                _c(\"td\", [_vm._v(\"1656404771000\")]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"UserKey\")]),\n                _c(\"td\", [_vm._v(\"xxxxxxx\")]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"Host\")]),\n                _c(\"td\", [_vm._v(\"localhost:30000\")]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"最终待签名字符串\")]),\n                _c(\"td\", [\n                  _vm._v(\"以下 \\\\n\\n                表明换行\"),\n                  _c(\"br\"),\n                  _vm._v(\"GET\\\\n\"),\n                  _c(\"br\"),\n                  _vm._v(\"/api/system/DataInterface/{id}/Actions/Response\\\\n\"),\n                  _c(\"br\"),\n                  _vm._v(\"1656404771000\\\\n\\n                \"),\n                  _c(\"br\"),\n                  _vm._v(\"localhost:30000\\\\n\"),\n                  _c(\"br\"),\n                ]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"最终计算的 Authorization header\")]),\n                _c(\"td\", [\n                  _vm._v(\n                    \"Authorization:\\n                abcde::5a13e56353da7954a96605c7f21f0f14a26a49baf387f95e600cdbdd7f0dc604\"\n                  ),\n                ]),\n              ]),\n            ]),\n          ]),\n          _c(\"h5\", [\n            _c(\n              \"a\",\n              {\n                staticClass: \"anchor\",\n                attrs: {\n                  href: \"#post-请求\",\n                  id: \"post-请求\",\n                  name: \"post-请求\",\n                },\n              },\n              [\n                _c(\"span\", { staticClass: \"octicon octicon-link\" }),\n                _vm._v(\"POST 请求：\"),\n              ]\n            ),\n          ]),\n          _c(\"p\", [\n            _c(\"em\", [\n              _vm._v(\"POST /api/system/DataInterface/{id}/Actions/Response\"),\n              _c(\"br\"),\n              _vm._v(\"\\n            Host : localhost:30000\"),\n              _c(\"br\"),\n              _vm._v(\"\\n            YmDate : 1656404771000\"),\n              _c(\"br\"),\n              _vm._v(\"\\n            UserKey : xxxxxxx\"),\n              _c(\"br\"),\n              _vm._v(\n                '\\n            body参数json格式如：{\"tenantId\":\"123\",\"name\":\"abc\"}'\n              ),\n            ]),\n          ]),\n          _c(\"p\", [_vm._v(\"按照规则生成的待签名字符串如下：\")]),\n          _c(\"table\", { staticClass: \"table table-bordered\" }, [\n            _c(\"thead\", [_c(\"tr\", [_c(\"th\", [_vm._v(\"签名结果\")]), _c(\"th\")])]),\n            _c(\"tbody\", [\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"待签名字段名\")]),\n                _c(\"td\", [_vm._v(\"待签名字段值\")]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"Http Method\")]),\n                _c(\"td\", [_vm._v(\"POST\")]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"URL Path\")]),\n                _c(\"td\", [\n                  _vm._v(\"/api/system/DataInterface/{id}/Actions/Response\"),\n                ]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"YmDate\")]),\n                _c(\"td\", [_vm._v(\"1656404771000\")]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"UserKey\")]),\n                _c(\"td\", [_vm._v(\"xxxxxxx\")]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"Host\")]),\n                _c(\"td\", [_vm._v(\"localhost:30000\")]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"最终待签名字符串\")]),\n                _c(\"td\", [\n                  _vm._v(\"以下 \\\\n 表明换行\"),\n                  _c(\"br\"),\n                  _vm._v(\"POST\\\\n\"),\n                  _c(\"br\"),\n                  _vm._v(\"/hmac/testPost\\\\n\"),\n                  _c(\"br\"),\n                  _vm._v(\"1656404771000\\\\n\\n                \"),\n                  _c(\"br\"),\n                  _vm._v(\"localhost:30000\\\\n\"),\n                  _c(\"br\"),\n                ]),\n              ]),\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(\"最终计算的 Authorization header\")]),\n                _c(\"td\", [\n                  _vm._v(\n                    \"Authorization :\\n                abcde::7af664ac15b675633bc13a3ab03adc2d0c6e3834999785698e5830ae215a8545\"\n                  ),\n                ]),\n              ]),\n            ]),\n          ]),\n          _c(\"h4\", [\n            _c(\n              \"a\",\n              {\n                staticClass: \"anchor\",\n                attrs: {\n                  href: \"#javaversion\",\n                  id: \"javaversion\",\n                  name: \"javaversion\",\n                },\n              },\n              [\n                _c(\"span\", { staticClass: \"octicon octicon-link\" }),\n                _vm._v(\"(java版)生成待签名字符串及Authorization代码示例:\"),\n              ]\n            ),\n          ]),\n          _c(\"pre\", { staticClass: \" language-java\" }, [\n            _c(\"code\", { staticClass: \" language-java\" }, [\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"import\")]),\n              _vm._v(\" org\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"apache\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"commons\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"codec\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"binary\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"Base64\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"import\")]),\n              _vm._v(\" org\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"apache\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"commons\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"codec\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"binary\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"Hex\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"import\")]),\n              _vm._v(\" javax\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"crypto\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"Mac\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"import\")]),\n              _vm._v(\" javax\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"crypto\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"spec\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"SecretKeySpec\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"import\")]),\n              _vm._v(\" java\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"io\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"UnsupportedEncodingException\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"import\")]),\n              _vm._v(\" java\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"security\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"InvalidKeyException\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"import\")]),\n              _vm._v(\" java\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"security\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"NoSuchAlgorithmException\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n\\n\"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"public\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"class\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token class-name\" }, [\n                _vm._v(\"EncryDemo\"),\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"{\")]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"public\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"static\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"void\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"main\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _vm._v(\"String\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"[\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"]\")]),\n              _vm._v(\" args\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"throws\")]),\n              _vm._v(\" NoSuchAlgorithmException\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\",\")]),\n              _vm._v(\" InvalidKeyException\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\",\")]),\n              _vm._v(\" UnsupportedEncodingException \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"{\")]),\n              _vm._v(\"\\n        String secret \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token string\" }, [\n                _vm._v('\"xxxxxxxxxxxxxxxxyyyyyyyyyyyyyyyy\"'),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String algorithmForMac \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token string\" }, [\n                _vm._v('\"HmacSHA256\"'),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String method \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token string\" }, [_vm._v('\"POST\"')]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String urlPath \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token string\" }, [\n                _vm._v('\"/api/system/DataInterface/{id}/Actions/Response\"'),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String YmDate \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token string\" }, [\n                _vm._v('\"1656404771000\"'),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String host \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token string\" }, [\n                _vm._v('\"localhost:30000\"'),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String source \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"new\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token class-name\" }, [\n                _vm._v(\"StringBuilder()\"),\n              ]),\n              _vm._v(\"\\n                      \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"append\")]),\n              _vm._v(\"(method)\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"append\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _c(\"span\", { staticClass: \"token string\" }, [_vm._v(\"'\\\\n'\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _vm._v(\"\\n                      \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"append\")]),\n              _vm._v(\"(url)\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"append\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _c(\"span\", { staticClass: \"token string\" }, [_vm._v(\"'\\\\n'\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _vm._v(\"\\n                      \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"append\")]),\n              _vm._v(\"(ymdate)\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"append\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _c(\"span\", { staticClass: \"token string\" }, [_vm._v(\"'\\\\n'\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _vm._v(\"\\n                      \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"append\")]),\n              _vm._v(\"(host)\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"append\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _c(\"span\", { staticClass: \"token string\" }, [_vm._v(\"'\\\\n'\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [\n                _vm._v(\".toString();\"),\n              ]),\n              _vm._v(\"\\n        Mac mac \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" Mac\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"getInstance\"),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _vm._v(\"algorithmForMac\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        SecretKeySpec secretKeySpec \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"new\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token class-name\" }, [\n                _vm._v(\"SecretKeySpec\"),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _vm._v(\"Base64\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"decodeBase64\"),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _vm._v(\"secret\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\",\")]),\n              _vm._v(\" algorithmForMac\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        mac\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"init\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _vm._v(\"secretKeySpec\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String signature \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" Hex\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"encodeHexString\"),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _vm._v(\"mac\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"doFinal\"),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _vm._v(\"source\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"getBytes\"),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _c(\"span\", { staticClass: \"token string\" }, [_vm._v('\"utf-8\"')]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        System\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _vm._v(\"out\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"println\"),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _vm._v(\"signature\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"}\")]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"}\")]),\n              _vm._v(\"\\n\"),\n            ]),\n          ]),\n          _c(\"h4\", [\n            _c(\n              \"a\",\n              {\n                staticClass: \"anchor\",\n                attrs: {\n                  href: \"#.netversion\",\n                  id: \".netversion\",\n                  name: \".netversion\",\n                },\n              },\n              [\n                _c(\"span\", { staticClass: \"octicon octicon-link\" }),\n                _vm._v(\"(.net版)生成待签名字符串及Authorization代码示例:\"),\n              ]\n            ),\n          ]),\n          _c(\"pre\", { staticClass: \" language-java\" }, [\n            _c(\"code\", { staticClass: \" language-java\" }, [\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"using\")]),\n              _c(\"span\", [_vm._v(\" System.Security.Cryptography;\")]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"using\")]),\n              _c(\"span\", [_vm._v(\" System.Text;\")]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"using\")]),\n              _c(\"span\", [_vm._v(\" JNPF.Common.Extension;\")]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [\n                _vm._v(\"namespace JNPF.Systems.System\"),\n              ]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"{\")]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [\n                _vm._v(\" internal class Class1\"),\n              ]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"{\")]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [\n                _vm._v(\" static void Main(string[] args)\"),\n              ]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"{\")]),\n              _vm._v(\"\\n        String secret \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token string\" }, [\n                _vm._v('\"xxxxxxxxxxxxxxxxyyyyyyyyyyyyyyyy\"'),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String method \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token string\" }, [_vm._v('\"POST\"')]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String urlPath \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token string\" }, [\n                _vm._v('\"/api/system/DataInterface/{id}/Actions/Response\"'),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String YmDate \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token string\" }, [\n                _vm._v('\"1656404771000\"'),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String host \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token string\" }, [\n                _vm._v('\"localhost:30000\"'),\n              ]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\";\")]),\n              _vm._v(\"\\n        String source \"),\n              _c(\"span\", { staticClass: \"token operator\" }, [_vm._v(\"=\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"new\")]),\n              _vm._v(\" \"),\n              _c(\"span\", { staticClass: \"token class-name\" }, [\n                _vm._v(\"StringBuilder()\"),\n              ]),\n              _vm._v(\"\\n                      \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"Append\")]),\n              _vm._v(\"(method)\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"Append\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _c(\"span\", { staticClass: \"token string\" }, [_vm._v(\"'\\\\n'\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _vm._v(\"\\n                      \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"Append\")]),\n              _vm._v(\"(url)\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"Append\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _c(\"span\", { staticClass: \"token string\" }, [_vm._v(\"'\\\\n'\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _vm._v(\"\\n                      \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"Append\")]),\n              _vm._v(\"(ymdate)\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"Append\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _c(\"span\", { staticClass: \"token string\" }, [_vm._v(\"'\\\\n'\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _vm._v(\"\\n                      \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"Append\")]),\n              _vm._v(\"(host)\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\".\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [_vm._v(\"Append\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"(\")]),\n              _c(\"span\", { staticClass: \"token string\" }, [_vm._v(\"'\\\\n'\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\")\")]),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [\n                _vm._v(\".ToString();\"),\n              ]),\n              _vm._v(\"\\n        \"),\n              _c(\"span\", [_vm._v(\"using (var hmac = \")]),\n              _c(\"span\", { staticClass: \"token keyword\" }, [_vm._v(\"new\")]),\n              _c(\"span\", [_vm._v(\" HMACSHA256(secret.\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"ToBytes\"),\n              ]),\n              _c(\"span\", [_vm._v(\"(Encoding.UTF8)))\")]),\n              _vm._v(\"\\n        \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"{\")]),\n              _vm._v(\"\\n          \"),\n              _c(\"span\", [_vm._v(\"byte[] hashmessage = hmac.\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"ComputeHash\"),\n              ]),\n              _c(\"span\", [_vm._v(\"(source.\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"ToBytes\"),\n              ]),\n              _c(\"span\", [_vm._v(\"(Encoding.UTF8));\")]),\n              _vm._v(\"\\n          \"),\n              _c(\"span\", [_vm._v(\"var signature = hashmessage.\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"ToHexString\"),\n              ]),\n              _c(\"span\", [_vm._v(\"();\")]),\n              _vm._v(\"\\n          \"),\n              _c(\"span\", [_vm._v(\"Console.\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"WriteLine\"),\n              ]),\n              _c(\"span\", [_vm._v(\"(signature);\")]),\n              _vm._v(\"\\n          \"),\n              _c(\"span\", [_vm._v(\"Console.\")]),\n              _c(\"span\", { staticClass: \"token function\" }, [\n                _vm._v(\"ReadKey\"),\n              ]),\n              _c(\"span\", [_vm._v(\"();\")]),\n              _vm._v(\"\\n        \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"}\")]),\n              _vm._v(\"\\n      \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"}\")]),\n              _vm._v(\"\\n    \"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"}\")]),\n              _vm._v(\"\\n\"),\n              _c(\"span\", { staticClass: \"token punctuation\" }, [_vm._v(\"}\")]),\n              _vm._v(\"\\n\"),\n            ]),\n          ]),\n        ]),\n      ]),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}