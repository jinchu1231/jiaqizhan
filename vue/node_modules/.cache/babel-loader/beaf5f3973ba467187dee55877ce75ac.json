{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/onlineDev/integrate/log/Detail.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/onlineDev/integrate/log/Detail.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _integrate = require(\"@/api/onlineDev/integrate\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'LogDetail',\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  data: function data() {\n    return {\n      list: [],\n      activeKey: 1,\n      activeItem: {},\n      visible: false,\n      msgInfo: '',\n      id: '',\n      listLoading: false,\n      redoNodesLoading: false,\n      activeIndex: 0\n    };\n  },\n  computed: {\n    getTextareaValue: function getTextareaValue() {\n      return this.activeKey === 1 ? this.msgInfo : this.activeItem.errorMsg;\n    }\n  },\n  methods: {\n    openDialog: function openDialog(id) {\n      this.visible = true;\n      this.id = id || '';\n      this.isInit = false;\n      this.activeKey = 1;\n      this.initData(true);\n    },\n    handleClick: function handleClick(item, index) {\n      this.activeItem = item;\n      this.activeIndex = index;\n      this.activeKey = 1;\n    },\n    handleUpdateNodes: function handleUpdateNodes() {\n      this.$emit('updateNodes');\n    },\n    handleRedoNodes: function handleRedoNodes() {\n      var _this = this;\n      this.$confirm('确定将本节点进行重试?', this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(function () {\n        var query = {\n          id: _this.id,\n          nodeId: _this.activeItem.id\n        };\n        _this.redoNodesLoading = true;\n        (0, _integrate.nodeRetryTask)(query).then(function (res) {\n          _this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: function onClose() {\n              _this.initData();\n              _this.redoNodesLoading = false;\n            }\n          });\n        });\n      }).catch(function () {\n        _this.redoNodesLoading = false;\n      });\n    },\n    initData: function initData(isInit) {\n      var _this2 = this;\n      this.listLoading = true;\n      (0, _integrate.getTaskInfo)(this.id).then(function (res) {\n        _this2.msgInfo = res.data.data;\n        _this2.list = res.data.list || [];\n        if (_this2.list.length) _this2.activeItem = _this2.list[isInit ? 0 : _this2.activeIndex];\n        _this2.listLoading = false;\n      }).catch();\n    }\n  }\n};",null]}