{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/printDev/log.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/printDev/log.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {},\n  props: {},\n  data: function data() {\n    return {\n      pickerOptions: {\n        shortcuts: [{\n          text: \"最近一周\",\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit(\"pick\", [start, end]);\n          }\n        }, {\n          text: \"最近一个月\",\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit(\"pick\", [start, end]);\n          }\n        }, {\n          text: \"最近三个月\",\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit(\"pick\", [start, end]);\n          }\n        }]\n      },\n      list: [],\n      pagination: {\n        total: 0,\n        currentPage: 1,\n        pageSize: 20\n      },\n      loading: false,\n      listLoading: true,\n      title: \"\",\n      printTimeRange: [],\n      query: {\n        keyword: \"\",\n        printId: \"\",\n        startTime: undefined,\n        endTime: undefined,\n        currentPage: 0,\n        pageSize: 20\n      }\n    };\n  },\n  methods: {\n    show: function show(row) {\n      this.title = row.fullName;\n      this.rowId = row.id;\n      this.initData();\n      this.loading = false;\n    },\n    initData: function initData() {\n      var _this = this;\n      this.listLoading = true;\n      if (this.printTimeRange && this.printTimeRange.length > 0) {\n        this.query.startTime = +this.printTimeRange[0];\n        this.query.endTime = +this.printTimeRange[1];\n      } else {\n        this.query.startTime = '';\n        this.query.endTime = '';\n      }\n      var url = \"/api/system/printLog/\".concat(this.rowId);\n      (0, _request.default)({\n        url: url,\n        method: \"get\",\n        data: this.query\n      }).then(function (res) {\n        _this.list = res.data.list;\n        _this.pagination = res.data.pagination;\n        _this.listLoading = false;\n      });\n    },\n    reset: function reset() {\n      this.query.keyword = \"\";\n      this.printTimeRange = [];\n      this.query.startTime = undefined;\n      this.query.endTime = undefined;\n      this.initData();\n    },\n    goBack: function goBack() {\n      this.$emit(\"goBack\");\n    }\n  },\n  computed: {},\n  created: function created() {},\n  mounted: function mounted() {}\n};",null]}