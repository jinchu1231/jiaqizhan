{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/JNPF-table/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/JNPF-table/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _Column = _interopRequireDefault(require(\"./Column\"));\nvar _ColumnSettings = _interopRequireDefault(require(\"./ColumnSettings\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = exports.default = {\n  name: 'JNPF-table',\n  components: {\n    JnpfTableColumn: _Column.default,\n    ColumnSettings: _ColumnSettings.default\n  },\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    // 序号 默认有\n    hasNO: {\n      type: Boolean,\n      default: true\n    },\n    hasNOFixed: {\n      type: Boolean,\n      default: false\n    },\n    // 多选框 默认无\n    hasC: {\n      type: Boolean,\n      default: false\n    },\n    border: {\n      type: Boolean,\n      default: false\n    },\n    customColumn: {\n      type: Boolean,\n      default: false\n    },\n    height: {\n      default: '100%'\n    }\n  },\n  data: function data() {\n    return {\n      columnList: [],\n      hasSlotContent: false,\n      columns: [],\n      defaultColumns: [],\n      drawerVisible: false,\n      refreshTable: false\n    };\n  },\n  watch: {\n    data: {\n      handler: function handler(val) {\n        if (!val) return;\n        this.doLayout();\n      },\n      deep: true\n    }\n  },\n  computed: {\n    menuId: function menuId() {\n      return this.$route.meta.modelId || '';\n    }\n  },\n  mounted: function mounted() {\n    this.getColumns();\n  },\n  beforeUpdate: function beforeUpdate() {\n    this.getColumns();\n  },\n  updated: function updated() {\n    if (this.refreshTable) this.refreshTable = false;\n  },\n  methods: {\n    showDrawer: function showDrawer() {\n      var _this = this;\n      this.drawerVisible = true;\n      this.$nextTick(function () {\n        _this.$refs.columnSettings.init(_this.columnList, _this.columns);\n      });\n    },\n    checkForSlotContent: function checkForSlotContent() {\n      var checkForContent = function checkForContent(hasContent, node) {\n        return hasContent || node.tag || node.text && node.text.trim();\n      };\n      return this.$slots && this.$slots.default && this.$slots.default.reduce(checkForContent, false);\n    },\n    getColumns: function getColumns() {\n      if (!this.customColumn) return;\n      this.hasSlotContent = this.checkForSlotContent();\n      if (!this.hasSlotContent) return;\n      this.columns = this.$slots.default;\n      var defaultColumns = this.columns.map(function (o) {\n        return o.componentOptions && o.componentOptions.propsData;\n      }).filter(function (item) {\n        return item;\n      });\n      this.defaultColumns = defaultColumns.filter(function (o) {\n        return o.prop;\n      });\n      var list = (0, _toConsumableArray2.default)(this.defaultColumns);\n      var cacheList = this.jnpf.storageGet(this.menuId);\n      if (!cacheList) {\n        this.columnList = list.map(function (item) {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            columnVisible: true\n          });\n        });\n      } else {\n        var columnList = cacheList.map(function (item) {\n          var isShow = false;\n          list.forEach(function (item2) {\n            if (item.prop === item2.prop) isShow = true;\n          });\n          return isShow ? item : null;\n        }).filter(function (item) {\n          return item;\n        });\n        this.columnList = this.mergeArray(columnList, list);\n      }\n    },\n    mergeArray: function mergeArray(arr1, arr2) {\n      var arr = (0, _toConsumableArray2.default)(arr1);\n      for (var i = 0; i < arr2.length; i++) {\n        var flag = true;\n        inner: for (var j = 0; j < arr1.length; j++) {\n          if (arr2[i].prop == arr1[j].prop) {\n            flag = false;\n            break inner;\n          }\n        }\n        if (flag) arr.push(arr2[i]);\n      }\n      return arr;\n    },\n    doLayout: function doLayout() {\n      var _this2 = this;\n      setTimeout(function () {\n        _this2.$nextTick(function () {\n          _this2.$refs && _this2.$refs.JNPFTable && _this2.$refs.JNPFTable.doLayout();\n        });\n      }, 50);\n    },\n    setColumn: function setColumn(list) {\n      // this.loading = true\n      this.jnpf.storageSet((0, _defineProperty2.default)({}, this.menuId, list));\n      this.columnList = list;\n      this.$forceUpdate();\n      this.refreshTable = true;\n    },\n    checkSelectable: function checkSelectable(row) {\n      if (row.top) return false;\n      return true;\n    }\n  }\n};",null]}