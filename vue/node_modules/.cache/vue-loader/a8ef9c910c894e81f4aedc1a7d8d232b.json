{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/components/ApproveDialog.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/components/ApproveDialog.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SignImgDialog from '@/components/SignImgDialog'\nimport { mapGetters } from \"vuex\"\nimport CandidateUserSelect from './CandidateUserSelect'\nimport CommonWordsDialog from './CommonWordsDialog'\nexport default {\n  components: { SignImgDialog, CandidateUserSelect, CommonWordsDialog },\n  data() {\n    return {\n      visible: false,\n      branchList: [],\n      dataForm: {\n        branchList: [],\n        candidateList: [],\n        handleOpinion: '',\n        fileList: [],\n        rejectStep: '',\n        rejectType: 1\n      },\n      copyIds: [],\n      signVisible: false,\n      freeApproverUserId: '',\n      signImg: '',\n      btnLoading: false,\n      properties: {},\n      eventType: '',\n      taskId: '',\n      formData: {\n        flowId: '',\n        data: '{}'\n      },\n      showReject: false,\n      rejectList: [],\n      commonWordsVisible: false,\n    }\n  },\n  computed: {\n    ...mapGetters(['userInfo'])\n  },\n  methods: {\n    init(properties, taskId, eventType, branchList, candidateList, flowId) {\n      this.visible = true\n      this.properties = properties\n      this.taskId = taskId\n      this.eventType = eventType || ''\n      this.branchList = branchList || []\n      this.dataForm.candidateList = candidateList || []\n      this.dataForm.branchList = []\n      this.dataForm.handleOpinion = ''\n      this.formData.flowId = flowId\n      this.dataForm.rejectType = this.properties.rejectType == 3 ? 1 : this.properties.rejectType\n      this.copyIds = []\n      this.signImg = \"\"\n      if (this.properties && this.properties.hasSign) this.signImg = this.userInfo.signImg\n      this.freeApproverUserId = ''\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n      })\n      this.showReject = properties.showReject\n      this.rejectList = properties.rejectList\n      this.dataForm.rejectStep = properties.nodeCode\n    },\n    onBranchChange(val) {\n      const defaultList = this.dataForm.candidateList.filter(o => o.isDefault)\n      if (!val.length) return this.dataForm.candidateList = defaultList\n      let list = []\n      for (let i = 0; i < val.length; i++) {\n        inner: for (let j = 0; j < this.branchList.length; j++) {\n          let o = this.branchList[j]\n          if (val[i] === o.nodeId && o.isCandidates) {\n            list.push({\n              ...o,\n              label: '审批人',\n              value: [],\n              rules: [{ required: true, message: `审批人不能为空`, trigger: 'click' }]\n            })\n            break inner\n          }\n        }\n      }\n      this.dataForm.candidateList = [...defaultList, ...list]\n    },\n    handleApproval() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          if (this.properties.hasSign && !this.signImg) {\n            this.$message({\n              message: '请签名',\n              type: 'error'\n            })\n            return\n          }\n          let query = {\n            handleOpinion: this.dataForm.handleOpinion,\n            signImg: this.signImg,\n            copyIds: this.copyIds.join(','),\n            branchList: this.dataForm.branchList,\n            fileList: this.dataForm.fileList,\n            rejectType: this.dataForm.rejectType\n          }\n          if (this.eventType === 'reject') query.rejectStep = this.dataForm.rejectStep\n          if (this.dataForm.candidateList.length) {\n            let candidateList = {}\n            for (let i = 0; i < this.dataForm.candidateList.length; i++) {\n              candidateList[this.dataForm.candidateList[i].nodeId] = this.dataForm.candidateList[i].value\n            }\n            query.candidateList = candidateList\n          }\n          if (this.eventType === 'audit' && this.properties.hasFreeApprover) {\n            query = { freeApproverUserId: this.freeApproverUserId, ...query }\n          }\n          this.btnLoading = true\n          this.$emit('submit', query)\n        }\n      })\n    },\n    common(val) {\n      this.commonWordsVisible = false\n      if (val) {\n        this.dataForm.handleOpinion += val.commonWordsText\n      }\n    },\n    addSign() {\n      this.signVisible = true\n      this.$nextTick(() => {\n        this.$refs.SignImg.init()\n      })\n    },\n    signDialog(val) {\n      this.signVisible = false\n      if (val) {\n        this.signImg = val\n      }\n    },\n    closeDialog() {\n      this.btnLoading = false\n      this.visible = false\n    },\n    beforeClose() {\n      this.visible = false\n      this.$refs.commonWordsDialog.close()\n    },\n  }\n}\n",null]}