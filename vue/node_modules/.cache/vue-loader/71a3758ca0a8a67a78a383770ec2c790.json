{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/role/userRelation.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/role/userRelation.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getUserRelationList, createUserRelation } from '@/api/permission/userRelation'\nimport { getUserInfoList, getUsersByRoleId, getUsersByRoleOrgId } from '@/api/permission/user'\n\nexport default {\n  data() {\n    return {\n      visible: false,\n      btnLoading: false,\n      allLoading: false,\n      pageTitle: '',\n      dataForm: {\n        objectId: '',\n        objectType: 'Role',\n        userIds: []\n      },\n      selectedData: [],\n      treeData: [],\n      nodeId: '0',\n      props: {\n        children: 'children',\n        label: 'fullName',\n        isLeaf: 'isLeaf'\n      },\n      keyword: '',\n      loading: true\n    }\n  },\n  watch: {\n    visible(val) {\n      if (val) return\n      this.$emit('closeDialog')\n    }\n  },\n  methods: {\n    init(id, fullName) {\n      this.visible = true\n      this.dataForm.objectId = id\n      this.dataForm.userIds = []\n      this.selectedData = []\n      this.$nextTick(() => {\n        this.pageTitle = this.$t(`role.roleMember`) + ' - ' + fullName\n        this.allLoading = true\n        this.initData()\n        getUserRelationList(this.dataForm.objectId).then(res => {\n          this.dataForm.userIds = res.data.ids\n          this.getSelectList()\n        })\n      })\n    },\n    getSelectList() {\n      if (!this.dataForm.userIds.length) return this.allLoading = false\n      getUserInfoList(this.dataForm.userIds).then(res => {\n        this.selectedData = res.data.list\n        this.allLoading = false\n      })\n    },\n    search() {\n      this.nodeId = '0'\n      this.initData()\n    },\n    initData() {\n      this.loading = true\n      if (this.keyword) this.nodeId = '0'\n      const query = {\n        keyword: this.keyword,\n        organizeId: this.nodeId,\n        roleId: this.dataForm.objectId\n      }\n      getUsersByRoleOrgId(query).then(res => {\n        this.treeData = res.data\n        this.loading = false\n      })\n    },\n    loadNode(node, resolve) {\n      if (node.level === 0) {\n        this.nodeId = '0'\n        return resolve(this.treeData)\n      }\n      this.nodeId = node.data.id\n      const query = {\n        keyword: this.keyword,\n        organizeId: this.nodeId,\n        roleId: this.dataForm.objectId\n      }\n      getUsersByRoleOrgId(query).then(res => {\n        resolve(res.data)\n      })\n    },\n    handleNodeClick(data) {\n      if (data.type !== 'user') return\n      const boo = this.selectedData.some(o => o.id === data.id)\n      if (boo) return\n      this.selectedData.push(data)\n    },\n    removeAll() {\n      this.selectedData = []\n    },\n    removeData(index) {\n      this.selectedData.splice(index, 1)\n    },\n    dataFormSubmit() {\n      this.btnLoading = true\n      this.dataForm.userIds = this.selectedData.map(o => o.id)\n      createUserRelation(this.dataForm).then(res => {\n        this.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: () => {\n            this.visible = false\n            this.btnLoading = false\n          }\n        })\n      }).catch(() => {\n        this.btnLoading = false\n      })\n    }\n  }\n}\n",null]}