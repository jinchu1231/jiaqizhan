{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/src/store/modules/user.js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/store/modules/user.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.string.starts-with\");\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es6.regexp.replace\");\nvar _user = require(\"@/api/user\");\nvar _auth = require(\"@/utils/auth\");\nvar _router = require(\"@/router\");\nvar _settings = _interopRequireDefault(require(\"@/settings\"));\nvar _jnpf = _interopRequireDefault(require(\"@/utils/jnpf\"));\nvar _qs = _interopRequireDefault(require(\"qs\"));\nvar _jsMd = _interopRequireDefault(require(\"js-md5\"));\nvar define = require('@/utils/define');\nvar state = {\n  token: (0, _auth.getToken)(),\n  isLock: (0, _auth.getLock)() || 0,\n  isLeaveToast: true,\n  menuList: [],\n  leftMenuList: [],\n  userInfo: {},\n  permissionList: [],\n  loginLoading: false,\n  socket: ''\n};\nvar mutations = {\n  SET_TOAST: function SET_TOAST(state, data) {\n    state.isLeaveToast = data;\n  },\n  SET_SOCKET: function SET_SOCKET(state, socket) {\n    state.socket = socket;\n  },\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_MENULIST: function SET_MENULIST(state, menuList) {\n    state.menuList = menuList;\n  },\n  SET_LEFTMENULIST: function SET_LEFTMENULIST(state, leftMenuList) {\n    state.leftMenuList = leftMenuList;\n  },\n  SET_USERINFO: function SET_USERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  SET_USERINFO_HEADICON: function SET_USERINFO_HEADICON(state, headIcon) {\n    state.userInfo.headIcon = headIcon;\n  },\n  SET_USERINFO_USERNAME: function SET_USERINFO_USERNAME(state, userName) {\n    state.userInfo.userName = userName;\n  },\n  SET_USERINFO_PORTALID: function SET_USERINFO_PORTALID(state, portalId) {\n    state.userInfo.portalId = portalId;\n  },\n  SET_PERMISSION_LIST: function SET_PERMISSION_LIST(state, permissionList) {\n    state.permissionList = permissionList;\n  },\n  SET_LOCK: function SET_LOCK(state, isLock) {\n    state.isLock = isLock;\n  },\n  SET_LOGIN_LOADING: function SET_LOGIN_LOADING(state, loginLoading) {\n    state.loginLoading = loginLoading;\n  },\n  SET_USERINFO_SIGNIMG: function SET_USERINFO_SIGNIMG(state, signImg) {\n    state.userInfo.signImg = signImg;\n  }\n};\nvar actions = {\n  // 锁屏\n  setLock: function setLock(_ref) {\n    var commit = _ref.commit;\n    commit('SET_LOCK', 1);\n    (0, _auth.setLock)(1);\n  },\n  clearLock: function clearLock(_ref2) {\n    var commit = _ref2.commit;\n    commit('SET_LOCK', '');\n    (0, _auth.removeLock)();\n  },\n  unlock: function unlock(_ref3, userInfo) {\n    var dispatch = _ref3.dispatch;\n    var account = userInfo.account,\n      password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      (0, _user.unlock)({\n        account: account.trim(),\n        password: (0, _jsMd.default)(password)\n      }).then(function (response) {\n        dispatch('clearLock');\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user login\n  login: function login(_ref4, userInfo) {\n    var dispatch = _ref4.dispatch;\n    var account = userInfo.account,\n      password = userInfo.password,\n      code = userInfo.code,\n      timestamp = userInfo.timestamp,\n      origin = userInfo.origin,\n      jnpf_ticket = userInfo.jnpf_ticket;\n    return new Promise(function (resolve, reject) {\n      var encryptPassword = _jnpf.default.aesEncryption.encrypt((0, _jsMd.default)(password));\n      (0, _user.login)(_qs.default.stringify({\n        account: account.trim(),\n        password: encryptPassword,\n        jnpf_ticket: jnpf_ticket,\n        origin: origin,\n        code: code,\n        timestamp: timestamp,\n        grant_type: 'password'\n      })).then(function (response) {\n        var data = response.data;\n        dispatch('setToken', data).then(function () {\n          resolve(data);\n        });\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 保存token\n  setToken: function setToken(_ref5, data) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      var layoutList = ['classic', 'functional', 'plain', 'blend'];\n      var layoutType = data.theme && layoutList.indexOf(data.theme) > -1 ? data.theme : 'classic';\n      commit('SET_TOKEN', data.token);\n      commit('settings/CHANGE_SETTING', {\n        key: \"layoutType\",\n        value: layoutType\n      }, {\n        root: true\n      });\n      (0, _auth.setToken)(data.token);\n      resolve(data);\n    });\n  },\n  // 获取用户信息\n  getInfo: function getInfo(_ref6) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _user.getInfo)().then(function (response) {\n        var data = response.data;\n        if (!data) reject('验证失败，请重新登录。');\n        var menuList = data.menuList,\n          userInfo = data.userInfo,\n          permissionList = data.permissionList;\n        if (!menuList.length) {\n          reject('您的权限不足，请联系管理员');\n          return false;\n        }\n        var routerList = [];\n        function setData(list) {\n          var _loop = function _loop() {\n            var e = list[i];\n            var name = e.enCode.replace(/\\./g, '-');\n            e.vueName = name;\n            if (e.type == 0) {\n              if (e.hasChildren && e.children.length) {\n                setData(e.children);\n              }\n            }\n            if (e.type == 1) {\n              e.path = '/' + e.enCode;\n              if (e.hasChildren && e.children.length) {\n                setData(e.children);\n              }\n            }\n            if (e.type == 2) {\n              var path = e.urlAddress;\n              if (path.indexOf(\"?\") > -1) path = path.split(\"?\")[0];\n              e.path = '/' + e.urlAddress;\n              var newObj = {\n                path: '/' + path,\n                component: function component(resolve) {\n                  return require([\"@/views/\".concat(path)], resolve);\n                },\n                name: name,\n                meta: {\n                  title: name,\n                  icon: e.icon,\n                  zhTitle: e.fullName,\n                  modelId: e.id\n                }\n              };\n              routerList.push(newObj);\n            }\n            // 功能、字典、报表、门户\n            if ([3, 4, 5, 8].indexOf(e.type) > -1) {\n              var propertyJson = e.propertyJson ? JSON.parse(e.propertyJson) : null,\n                relationId = '',\n                isTree = 0,\n                componentUrl = '';\n              if (propertyJson) {\n                relationId = propertyJson.moduleId || '';\n                isTree = propertyJson.isTree || 0;\n              }\n              if (e.type == 3) {\n                componentUrl = 'dynamicModel';\n              } else if (e.type == 4) {\n                componentUrl = 'dynamicDictionary';\n              } else if (e.type == 5) {\n                componentUrl = 'dynamicDataReport';\n              } else {\n                componentUrl = 'dynamicPortal';\n              }\n              e.path = '/' + e.urlAddress;\n              var componentName = componentUrl + name;\n              var _newObj = {\n                path: '/' + e.urlAddress,\n                component: _jnpf.default.createCustomComponent(componentName, function (resolve) {\n                  return require([\"@/views/basic/\".concat(componentUrl)], resolve);\n                }),\n                name: componentName,\n                meta: {\n                  title: name,\n                  icon: e.icon,\n                  zhTitle: e.fullName,\n                  modelId: e.id,\n                  relationId: relationId,\n                  isTree: isTree\n                }\n              };\n              routerList.push(_newObj);\n            }\n            // 大屏\n            if (e.type == 6) {\n              var _propertyJson = e.propertyJson ? JSON.parse(e.propertyJson) : null,\n                moduleId = '';\n              if (_propertyJson) moduleId = _propertyJson.moduleId || '';\n              e.path = \"\".concat(define.dataV, \"/view/\").concat(moduleId, \"?token=\").concat((0, _auth.getToken)());\n            }\n            // 外链\n            if (e.type == 7) {\n              var _path = e.urlAddress.replace(/\\${dataV}/g, define.dataV).replace(/\\${jnpfToken}/g, (0, _auth.getToken)());\n              if (e.linkTarget === \"_self\") {\n                e.path = '/' + e.enCode;\n                var _newObj2 = {\n                  path: '/' + e.enCode,\n                  component: function component(resolve) {\n                    return require([\"@/views/basic/externalLink\"], resolve);\n                  },\n                  name: e.enCode,\n                  meta: {\n                    title: name,\n                    icon: e.icon,\n                    zhTitle: e.fullName,\n                    modelId: e.id,\n                    urlAddress: _path\n                  }\n                };\n                routerList.push(_newObj2);\n              } else {\n                e.path = _path;\n                if (_path.startsWith(\"/\")) {\n                  e.path = location.origin + _path;\n                }\n              }\n            }\n          };\n          for (var i = 0; i < list.length; i++) {\n            _loop();\n          }\n        }\n        setData(menuList);\n        commit('SET_MENULIST', menuList);\n        commit('SET_USERINFO', userInfo);\n        commit('SET_PERMISSION_LIST', permissionList);\n        var sysConfigInfo = data.sysConfigInfo || _settings.default.sysConfig;\n        commit('settings/CHANGE_SETTING', {\n          key: \"sysConfig\",\n          value: sysConfigInfo\n        }, {\n          root: true\n        });\n        resolve(routerList);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref7) {\n    var dispatch = _ref7.dispatch;\n    return new Promise(function (resolve, reject) {\n      (0, _user.logout)().then(function () {\n        dispatch('resetToken').then(function () {\n          resolve();\n        });\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref8) {\n    var commit = _ref8.commit,\n      state = _ref8.state,\n      dispatch = _ref8.dispatch;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      if (state.socket) {\n        state.socket.close();\n        commit('SET_SOCKET', null);\n      }\n      (0, _router.resetRouter)();\n      // reset visited views and cached views\n      dispatch('tagsView/delAllViews', null, {\n        root: true\n      });\n      commit('SET_MENULIST', []);\n      commit('SET_USERINFO', {});\n      commit('SET_PERMISSION_LIST', []);\n      commit('SET_LOGIN_LOADING', false);\n      commit('generator/SET_COMPANY_TREE', [], {\n        root: true\n      });\n      commit('generator/SET_DEP_TREE', [], {\n        root: true\n      });\n      commit('base/SET_DICTIONARY_LIST', [], {\n        root: true\n      });\n      (0, _auth.removeToken)();\n      resolve();\n    });\n  }\n};\nvar _default = exports.default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}