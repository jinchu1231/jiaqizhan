{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/menu/Form.vue?vue&type=template&id=4af669ce&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/menu/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      staticClass: \"JNPF-dialog JNPF-dialog_center\",\n      attrs: {\n        title: !_vm.dataForm.id ? \"新建\" : \"编辑\",\n        \"close-on-click-modal\": false,\n        \"close-on-press-escape\": false,\n        visible: _vm.visible,\n        \"lock-scroll\": \"\",\n        width: \"600px\",\n      },\n      on: {\n        \"update:visible\": function ($event) {\n          _vm.visible = $event\n        },\n      },\n    },\n    [\n      _c(\n        \"el-form\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.formLoading,\n              expression: \"formLoading\",\n            },\n          ],\n          ref: \"dataForm\",\n          staticClass: \"menuForm\",\n          attrs: {\n            model: _vm.dataForm,\n            rules: _vm.dataRule,\n            \"label-width\": \"100px\",\n          },\n        },\n        [\n          _c(\n            \"jnpf-form-tip-item\",\n            { attrs: { label: \"名称\", prop: \"fullName\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"输入名称\" },\n                model: {\n                  value: _vm.dataForm.fullName,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"fullName\", $$v)\n                  },\n                  expression: \"dataForm.fullName\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"jnpf-form-tip-item\",\n            { attrs: { label: \"编码\", prop: \"enCode\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"输入编码\" },\n                on: { change: _vm.getSelfUrl },\n                model: {\n                  value: _vm.dataForm.enCode,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"enCode\", $$v)\n                  },\n                  expression: \"dataForm.enCode\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"jnpf-form-tip-item\",\n            { attrs: { label: \"图标\", prop: \"icon\" } },\n            [\n              _c(\n                \"el-row\",\n                { attrs: { type: \"flex\" } },\n                [\n                  _c(\n                    \"div\",\n                    { staticStyle: { flex: \"1\", \"margin-right\": \"10px\" } },\n                    [\n                      _c(\n                        \"el-input\",\n                        {\n                          attrs: {\n                            placeholder: \"请选择图标\",\n                            readonly: \"\",\n                            \"suffix-icon\": _vm.dataForm.icon,\n                          },\n                          model: {\n                            value: _vm.dataForm.icon,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.dataForm, \"icon\", $$v)\n                            },\n                            expression: \"dataForm.icon\",\n                          },\n                        },\n                        [\n                          _c(\n                            \"el-button\",\n                            {\n                              attrs: { slot: \"append\" },\n                              on: { click: _vm.openIconBox },\n                              slot: \"append\",\n                            },\n                            [_vm._v(\"选择\")]\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\"el-color-picker\", {\n                    attrs: {\n                      predefine: [\n                        \"#188ae2\",\n                        \"#35b8e0\",\n                        \"#26bf8c\",\n                        \"#f9c851\",\n                        \"#ff5b5b\",\n                        \"#5b69bc\",\n                        \"#ff8acc\",\n                        \"#3b3e47\",\n                        \"#282828\",\n                      ],\n                    },\n                    model: {\n                      value: _vm.dataForm.propertyJson.iconBackgroundColor,\n                      callback: function ($$v) {\n                        _vm.$set(\n                          _vm.dataForm.propertyJson,\n                          \"iconBackgroundColor\",\n                          $$v\n                        )\n                      },\n                      expression: \"dataForm.propertyJson.iconBackgroundColor\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"jnpf-form-tip-item\",\n            {\n              attrs: {\n                label: \"访问地址\",\n                \"tip-label\": \"仅支持PC端访问，APP端不支持。\",\n              },\n            },\n            [\n              _c(\n                \"el-row\",\n                { attrs: { type: \"flex\" } },\n                [\n                  _c(\n                    \"div\",\n                    { staticStyle: { flex: \"1\", \"margin-right\": \"10px\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"访问地址\", readonly: \"\" },\n                        model: {\n                          value: _vm.selfUrl,\n                          callback: function ($$v) {\n                            _vm.selfUrl = $$v\n                          },\n                          expression: \"selfUrl\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-button-group\",\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          on: {\n                            click: function ($event) {\n                              return _vm.openWindow(_vm.selfUrl)\n                            },\n                          },\n                        },\n                        [_vm._v(\"打开\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: {\n                            click: function ($event) {\n                              return _vm.handleCopy(_vm.selfUrl, $event)\n                            },\n                          },\n                        },\n                        [_vm._v(\"复制\")]\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\"jnpf-form-tip-item\", { attrs: { label: \"导航图标\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"img-list\" },\n              [\n                _c(\"single-img\", {\n                  attrs: { tip: \"文字图标\", \"sub-tip\": \"210 × 60 px\" },\n                  model: {\n                    value: _vm.dataForm.navigationIcon,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.dataForm, \"navigationIcon\", $$v)\n                    },\n                    expression: \"dataForm.navigationIcon\",\n                  },\n                }),\n                _c(\"single-img\", {\n                  attrs: { tip: \"Logo图标\", \"sub-tip\": \"60 × 60 px\" },\n                  model: {\n                    value: _vm.dataForm.workLogoIcon,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.dataForm, \"workLogoIcon\", $$v)\n                    },\n                    expression: \"dataForm.workLogoIcon\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _c(\n            \"jnpf-form-tip-item\",\n            {\n              attrs: {\n                label: \"协同办公\",\n                \"tip-label\": \"关闭后该应用下不显示协同办公模块内容\",\n                prop: \"workflowEnabled\",\n              },\n            },\n            [\n              _c(\"el-switch\", {\n                attrs: { \"active-value\": 1, \"inactive-value\": 0 },\n                model: {\n                  value: _vm.dataForm.workflowEnabled,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"workflowEnabled\", $$v)\n                  },\n                  expression: \"dataForm.workflowEnabled\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"jnpf-form-tip-item\",\n            { attrs: { label: \"排序\", prop: \"sortCode\" } },\n            [\n              _c(\"el-input-number\", {\n                attrs: { min: 0, max: 999999, \"controls-position\": \"right\" },\n                model: {\n                  value: _vm.dataForm.sortCode,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"sortCode\", $$v)\n                  },\n                  expression: \"dataForm.sortCode\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"jnpf-form-tip-item\",\n            { attrs: { label: \"状态\", prop: \"enabledMark\" } },\n            [\n              _c(\"el-switch\", {\n                attrs: { \"active-value\": 1, \"inactive-value\": 0 },\n                model: {\n                  value: _vm.dataForm.enabledMark,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"enabledMark\", $$v)\n                  },\n                  expression: \"dataForm.enabledMark\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"jnpf-form-tip-item\",\n            { attrs: { label: \"说明\", prop: \"bodyText\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"textarea\", rows: 4 },\n                model: {\n                  value: _vm.dataForm.description,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"description\", $$v)\n                  },\n                  expression: \"dataForm.description\",\n                },\n              }),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"span\",\n        {\n          staticClass: \"dialog-footer\",\n          attrs: { slot: \"footer\" },\n          slot: \"footer\",\n        },\n        [\n          _c(\n            \"el-button\",\n            {\n              on: {\n                click: function ($event) {\n                  _vm.visible = false\n                },\n              },\n            },\n            [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"primary\", loading: _vm.btnLoading },\n              on: {\n                click: function ($event) {\n                  return _vm.dataFormSubmit()\n                },\n              },\n            },\n            [_vm._v(\"\\n      \" + _vm._s(_vm.$t(\"common.confirmButton\")))]\n          ),\n        ],\n        1\n      ),\n      _c(\"icon-box\", {\n        ref: \"iconBox\",\n        attrs: { visible: _vm.iconBoxVisible, current: _vm.dataForm.icon },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.iconBoxVisible = $event\n          },\n          choiceIcon: _vm.choiceIcon,\n        },\n      }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}