{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/login/index.vue?vue&type=template&id=37dfd6fc&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/login/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"login-container\" },\n    [\n      _vm.sysConfig && _vm.sysConfig.sysVersion\n        ? _c(\"div\", { staticClass: \"login-version\" }, [\n            _c(\"p\", { staticClass: \"login-version-text\" }, [\n              _vm._v(_vm._s(_vm.sysConfig.sysVersion)),\n            ]),\n          ])\n        : _vm._e(),\n      _c(\"div\", { staticClass: \"login-left\" }, [\n        _vm._m(0),\n        _c(\"img\", {\n          staticClass: \"login-banner\",\n          attrs: { src: require(\"@/assets/images/login-banner.png\"), alt: \"\" },\n        }),\n        _vm.showTxt\n          ? _c(\"div\", { staticClass: \"login-left-txt\" }, [\n              _c(\"p\", { staticClass: \"title1\" }, [\n                _vm._v(\"赋能开发者，提速企业数字化，零代码实现80%的基础功能\"),\n              ]),\n              _vm._m(1),\n              _c(\n                \"a\",\n                {\n                  staticClass: \"link\",\n                  attrs: { target: \"_blank\", href: \"https://www.jnpfsoft.com\" },\n                },\n                [_vm._v(\"了解更多\")]\n              ),\n            ])\n          : _vm._e(),\n      ]),\n      _c(\"div\", { staticClass: \"login-content\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"login-form\" },\n          [\n            _vm.sysConfig && _vm.sysConfig.loginIcon\n              ? _c(\n                  \"el-image\",\n                  {\n                    staticClass: \"login-logo\",\n                    attrs: { src: _vm.define.comUrl + _vm.sysConfig.loginIcon },\n                  },\n                  [\n                    _c(\"template\", { slot: \"error\" }, [\n                      _c(\"img\", {\n                        staticClass: \"login-logo\",\n                        attrs: {\n                          src: require(\"@/assets/images/login_logo.png\"),\n                          alt: \"\",\n                        },\n                      }),\n                    ]),\n                  ],\n                  2\n                )\n              : _c(\"img\", {\n                  staticClass: \"login-logo\",\n                  attrs: {\n                    src: require(\"@/assets/images/login_logo.png\"),\n                    alt: \"\",\n                  },\n                }),\n            _c(\n              \"div\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: !_vm.isSso && !_vm.ssoLoading,\n                    expression: \"!isSso && !ssoLoading\",\n                  },\n                ],\n              },\n              [\n                _c(\n                  \"div\",\n                  { staticClass: \"login-tab\", class: \"active\" + _vm.active },\n                  [\n                    _c(\n                      \"a\",\n                      {\n                        staticClass: \"item\",\n                        class: { active: _vm.active == 1 },\n                        on: {\n                          click: function ($event) {\n                            _vm.active = 1\n                          },\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.$t(\"login.title\")))]\n                    ),\n                    _c(\n                      \"a\",\n                      {\n                        staticClass: \"item\",\n                        class: { active: _vm.active == 2 },\n                        on: {\n                          click: function ($event) {\n                            _vm.active = 2\n                          },\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.$t(\"login.scanTitle\")))]\n                    ),\n                  ]\n                ),\n                _c(\n                  \"el-form\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.active == 1,\n                        expression: \"active==1\",\n                      },\n                    ],\n                    ref: \"loginForm\",\n                    attrs: {\n                      model: _vm.loginForm,\n                      rules: _vm.loginRules,\n                      autocomplete: \"on\",\n                      \"label-position\": \"left\",\n                    },\n                  },\n                  [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { prop: \"account\" } },\n                      [\n                        _c(\"el-input\", {\n                          ref: \"account\",\n                          attrs: {\n                            placeholder: _vm.$t(\"login.username\"),\n                            name: \"account\",\n                            type: \"text\",\n                            tabindex: \"1\",\n                            autocomplete: \"on\",\n                            \"prefix-icon\": \"el-icon-user\",\n                            size: \"large\",\n                          },\n                          on: { change: _vm.getConfig },\n                          model: {\n                            value: _vm.loginForm.account,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.loginForm, \"account\", $$v)\n                            },\n                            expression: \"loginForm.account\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-tooltip\",\n                      {\n                        attrs: {\n                          content: _vm.$t(\"login.upper\"),\n                          placement: \"right\",\n                          manual: \"\",\n                        },\n                        model: {\n                          value: _vm.capsTooltip,\n                          callback: function ($$v) {\n                            _vm.capsTooltip = $$v\n                          },\n                          expression: \"capsTooltip\",\n                        },\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"password\" } },\n                          [\n                            _c(\"el-input\", {\n                              ref: \"password\",\n                              attrs: {\n                                \"show-password\": \"\",\n                                placeholder: _vm.$t(\"login.password\"),\n                                name: \"password\",\n                                tabindex: \"2\",\n                                autocomplete: \"on\",\n                                \"prefix-icon\": \"el-icon-lock\",\n                                size: \"large\",\n                              },\n                              on: {\n                                blur: function ($event) {\n                                  _vm.capsTooltip = false\n                                },\n                              },\n                              nativeOn: {\n                                keyup: function ($event) {\n                                  return _vm.checkCapslock($event)\n                                },\n                              },\n                              model: {\n                                value: _vm.loginForm.password,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.loginForm, \"password\", $$v)\n                                },\n                                expression: \"loginForm.password\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                    _vm.needCode\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"code\" } },\n                          [\n                            _c(\n                              \"el-row\",\n                              {\n                                attrs: {\n                                  type: \"flex\",\n                                  justify: \"space-between\",\n                                },\n                              },\n                              [\n                                _c(\n                                  \"el-col\",\n                                  { staticClass: \"sms-input\" },\n                                  [\n                                    _c(\"el-input\", {\n                                      attrs: {\n                                        placeholder: _vm.$t(\"login.codeTip\"),\n                                        name: \"code\",\n                                        autocomplete: \"on\",\n                                        \"prefix-icon\": \"el-icon-key\",\n                                        size: \"large\",\n                                      },\n                                      model: {\n                                        value: _vm.loginForm.code,\n                                        callback: function ($$v) {\n                                          _vm.$set(_vm.loginForm, \"code\", $$v)\n                                        },\n                                        expression: \"loginForm.code\",\n                                      },\n                                    }),\n                                  ],\n                                  1\n                                ),\n                                _c(\n                                  \"el-col\",\n                                  { staticClass: \"sms-right code-right\" },\n                                  [\n                                    _c(\n                                      \"el-tooltip\",\n                                      {\n                                        attrs: {\n                                          content: _vm.$t(\"login.changeCode\"),\n                                          placement: \"bottom\",\n                                        },\n                                      },\n                                      [\n                                        _c(\"img\", {\n                                          attrs: {\n                                            id: \"imgcode\",\n                                            alt: _vm.$t(\"login.changeCode\"),\n                                            src: _vm.define.comUrl + _vm.imgUrl,\n                                          },\n                                          on: { click: _vm.changeImg },\n                                        }),\n                                      ]\n                                    ),\n                                  ],\n                                  1\n                                ),\n                              ],\n                              1\n                            ),\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _c(\n                      \"el-button\",\n                      {\n                        staticClass: \"login-btn\",\n                        attrs: {\n                          loading: _vm.loading,\n                          type: \"primary\",\n                          size: \"large\",\n                        },\n                        nativeOn: {\n                          click: function ($event) {\n                            $event.preventDefault()\n                            return _vm.handleLogin($event)\n                          },\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.$t(\"login.logIn\")))]\n                    ),\n                    _vm.socialsList.length\n                      ? [\n                          _c(\n                            \"el-divider\",\n                            {\n                              staticClass: \"divider__text\",\n                              attrs: { \"content-position\": \"center\" },\n                            },\n                            [_vm._v(\"其他登录方式\")]\n                          ),\n                          _c(\n                            \"div\",\n                            { staticClass: \"other-list\" },\n                            _vm._l(_vm.socialsList, function (item, i) {\n                              return _c(\n                                \"div\",\n                                { key: i },\n                                [\n                                  _c(\n                                    \"el-tooltip\",\n                                    {\n                                      staticClass: \"item\",\n                                      attrs: {\n                                        effect: \"dark\",\n                                        content: item.name + \"登录\",\n                                        placement: \"top\",\n                                      },\n                                    },\n                                    [\n                                      _c(\n                                        \"div\",\n                                        {\n                                          staticClass: \"other-item\",\n                                          on: {\n                                            click: function ($event) {\n                                              return _vm.otherLogin(item.enname)\n                                            },\n                                          },\n                                        },\n                                        [_c(\"i\", { class: item.icon })]\n                                      ),\n                                    ]\n                                  ),\n                                ],\n                                1\n                              )\n                            }),\n                            0\n                          ),\n                        ]\n                      : _vm._e(),\n                  ],\n                  2\n                ),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.active == 2,\n                        expression: \"active==2\",\n                      },\n                    ],\n                    staticClass: \"login-form-QRCode\",\n                  },\n                  [\n                    _c(\"img\", {\n                      staticClass: \"qrcode-img\",\n                      attrs: { src: require(\"@/assets/images/login_qr.png\") },\n                    }),\n                    _c(\"p\", { staticClass: \"qrcode-tip\" }, [\n                      _vm._v(\"正在测试,稍后上线\"),\n                    ]),\n                  ]\n                ),\n              ],\n              1\n            ),\n            _c(\n              \"el-button\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.isSso && !_vm.ssoLoading,\n                    expression: \"isSso && !ssoLoading\",\n                  },\n                ],\n                staticClass: \"sso-login-btn\",\n                attrs: { type: \"primary\", size: \"large\", loading: _vm.loading },\n                nativeOn: {\n                  click: function ($event) {\n                    $event.preventDefault()\n                    return _vm.ssoLogin($event)\n                  },\n                },\n              },\n              [_vm._v(\"登录\")]\n            ),\n          ],\n          1\n        ),\n        _c(\"div\", { staticClass: \"copyright\" }, [\n          _vm._v(\" \" + _vm._s(_vm.sysConfig.copyright)),\n        ]),\n      ]),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"JNPF-dialog JNPF-dialog_center JNPF-dialog-sso\",\n          attrs: {\n            title: \"登录\",\n            \"close-on-click-modal\": false,\n            visible: _vm.visible,\n            \"close-on-press-escape\": false,\n            \"lock-scroll\": \"\",\n            width: \"1000px\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.visible = $event\n            },\n            open: _vm.onOpen,\n          },\n        },\n        [\n          _vm.show\n            ? _c(\"iframe\", {\n                attrs: {\n                  width: \"100%\",\n                  height: \"100%\",\n                  src: _vm.ssoUrl,\n                  frameborder: \"0\",\n                },\n              })\n            : _vm._e(),\n        ]\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass:\n            \"JNPF-dialog JNPF-dialog_center form-script-dialog other-login-dialog\",\n          attrs: {\n            visible: _vm.dialogVisible,\n            width: \"600px\",\n            \"before-close\": _vm.handleClose,\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.dialogVisible = $event\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"other-main\" }, [\n            _c(\"div\", { staticClass: \"other-title\" }, [\n              _c(\"div\", { staticClass: \"other-icon\" }, [\n                _c(\"i\", { staticClass: \"icon-ym icon-ym-user\" }),\n              ]),\n              _c(\"div\", { staticClass: \"other-text\" }, [\n                _vm._v(\"请选择登录账号\"),\n              ]),\n            ]),\n            _c(\n              \"div\",\n              { staticClass: \"other-body\" },\n              [\n                _c(\n                  \"el-row\",\n                  { attrs: { gutter: 20 } },\n                  [\n                    _vm._l(_vm.tenantSocialList, function (item, i) {\n                      return [\n                        _c(\"el-col\", { key: i, attrs: { span: 12 } }, [\n                          _c(\n                            \"div\",\n                            {\n                              on: {\n                                click: function ($event) {\n                                  return _vm.socailsLogin(item)\n                                },\n                              },\n                            },\n                            [\n                              _c(\n                                \"el-card\",\n                                {\n                                  staticClass: \"other-login-card\",\n                                  attrs: { shadow: \"hover\" },\n                                },\n                                [\n                                  _c(\"h2\", [_vm._v(_vm._s(item.socialName))]),\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"other-login-des\" },\n                                    [\n                                      _vm._v(\n                                        \"租户名称：\" + _vm._s(item.tenantName)\n                                      ),\n                                    ]\n                                  ),\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"other-login-des\" },\n                                    [_vm._v(\"租户ID：\" + _vm._s(item.tenantId))]\n                                  ),\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"other-login-des\" },\n                                    [\n                                      _vm._v(\n                                        \"账号ID：\" + _vm._s(item.accountName)\n                                      ),\n                                    ]\n                                  ),\n                                ]\n                              ),\n                            ],\n                            1\n                          ),\n                        ]),\n                      ]\n                    }),\n                  ],\n                  2\n                ),\n              ],\n              1\n            ),\n          ]),\n        ]\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"a\",\n      {\n        staticClass: \"login-company-logo\",\n        attrs: { target: \"_blank\", href: \"https://www.jnpfsoft.com\" },\n      },\n      [\n        _c(\"img\", {\n          staticClass: \"login-company-logo-img\",\n          attrs: {\n            src: require(\"@/assets/images/login-company-logo.png\"),\n            alt: \"\",\n          },\n        }),\n      ]\n    )\n  },\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", { staticClass: \"title2\" }, [\n      _vm._v(\"已帮助\"),\n      _c(\"span\", [_vm._v(\"20000+\")]),\n      _vm._v(\"家企业完成数字化转型升级\"),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}