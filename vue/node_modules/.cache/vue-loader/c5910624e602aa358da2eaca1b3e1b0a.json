{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/HSchedule/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/HSchedule/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from \"vuex\";\nimport MsgDialog from \"@/components/Process/PropPanel/msgDialog\";\nimport { ScheduleInfo, ScheduleUpdate, ScheduleCreate, ScheduleDelete } from '@/api/onlineDev/schedule'\nconst reminderTimeList = [\n  {\n    id: -2,\n    fullName: '不提醒'\n  },\n  {\n    id: -1,\n    fullName: '开始时'\n  },\n  {\n    id: 5,\n    fullName: '提前5分钟'\n  },\n  {\n    id: 10,\n    fullName: '提前10分钟'\n  },\n  {\n    id: 15,\n    fullName: '提前15分钟'\n  },\n  {\n    id: 30,\n    fullName: '提前30分钟'\n  },\n  {\n    id: 60,\n    fullName: '提前1小时'\n  },\n  {\n    id: 120,\n    fullName: '提前2小时'\n  },\n  {\n    id: 1440,\n    fullName: '1天前'\n  },\n  {\n    id: 2880,\n    fullName: '2天前'\n  },\n  {\n    id: 10080,\n    fullName: '1周前'\n  }\n]\nconst timeList = [\n  {\n    id: -2,\n    fullName: '不提醒'\n  },\n  {\n    id: 1,\n    fullName: '当天8:00'\n  },\n  {\n    id: 2,\n    fullName: '当天9:00'\n  },\n  {\n    id: 3,\n    fullName: '当天10:00'\n  },\n  {\n    id: 4,\n    fullName: '1天前8:00'\n  },\n  {\n    id: 5,\n    fullName: '1天前9:00'\n  },\n  {\n    id: 6,\n    fullName: '1天前10:00'\n  },\n  {\n    id: 7,\n    fullName: '2天前8:00'\n  },\n  {\n    id: 8,\n    fullName: '2天前9:00'\n  },\n  {\n    id: 9,\n    fullName: '2天前10:00'\n  },\n  {\n    id: 10,\n    fullName: '1周前8:00'\n  },\n  {\n    id: 11,\n    fullName: '1周前9:00'\n  },\n  {\n    id: 12,\n    fullName: '1周前10:00'\n  }\n]\nexport default {\n  components: { MsgDialog },\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请选择结束时间'));\n      } else {\n        let startDay = this.jnpf.toDate(this.dataForm.startDay, \"yyyy-MM-dd 00:00:00\")\n        this.dataForm.startDay = new Date(startDay).getTime()\n        let endDay = this.jnpf.toDate(value, \"yyyy-MM-dd 00:00:00\")\n        value = new Date(endDay).getTime()\n        if (this.dataForm.duration == -1) {\n          if (this.dataForm.startDay == value) {\n            if (this.dataForm.allDay == 0 && (this.dataForm.startTime > this.dataForm.endTime)) {\n              callback(new Error('结束时间必须晚于开始时间'));\n            }\n          }\n          if (this.dataForm.startDay > value) {\n            callback(new Error('结束时间必须晚于开始时间'));\n          }\n        }\n        callback();\n      }\n    }\n    return {\n      visible: false,\n      btnLoading: false,\n      dataForm: {\n        id: 0,\n        category: '',\n        creatorUserId: '',\n        userName: '',\n        allDay: 0,\n        urgent: '1',\n        startDay: '',\n        startTime: '',\n        endDay: '',\n        endTime: '',\n        duration: 60,\n        content: '',\n        title: '',\n        toUserIds: [],\n        reminderTime: -2,\n        reminderType: 1,\n        send: '',\n        sendName: '',\n        repetition: 1,\n        repeatTime: '',\n        color: '#FFFFFF',\n        files: []\n      },\n      repetitionType: false,\n      checked: 1,\n      delVisible: false,\n      updateVisible: false,\n      dataRule: {\n        category: [\n          { required: true, message: '请选择类型', trigger: 'change' }\n        ],\n        title: [\n          { required: true, message: '请输入标题', trigger: 'blur' }\n        ],\n        duration: [\n          { required: true, message: '请选择时长', trigger: 'change' }\n        ],\n        startDay: [\n          { required: true, message: '请选择开始时间', trigger: 'change' }\n        ],\n        endDay: [\n          { required: true, validator: validatePass, trigger: 'change' }\n        ],\n        repeatTime: [\n          { required: true, message: '请选择结束重复', trigger: 'change' }\n        ],\n        send: [\n          { required: true, message: '请选择发送配置', trigger: 'change' }\n        ],\n        reminderType: [\n          { required: true, message: '请选择提醒方式', trigger: 'change' }\n        ],\n        startTime: [\n          { required: true, message: '请选择提醒方式', trigger: 'change' }\n        ],\n      },\n      urgentList: [\n        {\n          id: \"1\",\n          fullName: '普通'\n        }, {\n          id: '2',\n          fullName: '重要'\n        }, {\n          id: '3',\n          fullName: '紧急'\n        }\n      ],\n      durationList: [\n        {\n          id: 30,\n          fullName: '30分钟'\n        }, {\n          id: 60,\n          fullName: '1小时'\n        }, {\n          id: 90,\n          fullName: '1小时30分钟'\n        }, {\n          id: 120,\n          fullName: '2小时'\n        }, {\n          id: 180,\n          fullName: '3小时'\n        }, {\n          id: -1,\n          fullName: '自定义'\n        }\n      ],\n      typeOptions: [],\n      tableList: [\n        {\n          id: 1,\n          fullName: '此日程'\n        }, {\n          id: 2,\n          fullName: '此日程及后续'\n        },\n      ],\n      deleteList: [\n        {\n          id: 1,\n          fullName: '此日程'\n        }, {\n          id: 2,\n          fullName: '此日程及后续'\n        },\n        {\n          id: 3,\n          fullName: '所有日程'\n        }\n      ],\n      remindList: [\n        {\n          id: 1,\n          fullName: '默认'\n        }, {\n          id: 2,\n          fullName: '自定义'\n        }\n      ],\n      repeatReminderList: [\n        {\n          id: 1,\n          fullName: '不重复'\n        }, {\n          id: 2,\n          fullName: '每天重复'\n        }, {\n          id: 3,\n          fullName: '每周重复'\n        }, {\n          id: 4,\n          fullName: '每月重复'\n        }, {\n          id: 5,\n          fullName: '每年重复'\n        }\n      ],\n      reminderTimeList,\n      timeList,\n      files: []\n    }\n  },\n  computed: {\n    ...mapGetters(['userInfo']),\n    getReminderTimeList() {\n      if (this.dataForm.allDay) return this.timeList\n      return this.reminderTimeList\n    },\n  },\n  methods: {\n    init(id, startTime, duration) {\n      this.dataForm.id = id || 0\n      this.visible = true\n      this.dataForm.category = ''\n      this.delVisible = false\n      this.updateVisible = false\n      this.repetitionType = false\n      this.checked = 1\n      this.dataForm.endTime = ''\n      this.$nextTick(() => {\n        this.$refs.dataForm.clearValidate()\n        if (this.dataForm.id) {\n          ScheduleInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.files = this.dataForm.files && this.dataForm.files.length && JSON.parse(this.dataForm.files) || []\n            if (this.dataForm.repetition != 1) this.repetitionType = true\n          })\n        } else {\n          this.$refs['dataForm'].resetFields()\n          this.dataForm.creatorUserId = this.userInfo.userId\n          this.dataForm.toUserIds = []\n          this.dataForm.startDay = startTime || ''\n          this.dataForm.endDay = startTime || ''\n          this.dataForm.color = '#FFFFFF'\n          this.dataForm.reminderTime = -2\n          this.dataForm.duration = duration || 60\n          this.dataForm.content = ''\n          this.dataForm.title = ''\n          this.dataForm.allDay = 0\n          this.dataForm.category = ''\n          if (this.typeOptions.length) this.dataForm.type = this.typeOptions[0].id\n          this.dataForm.repetition = 1\n          this.dataForm.repeatTime = ''\n          this.dataForm.userName = ''\n          this.dataForm.urgent = '1'\n          this.dataForm.reminderType = 1\n          this.dataForm.send = ''\n          this.dataForm.sendName = ''\n          this.files = []\n          let time = this.jnpf.toDate(new Date(), \"HH\")\n          this.dataForm.startTime = (Number(time) + 1) < 10 ? '0' + (Number(time) + 1) + ':00' : (Number(time) + 1) + ':00'\n          this.dataForm.endTime = (Number(time) + 2) < 10 ? '0' + (Number(time) + 2) + ':00' : (Number(time) + 2) + ':00'\n        }\n      })\n      this.getDictionaryData()\n    },\n    startDayChange(val) {\n      let startDay = this.jnpf.toDate(val, \"yyyy-MM-dd 00:00:00\")\n      this.dataForm.startDay = new Date(startDay).getTime()\n    },\n    durationChange() {\n      let arr = this.dataForm.startTime.split(\":\")\n      let time = Number(arr[0]) + 1\n      if (Number(time) == 24) {\n        time = 0\n      }\n      this.dataForm.endDay = this.dataForm.startDay\n      this.dataForm.endTime = time < 10 ? '0' + time + ':' + arr[1] : time + ':' + arr[1]\n    },\n    getDictionaryData() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'scheduleType' }).then((res) => {\n        this.typeOptions = res\n        if (this.typeOptions.length) this.dataForm.category = this.typeOptions[0].id\n      })\n    },\n    change_providerType(val) {\n      this.$nextTick(() => {\n        this.$refs.dataForm.clearValidate('duration')\n      })\n      this.dataForm.reminderTime = -2\n      if (val) {\n        this.dataForm.endDay = this.dataForm.startDay\n      } else {\n        this.dataForm.duration = 60\n        this.dataForm.endDay = 0\n      }\n    },\n    repetitionChange(val) {\n      let time = new Date()\n      time.setFullYear(time.getFullYear() + 1)\n      if (val != 1) this.dataForm.repeatTime = time.getTime()\n    },\n    onMsgChange(id, item) {\n      if (!id) {\n        this.dataForm.send = ''\n        this.dataForm.sendName = ''\n        return\n      }\n      if (this.dataForm.send === id) return\n      this.dataForm.send = id\n      this.dataForm.sendName = item.fullName\n    },\n    dataFormSubmit(type) {\n      if (type == 1) {\n        if (!this.checked) return this.$message.warning('请选择日程')\n      }\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          if (this.dataForm.allDay == 0) {\n            if (!this.dataForm.startTime) return this.$message({ message: '开始时间不能为空', type: 'error' })\n            if (!this.dataForm.endTime && this.dataForm.duration == -1) return this.$message({ message: '结束时间不能为空', type: 'error' })\n          }\n          if (this.dataForm.duration == -1 && this.dataForm.allDay == 0 && (this.dataForm.startDay == this.dataForm.endDay)) {\n            if (!this.dataForm.endTime && this.dataForm.duration == -1) return this.$message({ message: '结束时间不能为空', type: 'error' })\n          }\n          if (this.dataForm.repetition != 1 && this.dataForm.allDay == 1) {\n            let startDay = this.jnpf.toDate(this.dataForm.startDay, \"yyyy-MM-dd 00:00:00\")\n            this.dataForm.startDay = new Date(startDay).getTime()\n          }\n          if (this.dataForm.repetition != 1 && (this.dataForm.startDay > this.dataForm.repeatTime)) return this.$message({ message: '结束重复必须晚于开始时间', type: 'error' })\n          this.dataForm.files = JSON.stringify(this.files)\n          const formMethod = this.dataForm.id ? ScheduleUpdate : ScheduleCreate\n          if (this.dataForm.id && this.repetitionType) {\n            if (!this.updateVisible) {\n              this.updateVisible = true\n            } else {\n              formMethod(this.dataForm, this.checked).then(res => {\n                this.$message({\n                  message: res.msg,\n                  type: 'success',\n                  duration: 1500,\n                  onClose: () => {\n                    this.visible = false\n                    this.btnLoading = false\n                    this.$emit('refreshDataList')\n                  }\n                })\n              }).catch(() => { })\n            }\n          } else {\n            this.btnLoading = true\n            if (!this.dataForm.id) delete (this.dataForm.id)\n            formMethod(this.dataForm, 3).then(res => {\n              this.$message({\n                message: res.msg,\n                type: 'success',\n                duration: 1500,\n                onClose: () => {\n                  this.visible = false\n                  this.btnLoading = false\n                  this.$emit('refreshDataList')\n                }\n              })\n            }).catch(() => { this.btnLoading = false })\n          }\n        }\n      })\n    },\n    handleDel() {\n      if (this.repetitionType) {\n        if (!this.delVisible) {\n          this.delVisible = true\n        } else {\n          if (!this.checked) return this.$message.warning('请选择日程')\n          ScheduleDelete(this.dataForm.id, this.checked).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n            })\n            this.delVisible = false\n            this.visible = false\n            this.$emit('refreshDataList')\n          })\n        }\n      } else {\n        this.$confirm('此操作将永久删除此日程，同时删除所有参与人的日程，是否继续？', '提示', {\n          type: 'warning'\n        }).then(() => {\n          ScheduleDelete(this.dataForm.id, 3).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n            })\n            this.visible = false\n            this.$emit('refreshDataList')\n          })\n        }).catch(() => { });\n      }\n\n    },\n  }\n}\n",null]}