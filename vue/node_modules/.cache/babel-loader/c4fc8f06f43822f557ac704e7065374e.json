{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/systemData/interfaceOauth/Empower.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/systemData/interfaceOauth/Empower.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _interfaceOauth = require(\"@/api/systemData/interfaceOauth\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = exports.default = {\n  data: function data() {\n    return {\n      visible: false,\n      keyword: '',\n      loading: false,\n      props: {\n        children: 'children',\n        label: 'fullName',\n        isLeaf: 'isLeaf'\n      },\n      treeData: [],\n      selectedData: [],\n      identId: ''\n    };\n  },\n  props: {\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    prop: {\n      type: Object,\n      default: function _default() {\n        return {\n          value: \"id\",\n          label: \"fullName\",\n          children: \"children\"\n        };\n      }\n    },\n    type: {\n      type: String,\n      default: ''\n    }\n  },\n  created: function created() {},\n  methods: {\n    init: function init(data) {\n      this.identId = data.id;\n      this.openDialog();\n    },\n    openDialog: function openDialog() {\n      this.visible = true;\n      this.keyword = '';\n      this.selectedData = [];\n      this.getData();\n      this.setDefault();\n    },\n    confirm: function confirm() {\n      var _this = this;\n      var arr = [];\n      this.selectedData.forEach(function (item) {\n        arr.push(item.id);\n      });\n      var body = {\n        interfaceIdentId: this.identId,\n        dataInterfaceIds: arr.join(\",\")\n      };\n      (0, _interfaceOauth.saveInterfaceList)(body).then(function (res) {\n        _this.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1000,\n          onClose: function onClose() {\n            _this.visible = false;\n            _this.$emit('close');\n          }\n        });\n      });\n    },\n    setDefault: function setDefault() {\n      var _this2 = this;\n      (0, _interfaceOauth.getInfo)(this.identId).then(function (res) {\n        _this2.selectedData = res.data.list || [];\n      });\n    },\n    searchData: function searchData() {\n      this.$refs.tree && this.$refs.tree.filter(this.keyword);\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data[this.props.label].indexOf(value) !== -1;\n    },\n    getData: function getData() {\n      this.getAllList();\n    },\n    getAllList: function getAllList() {\n      var _this3 = this;\n      this.expands = [];\n      this.loading = true;\n      (0, _dataInterface.getDataInterfaceSelector)().then(function (res) {\n        _this3.treeData = res.data;\n        _this3.loading = false;\n      });\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      if (data.hasChildren) return;\n      var boo = this.selectedData.some(function (o) {\n        return o.id === data.id;\n      });\n      if (boo) return;\n      this.multiple ? this.selectedData.push(data) : this.selectedData = [data];\n    },\n    removeAll: function removeAll() {\n      this.selectedData = [];\n    },\n    removeData: function removeData(index) {\n      this.selectedData.splice(index, 1);\n    }\n  }\n};",null]}