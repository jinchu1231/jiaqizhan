{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/PreviewDialog/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/PreviewDialog/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport QRCode from 'qrcodejs2'\nexport default {\n  props: ['id', 'type', 'fullName', 'dataSource', 'previewType'],\n  data() {\n    return {\n      previewAppVisible: false,\n      qrCodeText: '',\n    }\n  },\n  computed: {\n    title() {\n      if (this.type === 'webDesign' || this.type === 'flow') return this.previewType == 0 ? '预览设计中的表单' : '预览已发布的表单'\n      return '预览'\n    }\n  },\n  methods: {\n    closeDialog() {\n      this.$emit('update:visible', false)\n    },\n    previewPc() {\n      this.closeDialog()\n      if (this.type === 'flow' || this.type === 'report' || this.type === 'portal') {\n        setTimeout(() => {\n          this.$emit('previewPc')\n        }, 300)\n      }\n      if (this.type === 'webDesign') {\n        if (!this.id) return\n        this.$router.push(`/previewModel?isPreview=1&id=${this.id}&previewType=${this.previewType}`)\n      }\n    },\n    previewApp() {\n      let text = {\n        t: this.type === 'flow' ? 'WFP' : this.type === 'webDesign' ? 'ADP' : 'report',\n        id: this.id\n      }\n      if (this.type === 'report') text.fullName = this.fullName\n      if (this.type === 'flow') text.ds = this.dataSource\n      if (this.type == 'webDesign') text.previewType = this.previewType\n      if (this.type == 'portal') text.t = 'portal'\n      this.qrCodeText = JSON.stringify(text)\n      this.closeDialog()\n      setTimeout(() => {\n        this.previewAppVisible = true\n      }, 300)\n    },\n    getQRimg() {\n      if (!this.qrCodeText) return\n      this.$refs.qrCode.innerHTML = \"\";\n      let qrcode = new QRCode(this.$refs.qrCode, {\n        width: 260,\n        height: 260,\n        text: this.qrCodeText,\n        correctLevel: QRCode.CorrectLevel.H\n      })\n      qrcode._el.title = ''\n    },\n  },\n}\n",null]}