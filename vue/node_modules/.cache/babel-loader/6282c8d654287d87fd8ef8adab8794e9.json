{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Process/OrgSelect/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Process/OrgSelect/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"regenerator-runtime/runtime\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/asyncToGenerator.js\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _OrgTransfer = _interopRequireDefault(require(\"../OrgTransfer\"));\nvar _user = require(\"@/api/permission/user\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = exports.default = {\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  components: {\n    OrgTransfer: _OrgTransfer.default\n  },\n  name: 'org-select',\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      required: true\n    },\n    title: {\n      type: String,\n      default: '组织机构'\n    },\n    inlet: {\n      type: String,\n      default: ''\n    },\n    type: {\n      type: String,\n      default: 'user'\n    },\n    buttonType: {\n      type: String,\n      default: 'button'\n    },\n    // or input\n    tagConfig: {\n      type: Object,\n      default: function _default() {\n        return {\n          type: 'info',\n          closable: true,\n          'disable-transitions': false,\n          hit: false,\n          color: undefined,\n          size: 'small',\n          effect: 'light'\n        };\n      }\n    },\n    dynamicParameter: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      show: false,\n      innerValue: null,\n      selectedData: [],\n      dynamicList: [{\n        \"fullName\": '当前组织',\n        \"organize\": '动态参数',\n        \"organizeIds\": ['@currentOrg'],\n        \"id\": '@currentOrg',\n        \"type\": \"system\",\n        \"icon\": \"icon-ym icon-ym-tree-user2\"\n      }, {\n        \"fullName\": '当前组织及子组织',\n        \"organize\": '动态参数',\n        \"organizeIds\": ['@currentOrgAndSubOrg'],\n        \"id\": '@currentOrgAndSubOrg',\n        \"type\": \"system\",\n        \"icon\": \"icon-ym icon-ym-tree-user2\"\n      }, {\n        \"fullName\": '当前分管组织',\n        \"organize\": '动态参数',\n        \"organizeIds\": ['@currentGradeOrg'],\n        \"id\": '@currentGradeOrg',\n        \"type\": \"system\",\n        \"icon\": \"icon-ym icon-ym-tree-user2\"\n      }]\n    };\n  },\n  watch: {\n    value: {\n      handler: function handler(val) {\n        if (!val) return;\n        this.reloadCmpData();\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  computed: {\n    selectedLabels: function selectedLabels() {\n      return this.selectedData.map(function (t) {\n        return t.fullName;\n      }).join(',');\n    },\n    allList: function allList() {\n      var list = [];\n      if (this.type !== 'user' && this.type !== 'users') {\n        var type = this.type === 'organize' || this.type === 'department' ? 'department' : this.type;\n        list = this.$store.getters[type + 'List'];\n      }\n      return [].concat((0, _toConsumableArray2.default)(list), (0, _toConsumableArray2.default)(this.dynamicList));\n    }\n  },\n  methods: {\n    reloadCmpData: function reloadCmpData() {\n      var _this = this;\n      this.innerValue = this.value;\n      // transfer 可能还未加载成功\n      this.$nextTick(function (_) {\n        _this.initSelectedData();\n      });\n    },\n    getText: function getText(id) {\n      var text = '';\n      if (this.type !== 'user' && this.type !== 'users') {\n        if (this.type === 'organize' && Array.isArray(id)) {\n          for (var i = 0; i < id.length; i++) {\n            var item = id[i];\n            inner: for (var ii = 0; ii < this.allList.length; ii++) {\n              if (item === this.allList[ii].id) {\n                text = this.allList[ii].type === 'system' ? this.allList[ii].fullName : this.allList[ii].organize;\n                break inner;\n              }\n            }\n          }\n        } else {\n          var arr = this.allList.filter(function (o) {\n            return o.id === id;\n          });\n          if (!arr.length) return '';\n          text = arr[0].fullName || '';\n        }\n      }\n      return text;\n    },\n    initSelectedData: function () {\n      var _initSelectedData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.type === 'user')) {\n                _context.next = 6;\n                break;\n              }\n              if (this.innerValue.length) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", this.selectedData = []);\n            case 3:\n              (0, _user.getUserInfoList)(this.innerValue).then(function (res) {\n                _this2.selectedData = res.data.list;\n              });\n              _context.next = 14;\n              break;\n            case 6:\n              if (!(this.type === 'users')) {\n                _context.next = 12;\n                break;\n              }\n              if (this.innerValue.length) {\n                _context.next = 9;\n                break;\n              }\n              return _context.abrupt(\"return\", this.selectedData = []);\n            case 9:\n              (0, _user.getSelectedList)(this.innerValue).then(function (res) {\n                _this2.selectedData = res.data.list;\n              });\n              _context.next = 14;\n              break;\n            case 12:\n              if (this.type === 'position') {\n                (0, _user.getSelectedList)(this.innerValue).then(function (res) {\n                  _this2.selectedData = res.data.list;\n                });\n              }\n              this.selectedData = this.innerValue.map(function (t) {\n                return {\n                  id: t,\n                  fullName: _this2.getText(t)\n                };\n              });\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initSelectedData() {\n        return _initSelectedData.apply(this, arguments);\n      }\n      return initSelectedData;\n    }(),\n    onClose: function onClose(item, i) {\n      this.innerValue.splice(i, 1);\n      this.selectedData.splice(i, 1);\n      this.$emit('change', this.innerValue);\n    },\n    onConfirm: function onConfirm(data) {\n      this.innerValue = data;\n      this.$emit('change', this.innerValue);\n    }\n  }\n};",null]}