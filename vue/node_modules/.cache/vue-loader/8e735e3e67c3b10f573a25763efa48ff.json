{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/systemData/interfaceOauth/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/systemData/interfaceOauth/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VerifySignatureInfo from './VerifySignatureInfo'\nimport { create, update, getAppSecret, getInfo } from '@/api/systemData/interfaceOauth.js'\n\nexport default {\n  components: { VerifySignatureInfo },\n  data() {\n    return {\n      verifySignatureVisible: false,\n      btnLoading: false,\n      dataForm: {\n        appSecret: '',\n        sortCode: 0,\n        enabledMark: 1,\n        id: ''\n      },\n      formLoading: false,\n      dataRule: {\n        appId: [\n          {\n            required: true,\n            message: '名称不能为空',\n            trigger: 'blur'\n          }\n        ],\n        appName: [\n          {\n            required: true,\n            message: '应用名称不能为空',\n            trigger: 'blur'\n          }\n        ],\n        appSecret: [\n          {\n            required: true,\n            message: 'appSecret不能为空',\n            trigger: 'change'\n          }\n        ],\n      }\n    }\n  },\n  methods: {\n    goBack(isRefresh) {\n      this.$emit('close', isRefresh)\n    },\n    init(id) {\n      this.formLoading = false\n      this.id = id || ''\n      if (id) {\n        this.formLoading = true\n        getInfo(id).then(res => {\n          this.dataForm = res.data || {}\n          this.formLoading = false\n        }).catch(() => { this.formLoading = false })\n      }\n    },\n    getAppSecret() {\n      getAppSecret().then(res => {\n        this.dataForm.appSecret = res.data\n      }).catch(() => { })\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          const formMethod = this.dataForm.id ? update : create\n          formMethod(this.dataForm).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1000,\n              onClose: () => {\n                this.btnLoading = false\n                this.$emit('close', true)\n              }\n            })\n          }).catch(() => {\n            this.btnLoading = false\n          })\n        }\n      })\n    },\n    showVerify() {\n      this.verifySignatureVisible = true\n      this.$nextTick(() => {\n        this.$refs.VerifySignatureInfo.init()\n      })\n    },\n  }\n}\n",null]}