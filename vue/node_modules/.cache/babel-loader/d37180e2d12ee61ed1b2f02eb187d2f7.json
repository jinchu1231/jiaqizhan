{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/basic/profile/components/JustAuth.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/basic/profile/components/JustAuth.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.replace\");\nvar _socialsUser = require(\"@/api/permission/socialsUser\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      socialsList: [],\n      dialogVisible: false,\n      dialogSrt: '',\n      listenerLoad: false\n    };\n  },\n  created: function created() {\n    this.init();\n    this.bindListener();\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('message', function () {});\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n      this.loading = true;\n      (0, _socialsUser.getSocialsUserList)().then(function (res) {\n        _this.socialsList = res.data;\n        _this.loading = false;\n      });\n    },\n    binding: function binding(data) {\n      var _this2 = this;\n      (0, _socialsUser.binding)(data).then(function (res) {\n        if (_this2.winURL && !_this2.winURL.closed) {\n          _this2.winURL.location.replace(res.msg);\n          _this2.winURL.focus();\n          return;\n        }\n        var iWidth = 750; //弹出窗口的宽度;\n        var iHeight = 500; //弹出窗口的高度;\n        var iLeft = (window.screen.width - iWidth) / 2;\n        var iTop = (window.screen.height - iHeight) / 2; //获得窗口的垂直位置;\n        _this2.winURL = window.open(res.msg, '_blank', 'height=' + iHeight + ',innerHeight=' + iHeight + ',width=' + iWidth + ',innerWidth=' + iWidth + ',top=' + iTop + ',left=' + iLeft + ',toolbar=no,menubar=no,scrollbars=auto,resizeable=no,location=no,status=no');\n      });\n    },\n    bindListener: function bindListener() {\n      var _this3 = this;\n      if (!this.listenerLoad) {\n        window.addEventListener('message', function (e) {\n          var res = typeof e.data === 'string' ? JSON.parse(e.data) : e.data;\n          if (res.code == \"200\") {\n            _this3.$message({\n              message: res.message,\n              type: 'success',\n              duration: 1000,\n              onClose: function onClose() {\n                _this3.init();\n              }\n            });\n          }\n          if (res.code == \"201\") {\n            _this3.$message({\n              message: res.message,\n              type: 'error',\n              duration: 3000,\n              onClose: function onClose() {\n                _this3.init();\n              }\n            });\n          }\n        });\n      }\n      this.listenerLoad = true;\n    },\n    deleteSocials: function deleteSocials(userId, id) {\n      var _this4 = this;\n      this.$confirm('确定要解除该账号绑定?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        (0, _socialsUser.deleteSocials)(userId, id).then(function (res) {\n          _this4.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1000,\n            onClose: function onClose() {\n              _this4.init();\n            }\n          });\n        });\n        _this4.init();\n      }).catch(function () {});\n    },\n    handleClose: function handleClose(done) {\n      this.$confirm('确认关闭？').then(function (_) {\n        done();\n      }).catch(function (_) {});\n    },\n    iframeLoad: function iframeLoad() {\n      window.addEventListener(\"message\", this.handleMessage);\n    },\n    handleMessage: function handleMessage(e) {\n      //e为传过来的信息\n      console.log(e);\n    }\n  }\n};",null]}