{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/notice/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/notice/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.split\");\nvar _message = require(\"@/api/system/message\");\nvar _msgDialog = _interopRequireDefault(require(\"@/components/Process/PropPanel/msgDialog\"));\nvar _SingleImg = _interopRequireDefault(require(\"@/components/Upload/SingleImg\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    MsgDialog: _msgDialog.default,\n    singleImg: _SingleImg.default\n  },\n  data: function data() {\n    return {\n      uploadHeaders: {\n        Authorization: this.$store.getters.token\n      },\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      key: +new Date(),\n      dataForm: {\n        id: '',\n        toUserIds: '',\n        title: '',\n        files: '',\n        bodyText: '',\n        coverImage: '',\n        remindCategory: 1,\n        category: '1',\n        sendConfigId: '',\n        sendConfigName: '',\n        expirationTime: null,\n        excerpt: \"\"\n      },\n      sendConfiguredList: [],\n      remindCategoryList: [{\n        'fullName': '默认',\n        'enCode': 1\n      }, {\n        'fullName': '自定义',\n        'enCode': 2\n      }, {\n        'fullName': '不提醒',\n        'enCode': 3\n      }],\n      categoryList: [],\n      toUserIds: [],\n      files: [],\n      dataRule: {\n        title: [{\n          required: true,\n          message: '公告标题不能为空',\n          trigger: 'blur'\n        }],\n        sendConfigId: [{\n          required: true,\n          message: '发送配置不能为空',\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: '类型不能为空',\n          trigger: 'blur'\n        }],\n        remindCategory: [{\n          required: true,\n          message: '提醒方式不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    goBack: function goBack() {\n      this.$emit('close');\n    },\n    init: function init(id) {\n      var _this = this;\n      this.dataForm.id = id || 0;\n      this.files = [];\n      this.toUserIds = [];\n      this.visible = true;\n      this.formLoading = true;\n      this.$nextTick(function () {\n        // 获取公告类型\n        _this.$store.dispatch('base/getDictionaryData', {\n          sort: 'NoticeType'\n        }).then(function (res) {\n          _this.categoryList = res;\n        });\n        _this.$refs['dataForm'].resetFields();\n        if (_this.remindCategory != 1 && !_this.dataForm.id) _this.dataForm.sendConfigName = \"\";\n        if (_this.dataForm.id) {\n          (0, _message.getNoticeInfo)(_this.dataForm.id).then(function (res) {\n            _this.dataForm = res.data;\n            _this.files = res.data.files ? JSON.parse(res.data.files) : [];\n            _this.toUserIds = res.data.toUserIds ? res.data.toUserIds.split(',') : [];\n            _this.$nextTick(function () {\n              if (_this.dataForm.sendConfigId) _this.sendMessageConfig(_this.dataForm.sendConfigId);\n            });\n          });\n        }\n        _this.formLoading = false;\n        _this.key = +new Date();\n      });\n    },\n    sendMessageConfig: function sendMessageConfig(id) {\n      var _this2 = this;\n      (0, _message.sendMessageConfig)(id).then(function (res) {\n        _this2.dataForm.sendConfigName = res.data.fullName;\n        _this2.key = +new Date();\n      });\n    },\n    onMsgChange: function onMsgChange(id, item) {\n      if (!id) {\n        this.dataForm.sendConfigId = '';\n        this.dataForm.sendConfigName = '';\n        return;\n      }\n      if (this.dataForm.sendConfigId === id) return;\n      this.dataForm.sendConfigId = id;\n      this.dataForm.sendConfigName = item.fullName;\n    },\n    handleAvatarSuccess: function handleAvatarSuccess(res) {\n      if (res.code === 200 && res.data && res.data.url) {\n        this.dataForm.coverImage = res.data.url;\n      } else {\n        this.$message.error('头像上传失败');\n      }\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this3 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          _this3.btnLoading = true;\n          _this3.dataForm.files = JSON.stringify(_this3.files);\n          _this3.dataForm.toUserIds = _this3.toUserIds.join(',');\n          var formMethod = _this3.dataForm.id ? _message.updateNotice : _message.createNotice;\n          formMethod(_this3.dataForm).then(function (res) {\n            _this3.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: function onClose() {\n                _this3.visible = false;\n                _this3.btnLoading = false;\n                _this3.$emit('refreshDataList');\n                _this3.goBack();\n              }\n            });\n          }).catch(function () {\n            _this3.btnLoading = false;\n          });\n        }\n      });\n    }\n  }\n};",null]}