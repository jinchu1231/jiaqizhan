{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/menu/menuManage.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/menu/menuManage.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getMenuList,\n  updateMenuState,\n  delMenu,\n  exportMenu,\n  getMenuSelector,\n  getPermissionGroup,\n  getPermission\n} from \"@/api/system/menu\";\nimport menuForm from \"./menuForm\";\nimport ButtonAuthorizeListDrawer from \"./components/buttonAuthorize/index\";\nimport ColumnAuthorizeListDrawer from \"./components/columnAuthorize/index\";\nimport FormAuthorizeListDrawer from \"./components/formAuthorize/index\";\nimport DataAuthorizeListDrawer from \"./components/dataAuthorize/index\";\nimport CheckPermissions from '@/components/CheckMenuPermissions'\nexport default {\n  name: \"system-menu\",\n  components: {\n    menuForm,\n    ButtonAuthorizeListDrawer,\n    ColumnAuthorizeListDrawer,\n    FormAuthorizeListDrawer,\n    DataAuthorizeListDrawer,\n    CheckPermissions\n  },\n  data() {\n    return {\n      options: [],\n      listQuery: {\n        enabledMark: '',\n        type: '',\n        keyword: \"\",\n        category: \"Web\",\n      },\n      treeList: [],\n      btnLoading: false,\n      listLoading: true,\n      formVisible: false,\n      buttonAuthorizeListDrawer: false,\n      columnAuthorizeListDrawer: false,\n      formAuthorizeListDrawer: false,\n      dataAuthorizeListDrawer: false,\n      expands: true,\n      refreshTable: true,\n      title: '',\n      systemId: '',\n      formRule: {\n        parentId: [\n          { required: true, message: '上级菜单不能为空', trigger: 'change' }\n        ]\n      },\n      treeData: [],\n      dataForm: {\n        parentId: \"\"\n      },\n      menuBtnLoading: false,\n      checkAuthorizeVisible: false,\n      fullName: '',\n      authorize: true,\n      activeMenu: \"1\",\n      list: [],\n      activeKey: \"\",\n      mainSystem: false,\n      authorizeList: [],\n      menuId: '',\n      description: '',\n      loading: false,\n      options: [\n        { fullName: '启用', id: 1 },\n        { fullName: '禁用', id: 0 },\n      ],\n      typeOptions: [\n        { fullName: '目录', id: 1 },\n        { fullName: '页面', id: 2 },\n        { fullName: '功能', id: 3 },\n        { fullName: '字典', id: 4 },\n        { fullName: '报表', id: 5 },\n        { fullName: '大屏', id: 6 },\n        { fullName: '外链', id: 7 },\n        { fullName: '门户', id: 8 },\n      ]\n    }\n  },\n  watch: {\n    \"listQuery.category\": function (val) {\n      this.reset();\n    },\n  },\n  methods: {\n    goBack(isRefresh) {\n      this.$emit('close', isRefresh)\n    },\n    init(data) {\n      this.title = data.fullName + '的菜单管理'\n      this.mainSystem = data.mainSystem\n      this.systemId = data.id\n      this.initData();\n    },\n    reset() {\n      this.listQuery.keyword = \"\";\n      this.listQuery.type = \"\";\n      this.listQuery.enabledMark = \"\";\n      this.initData();\n    },\n    initData() {\n      this.listLoading = true;\n      getMenuList(this.systemId, this.listQuery)\n        .then((res) => {\n          this.treeList = res.data.list;\n          this.listLoading = false;\n          this.btnLoading = false;\n        })\n        .catch(() => {\n          this.listLoading = false;\n          this.btnLoading = false;\n        });\n    },\n    toggleExpand() {\n      this.refreshTable = false;\n      this.expands = !this.expands;\n      this.$nextTick(() => {\n        this.refreshTable = true;\n      });\n    },\n    addOrUpdateHandle(id, parentId) {\n      this.formVisible = true;\n      this.$nextTick(() => {\n        this.$refs.Form.init(id, this.listQuery.category, this.systemId, parentId);\n      });\n    },\n    handleUpdateState(row) {\n      const txt = row.enabledMark ? \"禁用\" : \"开启\";\n      this.$confirm(`您确定要${txt}当前菜单吗, 是否继续?`, \"提示\", {\n        type: \"warning\",\n      })\n        .then(() => {\n          updateMenuState(row.id).then((res) => {\n            this.$message({\n              type: \"success\",\n              message: res.msg,\n              duration: 1000,\n              onClose: () => {\n                row.enabledMark = row.enabledMark ? 0 : 1;\n              },\n            });\n          });\n        })\n        .catch(() => { });\n    },\n    handleDel(id) {\n      this.$confirm(this.$t(\"common.delTip\"), this.$t(\"common.tipTitle\"), {\n        type: \"warning\",\n      })\n        .then(() => {\n          delMenu(id).then((res) => {\n            this.$message({\n              type: \"success\",\n              message: res.msg,\n              duration: 1500,\n              onClose: () => {\n                this.initData();\n              },\n            });\n          });\n        })\n        .catch(() => { });\n    },\n    handleButtonAuthorize(row) {\n      const moduleId = row.id;\n      const fullName = row.fullName;\n      this.buttonAuthorizeListDrawer = true;\n      this.$nextTick(() => {\n        this.$refs.buttonAuthorizeList.init(moduleId, fullName);\n      });\n    },\n    //列表权限\n    handleColumnAuthorize(row) {\n      const moduleId = row.id;\n      const fullName = row.fullName;\n      const type = row.type;\n      this.columnAuthorizeListDrawer = true;\n      this.$nextTick(() => {\n        this.$refs.ColumnAuthorizeList.init(moduleId, fullName, type, 1);\n      });\n    },\n    //表单权限\n    handleFormAuthorize(row) {\n      const moduleId = row.id;\n      const fullName = row.fullName;\n      const type = row.type;\n      this.formAuthorizeListDrawer = true;\n      this.$nextTick(() => {\n        this.$refs.FormAuthorizeList.init(moduleId, fullName, type, 2);\n      });\n    },\n    //数据权限\n    handleDataAuthorize(row) {\n      const moduleId = row.id;\n      const fullName = row.fullName;\n      const type = row.type;\n      this.dataAuthorizeListDrawer = true;\n      this.$nextTick(() => {\n        this.$refs.DataAuthorizeList.init(moduleId, fullName, type, 3);\n      });\n    },\n    //查看权限\n    checkAuthorize(row) {\n      this.checkAuthorizeVisible = true;\n      this.$nextTick(() => {\n        this.$refs.checkPermissions.init(row, 1)\n      })\n    },\n    exportMenu(id) {\n      this.$confirm(\"您确定要导出该菜单, 是否继续?\", \"提示\", {\n        type: \"warning\",\n      })\n        .then(() => {\n          exportMenu(id).then((res) => {\n            this.jnpf.downloadFile(res.data.url);\n          });\n        })\n        .catch(() => { });\n    },\n    uploadSuccess() {\n      this.selectMenuVisible = false\n      this.initData()\n    },\n  },\n};\n",null]}