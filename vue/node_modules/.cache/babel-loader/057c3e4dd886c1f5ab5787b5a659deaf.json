{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/FormScript.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/FormScript.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _monaco = _interopRequireDefault(require(\"@/components/JNPFEditor/monaco\"));\nvar _ScriptDemo = _interopRequireDefault(require(\"./ScriptDemo\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    JNPFCodeEditor: _monaco.default,\n    ScriptDemo: _ScriptDemo.default\n  },\n  props: ['tpl', 'fields', 'type'],\n  inject: [\"getFormInfo\"],\n  data: function data() {\n    return (0, _defineProperty2.default)((0, _defineProperty2.default)({\n      text: '',\n      treeData: [],\n      treeProps: {\n        children: 'children',\n        label: 'label'\n      }\n    }, \"treeData\", []), \"options\", {\n      language: 'javascript'\n    });\n  },\n  methods: {\n    onOpen: function onOpen() {\n      var _this = this;\n      this.text = this.tpl;\n      this.getTree();\n      this.$nextTick(function () {\n        _this.$refs.CodeEditor.changeEditor({\n          value: _this.text,\n          options: _this.options\n        });\n      });\n    },\n    getTree: function getTree() {\n      var list = [];\n      var loop = function loop(data, parent) {\n        if (!data) return;\n        if (data.__config__ && data.__config__.jnpfKey !== 'table' && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data);\n        }\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d, parent);\n        });\n        if (data.__vModel__) {\n          if (data.__config__.jnpfKey === 'table') {\n            var item = {\n              value: data.__vModel__,\n              label: data.__config__.label,\n              children: []\n            };\n            var children = [];\n            if (data.__config__.children && Array.isArray(data.__config__.children) && data.__config__.children.length) {\n              for (var i = 0; i < data.__config__.children.length; i++) {\n                var child = data.__config__.children[i];\n                if (child.__vModel__) {\n                  children.push({\n                    value: data.__vModel__ + '.' + child.__vModel__,\n                    label: child.__config__.label\n                  });\n                }\n              }\n            }\n            item.children = children;\n            list.push(item);\n          } else {\n            list.push({\n              value: data.__vModel__,\n              label: data.__config__.label\n            });\n          }\n        }\n      };\n      loop(this.fields);\n      var topItem = {\n        value: +new Date(),\n        label: this.getFormInfo().fullName,\n        top: true,\n        children: list\n      };\n      this.treeData = [topItem];\n    },\n    onClose: function onClose() {\n      this.$emit('updateScript', this.text);\n      this.closeDialog();\n    },\n    closeDialog: function closeDialog() {\n      this.$emit('update:visible', false);\n    },\n    handleNodeClick: function handleNodeClick(item, node) {\n      if (item.top) return;\n      if (item.children) return;\n      this.$refs.CodeEditor.insert(item.value);\n    }\n  }\n};",null]}