{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/extend/saleOrder/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/saleOrder/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.function.name\");\nvar _saleOrder = require(\"@/api/extend/saleOrder\");\nvar _GoodsBox = _interopRequireDefault(require(\"./GoodsBox\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    GoodsBox: _GoodsBox.default\n  },\n  data: function data() {\n    return {\n      dataForm: {\n        id: '',\n        address: \"\",\n        auditDate: '',\n        auditName: \"\",\n        business: \"\",\n        code: \"\",\n        contactTel: \"\",\n        customerId: \"\",\n        customerName: '',\n        description: \"\",\n        discountPrice: '',\n        gatheringType: \"\",\n        goodsDate: '',\n        goodsName: \"\",\n        goodsWarehouse: \"\",\n        harvestMsg: 0,\n        harvestWarehouse: \"\",\n        issuingName: \"\",\n        partPrice: '',\n        productEntryList: []\n      },\n      dataRule: {},\n      list: [],\n      loading: true,\n      total: 0,\n      options: ['现金', '转帐', '汇票'],\n      storeOptions: ['仓库1', '仓库2', '仓库3'],\n      goodsBoxVisible: false,\n      btnLoading: false,\n      orderType: ''\n    };\n  },\n  watch: {\n    'dataForm.productEntryList': {\n      handler: function handler(newVal, oldVal) {\n        var menoy = 0;\n        for (var i = 0; i < newVal.length; i++) {\n          var e = newVal[i];\n          menoy += parseFloat(e.amount);\n        }\n        this.total = menoy;\n      },\n      deep: true\n    }\n  },\n  methods: {\n    goBack: function goBack() {\n      this.$emit('close');\n    },\n    init: function init(id) {\n      var _this = this;\n      this.dataForm.id = id || '';\n      this.loading = true;\n      this.$nextTick(function () {\n        if (_this.dataForm.id) {\n          _this.$refs['dataForm'].resetFields();\n          (0, _saleOrder.orderInfo)(_this.dataForm.id).then(function (res) {\n            _this.dataForm = res.data;\n            _this.loading = false;\n          });\n        } else {\n          _this.loading = false;\n          _this.addItem();\n        }\n      });\n    },\n    addItem: function addItem(index) {\n      var item = {\n        productId: '',\n        productCode: '',\n        productName: '',\n        productSpecification: '',\n        qty: 1,\n        money: 0,\n        amount: 0,\n        description: '',\n        type: ''\n      };\n      this.dataForm.productEntryList.splice(index + 1, 0, item);\n    },\n    delItem: function delItem(index) {\n      this.dataForm.productEntryList.splice(index, 1);\n    },\n    count: function count(row) {\n      row.amount = this.jnpf.toDecimal(parseFloat(row.money) * parseFloat(row.qty));\n    },\n    openGoodsBox: function openGoodsBox() {\n      var _this2 = this;\n      this.goodsBoxVisible = true;\n      this.$nextTick(function () {\n        _this2.$refs.goodsBox.init();\n      });\n    },\n    onTypeChange: function onTypeChange(val) {\n      if (!val) return;\n      for (var i = 0; i < this.dataForm.productEntryList.length; i++) {\n        this.dataForm.productEntryList[i].type = val;\n      }\n    },\n    choice: function choice(list) {\n      for (var i = 0; i < list.length; i++) {\n        var e = list[i];\n        var item = {\n          productId: e.id,\n          productCode: e.code,\n          productName: e.fullName,\n          productSpecification: e.productSpecification,\n          qty: 1,\n          money: e.money,\n          amount: e.money,\n          description: '',\n          type: e.type\n        };\n        this.dataForm.productEntryList.push(item);\n      }\n    },\n    querySearchAsync: function querySearchAsync(queryString, cb) {\n      (0, _saleOrder.getCustomer)(queryString).then(function (res) {\n        cb(res.data.list);\n      });\n    },\n    goodsSearchAsync: function goodsSearchAsync(queryString, cb) {\n      (0, _saleOrder.getGoodsSelector)(queryString).then(function (res) {\n        cb(res.data.list);\n      });\n    },\n    goodsSelect: function goodsSelect(item, row) {\n      row.productId = item.id;\n      row.productCode = item.code;\n      row.productName = item.fullName;\n      row.productSpecification = item.productSpecification;\n      row.money = item.money;\n      row.type = item.type;\n      row.amount = this.jnpf.toDecimal(parseFloat(row.money) * parseFloat(row.qty));\n    },\n    handleSelect: function handleSelect(item) {\n      this.dataForm.customerName = item.name;\n      this.dataForm.customerId = item.id;\n      this.dataForm.contactTel = item.contactTel;\n      this.dataForm.address = item.address;\n    },\n    submit: function submit() {\n      var _this3 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          _this3.btnLoading = true;\n          var formMethod = _this3.dataForm.id ? _saleOrder.updateOrder : _saleOrder.createOrder;\n          if (!_this3.dataForm.id) delete _this3.dataForm.id;\n          formMethod(_this3.dataForm).then(function (res) {\n            _this3.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: function onClose() {\n                _this3.btnLoading = false;\n                _this3.$emit('close', true);\n              }\n            });\n          }).catch(function () {\n            _this3.btnLoading = false;\n          });\n        }\n      });\n    }\n  }\n};",null]}