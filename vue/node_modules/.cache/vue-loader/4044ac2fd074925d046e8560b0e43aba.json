{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/integrationProcess/PropPanel/model/WebhookRequestDialog.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/integrationProcess/PropPanel/model/WebhookRequestDialog.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport clipboard from '@/utils/clipboard'\nimport { getWebhookParams, webhookStart } from '@/api/onlineDev/integrate';\nimport store from '@/store'\nexport default {\n  data() {\n    return {\n      visible: false,\n      url: '',\n      loading: false,\n      isRetry: false,\n      timer: null,\n      id: '',\n      randomStr: ''\n    }\n  },\n  computed: {\n    sysConfig() {\n      return store.getters && store.getters.sysConfig\n    }\n  },\n  methods: {\n    init(data) {\n      this.visible = true\n      this.url = this.sysConfig.jnpfDomain + data.url;\n      this.randomStr = data.randomStr;\n      this.id = data.id || '';\n      this.loading = false;\n      this.isRetry = false;\n    },\n    handleCopy(text, event) {\n      clipboard(text, event)\n    },\n    handleRequest() {\n      webhookStart(this.id, this.randomStr).then(_ => {\n        this.loading = true;\n        this.isRetry = false;\n        this.timer = setInterval(() => {\n          this.handleWebhookParams();\n        }, 1000);\n        setTimeout(() => {\n          clearTimer();\n          this.isRetry = true;\n        }, 180000);\n      });\n    },\n    clearTimer() {\n      if (!this.timer) return;\n      clearInterval(this.timer);\n      this.timer = null;\n    },\n    handleWebhookParams() {\n      getWebhookParams(this.randomStr).then(res => {\n        if (res.data.length) {\n          this.$emit('confirm', res.data);\n          this.clearTimer();\n          this.closeModal();\n        }\n      }).catch(() => {\n        this.clearTimer();\n        this.isRetry = true;\n      });\n    }\n  }\n}\n",null]}