{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/JNPFImport/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/JNPFImport/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SelectFlow from '@/components/SelectFlowDialog'\nimport { getTemplateDownload, getImportPreview, importData, getImportExceptionData } from '@/api/common'\nexport default {\n  components: { SelectFlow },\n  data() {\n    return {\n      visible: false,\n      btnLoading: false,\n      listLoading: false,\n      fileName: '',\n      fileList: [],\n      active: 1,\n      list: [],\n      headerList: [],\n      resultHeaderList: [],\n      resultList: [],\n      result: {\n        resultType: 0,\n        snum: 0,\n        fnum: 0\n      },\n      modelId: \"\",\n      url: '',\n      actionUrl: '',\n      mergeList: [],\n      enableFlow: 0,\n      flowList: [],\n      flowListVisible: false\n    }\n  },\n  methods: {\n    init(modelId, url, enableFlow, flowList) {\n      this.active = 1\n      this.fileList = []\n      this.fileName = ''\n      this.enableFlow = enableFlow || 0\n      this.flowList = flowList || []\n      this.flowListVisible = false\n      this.visible = true\n      this.modelId = modelId || ''\n      this.actionUrl = `${this.define.comUrl}/api/${url ? url : 'visualdev/OnlineDev'}/Uploader`\n      this.url = url ? url : `visualdev/OnlineDev/${this.modelId}`\n    },\n    beforeUpload(file) {\n      let isRightSize = file.size / 1024 < 500\n      if (!isRightSize) this.$message.error(`文件大小不能超过500KB`)\n      return isRightSize\n    },\n    handleRemove(file, fileList) {\n      this.fileList = []\n    },\n    beforeRemove(file, fileList) {\n      return this.$confirm(`确定移除 ${file.name}？`).then(() => { })\n    },\n    handleChange(file, fileList) {\n      this.fileList = fileList.slice(-1)\n    },\n    handleSuccess(res, file, fileList) {\n      if (res.code == 200) {\n        this.fileList = fileList.slice(-1)\n        this.fileName = res.data.name\n      } else {\n        this.fileList = fileList.filter(o => o.uid != file.uid)\n        this.$message({ message: res.msg, type: 'error', duration: 1000 })\n      }\n    },\n    templateDownload() {\n      getTemplateDownload(this.modelId, this.url).then(res => {\n        this.jnpf.downloadFile(res.data.url)\n      })\n    },\n    prev() {\n      if (this.active == 1) return\n      this.active--\n    },\n    next() {\n      if (this.active == 2) {\n        if (!this.list.length) return this.$message({ message: '导入数据为空', type: 'warning' })\n        if (this.enableFlow === 1) {\n          if (!this.flowList.length) return this.$message.error('流程不存在');\n          if (this.flowList.length === 1) return this.selectFlow(this.flowList[0]);\n          this.flowListVisible = true\n          this.$nextTick(() => {\n            this.$refs.selectFlow.init(this.flowList)\n          })\n          return;\n        }\n        this.handleSubmit()\n      }\n      if (this.active == 1) {\n        if (!this.fileList.length || !this.fileName) return this.$message({ message: '请先上传文件', type: 'warning' })\n        this.btnLoading = true\n        getImportPreview(this.modelId, { fileName: this.fileName }, this.url).then(res => {\n          this.list = res.data.dataRow\n          this.resultHeaderList = JSON.parse(JSON.stringify(res.data.headerRow))\n          for (let index = 0; index < res.data.headerRow.length; index++) {\n            const item = res.data.headerRow[index];\n            if (item.children && item.children.length && item.jnpfKey == 'table') {\n              item.children.push({\n                fullName: \"操作\",\n                id: 'delete'\n              })\n            }\n          }\n          this.headerList = JSON.parse(JSON.stringify(res.data.headerRow))\n          this.btnLoading = false\n          this.active++\n          this.getMergeList(this.headerList)\n        }).catch(() => { this.btnLoading = false })\n      }\n    },\n    selectFlow(item) {\n      this.handleSubmit(item.id);\n      this.flowListVisible = false\n    },\n    handleSubmit(flowId) {\n      this.btnLoading = true\n      const query = { list: this.list };\n      if (flowId) query.flowId = flowId;\n      importData(this.modelId, query, this.url).then(res => {\n        this.result = res.data\n        this.resultList = res.data.failResult\n        this.btnLoading = false\n        this.active++\n        this.getMergeList(this.resultHeaderList)\n      }).catch(() => { this.btnLoading = false })\n    },\n    getMergeList(list) {\n      this.mergeList = []\n      list.forEach(item => {\n        if (item.children && item.children.length > 0) {\n          item.children.forEach((child, index) => {\n            if (index == 0) {\n              this.mergeList.push({\n                prop: item.id + '-' + child.id,\n                rowspan: 1,\n                colspan: item.children.length\n              })\n            } else {\n              this.mergeList.push({\n                prop: item.id + '-' + child.id,\n                rowspan: 0,\n                colspan: 0\n              })\n            }\n          })\n        } else {\n          this.mergeList.push({\n            prop: item.id,\n            rowspan: 1,\n            colspan: 1\n          })\n        }\n      })\n    },\n    arraySpanMethod({ row, column, rowIndex, columnIndex }) {\n      for (let i = 0; i < this.mergeList.length; i++) {\n        if (column.property == this.mergeList[i].prop) {\n          return [this.mergeList[i].rowspan, this.mergeList[i].colspan]\n        }\n      }\n    },\n    handleDel(index) {\n      this.list.splice(index, 1)\n    },\n    handleTableDel(index, i, item) {\n      this.list[index] && this.list[index][item.id] && this.list[index][item.id].splice(i, 1)\n    },\n    cancel(isRefresh) {\n      this.visible = false\n      if (isRefresh) this.$emit('refresh')\n    },\n    exportExceptionData() {\n      getImportExceptionData(this.modelId, { list: this.resultList }, this.url).then(res => {\n        this.jnpf.downloadFile(res.data.url)\n      })\n    }\n  }\n}\n",null]}