{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/user/WorkHandoverForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/user/WorkHandoverForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.string.iterator\");\nrequire(\"core-js/modules/es6.set\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _user = require(\"@/api/permission/user\");\nvar _vuex = require(\"vuex\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      key: +new Date(),\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      activeName: 'flow',\n      treeData: [],\n      props: {\n        children: 'children',\n        label: 'fullName',\n        isLeaf: 'isLeaf',\n        icon: 'icon',\n        value: 'id',\n        disabled: 'disabled'\n      },\n      workHandoverPersonnelData: {},\n      fromId: '',\n      dataForm: {\n        id: '',\n        account: '',\n        managerId: '',\n        waitList: [],\n        flowList: [],\n        permissionList: []\n      }\n    };\n  },\n  computed: _objectSpread({}, (0, _vuex.mapGetters)(['userInfo'])),\n  methods: {\n    changeUser: function changeUser(id, item) {\n      if (this.workHandoverPersonnelData.id === id || item.isAdministrator == 1) {\n        this.$message.warning(this.workHandoverPersonnelData.id === id ? '工作交接无法转交给本人' : '工作交接无法转交给管理员');\n        this.dataForm.managerId = \"\";\n        this.key = +new Date();\n      }\n    },\n    init: function init(data) {\n      var _this = this;\n      this.workHandoverPersonnelData = data;\n      this.dataForm.account = data.realName + '/' + data.account;\n      this.visible = true;\n      this.activeName = 'flow';\n      this.dataForm.managerId = '';\n      this.dataForm.waitList = [];\n      this.dataForm.flowList = [];\n      this.dataForm.permissionList = [];\n      this.fromId = data.id;\n      (0, _user.getWorkByUser)(this.fromId).then(function (res) {\n        _this.treeData = res.data || [];\n      });\n    },\n    handleCheckChange: function handleCheckChange(type) {\n      var dataName = type == 1 ? 'flowList' : type == 2 ? 'waitList' : 'permissionList';\n      var treeRef = this.$refs['handoverContentTree' + type];\n      var parentIds = treeRef.getHalfCheckedKeys();\n      var childrenIds = treeRef.getCheckedKeys();\n      var dataIds = (0, _toConsumableArray2.default)(new Set([].concat((0, _toConsumableArray2.default)(parentIds), (0, _toConsumableArray2.default)(childrenIds))));\n      this.dataForm[dataName] = dataIds;\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this2 = this;\n      // 检查是否是自己交接给自己\n      if (this.workHandoverPersonnelData.id === this.dataForm.managerId) {\n        this.dataForm.managerId = \"\";\n        this.$message.warning(\"工作交接无法转交给本人\");\n        this.key = +new Date();\n        return;\n      }\n      // 检查是否选择了交接人\n      if (!this.dataForm.managerId) {\n        return this.$message.warning(\"请先选择工作交接人\");\n      }\n      // 检查是否选择了交接内容\n      if (!this.dataForm.waitList.length && !this.dataForm.flowList.length && !this.dataForm.permissionList.length) {\n        return this.$message.warning(\"请先选择交接内容\");\n      }\n      this.btnLoading = true;\n      var query = {\n        waitList: this.dataForm.waitList,\n        flowList: this.dataForm.flowList,\n        permissionList: this.dataForm.permissionList,\n        toId: this.dataForm.managerId,\n        fromId: this.fromId\n      };\n      (0, _user.getWorkHandover)(query).then(function () {\n        _this2.$message.success(\"工作交接成功\");\n        setTimeout(function () {\n          _this2.visible = false;\n          _this2.btnLoading = false;\n          _this2.$emit(\"complete\");\n        }, 1000);\n      }).catch(function () {\n        _this2.btnLoading = false;\n      });\n    }\n  }\n};",null]}