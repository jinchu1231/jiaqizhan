{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/mainApp.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/mainApp.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.string.fixed\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _typeof2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/typeof.js\"));\nrequire(\"core-js/modules/es6.string.includes\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nrequire(\"core-js/modules/es7.array.includes\");\nvar _sortablejs = _interopRequireDefault(require(\"sortablejs\"));\nvar _FlowCondition = _interopRequireDefault(require(\"./FlowCondition\"));\nvar _vuedraggable = _interopRequireDefault(require(\"vuedraggable\"));\nvar _FormScript = _interopRequireDefault(require(\"./FormScript\"));\nvar _CustomBtn = _interopRequireDefault(require(\"./CustomBtn\"));\nvar _dictionary = require(\"@/api/systemData/dictionary\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _db = require(\"@/components/Generator/utils/db\");\nvar _comConfig = require(\"@/components/Generator/generator/comConfig\");\nvar _ExtraConfigModal = _interopRequireDefault(require(\"./ExtraConfigModal.vue\"));\nvar _DefaultSortConfigModal = _interopRequireDefault(require(\"./DefaultSortConfigModal.vue\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar canSetAttrs = ['select', 'datePicker', 'timePicker', 'organizeSelect', 'depSelect', 'userSelect'];\nvar getSearchMultiple = function getSearchMultiple(item) {\n  var jnpfKey = item.__config__.jnpfKey;\n  var searchMultipleList = ['select', 'depSelect', 'roleSelect', 'userSelect', 'usersSelect', 'organizeSelect', 'posSelect', 'groupSelect'];\n  if (searchMultipleList.includes(jnpfKey)) return true;\n  return false;\n};\nvar getDefaultValue = function getDefaultValue(item) {\n  var jnpfKey = item.__config__.jnpfKey;\n  var list = ['areaSelect', 'datePicker', 'inputNumber', 'organizeSelect', 'calculate'];\n  return list.includes(jnpfKey) || item.multiple ? [] : undefined;\n};\nvar getSearchType = function getSearchType(item) {\n  var jnpfKey = item.__config__.jnpfKey;\n  // 等于-1  模糊-2  范围-3\n  var fuzzyList = (0, _toConsumableArray2.default)(_comConfig.useInputList);\n  var RangeList = [].concat((0, _toConsumableArray2.default)(_comConfig.useDateList), ['timePicker', 'datePicker', 'inputNumber', 'calculate']);\n  if (RangeList.includes(jnpfKey)) return 3;\n  if (fuzzyList.includes(jnpfKey)) return 2;\n  return 1;\n};\nvar defaultFunc = '({ data, index, refresh, onlineUtils }) => {\\r\\n   \\r\\n}';\nvar defaultFuncs = '({ data, tableRef, onlineUtils }) => {\\r\\n   \\r\\n}';\nvar defaultColumnData = {\n  ruleListApp: {\n    matchLogic: 'and',\n    conditionList: []\n  },\n  // 过滤规则\n  searchList: [],\n  // 查询字段\n  hasSuperQuery: false,\n  // 高级查询\n  columnList: [],\n  // 字段列表\n  columnOptions: [],\n  defaultColumnList: [],\n  // 所有可选择字段列表\n  // type: 1, //列表类型\n  defaultSortConfig: [],\n  // 默认排序配置\n  hasPage: true,\n  // 列表分页\n  pageSize: 20,\n  // 分页条数\n  useColumnPermission: false,\n  useFormPermission: false,\n  useBtnPermission: false,\n  useDataPermission: false,\n  customBtnsList: [],\n  thousands: false,\n  thousandsField: [],\n  btnsList: [{\n    value: 'add',\n    icon: 'icon-ym icon-ym-btn-add',\n    label: '新增'\n  }],\n  // 按钮\n  columnBtnsList: [{\n    value: 'edit',\n    icon: 'icon-ym icon-ym-btn-edit',\n    label: '编辑'\n  }, {\n    value: 'remove',\n    icon: 'icon-ym icon-ym-btn-clearn',\n    label: '删除'\n  }, {\n    value: 'detail',\n    icon: 'icon-ym icon-ym-generator-menu',\n    label: '详情'\n  }],\n  // 列按钮\n  funcs: {\n    afterOnload: \"\"\n  },\n  loading: false\n};\nvar _default2 = exports.default = {\n  name: 'columnDesign',\n  props: {\n    conf: {\n      type: Object,\n      default: function _default() {}\n    },\n    webType: '',\n    modelType: '',\n    interfaceId: '',\n    templateJson: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    viewFields: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  components: {\n    draggable: _vuedraggable.default,\n    FormScript: _FormScript.default,\n    CustomBtn: _CustomBtn.default,\n    Condition: _FlowCondition.default,\n    ExtraConfigModal: _ExtraConfigModal.default,\n    DefaultSortConfigModal: _DefaultSortConfigModal.default\n  },\n  data: function data() {\n    return {\n      searchConfigVisible: false,\n      viewJnpfKeyOptions: [{\n        id: 'input',\n        fullName: '单行输入'\n      }, {\n        id: 'inputNumber',\n        fullName: '数字输入'\n      }, {\n        id: 'select',\n        fullName: '下拉选择'\n      }, {\n        id: 'datePicker',\n        fullName: '日期选择'\n      }, {\n        id: 'timePicker',\n        fullName: '时间选择'\n      }, {\n        id: 'organizeSelect',\n        fullName: '组织选择'\n      }, {\n        id: 'depSelect',\n        fullName: '部门选择'\n      }, {\n        id: 'roleSelect',\n        fullName: '角色选择'\n      }, {\n        id: 'posSelect',\n        fullName: '岗位选择'\n      }, {\n        id: 'groupSelect',\n        fullName: '分组选择'\n      }, {\n        id: 'userSelect',\n        fullName: '用户选择'\n      }],\n      key: +new Date(),\n      activeSearchRowIndex: 0,\n      ExtraConfigModalVisible: false,\n      textBoxList: ['input', 'billRule'],\n      selectionBoxList: _comConfig.useSelectList,\n      currentTab: 'attr',\n      alignOptions: ['left', 'center', 'right'],\n      list: [],\n      columnData: JSON.parse(JSON.stringify(defaultColumnData)),\n      btnsOption: [{\n        value: 'add',\n        icon: 'el-icon-plus',\n        label: '新增'\n      }],\n      columnBtnsOption: [{\n        value: 'edit',\n        icon: 'icon-ym icon-ym-btn-edit',\n        label: '编辑'\n      }, {\n        value: 'remove',\n        icon: 'icon-ym icon-ym-btn-clearn',\n        label: '删除'\n      }, {\n        value: 'detail',\n        icon: 'icon-ym icon-ym-generator-menu',\n        label: '详情'\n      }],\n      canSetKeyword: ['input', 'textarea', 'inputNumber', 'autoComplete'],\n      columnOptions: [],\n      searchOptions: [],\n      groupFieldOptions: [],\n      sortOptions: [],\n      sortList: [],\n      btnsList: [],\n      columnBtnsList: [],\n      formScriptVisible: false,\n      customBtnVisible: false,\n      activeItem: {},\n      funcName: '',\n      thousandsOptions: [],\n      noGroupList: _comConfig.noGroupList\n    };\n  },\n  filters: {\n    btnText: function btnText(key) {\n      var text = '';\n      switch (key) {\n        case 'edit':\n          text = '编辑';\n          break;\n        case 'remove':\n          text = '删除';\n          break;\n        case 'detail':\n          text = '详情';\n          break;\n        default:\n          text = '新增';\n          break;\n      }\n      return text;\n    }\n  },\n  computed: {\n    getIsKeywordDisabled: function getIsKeywordDisabled() {\n      return this.columnData.searchList.filter(function (o) {\n        return o.isKeyword;\n      }).length >= 3;\n    }\n  },\n  watch: {\n    btnsList: function btnsList(val) {\n      var list = [];\n      outer: for (var i = 0; i < this.btnsOption.length; i++) {\n        inter: for (var ii = 0; ii < val.length; ii++) {\n          if (val[ii] === this.btnsOption[i].value) {\n            list.push(this.btnsOption[i]);\n            break inter;\n          }\n        }\n      }\n      this.columnData.btnsList = list;\n    },\n    columnBtnsList: function columnBtnsList(val) {\n      var list = [];\n      outer: for (var i = 0; i < this.columnBtnsOption.length; i++) {\n        inter: for (var ii = 0; ii < val.length; ii++) {\n          if (val[ii] === this.columnBtnsOption[i].value) {\n            list.push(this.columnBtnsOption[i]);\n            break inter;\n          }\n        }\n      }\n      this.columnData.columnBtnsList = list;\n    }\n  },\n  created: function created() {\n    var _this = this;\n    this.loading = false;\n    if ((0, _typeof2.default)(this.conf) === 'object' && this.conf !== null) this.columnData = Object.assign({}, defaultColumnData, this.conf);\n    if (this.webType != 4) {\n      var list = [];\n      var list1 = [];\n      var loop = function loop(data, parent) {\n        if (!data) return;\n        if (data.__config__ && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data);\n        }\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d, parent);\n        });\n        if (data.__config__ && data.__config__.jnpfKey) {\n          var visibility = !data.__config__.visibility || Array.isArray(data.__config__.visibility) && data.__config__.visibility.includes('app');\n          if (data.__config__.layout === 'colFormItem' && data.__vModel__ && visibility) {\n            var isTableChild = parent && parent.__config__ && parent.__config__.jnpfKey === 'table';\n            var id = isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__;\n            var label = isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label;\n            data.id = id;\n            data.fullName = label;\n            list.push(data);\n            if (data.__vModel__.indexOf('_jnpf_') < 0) list1.push(data);\n          }\n        }\n      };\n      loop((0, _db.getDrawingList)());\n      this.list = list;\n      var options = list.filter(function (o) {\n        return _comConfig.noColumnShowList.indexOf(o.__config__.jnpfKey) < 0 || o.isStorage == 1;\n      });\n      var searchOptions = list.filter(function (o) {\n        return _comConfig.noSearchList.indexOf(o.__config__.jnpfKey) < 0;\n      });\n      this.thousandsOptions = list.filter(function (o) {\n        return _comConfig.noSearchList.indexOf(o.__config__.jnpfKey) < 0 && (o.__config__.jnpfKey == 'inputNumber' || o.__config__.jnpfKey == 'calculate');\n      });\n      var sortOptions = list1.filter(function (o) {\n        return _comConfig.noColumnShowList.indexOf(o.__config__.jnpfKey) < 0 || o.isStorage == 1;\n      });\n      sortOptions = sortOptions.filter(function (o) {\n        return o.id.indexOf('-') < 0;\n      });\n      this.groupFieldOptions = list.filter(function (o) {\n        return o.id.indexOf('-') < 0 && !_comConfig.noGroupList.includes(o.__config__.jnpfKey);\n      });\n      this.columnOptions = options.map(function (o) {\n        return _objectSpread({\n          label: o.fullName,\n          prop: o.id,\n          align: 'left',\n          jnpfKey: o.__config__.jnpfKey,\n          sortable: false,\n          width: null\n        }, o);\n      });\n      this.searchOptions = searchOptions.map(function (o) {\n        return _objectSpread({\n          label: o.fullName,\n          prop: o.id,\n          jnpfKey: o.__config__.jnpfKey,\n          value: getDefaultValue(o),\n          searchType: getSearchType(o),\n          searchMultiple: getSearchMultiple(o),\n          isKeyword: false\n        }, o);\n      });\n      this.sortOptions = sortOptions.map(function (o) {\n        return _objectSpread({\n          label: o.fullName,\n          prop: o.id,\n          jnpfKey: o.__config__.jnpfKey\n        }, o);\n      });\n      this.columnData.columnOptions = options;\n      if (!this.columnOptions.length) this.columnData.columnList = [];\n      if (!this.searchOptions.length) this.columnData.searchList = [];\n      if (!this.sortOptions.length) this.columnData.sortList = [];\n      this.setBtnValue(this.columnData.btnsList, this.btnsOption);\n      this.setBtnValue(this.columnData.columnBtnsList, this.columnBtnsOption);\n    } else {\n      if (!this.interfaceId) return;\n      var query = {\n        paramList: this.templateJson || []\n      };\n      this.loading = true;\n      var fieldsList = this.viewFields;\n      this.columnOptions = fieldsList.map(function (o) {\n        return {\n          label: o.field,\n          prop: o.defaultValue,\n          fixed: 'none',\n          align: 'left',\n          jnpfKey: 'input',\n          sortable: false,\n          width: null,\n          __vModel__: o.defaultValue,\n          id: o.defaultValue,\n          fullName: o.field,\n          __config__: {\n            jnpfKey: 'input'\n          }\n        };\n      });\n      var interfaceParam = (this.templateJson || []).filter(function (o) {\n        return o.useSearch;\n      }).map(function (o) {\n        var jnpfKey = 'input';\n        if (o.dataType === 'int' || o.dataType === 'decimal') jnpfKey = 'inputNumber';\n        if (o.dataType === 'datetime') jnpfKey = 'datePicker';\n        return {\n          id: o.field,\n          fullName: o.fieldName,\n          label: o.fieldName,\n          prop: o.field,\n          jnpfKey: jnpfKey,\n          __vModel__: o.field,\n          __config__: {\n            isFromParam: true,\n            jnpfKey: jnpfKey\n          }\n        };\n      });\n      this.searchOptions = fieldsList.map(function (o) {\n        return {\n          label: o.field,\n          prop: o.defaultValue,\n          jnpfKey: 'input',\n          value: '',\n          searchType: 1,\n          __vModel__: o.defaultValue,\n          id: o.defaultValue,\n          fullName: o.field,\n          searchMultiple: false,\n          __config__: {\n            label: o.field,\n            jnpfKey: 'input'\n          }\n        };\n      });\n      var _searchOptions = this.searchOptions.filter(function (o) {\n        return !interfaceParam.some(function (e) {\n          return e.id === o.id;\n        });\n      });\n      this.searchOptions = [].concat((0, _toConsumableArray2.default)(interfaceParam), (0, _toConsumableArray2.default)(_searchOptions));\n      this.sortOptions = fieldsList.map(function (o) {\n        return {\n          label: o.field,\n          prop: o.defaultValue,\n          id: o.defaultValue,\n          fullName: o.field,\n          jnpfKey: o\n        };\n      });\n      this.groupFieldOptions = fieldsList.map(function (o) {\n        return {\n          label: o.field,\n          prop: o.defaultValue,\n          jnpfKey: 'input',\n          __vModel__: o.defaultValue,\n          id: o.defaultValue,\n          fullName: o.field,\n          __config__: {\n            label: o.field,\n            jnpfKey: 'input'\n          }\n        };\n      });\n      if (!this.columnOptions.length) this.columnData.columnList = [];\n      if (!this.searchOptions.length) this.columnData.searchList = [];\n    }\n    this.$nextTick(function () {\n      _this.columnData.columnList = _this.setListValue(_this.columnData.columnList, JSON.parse(JSON.stringify(_this.columnOptions)), 'column');\n      _this.columnData.searchList = _this.setListValue(_this.columnData.searchList, JSON.parse(JSON.stringify(_this.searchOptions)), \"search\");\n      _this.loading = false;\n    });\n    this.btnsList = this.columnData.btnsList.map(function (o) {\n      return o.value;\n    });\n    this.columnBtnsList = this.columnData.columnBtnsList.map(function (o) {\n      return o.value;\n    });\n  },\n  mounted: function mounted() {\n    this.setSort();\n    this.buildOptions(this.columnData.searchList);\n  },\n  methods: {\n    buildOptions: function buildOptions(componentList) {\n      if (this.webType == 4) return;\n      componentList.forEach(function (cur) {\n        var config = cur.__config__;\n        if (_comConfig.dyOptionsList.includes(config.jnpfKey)) {\n          if (config.dataType === 'dictionary' && config.dictionaryType) {\n            cur.options = [];\n            (0, _dictionary.getDictionaryDataSelector)(config.dictionaryType).then(function (res) {\n              cur.options = res.data.list;\n            });\n          }\n          if (config.dataType === 'dynamic' && config.propsUrl) {\n            cur.options = [];\n            var query = {\n              paramList: config.templateJson || []\n            };\n            (0, _dataInterface.getDataInterfaceRes)(config.propsUrl, query).then(function (res) {\n              cur.options = Array.isArray(res.data) ? res.data : [];\n            });\n          }\n        }\n      });\n    },\n    updateSearchRow: function updateSearchRow(data) {\n      this.ExtraConfigModalVisible = false;\n      this.columnData.searchList[this.activeSearchRowIndex] = data;\n    },\n    onSearchMultipleChange: function onSearchMultipleChange(record, index) {\n      this.columnData.searchList[index].value = getDefaultValue(record);\n      this.columnData.searchList[index].__config__.renderKey = +new Date();\n    },\n    filterPanelShow: function filterPanelShow() {\n      this.$refs.conditionpane.show(this.columnData.ruleListApp);\n    },\n    ruleConfig: function ruleConfig(data) {\n      this.columnData.ruleListApp = data;\n    },\n    setBtnValue: function setBtnValue(replacedData, data, key) {\n      key = key ? key : 'value';\n      outer: for (var i = 0; i < replacedData.length; i++) {\n        inter: for (var ii = 0; ii < data.length; ii++) {\n          if (replacedData[i][key] === data[ii][key]) {\n            data[ii] = replacedData[i];\n            break inter;\n          }\n        }\n      }\n    },\n    openExtraConfig: function openExtraConfig(record, index) {\n      var _this2 = this;\n      this.ExtraConfigModalVisible = true;\n      this.activeSearchRowIndex = index;\n      this.$nextTick(function () {\n        _this2.$refs.ExtraConfigModal.init(record, index);\n      });\n    },\n    updateDefaultSortConfig: function updateDefaultSortConfig(data) {\n      this.columnData.defaultSortConfig = data;\n    },\n    onJnpfKeyChange: function onJnpfKeyChange(val, record, i) {\n      record.__config__.jnpfKey = val;\n      var defaultItem = {\n        id: record.id,\n        fullName: record.fullName,\n        label: record.label,\n        prop: record.prop,\n        jnpfKey: val,\n        value: getDefaultValue(record),\n        searchType: getSearchType(record),\n        __vModel__: record.__vModel__,\n        searchMultiple: getSearchMultiple(record),\n        isKeyword: false,\n        __config__: {\n          label: record.label,\n          jnpfKey: val\n        }\n      };\n      if (val === 'datePicker') defaultItem.format = 'yyyy-MM-dd';\n      if (val === 'timePicker') defaultItem.format = 'HH:mm:ss';\n      if (val === 'select') {\n        defaultItem.options = [];\n        defaultItem.props = {\n          label: 'fullName',\n          value: 'id'\n        };\n        defaultItem.__config__ = _objectSpread(_objectSpread({}, defaultItem.__config__), {}, {\n          dataType: 'static',\n          propsUrl: '',\n          propsName: '',\n          templateJson: [],\n          dictionaryType: ''\n        });\n      }\n      if (['organizeSelect', 'depSelect', 'userSelect'].includes(val)) {\n        defaultItem.isIncludeSubordinate = false;\n      }\n      this.columnData.searchList[i] = JSON.parse(JSON.stringify(defaultItem));\n      this.key = +new Date();\n    },\n    setListValue: function setListValue(data, defaultData, type) {\n      data = data.filter(function (o) {\n        return defaultData.some(function (e) {\n          return o.prop == e.prop;\n        });\n      });\n      outer: for (var i = 0; i < data.length; i++) {\n        inter: for (var ii = 0; ii < defaultData.length; ii++) {\n          if (data[i].prop === defaultData[ii].prop) {\n            if (type === 'column') {\n              defaultData[ii].fixed = data[i].fixed;\n              defaultData[ii].align = data[i].align;\n              defaultData[ii].width = data[i].width;\n              defaultData[ii].sortable = data[i].sortable;\n              if (this.webType == 4) defaultData[ii].label = data[i].label;\n            }\n            if (type === 'search') {\n              if (data[i].jnpfKey === defaultData[ii].jnpfKey) {\n                defaultData[ii].searchType = data[i].searchType;\n                defaultData[ii].searchMultiple = data[i].searchMultiple;\n                defaultData[ii].value = data[i].value;\n              }\n              defaultData[ii].label = data[i].label;\n              defaultData[ii].isKeyword = data[i].isKeyword;\n              if (this.webType == 4) defaultData[ii] = data[i];\n            }\n            data[i] = defaultData[ii];\n            break inter;\n          }\n        }\n      }\n      for (var _i = 0; _i < data.length; _i++) {\n        for (var _ii = 0; _ii < this[type + 'Options'].length; _ii++) {\n          if (data[_i].prop === this[type + 'Options'][_ii].prop) {\n            this.$refs[type + 'Table'].toggleRowSelection(this[type + 'Options'][_ii], true);\n          }\n        }\n      }\n      return data;\n    },\n    editDefaultSortConfig: function editDefaultSortConfig() {\n      var _this3 = this;\n      this.searchConfigVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs.SearchConfig.init({\n          list: _this3.columnData.defaultSortConfig,\n          columnOptions: _this3.groupFieldOptions\n        });\n      });\n    },\n    updateListValue: function updateListValue(selectedRows, type) {\n      var _this4 = this;\n      if (!selectedRows.length) return this.columnData[type + 'List'] = [];\n      var selectedRowKeys = selectedRows.map(function (o) {\n        return o.prop;\n      });\n      this.columnData[type + 'List'] = this.columnData[type + 'List'].filter(function (o) {\n        return selectedRowKeys.some(function (e) {\n          return o.prop == e;\n        });\n      });\n      var _loop = function _loop(i) {\n        if (!_this4.columnData[type + 'List'].some(function (o) {\n          return o.prop === selectedRows[i].prop;\n        })) {\n          _this4.columnData[type + 'List'].push(JSON.parse(JSON.stringify(selectedRows[i])));\n          if (type == 'search') _this4.buildOptions([selectedRows[i]]);\n        }\n      };\n      for (var i = 0; i < selectedRows.length; i++) {\n        _loop(i);\n      }\n    },\n    /**\n      * 供父组件使用 获取列表JSON\n    */\n    getData: function getData() {\n      var _this5 = this;\n      this.columnData.defaultColumnList = this.columnOptions.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          checked: _this5.columnData.columnList.some(function (i) {\n            return i.prop === o.prop;\n          })\n        });\n      });\n      return this.columnData;\n    },\n    setSort: function setSort() {\n      var _this6 = this;\n      var el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0];\n      this.sortable = _sortablejs.default.create(el, {\n        ghostClass: 'sortable-ghost',\n        // Class name for the drop placeholder,\n        setData: function setData(dataTransfer) {\n          dataTransfer.setData('Text', '');\n        },\n        onEnd: function onEnd(evt) {\n          var targetRow = _this6.columnData.columnList.splice(evt.oldIndex, 1)[0];\n          _this6.columnData.columnList.splice(evt.newIndex, 0, targetRow);\n        },\n        handle: '.drag-handler'\n      });\n      // const el1 = this.$refs.dragTableSort.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0]\n      // Sortable.create(el1, {\n      //   ghostClass: 'sortable-ghost', // Class name for the drop placeholder,\n      //   setData: function (dataTransfer) {\n      //     dataTransfer.setData('Text', '')\n      //   },\n      //   onEnd: evt => {\n      //     const targetRow = this.columnData.sortList.splice(evt.oldIndex, 1)[0]\n      //     this.columnData.sortList.splice(evt.newIndex, 0, targetRow)\n      //   },\n      //   handle: '.drag-handler',\n      // })\n      var el2 = this.$refs.dragTableSearch.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0];\n      _sortablejs.default.create(el2, {\n        ghostClass: 'sortable-ghost',\n        // Class name for the drop placeholder,\n        setData: function setData(dataTransfer) {\n          dataTransfer.setData('Text', '');\n        },\n        onEnd: function onEnd(evt) {\n          var targetRow = _this6.columnData.searchList.splice(evt.oldIndex, 1)[0];\n          _this6.columnData.searchList.splice(evt.newIndex, 0, targetRow);\n        },\n        handle: '.drag-handler'\n      });\n    },\n    sortSelectionChange: function sortSelectionChange(val) {\n      this.updateListValue(val, 'sort');\n    },\n    searchSelectionChange: function searchSelectionChange(val) {\n      this.updateListValue(val, 'search');\n    },\n    columnSelectionChange: function columnSelectionChange(val) {\n      this.updateListValue(val, 'column');\n    },\n    addCustomBtn: function addCustomBtn() {\n      var id = this.jnpf.idGenerator();\n      this.columnData.customBtnsList.push({\n        value: 'btn_' + id,\n        label: '按钮' + id,\n        event: {\n          func: ''\n        }\n      });\n    },\n    editFunc: function editFunc(item) {\n      var _this7 = this;\n      if (!item.event.func) item.event.func = defaultFunc;\n      this.activeItem = item;\n      this.customBtnVisible = true;\n      this.$nextTick(function () {\n        _this7.$refs.customBtn.init('app', item.event, _this7.webType, _this7.columnOptions);\n      });\n    },\n    updateScript: function updateScript(data) {\n      this.columnData.funcs[this.funcName] = data;\n    },\n    updateCustomBtn: function updateCustomBtn(val) {\n      var _this8 = this;\n      this.columnData.customBtnsList.forEach(function (ele, index) {\n        if (ele.value == _this8.activeItem.value) _this8.$set(_this8.columnData.customBtnsList[index], 'event', val);\n      });\n    },\n    addFunc: function addFunc(item, type) {\n      var _this9 = this;\n      if (!item) item = defaultFuncs;\n      this.activeItem = item;\n      this.funcName = type;\n      this.formScriptVisible = true;\n      this.$nextTick(function () {\n        _this9.$refs.formScript.init();\n      });\n    }\n  }\n};",null]}