{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/user/WorkHandoverForm.vue?vue&type=template&id=1fac52d4","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/user/WorkHandoverForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      staticClass: \"JNPF-dialog JNPF-dialog_center\",\n      attrs: {\n        \"close-on-click-modal\": false,\n        \"close-on-press-escape\": false,\n        visible: _vm.visible,\n        \"lock-scroll\": \"\",\n        width: \"700px\",\n      },\n      on: {\n        \"update:visible\": function ($event) {\n          _vm.visible = $event\n        },\n      },\n    },\n    [\n      _c(\n        \"el-form\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.formLoading,\n              expression: \"formLoading\",\n            },\n          ],\n          ref: \"dataForm\",\n          attrs: { model: _vm.dataForm, \"label-width\": \"100px\" },\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"工作移交人\", prop: \"account\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"请输入工作移交人\", readonly: \"\" },\n                model: {\n                  value: _vm.dataForm.account,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"account\", $$v)\n                  },\n                  expression: \"dataForm.account\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"工作交接人\", prop: \"handoverId\" } },\n            [\n              _c(\"JnpfUserSelect\", {\n                key: _vm.key,\n                attrs: { placeholder: \"请选择工作交接人\" },\n                on: { change: _vm.changeUser },\n                model: {\n                  value: _vm.dataForm.managerId,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"managerId\", $$v)\n                  },\n                  expression: \"dataForm.managerId\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"交接内容\", prop: \"handoverContent\" } },\n            [\n              [\n                _c(\n                  \"div\",\n                  { staticClass: \"tabs-box\" },\n                  [\n                    _c(\n                      \"el-tabs\",\n                      {\n                        model: {\n                          value: _vm.activeName,\n                          callback: function ($$v) {\n                            _vm.activeName = $$v\n                          },\n                          expression: \"activeName\",\n                        },\n                      },\n                      [\n                        _c(\n                          \"el-tab-pane\",\n                          { attrs: { label: \"流程列表\", name: \"flow\" } },\n                          [\n                            _c(\"el-alert\", {\n                              attrs: {\n                                title:\n                                  \"转交内容：发起节点、审批节点、抄送人是移交人的流程\",\n                                type: \"warning\",\n                                \"show-icon\": \"\",\n                              },\n                            }),\n                            _c(\n                              \"div\",\n                              { staticClass: \"tabs-box-inner\" },\n                              [\n                                _c(\"el-tree\", {\n                                  ref: \"handoverContentTree1\",\n                                  attrs: {\n                                    data: _vm.treeData.flow,\n                                    props: _vm.props,\n                                    \"show-checkbox\": \"\",\n                                    \"default-expand-all\": \"\",\n                                    \"node-key\": \"id\",\n                                    \"check-on-click-node\": \"\",\n                                    \"expand-on-click-node\": false,\n                                  },\n                                  on: {\n                                    \"check-change\": function ($event) {\n                                      return _vm.handleCheckChange(1)\n                                    },\n                                  },\n                                  scopedSlots: _vm._u([\n                                    {\n                                      key: \"default\",\n                                      fn: function (ref) {\n                                        var node = ref.node\n                                        var data = ref.data\n                                        return _c(\n                                          \"span\",\n                                          {\n                                            staticClass: \"custom-tree-node\",\n                                            attrs: { title: node.label },\n                                          },\n                                          [\n                                            _c(\"i\", { class: data.icon }),\n                                            _c(\n                                              \"span\",\n                                              { staticClass: \"text\" },\n                                              [_vm._v(_vm._s(node.label))]\n                                            ),\n                                          ]\n                                        )\n                                      },\n                                    },\n                                  ]),\n                                }),\n                              ],\n                              1\n                            ),\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"el-tab-pane\",\n                          { attrs: { label: \"我的待办\", name: \"wait\" } },\n                          [\n                            _c(\"el-alert\", {\n                              attrs: {\n                                title:\n                                  \"转交内容：包含移交人未处理的待办和已处理的待办\",\n                                type: \"warning\",\n                                \"show-icon\": \"\",\n                              },\n                            }),\n                            _c(\n                              \"div\",\n                              { staticClass: \"tabs-box-inner\" },\n                              [\n                                _c(\"el-tree\", {\n                                  ref: \"handoverContentTree2\",\n                                  attrs: {\n                                    data: _vm.treeData.wait,\n                                    props: _vm.props,\n                                    \"show-checkbox\": \"\",\n                                    \"default-expand-all\": \"\",\n                                    \"node-key\": \"id\",\n                                    \"check-on-click-node\": \"\",\n                                    \"expand-on-click-node\": false,\n                                  },\n                                  on: {\n                                    \"check-change\": function ($event) {\n                                      return _vm.handleCheckChange(2)\n                                    },\n                                  },\n                                  scopedSlots: _vm._u([\n                                    {\n                                      key: \"default\",\n                                      fn: function (ref) {\n                                        var node = ref.node\n                                        var data = ref.data\n                                        return _c(\n                                          \"span\",\n                                          {\n                                            staticClass: \"custom-tree-node\",\n                                            attrs: { title: node.label },\n                                          },\n                                          [\n                                            _c(\"i\", { class: data.icon }),\n                                            _c(\n                                              \"span\",\n                                              { staticClass: \"text\" },\n                                              [_vm._v(_vm._s(node.label))]\n                                            ),\n                                          ]\n                                        )\n                                      },\n                                    },\n                                  ]),\n                                }),\n                              ],\n                              1\n                            ),\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"el-tab-pane\",\n                          { attrs: { label: \"权限组\", name: \"permission\" } },\n                          [\n                            _c(\"el-alert\", {\n                              attrs: {\n                                title: \"转交内容：移交人的权限组\",\n                                type: \"warning\",\n                                \"show-icon\": \"\",\n                              },\n                            }),\n                            _c(\n                              \"div\",\n                              { staticClass: \"tabs-box-inner\" },\n                              [\n                                _c(\"el-tree\", {\n                                  ref: \"handoverContentTree3\",\n                                  attrs: {\n                                    data: _vm.treeData.permission,\n                                    props: _vm.props,\n                                    \"show-checkbox\": \"\",\n                                    \"default-expand-all\": \"\",\n                                    \"node-key\": \"id\",\n                                    \"check-on-click-node\": \"\",\n                                    \"expand-on-click-node\": false,\n                                  },\n                                  on: {\n                                    \"check-change\": function ($event) {\n                                      return _vm.handleCheckChange(3)\n                                    },\n                                  },\n                                  scopedSlots: _vm._u([\n                                    {\n                                      key: \"default\",\n                                      fn: function (ref) {\n                                        var node = ref.node\n                                        var data = ref.data\n                                        return _c(\n                                          \"span\",\n                                          {\n                                            staticClass: \"custom-tree-node\",\n                                            attrs: { title: node.label },\n                                          },\n                                          [\n                                            _c(\"i\", { class: data.icon }),\n                                            _c(\n                                              \"span\",\n                                              { staticClass: \"text\" },\n                                              [_vm._v(_vm._s(node.label))]\n                                            ),\n                                          ]\n                                        )\n                                      },\n                                    },\n                                  ]),\n                                }),\n                              ],\n                              1\n                            ),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                  ],\n                  1\n                ),\n              ],\n            ],\n            2\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"span\",\n        {\n          staticClass: \"dialog-footer\",\n          attrs: { slot: \"footer\" },\n          slot: \"footer\",\n        },\n        [\n          _c(\n            \"el-button\",\n            {\n              on: {\n                click: function ($event) {\n                  _vm.visible = false\n                },\n              },\n            },\n            [_vm._v(\"取消\")]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"primary\", loading: _vm.btnLoading },\n              on: {\n                click: function ($event) {\n                  return _vm.dataFormSubmit()\n                },\n              },\n            },\n            [_vm._v(\"确定\")]\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}