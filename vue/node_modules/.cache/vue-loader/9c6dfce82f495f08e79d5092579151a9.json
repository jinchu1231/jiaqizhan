{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/chat/Chart.vue?vue&type=template&id=5ec11ff6&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/chat/Chart.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-collapse-item\",\n    { attrs: { title: _vm.getTitle(), name: \"1\" } },\n    [\n      !_vm.noStyleTypeList.includes(_vm.activeData.jnpfKey)\n        ? _c(\n            \"jnpf-form-tip-item\",\n            { attrs: { label: \"风格类型\", \"tip-label\": _vm.getTipLabel() } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: { placeholder: \"请选择风格类型\", filterable: \"\" },\n                  on: { change: _vm.styleTypeChange },\n                  model: {\n                    value: _vm.activeData.option.styleType,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"styleType\", $$v)\n                    },\n                    expression: \"activeData.option.styleType\",\n                  },\n                },\n                _vm._l(_vm.styleTypeOptions, function (item, index) {\n                  return _c(\"el-option\", {\n                    key: index,\n                    attrs: { label: item.label, value: item.value },\n                  })\n                }),\n                1\n              ),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"lineChart\"\n        ? [\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"面积堆积\" } },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.areaStyle,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"areaStyle\", $$v)\n                    },\n                    expression: \"activeData.option.areaStyle\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"线条宽度\" } },\n              [\n                _c(\"el-slider\", {\n                  attrs: { min: 1, max: 20 },\n                  model: {\n                    value: _vm.activeData.option.seriesLineStyleWidth,\n                    callback: function ($$v) {\n                      _vm.$set(\n                        _vm.activeData.option,\n                        \"seriesLineStyleWidth\",\n                        $$v\n                      )\n                    },\n                    expression: \"activeData.option.seriesLineStyleWidth\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.showType == \"pc\",\n                    expression: \"showType == 'pc'\",\n                  },\n                ],\n                attrs: { label: \"点的大小\" },\n              },\n              [\n                _c(\"el-slider\", {\n                  attrs: { max: 20 },\n                  model: {\n                    value: _vm.activeData.option.seriesSymbolRotate,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"seriesSymbolRotate\", $$v)\n                    },\n                    expression: \"activeData.option.seriesSymbolRotate\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"pieChart\"\n        ? [\n            _c(\n              \"el-form-item\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value:\n                      _vm.showType == \"pc\" ||\n                      _vm.activeData.option.styleType == 1,\n                    expression:\n                      \"showType == 'pc'||activeData.option.styleType==1\",\n                  },\n                ],\n                attrs: { label: \"南丁格尔图\" },\n              },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.roseType,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"roseType\", $$v)\n                    },\n                    expression: \"activeData.option.roseType\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.showType == \"pc\",\n                    expression: \"showType == 'pc'\",\n                  },\n                ],\n                attrs: { label: \"自动排序\" },\n              },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.sortable,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"sortable\", $$v)\n                    },\n                    expression: \"activeData.option.sortable\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"不展示零\" } },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.showZero,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"showZero\", $$v)\n                    },\n                    expression: \"activeData.option.showZero\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"radarChart\"\n        ? [\n            _c(\n              \"el-form-item\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.showType == \"pc\",\n                    expression: \"showType == 'pc'\",\n                  },\n                ],\n                attrs: { label: \"指示器大小\" },\n              },\n              [\n                _c(\"el-input-number\", {\n                  attrs: { \"controls-position\": \"right\", min: 12, max: 25 },\n                  model: {\n                    value: _vm.activeData.option.radarAxisNameFontSize,\n                    callback: function ($$v) {\n                      _vm.$set(\n                        _vm.activeData.option,\n                        \"radarAxisNameFontSize\",\n                        $$v\n                      )\n                    },\n                    expression: \"activeData.option.radarAxisNameFontSize\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.showType == \"pc\",\n                    expression: \"showType == 'pc'\",\n                  },\n                ],\n                attrs: { label: \"指示器加粗\" },\n              },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.radarAxisNameFontWeight,\n                    callback: function ($$v) {\n                      _vm.$set(\n                        _vm.activeData.option,\n                        \"radarAxisNameFontWeight\",\n                        $$v\n                      )\n                    },\n                    expression: \"activeData.option.radarAxisNameFontWeight\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                staticStyle: { height: \"32px\" },\n                attrs: { label: \"指示器颜色\" },\n              },\n              [\n                _c(\"el-color-picker\", {\n                  model: {\n                    value: _vm.activeData.option.radarAxisNameColor,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"radarAxisNameColor\", $$v)\n                    },\n                    expression: \"activeData.option.radarAxisNameColor\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.showType == \"pc\",\n                    expression: \"showType == 'pc'\",\n                  },\n                ],\n                attrs: { label: \"区域透明度\" },\n              },\n              [\n                _c(\"el-slider\", {\n                  attrs: { max: 1, step: 0.1 },\n                  model: {\n                    value: _vm.activeData.option.seriesAreaStyleOpacity,\n                    callback: function ($$v) {\n                      _vm.$set(\n                        _vm.activeData.option,\n                        \"seriesAreaStyleOpacity\",\n                        $$v\n                      )\n                    },\n                    expression: \"activeData.option.seriesAreaStyleOpacity\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"mapChart\"\n        ? [\n            _c(\"MapSet\", {\n              attrs: {\n                activeData: _vm.activeData,\n                cascaderOptions: _vm.cascaderOptions,\n                showType: _vm.showType,\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"rankList\"\n        ? [\n            _c(\"el-divider\", [_vm._v(\"列表字段\")]),\n            _c(\n              \"draggable\",\n              {\n                attrs: {\n                  list: _vm.activeData.option.columnOptions,\n                  animation: 340,\n                  group: \"selectItem\",\n                  handle: \".option-drag\",\n                },\n              },\n              _vm._l(\n                _vm.activeData.option.columnOptions,\n                function (item, index) {\n                  return _c(\n                    \"div\",\n                    { key: index, staticClass: \"select-item\" },\n                    [\n                      _c(\n                        \"div\",\n                        { staticClass: \"select-line-icon option-drag\" },\n                        [_c(\"i\", { staticClass: \"icon-ym icon-ym-darg\" })]\n                      ),\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"列名\", size: \"small\" },\n                        model: {\n                          value: item.label,\n                          callback: function ($$v) {\n                            _vm.$set(item, \"label\", $$v)\n                          },\n                          expression: \"item.label\",\n                        },\n                      }),\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"字段\", size: \"small\" },\n                        model: {\n                          value: item.value,\n                          callback: function ($$v) {\n                            _vm.$set(item, \"value\", $$v)\n                          },\n                          expression: \"item.value\",\n                        },\n                      }),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"close-btn select-line-icon\",\n                          class: {\n                            opacity5:\n                              _vm.activeData.option.columnOptions.length == 1,\n                          },\n                          on: {\n                            click: function ($event) {\n                              return _vm.delSelectItem(index)\n                            },\n                          },\n                        },\n                        [_c(\"i\", { staticClass: \"el-icon-remove-outline\" })]\n                      ),\n                    ],\n                    1\n                  )\n                }\n              ),\n              0\n            ),\n            _c(\n              \"div\",\n              { staticStyle: { margin: \"0 0 15px 29px\" } },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    staticStyle: { \"padding-bottom\": \"0\" },\n                    attrs: {\n                      icon: \"el-icon-circle-plus-outline\",\n                      type: \"text\",\n                    },\n                    on: { click: _vm.addSelectItem },\n                  },\n                  [_vm._v(\"\\n        添加字段\\n      \")]\n                ),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"timeAxis\"\n        ? [\n            _c(\n              \"jnpf-form-tip-item\",\n              {\n                attrs: {\n                  label: \"标签布局\",\n                  \"tip-label\": \"APP不支持所有交错类型，默认显示轴右侧\",\n                },\n              },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"请选择风格类型\", filterable: \"\" },\n                    model: {\n                      value: _vm.activeData.option.layout,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData.option, \"layout\", $$v)\n                      },\n                      expression: \"activeData.option.layout\",\n                    },\n                  },\n                  _vm._l(_vm.layoutStyleList, function (item, index) {\n                    return _c(\"el-option\", {\n                      key: index,\n                      attrs: { label: item.label, value: item.value },\n                    })\n                  }),\n                  1\n                ),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"排序\" } },\n              [\n                _c(\n                  \"el-radio-group\",\n                  {\n                    attrs: { size: \"small\" },\n                    model: {\n                      value: _vm.activeData.option.sortable,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData.option, \"sortable\", $$v)\n                      },\n                      expression: \"activeData.option.sortable\",\n                    },\n                  },\n                  _vm._l(_vm.sortList, function (item, index) {\n                    return _c(\n                      \"el-radio-button\",\n                      { key: index, attrs: { label: item.value } },\n                      [\n                        _vm._v(\n                          \"\\n          \" + _vm._s(item.label) + \"\\n        \"\n                        ),\n                      ]\n                    )\n                  }),\n                  1\n                ),\n              ],\n              1\n            ),\n            _c(\n              \"jnpf-form-tip-item\",\n              { attrs: { label: \"显示条数\" } },\n              [\n                _vm.showType == \"pc\"\n                  ? _c(\"el-input-number\", {\n                      attrs: { \"controls-position\": \"right\", min: 1, max: 50 },\n                      model: {\n                        value: _vm.activeData.option.showNumber,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.activeData.option, \"showNumber\", $$v)\n                        },\n                        expression: \"activeData.option.showNumber\",\n                      },\n                    })\n                  : _c(\"el-input-number\", {\n                      attrs: { \"controls-position\": \"right\", min: 1, max: 50 },\n                      model: {\n                        value: _vm.activeData.option.appShowNumber,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.activeData.option, \"appShowNumber\", $$v)\n                        },\n                        expression: \"activeData.option.appShowNumber\",\n                      },\n                    }),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"text\"\n        ? [\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"文本类型\" } },\n              [\n                _c(\n                  \"el-radio-group\",\n                  {\n                    attrs: { size: \"small\" },\n                    on: { change: _vm.textChange },\n                    model: {\n                      value: _vm.activeData.option.styleType,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData.option, \"styleType\", $$v)\n                      },\n                      expression: \"activeData.option.styleType\",\n                    },\n                  },\n                  _vm._l(_vm.textStyleList, function (item, index) {\n                    return _c(\n                      \"el-radio-button\",\n                      { key: index, attrs: { label: item.value } },\n                      [\n                        _vm._v(\n                          \"\\n          \" + _vm._s(item.label) + \"\\n        \"\n                        ),\n                      ]\n                    )\n                  }),\n                  1\n                ),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"数据类型\" } },\n              [\n                _c(\n                  \"el-radio-group\",\n                  {\n                    attrs: { size: \"small\" },\n                    on: { change: _vm.dataTypeChange },\n                    model: {\n                      value: _vm.activeData.dataType,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData, \"dataType\", $$v)\n                      },\n                      expression: \"activeData.dataType\",\n                    },\n                  },\n                  [\n                    _c(\"el-radio-button\", { attrs: { label: \"static\" } }, [\n                      _vm._v(\"静态数据\"),\n                    ]),\n                    _c(\"el-radio-button\", { attrs: { label: \"dynamic\" } }, [\n                      _vm._v(\"远端数据\"),\n                    ]),\n                  ],\n                  1\n                ),\n              ],\n              1\n            ),\n            _vm.activeData.dataType == \"static\"\n              ? _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"文本内容\" } },\n                  [\n                    _vm.activeData.option.styleType == 1\n                      ? _c(\"el-input\", {\n                          attrs: { placeholder: \"请输入文本内容\" },\n                          model: {\n                            value: _vm.activeData.option.defaultValue,\n                            callback: function ($$v) {\n                              _vm.$set(\n                                _vm.activeData.option,\n                                \"defaultValue\",\n                                $$v\n                              )\n                            },\n                            expression: \"activeData.option.defaultValue\",\n                          },\n                        })\n                      : _vm._e(),\n                    _vm.activeData.option.styleType == 2\n                      ? _c(\n                          \"el-button\",\n                          {\n                            on: {\n                              click: function ($event) {\n                                return _vm.showEditor()\n                              },\n                            },\n                          },\n                          [_vm._v(\"设置\")]\n                        )\n                      : _vm._e(),\n                  ],\n                  1\n                )\n              : _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"数据接口\" } },\n                  [\n                    _c(\"interface-dialog\", {\n                      attrs: {\n                        value: _vm.activeData.propsApi,\n                        title: _vm.activeData.propsName,\n                        popupTitle: \"数据接口\",\n                      },\n                      on: { change: _vm.propsApiChange },\n                    }),\n                  ],\n                  1\n                ),\n            _vm.activeData.dataType === \"dynamic\" && _vm.activeData.propsApi\n              ? _c(\"refresh\", { attrs: { refresh: _vm.activeData.refresh } })\n              : _vm._e(),\n            _vm.activeData.option.styleType != 2\n              ? [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"文本大小\" } },\n                    [\n                      _c(\"el-input-number\", {\n                        attrs: {\n                          \"controls-position\": \"right\",\n                          min: 12,\n                          max: 25,\n                        },\n                        model: {\n                          value: _vm.activeData.option.textFontSize,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.activeData.option, \"textFontSize\", $$v)\n                          },\n                          expression: \"activeData.option.textFontSize\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"文本加粗\" } },\n                    [\n                      _c(\"el-switch\", {\n                        model: {\n                          value: _vm.activeData.option.textFontWeight,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.activeData.option,\n                              \"textFontWeight\",\n                              $$v\n                            )\n                          },\n                          expression: \"activeData.option.textFontWeight\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"文本斜体\" } },\n                    [\n                      _c(\"el-switch\", {\n                        model: {\n                          value: _vm.activeData.option.textFontStyle,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.activeData.option,\n                              \"textFontStyle\",\n                              $$v\n                            )\n                          },\n                          expression: \"activeData.option.textFontStyle\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      staticStyle: { height: \"32px\" },\n                      attrs: { label: \"文本颜色\" },\n                    },\n                    [\n                      _c(\"el-color-picker\", {\n                        model: {\n                          value: _vm.activeData.option.textFontColor,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.activeData.option,\n                              \"textFontColor\",\n                              $$v\n                            )\n                          },\n                          expression: \"activeData.option.textFontColor\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"文本位置\" } },\n                    [\n                      _c(\n                        \"el-radio-group\",\n                        {\n                          attrs: { size: \"small\" },\n                          model: {\n                            value: _vm.activeData.option.textLeft,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.activeData.option, \"textLeft\", $$v)\n                            },\n                            expression: \"activeData.option.textLeft\",\n                          },\n                        },\n                        _vm._l(_vm.alignList, function (item, index) {\n                          return _c(\n                            \"el-radio-button\",\n                            { key: index, attrs: { label: item.value } },\n                            [\n                              _vm._v(\n                                \"\\n            \" +\n                                  _vm._s(item.label) +\n                                  \"\\n          \"\n                              ),\n                            ]\n                          )\n                        }),\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"文本下划线\" } },\n                    [\n                      _c(\n                        \"el-radio-group\",\n                        {\n                          attrs: { size: \"small\" },\n                          model: {\n                            value: _vm.activeData.option.textUnderLine,\n                            callback: function ($$v) {\n                              _vm.$set(\n                                _vm.activeData.option,\n                                \"textUnderLine\",\n                                $$v\n                              )\n                            },\n                            expression: \"activeData.option.textUnderLine\",\n                          },\n                        },\n                        _vm._l(_vm.underLineList, function (item, index) {\n                          return _c(\n                            \"el-radio-button\",\n                            { key: index, attrs: { label: item.value } },\n                            [\n                              _vm._v(\n                                \"\\n            \" +\n                                  _vm._s(item.label) +\n                                  \"\\n          \"\n                              ),\n                            ]\n                          )\n                        }),\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ]\n              : _vm._e(),\n            _vm.activeData.option.styleType != \"2\"\n              ? _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"文本滚动\" } },\n                  [\n                    _c(\"el-switch\", {\n                      model: {\n                        value: _vm.activeData.option.textAutoplay,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.activeData.option, \"textAutoplay\", $$v)\n                        },\n                        expression: \"activeData.option.textAutoplay\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm.activeData.option.textAutoplay &&\n            _vm.activeData.option.styleType != \"2\"\n              ? [\n                  _vm.showType == \"pc\"\n                    ? _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"滚动方向\" } },\n                        [\n                          _c(\n                            \"el-radio-group\",\n                            {\n                              attrs: { size: \"small\" },\n                              on: { change: _vm.renderKeyChange },\n                              model: {\n                                value: _vm.activeData.option.textAutoplayMode,\n                                callback: function ($$v) {\n                                  _vm.$set(\n                                    _vm.activeData.option,\n                                    \"textAutoplayMode\",\n                                    $$v\n                                  )\n                                },\n                                expression:\n                                  \"activeData.option.textAutoplayMode\",\n                              },\n                            },\n                            [\n                              _c(\n                                \"el-radio-button\",\n                                { attrs: { label: \"left\" } },\n                                [_vm._v(\"横向\")]\n                              ),\n                              _c(\n                                \"el-radio-button\",\n                                { attrs: { label: \"up\" } },\n                                [_vm._v(\"纵向\")]\n                              ),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"滚动速度\" } },\n                    [\n                      _c(\"el-input-number\", {\n                        attrs: {\n                          \"controls-position\": \"right\",\n                          min: 10,\n                          max: 100,\n                        },\n                        on: { change: _vm.renderKeyChange },\n                        model: {\n                          value: _vm.activeData.option.textAutoplaySpeed,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.activeData.option,\n                              \"textAutoplaySpeed\",\n                              $$v\n                            )\n                          },\n                          expression: \"activeData.option.textAutoplaySpeed\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]\n              : _vm._e(),\n            _c(\n              \"el-form-item\",\n              { staticStyle: { height: \"32px\" }, attrs: { label: \"背景色\" } },\n              [\n                _c(\"el-color-picker\", {\n                  model: {\n                    value: _vm.activeData.option.textBgColor,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"textBgColor\", $$v)\n                    },\n                    expression: \"activeData.option.textBgColor\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\"Link\", {\n              attrs: {\n                activeData: _vm.activeData,\n                menuList: _vm.menuList,\n                appMenuList: _vm.appMenuList,\n                showType: _vm.showType,\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"image\"\n        ? [\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"图片来源\" } },\n              [\n                _c(\n                  \"el-radio-group\",\n                  {\n                    attrs: { size: \"small\" },\n                    on: { change: _vm.styleTypeChange },\n                    model: {\n                      value: _vm.activeData.option.styleType,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData.option, \"styleType\", $$v)\n                      },\n                      expression: \"activeData.option.styleType\",\n                    },\n                  },\n                  _vm._l(_vm.styleTypeOptions, function (item, index) {\n                    return _c(\n                      \"el-radio-button\",\n                      { key: index, attrs: { label: item.value } },\n                      [\n                        _vm._v(\n                          \"\\n          \" + _vm._s(item.label) + \"\\n        \"\n                        ),\n                      ]\n                    )\n                  }),\n                  1\n                ),\n              ],\n              1\n            ),\n            _vm.activeData.option.styleType == 1\n              ? _c(\n                  \"jnpf-form-tip-item\",\n                  { attrs: { label: \"上传图片\" } },\n                  [\n                    _c(\"single-img\", {\n                      model: {\n                        value: _vm.activeData.option.defaultValue,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.activeData.option, \"defaultValue\", $$v)\n                        },\n                        expression: \"activeData.option.defaultValue\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm.activeData.option.styleType == 2\n              ? _c(\n                  \"jnpf-form-tip-item\",\n                  {\n                    attrs: {\n                      label: \"图片地址\",\n                      tipLabel: \"地址以http://或https://为开头\",\n                    },\n                  },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { placeholder: \"请输入图片地址\" },\n                      model: {\n                        value: _vm.activeData.option.defaultValue,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.activeData.option, \"defaultValue\", $$v)\n                        },\n                        expression: \"activeData.option.defaultValue\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"数据接口\" } },\n                  [\n                    _c(\"interface-dialog\", {\n                      attrs: {\n                        value: _vm.activeData.propsApi,\n                        title: _vm.activeData.propsName,\n                        popupTitle: \"数据接口\",\n                      },\n                      on: { change: _vm.propsApiChange },\n                    }),\n                  ],\n                  1\n                ),\n            _vm.activeData.dataType === \"dynamic\" && _vm.activeData.propsApi\n              ? _c(\"refresh\", { attrs: { refresh: _vm.activeData.refresh } })\n              : _vm._e(),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"填充方式\" } },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"请选择风格类型\", filterable: \"\" },\n                    model: {\n                      value: _vm.activeData.option.imageFillStyle,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData.option, \"imageFillStyle\", $$v)\n                      },\n                      expression: \"activeData.option.imageFillStyle\",\n                    },\n                  },\n                  _vm._l(_vm.fillStyleList, function (item, index) {\n                    return _c(\"el-option\", {\n                      key: index,\n                      attrs: { label: item.label, value: item.value },\n                    })\n                  }),\n                  1\n                ),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"文本内容\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"请输入文本内容\" },\n                  model: {\n                    value: _vm.activeData.option.textDefaultValue,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"textDefaultValue\", $$v)\n                    },\n                    expression: \"activeData.option.textDefaultValue\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\"textSet\", { attrs: { activeData: _vm.activeData } }),\n            _c(\"Link\", {\n              attrs: {\n                activeData: _vm.activeData,\n                menuList: _vm.menuList,\n                appMenuList: _vm.appMenuList,\n                showType: _vm.showType,\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"carousel\"\n        ? [\n            _c(\n              \"el-form-item\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.showType == \"pc\",\n                    expression: \"showType=='pc'\",\n                  },\n                ],\n                attrs: { label: \"轮播图方向\" },\n              },\n              [\n                _c(\n                  \"el-radio-group\",\n                  {\n                    attrs: { size: \"small\" },\n                    model: {\n                      value: _vm.activeData.option.carouselDirection,\n                      callback: function ($$v) {\n                        _vm.$set(\n                          _vm.activeData.option,\n                          \"carouselDirection\",\n                          $$v\n                        )\n                      },\n                      expression: \"activeData.option.carouselDirection\",\n                    },\n                  },\n                  _vm._l(_vm.directionList, function (item, index) {\n                    return _c(\n                      \"el-radio-button\",\n                      { key: index, attrs: { label: item.value } },\n                      [\n                        _vm._v(\n                          \"\\n          \" + _vm._s(item.label) + \"\\n        \"\n                        ),\n                      ]\n                    )\n                  }),\n                  1\n                ),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"自动轮播\" } },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.carouselAutoplay,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"carouselAutoplay\", $$v)\n                    },\n                    expression: \"activeData.option.carouselAutoplay\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"轮播间隔\" } },\n              [\n                _c(\n                  \"el-input\",\n                  {\n                    attrs: {\n                      placeholder: \"请输入轮播间隔\",\n                      type: \"number\",\n                      min: 500,\n                      max: 500000,\n                    },\n                    model: {\n                      value: _vm.activeData.option.carouselInterval,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData.option, \"carouselInterval\", $$v)\n                      },\n                      expression: \"activeData.option.carouselInterval\",\n                    },\n                  },\n                  [_c(\"template\", { slot: \"append\" }, [_vm._v(\"ms\")])],\n                  2\n                ),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"指示点显示\" } },\n              [\n                _c(\n                  \"el-radio-group\",\n                  {\n                    attrs: { size: \"small\" },\n                    model: {\n                      value: _vm.activeData.option.carouselIndicatorPosition,\n                      callback: function ($$v) {\n                        _vm.$set(\n                          _vm.activeData.option,\n                          \"carouselIndicatorPosition\",\n                          $$v\n                        )\n                      },\n                      expression: \"activeData.option.carouselIndicatorPosition\",\n                    },\n                  },\n                  _vm._l(_vm.indicatorPositionList, function (item, index) {\n                    return _c(\n                      \"el-radio-button\",\n                      { key: index, attrs: { label: item.value } },\n                      [\n                        _vm.activeData.option.carouselDirection == \"horizontal\"\n                          ? _c(\"span\", [_vm._v(_vm._s(item.label))])\n                          : _c(\"span\", [_vm._v(_vm._s(item.title))]),\n                      ]\n                    )\n                  }),\n                  1\n                ),\n              ],\n              1\n            ),\n            _vm.activeData.option.carouselDirection == \"horizontal\" &&\n            _vm.showType == \"pc\"\n              ? _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"箭头显示\" } },\n                  [\n                    _c(\n                      \"el-radio-group\",\n                      {\n                        attrs: { size: \"small\" },\n                        model: {\n                          value: _vm.activeData.option.carouselArrow,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.activeData.option,\n                              \"carouselArrow\",\n                              $$v\n                            )\n                          },\n                          expression: \"activeData.option.carouselArrow\",\n                        },\n                      },\n                      _vm._l(_vm.arrowList, function (item, index) {\n                        return _c(\n                          \"el-radio-button\",\n                          { key: index, attrs: { label: item.value } },\n                          [\n                            _vm._v(\n                              \"\\n          \" + _vm._s(item.label) + \"\\n        \"\n                            ),\n                          ]\n                        )\n                      }),\n                      1\n                    ),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _c(\n              \"el-form-item\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.showType == \"pc\",\n                    expression: \"showType=='pc'\",\n                  },\n                ],\n                attrs: { label: \"循环显示\" },\n              },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.carouselLoop,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"carouselLoop\", $$v)\n                    },\n                    expression: \"activeData.option.carouselLoop\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.showType != \"pc\",\n                    expression: \"showType!='pc'\",\n                  },\n                ],\n                attrs: { label: \"3D效果\" },\n              },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.carouselType,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"carouselType\", $$v)\n                    },\n                    expression: \"activeData.option.carouselType\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"选项\" } },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    on: {\n                      click: function ($event) {\n                        return _vm.showData(\n                          \"carouselData\",\n                          \"carouselDataVisible\"\n                        )\n                      },\n                    },\n                  },\n                  [_vm._v(\"设置\")]\n                ),\n              ],\n              1\n            ),\n            _c(\"refresh\", {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.activeData.option[\n                    _vm.showType == \"pc\" ? \"defaultValue\" : \"appDefaultValue\"\n                  ].find(function (ele) {\n                    return ele.dataType === 3\n                  }),\n                  expression:\n                    \"activeData.option[showType=='pc'?'defaultValue':'appDefaultValue'].find(ele => ele.dataType === 3)\",\n                },\n              ],\n              attrs: { refresh: _vm.activeData.refresh },\n            }),\n            _vm.carouselDataVisible\n              ? _c(\"CarouselData\", {\n                  ref: \"carouselData\",\n                  attrs: {\n                    menuList: _vm.menuList,\n                    appMenuList: _vm.appMenuList,\n                    showType: _vm.showType,\n                  },\n                  on: { refresh: _vm.refresh },\n                })\n              : _vm._e(),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"填充方式\" } },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"请选择风格类型\", filterable: \"\" },\n                    model: {\n                      value: _vm.activeData.option.imageFillStyle,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData.option, \"imageFillStyle\", $$v)\n                      },\n                      expression: \"activeData.option.imageFillStyle\",\n                    },\n                  },\n                  _vm._l(_vm.fillStyleList, function (item, index) {\n                    return _c(\"el-option\", {\n                      key: index,\n                      attrs: { label: item.label, value: item.value },\n                    })\n                  }),\n                  1\n                ),\n              ],\n              1\n            ),\n            _c(\"textSet\", { attrs: { activeData: _vm.activeData } }),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"video\"\n        ? [\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"视频来源\" } },\n              [\n                _c(\n                  \"el-radio-group\",\n                  {\n                    attrs: { size: \"small\" },\n                    on: { change: _vm.styleTypeChange },\n                    model: {\n                      value: _vm.activeData.option.styleType,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData.option, \"styleType\", $$v)\n                      },\n                      expression: \"activeData.option.styleType\",\n                    },\n                  },\n                  _vm._l(_vm.styleTypeOptions, function (item, index) {\n                    return _c(\n                      \"el-radio-button\",\n                      { key: index, attrs: { label: item.value } },\n                      [\n                        _vm._v(\n                          \"\\n          \" + _vm._s(item.label) + \"\\n        \"\n                        ),\n                      ]\n                    )\n                  }),\n                  1\n                ),\n              ],\n              1\n            ),\n            _vm.activeData.option.styleType == \"1\"\n              ? _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"上传视频\" } },\n                  [\n                    _c(\"JnpfUploadFile\", {\n                      attrs: {\n                        limit: 1,\n                        buttonText: \"上传视频\",\n                        accept: \"video/*\",\n                        fileSize: \"100\",\n                      },\n                      on: { change: _vm.uploadFileChange },\n                      model: {\n                        value: _vm.fileList,\n                        callback: function ($$v) {\n                          _vm.fileList = $$v\n                        },\n                        expression: \"fileList\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm.activeData.option.styleType == 2\n              ? _c(\n                  \"jnpf-form-tip-item\",\n                  {\n                    attrs: {\n                      label: \"视频地址\",\n                      tipLabel: \"地址以http://或https://开头\",\n                    },\n                  },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { placeholder: \"请输入视频地址\" },\n                      model: {\n                        value: _vm.activeData.option.defaultValue,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.activeData.option, \"defaultValue\", $$v)\n                        },\n                        expression: \"activeData.option.defaultValue\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"数据接口\" } },\n                    [\n                      _c(\"interface-dialog\", {\n                        attrs: {\n                          value: _vm.activeData.propsApi,\n                          title: _vm.activeData.propsName,\n                          popupTitle: \"数据接口\",\n                        },\n                        on: { change: _vm.propsApiChange },\n                      }),\n                    ],\n                    1\n                  ),\n                  _vm.activeData.dataType === \"dynamic\" &&\n                  _vm.activeData.propsApi\n                    ? _c(\"refresh\", {\n                        attrs: { refresh: _vm.activeData.refresh },\n                      })\n                    : _vm._e(),\n                ],\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"自动播放\" } },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.videoAutoplay,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"videoAutoplay\", $$v)\n                    },\n                    expression: \"activeData.option.videoAutoplay\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"播放频率\" } },\n              [\n                _c(\n                  \"el-radio-group\",\n                  {\n                    attrs: { size: \"small\" },\n                    model: {\n                      value: _vm.activeData.option.playNumber,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData.option, \"playNumber\", $$v)\n                      },\n                      expression: \"activeData.option.playNumber\",\n                    },\n                  },\n                  _vm._l(_vm.playNumberList, function (item, index) {\n                    return _c(\n                      \"el-radio-button\",\n                      { key: index, attrs: { label: item.value } },\n                      [\n                        _vm._v(\n                          \"\\n          \" + _vm._s(item.label) + \"\\n        \"\n                        ),\n                      ]\n                    )\n                  }),\n                  1\n                ),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"静音播放\" } },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.mutePlay,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"mutePlay\", $$v)\n                    },\n                    expression: \"activeData.option.mutePlay\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"iframe\"\n        ? [\n            _c(\n              \"jnpf-form-tip-item\",\n              {\n                attrs: {\n                  label: \"链接地址\",\n                  \"tip-label\": \"地址以http://或https://为开头\",\n                },\n              },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"请输入链接地址\" },\n                  model: {\n                    value: _vm.activeData.option.defaultValue,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"defaultValue\", $$v)\n                    },\n                    expression: \"activeData.option.defaultValue\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"todo\"\n        ? [\n            _vm.showType == \"app\"\n              ? [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"风格类型\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            placeholder: \"请选择风格类型\",\n                            filterable: \"\",\n                          },\n                          model: {\n                            value: _vm.activeData.option.styleType,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.activeData.option, \"styleType\", $$v)\n                            },\n                            expression: \"activeData.option.styleType\",\n                          },\n                        },\n                        _vm._l(_vm.appTodoStyleList, function (item, index) {\n                          return _c(\"el-option\", {\n                            key: index,\n                            attrs: { label: item.label, value: item.value },\n                          })\n                        }),\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _vm.activeData.option.styleType == 2\n                    ? [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"每行选项数\" } },\n                          [\n                            _c(\"el-input-number\", {\n                              attrs: {\n                                \"controls-position\": \"right\",\n                                min: 1,\n                                max: 10,\n                              },\n                              model: {\n                                value: _vm.activeData.option.appRowNumber,\n                                callback: function ($$v) {\n                                  _vm.$set(\n                                    _vm.activeData.option,\n                                    \"appRowNumber\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"activeData.option.appRowNumber\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"显示边框\" } },\n                          [\n                            _c(\"el-switch\", {\n                              model: {\n                                value: _vm.activeData.option.appShowBorder,\n                                callback: function ($$v) {\n                                  _vm.$set(\n                                    _vm.activeData.option,\n                                    \"appShowBorder\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"activeData.option.appShowBorder\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                      ]\n                    : _vm._e(),\n                ]\n              : [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"每行选项数\" } },\n                    [\n                      _c(\"el-input-number\", {\n                        attrs: {\n                          \"controls-position\": \"right\",\n                          min: 1,\n                          max: 10,\n                        },\n                        model: {\n                          value: _vm.activeData.option.rowNumber,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.activeData.option, \"rowNumber\", $$v)\n                          },\n                          expression: \"activeData.option.rowNumber\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"显示边框\" } },\n                    [\n                      _c(\"el-switch\", {\n                        model: {\n                          value: _vm.activeData.option.showBorder,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.activeData.option, \"showBorder\", $$v)\n                          },\n                          expression: \"activeData.option.showBorder\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"选项\" } },\n              [\n                _c(\"el-button\", { on: { click: _vm.showDataTodoData } }, [\n                  _vm._v(\"设置\"),\n                ]),\n              ],\n              1\n            ),\n            _c(\"refresh\", { attrs: { refresh: _vm.activeData.refresh } }),\n            _vm.todoDataVisible\n              ? _c(\"todo-data\", {\n                  ref: \"todoData\",\n                  on: { refresh: _vm.commonRefresh },\n                })\n              : _vm._e(),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"名称大小\" } },\n              [\n                _c(\"el-input-number\", {\n                  attrs: { \"controls-position\": \"right\", min: 12, max: 25 },\n                  model: {\n                    value: _vm.activeData.option.labelFontSize,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"labelFontSize\", $$v)\n                    },\n                    expression: \"activeData.option.labelFontSize\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"名称加粗\" } },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.labelFontWeight,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"labelFontWeight\", $$v)\n                    },\n                    expression: \"activeData.option.labelFontWeight\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { staticStyle: { height: \"32px\" }, attrs: { label: \"名称颜色\" } },\n              [\n                _c(\"el-color-picker\", {\n                  model: {\n                    value: _vm.activeData.option.labelFontColor,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"labelFontColor\", $$v)\n                    },\n                    expression: \"activeData.option.labelFontColor\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"数值大小\" } },\n              [\n                _c(\"el-input-number\", {\n                  attrs: { \"controls-position\": \"right\", min: 12, max: 25 },\n                  model: {\n                    value: _vm.activeData.option.valueFontSize,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"valueFontSize\", $$v)\n                    },\n                    expression: \"activeData.option.valueFontSize\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"数值加粗\" } },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.valueFontWeight,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"valueFontWeight\", $$v)\n                    },\n                    expression: \"activeData.option.valueFontWeight\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { staticStyle: { height: \"32px\" }, attrs: { label: \"数值颜色\" } },\n              [\n                _c(\"el-color-picker\", {\n                  model: {\n                    value: _vm.activeData.option.valueFontColor,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"valueFontColor\", $$v)\n                    },\n                    expression: \"activeData.option.valueFontColor\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _vm.showType == \"app\"\n              ? _c(\n                  \"el-form-item\",\n                  {\n                    staticStyle: { height: \"32px\" },\n                    attrs: { label: \"数值背景色\" },\n                  },\n                  [\n                    _c(\"el-color-picker\", {\n                      model: {\n                        value: _vm.activeData.option.valueFontBgColor,\n                        callback: function ($$v) {\n                          _vm.$set(\n                            _vm.activeData.option,\n                            \"valueFontBgColor\",\n                            $$v\n                          )\n                        },\n                        expression: \"activeData.option.valueFontBgColor\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"commonFunc\"\n        ? [\n            _vm.showType == \"app\"\n              ? [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"风格类型\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            placeholder: \"请选择风格类型\",\n                            filterable: \"\",\n                          },\n                          model: {\n                            value: _vm.activeData.option.appStyleType,\n                            callback: function ($$v) {\n                              _vm.$set(\n                                _vm.activeData.option,\n                                \"appStyleType\",\n                                $$v\n                              )\n                            },\n                            expression: \"activeData.option.appStyleType\",\n                          },\n                        },\n                        _vm._l(_vm.appTodoStyleList, function (item, index) {\n                          return _c(\"el-option\", {\n                            key: index,\n                            attrs: { label: item.label, value: item.value },\n                          })\n                        }),\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _vm.activeData.option.appStyleType == 2\n                    ? [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"每行选项数\" } },\n                          [\n                            _c(\"el-input-number\", {\n                              attrs: {\n                                \"controls-position\": \"right\",\n                                min: 1,\n                                max: 10,\n                              },\n                              model: {\n                                value: _vm.activeData.option.appRowNumber,\n                                callback: function ($$v) {\n                                  _vm.$set(\n                                    _vm.activeData.option,\n                                    \"appRowNumber\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"activeData.option.appRowNumber\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"显示边框\" } },\n                          [\n                            _c(\"el-switch\", {\n                              model: {\n                                value: _vm.activeData.option.appShowBorder,\n                                callback: function ($$v) {\n                                  _vm.$set(\n                                    _vm.activeData.option,\n                                    \"appShowBorder\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"activeData.option.appShowBorder\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                      ]\n                    : _vm._e(),\n                ]\n              : [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"每行选项数\" } },\n                    [\n                      _c(\"el-input-number\", {\n                        attrs: {\n                          \"controls-position\": \"right\",\n                          min: 1,\n                          max: 10,\n                        },\n                        model: {\n                          value: _vm.activeData.option.rowNumber,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.activeData.option, \"rowNumber\", $$v)\n                          },\n                          expression: \"activeData.option.rowNumber\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"显示边框\" } },\n                    [\n                      _c(\"el-switch\", {\n                        model: {\n                          value: _vm.activeData.option.showBorder,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.activeData.option, \"showBorder\", $$v)\n                          },\n                          expression: \"activeData.option.showBorder\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"选项\" } },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    on: {\n                      click: function ($event) {\n                        return _vm.showData(\n                          \"commonFunData\",\n                          \"commonFunDataVisible\"\n                        )\n                      },\n                    },\n                  },\n                  [_vm._v(\"设置\")]\n                ),\n              ],\n              1\n            ),\n            _vm.commonFunDataVisible\n              ? _c(\"CommonFunData\", {\n                  ref: \"commonFunData\",\n                  attrs: {\n                    menuList: _vm.menuList,\n                    appMenuList: _vm.appMenuList,\n                    showType: _vm.showType,\n                  },\n                  on: { refresh: _vm.refresh },\n                })\n              : _vm._e(),\n            _vm.showType == \"pc\"\n              ? _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"图标位置\" } },\n                  [\n                    _c(\n                      \"el-radio-group\",\n                      {\n                        attrs: { size: \"small\" },\n                        model: {\n                          value: _vm.activeData.option.styleType,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.activeData.option, \"styleType\", $$v)\n                          },\n                          expression: \"activeData.option.styleType\",\n                        },\n                      },\n                      _vm._l(_vm.commonFuncStyleList, function (item, index) {\n                        return _c(\n                          \"el-radio-button\",\n                          { key: index, attrs: { label: item.value } },\n                          [\n                            _vm._v(\n                              \"\\n          \" + _vm._s(item.label) + \"\\n        \"\n                            ),\n                          ]\n                        )\n                      }),\n                      1\n                    ),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"名称大小\" } },\n              [\n                _c(\"el-input-number\", {\n                  attrs: { \"controls-position\": \"right\", min: 12, max: 25 },\n                  model: {\n                    value: _vm.activeData.option.labelFontSize,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"labelFontSize\", $$v)\n                    },\n                    expression: \"activeData.option.labelFontSize\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"名称加粗\" } },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.labelFontWeight,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"labelFontWeight\", $$v)\n                    },\n                    expression: \"activeData.option.labelFontWeight\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { staticStyle: { height: \"32px\" }, attrs: { label: \"名称颜色\" } },\n              [\n                _c(\"el-color-picker\", {\n                  model: {\n                    value: _vm.activeData.option.labelFontColor,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"labelFontColor\", $$v)\n                    },\n                    expression: \"activeData.option.labelFontColor\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"dataBoard\"\n        ? [\n            _vm.showType == \"app\"\n              ? [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"风格类型\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            placeholder: \"请选择风格类型\",\n                            filterable: \"\",\n                          },\n                          model: {\n                            value: _vm.activeData.option.appStyleType,\n                            callback: function ($$v) {\n                              _vm.$set(\n                                _vm.activeData.option,\n                                \"appStyleType\",\n                                $$v\n                              )\n                            },\n                            expression: \"activeData.option.appStyleType\",\n                          },\n                        },\n                        _vm._l(_vm.appTodoStyleList, function (item, index) {\n                          return _c(\"el-option\", {\n                            key: index,\n                            attrs: { label: item.label, value: item.value },\n                          })\n                        }),\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _vm.activeData.option.appStyleType == 2\n                    ? [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"每行选项数\" } },\n                          [\n                            _c(\"el-input-number\", {\n                              attrs: {\n                                \"controls-position\": \"right\",\n                                min: 1,\n                                max: 8,\n                              },\n                              model: {\n                                value: _vm.activeData.option.appRowNumber,\n                                callback: function ($$v) {\n                                  _vm.$set(\n                                    _vm.activeData.option,\n                                    \"appRowNumber\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"activeData.option.appRowNumber\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"显示边框\" } },\n                          [\n                            _c(\"el-switch\", {\n                              model: {\n                                value: _vm.activeData.option.appShowBorder,\n                                callback: function ($$v) {\n                                  _vm.$set(\n                                    _vm.activeData.option,\n                                    \"appShowBorder\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"activeData.option.appShowBorder\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                      ]\n                    : _vm._e(),\n                ]\n              : [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"每行选项数\" } },\n                    [\n                      _c(\"el-input-number\", {\n                        attrs: { \"controls-position\": \"right\", min: 1, max: 8 },\n                        model: {\n                          value: _vm.activeData.option.rowNumber,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.activeData.option, \"rowNumber\", $$v)\n                          },\n                          expression: \"activeData.option.rowNumber\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"显示边框\" } },\n                    [\n                      _c(\"el-switch\", {\n                        model: {\n                          value: _vm.activeData.option.showBorder,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.activeData.option, \"showBorder\", $$v)\n                          },\n                          expression: \"activeData.option.showBorder\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n            _c(\"el-divider\", [_vm._v(\"选项设置\")]),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"数据类型\" } },\n              [\n                _c(\n                  \"el-radio-group\",\n                  {\n                    attrs: { size: \"small\" },\n                    on: { change: _vm.dataBoardDataTypeChange },\n                    model: {\n                      value: _vm.activeData.dataType,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData, \"dataType\", $$v)\n                      },\n                      expression: \"activeData.dataType\",\n                    },\n                  },\n                  [\n                    _c(\"el-radio-button\", { attrs: { label: \"static\" } }, [\n                      _vm._v(\"静态数据\"),\n                    ]),\n                    _c(\"el-radio-button\", { attrs: { label: \"dynamic\" } }, [\n                      _vm._v(\"远端数据\"),\n                    ]),\n                  ],\n                  1\n                ),\n              ],\n              1\n            ),\n            _vm.activeData.dataType === \"dynamic\"\n              ? _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"数据接口\" } },\n                  [\n                    _c(\"interface-dialog\", {\n                      attrs: {\n                        value: _vm.activeData.propsApi,\n                        title: _vm.activeData.propsName,\n                        popupTitle: \"数据接口\",\n                      },\n                      on: { change: _vm.propsApiChange },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm.activeData.dataType === \"dynamic\"\n              ? _c(\"Refresh\", { attrs: { refresh: _vm.activeData.refresh } })\n              : _vm._e(),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"选项\" } },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    on: {\n                      click: function ($event) {\n                        return _vm.showData(\n                          \"dataBoardData\",\n                          \"dataBoardDataVisible\"\n                        )\n                      },\n                    },\n                  },\n                  [_vm._v(\"设置\")]\n                ),\n              ],\n              1\n            ),\n            _vm.dataBoardDataVisible\n              ? _c(\"DataBoardData\", {\n                  ref: \"dataBoardData\",\n                  attrs: {\n                    menuList: _vm.menuList,\n                    appMenuList: _vm.appMenuList,\n                    interfaceId: _vm.activeData.propsApi,\n                    type: _vm.activeData.dataType === \"dynamic\" ? 2 : 1,\n                    showType: _vm.showType,\n                  },\n                  on: { refresh: _vm.refresh },\n                })\n              : _vm._e(),\n            _c(\"el-divider\", [_vm._v(\"选项样式\")]),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"名称大小\" } },\n              [\n                _c(\"el-input-number\", {\n                  attrs: { \"controls-position\": \"right\", min: 12, max: 25 },\n                  model: {\n                    value: _vm.activeData.option.labelFontSize,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"labelFontSize\", $$v)\n                    },\n                    expression: \"activeData.option.labelFontSize\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"名称加粗\" } },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.labelFontWeight,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"labelFontWeight\", $$v)\n                    },\n                    expression: \"activeData.option.labelFontWeight\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { staticStyle: { height: \"32px\" }, attrs: { label: \"名称颜色\" } },\n              [\n                _c(\"el-color-picker\", {\n                  model: {\n                    value: _vm.activeData.option.labelFontColor,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"labelFontColor\", $$v)\n                    },\n                    expression: \"activeData.option.labelFontColor\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"数值大小\" } },\n              [\n                _c(\"el-input-number\", {\n                  attrs: { \"controls-position\": \"right\", min: 12, max: 25 },\n                  model: {\n                    value: _vm.activeData.option.valueFontSize,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"valueFontSize\", $$v)\n                    },\n                    expression: \"activeData.option.valueFontSize\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"数值加粗\" } },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.valueFontWeight,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"valueFontWeight\", $$v)\n                    },\n                    expression: \"activeData.option.valueFontWeight\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { staticStyle: { height: \"32px\" }, attrs: { label: \"数值颜色\" } },\n              [\n                _c(\"el-color-picker\", {\n                  model: {\n                    value: _vm.activeData.option.valueFontColor,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"valueFontColor\", $$v)\n                    },\n                    expression: \"activeData.option.valueFontColor\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"单位大小\" } },\n              [\n                _c(\"el-input-number\", {\n                  attrs: { \"controls-position\": \"right\", min: 12, max: 25 },\n                  model: {\n                    value: _vm.activeData.option.unitFontSize,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"unitFontSize\", $$v)\n                    },\n                    expression: \"activeData.option.unitFontSize\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"单位加粗\" } },\n              [\n                _c(\"el-switch\", {\n                  model: {\n                    value: _vm.activeData.option.unitFontWeight,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"unitFontWeight\", $$v)\n                    },\n                    expression: \"activeData.option.unitFontWeight\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { staticStyle: { height: \"32px\" }, attrs: { label: \"单位颜色\" } },\n              [\n                _c(\"el-color-picker\", {\n                  model: {\n                    value: _vm.activeData.option.unitFontColor,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.option, \"unitFontColor\", $$v)\n                    },\n                    expression: \"activeData.option.unitFontColor\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.activeData.jnpfKey == \"tableList\"\n        ? _c(\"TableList\", {\n            attrs: { activeData: _vm.activeData, showType: _vm.showType },\n          })\n        : _vm._e(),\n      _vm.editorVisible\n        ? _c(\"popupEditor\", {\n            ref: \"popupEditor\",\n            on: { refresh: _vm.commonRefresh },\n          })\n        : _vm._e(),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}