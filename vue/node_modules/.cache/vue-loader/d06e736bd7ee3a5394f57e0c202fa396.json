{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/onlineDev/webDesign/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/onlineDev/webDesign/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Form from './Form'\nimport ViewForm from './ViewForm'\nimport LinkDialog from './ShortLinkDialog'\nimport AddBox from '@/views/generator/AddBox'\nimport mixin from '@/mixins/generator/index'\nimport previewDialog from '@/components/PreviewDialog'\nimport { Release } from '@/api/onlineDev/visualDev'\nimport { getMenuSelector } from '@/api/system/menu'\nimport EngineForm from '@/views/workFlow/flowEngine/Form'\nimport FlowManage from '@/views/workFlow/flowEngine/FlowManagement'\nimport { getFormById } from '@/api/workFlow/FormDesign'\nexport default {\n  name: 'onlineDev-webDesign',\n  mixins: [mixin],\n  components: { Form, ViewForm, AddBox, previewDialog, EngineForm, FlowManage, LinkDialog },\n  data() {\n    return {\n      showAll: false,\n      query: { keyword: '', type: 1 },\n      sort: 'webDesign',\n      previewDialogVisible: false,\n      releaseDialogVisible: false,\n      releaseBtnLoading: false,\n      currRow: {},\n      releaseQuery: {\n        pc: 1,\n        app: 1,\n        pcModuleParentId: '',\n        appModuleParentId: '',\n        systemId: ''\n      },\n      releaseQueryRule: {\n        pcModuleParentId: [\n          { required: true, message: '上级菜单不能为空', trigger: 'change' }\n        ],\n        appModuleParentId: [\n          { required: true, message: '上级菜单不能为空', trigger: 'change' }\n        ],\n      },\n      treeData: [],\n      appTreeData: [],\n      pcSystemId: \"\",\n      appSystemId: \"\",\n      previewType: \"\",\n      enginCategoryList: [],\n      engineFormVisible: false,\n      manageVisible: false,\n      linkVisible: false,\n      viewFormVisible: false,\n    }\n  },\n  created() {\n    this.getEnginCategoryList()\n  },\n  methods: {\n    preview(id, type) {\n      this.currId = id\n      this.previewType = type\n      this.$nextTick(() => {\n        this.previewDialogVisible = true\n      })\n    },\n    releaseModel() {\n      this.$refs['releaseForm'].validate((valid) => {\n        if (!valid) return\n        this.$confirm('发布模板会覆盖当前线上版本且进行菜单同步，是否继续？', '提示', {\n          type: 'warning'\n        }).then(() => {\n          setTimeout(() => {\n            this.release()\n          }, 200)\n        })\n      })\n    },\n    openReleaseDialog(row) {\n      this.currRow = row\n      this.releaseDialogVisible = true\n      this.pcSystemId = \"\"\n      this.appSystemId = \"\"\n      this.releaseQuery = {\n        pc: !row.pcIsRelease && !row.appIsRelease ? 1 : row.pcIsRelease,\n        app: !row.pcIsRelease && !row.appIsRelease ? 1 : row.appIsRelease,\n        pcModuleParentId: '',\n        appModuleParentId: '',\n      }\n      this.$nextTick(() => {\n        this.$refs['releaseForm'] && this.$refs['releaseForm'].resetFields()\n      })\n      this.getMenuSelector()\n      this.getAPPMenuSelector()\n    },\n    selectToggle(key) {\n      this.releaseQuery[key] = this.releaseQuery[key] === 1 ? 0 : 1\n      const type = key == 'pc' ? 'pcModuleParentId' : 'appModuleParentId'\n      this.$refs.releaseForm.clearValidate(type)\n    },\n    treeSelectChange(data, type) {\n      const systemId = data[1].systemId\n      if (type == 'pc') this.pcSystemId = systemId\n      if (type == 'app') this.appSystemId = systemId\n    },\n    // 发布菜单\n    release() {\n      if (!this.releaseQuery.pc && !this.releaseQuery.app) return this.$message.error('请至少选择一种菜单同步方式')\n      this.releaseBtnLoading = true\n      this.releaseQuery.pcSystemId = this.pcSystemId\n      this.releaseQuery.appSystemId = this.appSystemId\n      Release(this.currRow.id, this.releaseQuery).then(res => {\n        this.releaseBtnLoading = false\n        this.releaseDialogVisible = false\n        this.initData()\n        this.$message({\n          type: 'success',\n          message: res.msg,\n          duration: 1000,\n        });\n      }).catch(() => { this.releaseBtnLoading = false })\n    },\n    getMenuSelector() {\n      getMenuSelector({ category: 'Web' }, 0).then(res => {\n        this.treeData = res.data.list\n      })\n    },\n    getAPPMenuSelector() {\n      getMenuSelector({ category: 'App' }, 0).then(res => {\n        this.appTreeData = res.data.list || []\n        for (let index = 0; index < this.appTreeData.length; index++) {\n          const item = this.appTreeData[index];\n          if (item.type == 0) {\n            item.disabled = true\n          }\n        }\n      })\n    },\n    getEnginCategoryList() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'WorkFlowCategory' }).then((res) => {\n        this.enginCategoryList = res\n      })\n    },\n    showManage(id, fullName) {\n      this.manageVisible = true\n      this.$nextTick(() => {\n        this.$refs.FlowManage.init(id, fullName)\n      })\n    },\n    handleEngine(id) {\n      getFormById(id).then(res1 => {\n        let flowId = res1.data && res1.data.id\n        this.engineFormVisible = true\n        this.$nextTick(() => {\n          this.$refs.engineForm.init(this.enginCategoryList, flowId, 1)\n        })\n      })\n\n    },\n    handleLink(id) {\n      this.linkVisible = true\n      this.$nextTick(() => {\n        this.$refs.LinkDialog.init(id)\n      })\n    }\n  }\n}\n",null]}