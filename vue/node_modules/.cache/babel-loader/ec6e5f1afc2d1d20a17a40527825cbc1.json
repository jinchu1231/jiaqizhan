{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/flowEngine/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/flowEngine/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _FlowEngine = require(\"@/api/workFlow/FlowEngine\");\nvar _JNPFIconBox = _interopRequireDefault(require(\"@/components/JNPF-iconBox\"));\nvar _Process = _interopRequireDefault(require(\"@/components/Process\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    iconBox: _JNPFIconBox.default,\n    Process: _Process.default\n  },\n  data: function data() {\n    return {\n      visible: false,\n      activeStep: 0,\n      dataForm: {\n        id: '',\n        category: '',\n        fullName: '',\n        enCode: '',\n        description: '',\n        type: 0,\n        sortCode: 0,\n        icon: '',\n        iconBackground: '#008cff',\n        flowTemplateJson: null\n      },\n      dataRule: {\n        fullName: [{\n          required: true,\n          message: '流程名称不能为空',\n          trigger: 'blur'\n        }],\n        enCode: [{\n          required: true,\n          message: '流程编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\w+$/,\n          message: '请输入正确的流程编码',\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: '流程分类不能为空',\n          trigger: 'change'\n        }],\n        type: [{\n          required: true,\n          message: '流程类型不能为空',\n          trigger: 'change'\n        }],\n        formType: [{\n          required: true,\n          message: '功能类型不能为空',\n          trigger: 'change'\n        }],\n        formId: [{\n          required: true,\n          message: '关联功能不能为空',\n          trigger: 'click'\n        }],\n        icon: [{\n          required: true,\n          message: '流程图标不能为空',\n          trigger: 'click'\n        }]\n      },\n      btnLoading: false,\n      flowTemplateJson: {},\n      iconBoxVisible: false,\n      loading: false,\n      categoryList: [],\n      type: '功能流程'\n    };\n  },\n  methods: {\n    init: function init(categoryList, id, type) {\n      var _this = this;\n      this.categoryList = categoryList;\n      this.activeStep = 0;\n      this.dataForm.id = id || '';\n      this.dataForm.icon = '';\n      this.dataForm.iconBackground = '#008cff';\n      this.visible = true;\n      this.loading = true;\n      this.$nextTick(function () {\n        _this.$refs['dataForm'].resetFields();\n        if (_this.dataForm.id) {\n          (0, _FlowEngine.FlowEngineInfo)(_this.dataForm.id).then(function (res) {\n            _this.dataForm = res.data;\n            _this.type = _this.dataForm.type == 1 ? '功能流程' : '发起流程';\n            _this.dataForm.flowTemplateJson && (_this.flowTemplateJson = JSON.parse(_this.dataForm.flowTemplateJson));\n            _this.loading = false;\n            _this.$nextTick(function () {\n              _this.next();\n            });\n          }).catch(function () {\n            _this.loading = false;\n          });\n        } else {\n          _this.dataForm.type = type;\n          _this.type = type == 1 ? '功能流程' : '发起流程';\n          _this.loading = false;\n        }\n      });\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this2 = this;\n      if (this.activeStep === 1) {\n        this.$refs['processDesign'].getData().then(function (res) {\n          _this2.flowTemplateJson = res.formData;\n          _this2.dataForm.flowTemplateJson = JSON.stringify(_this2.flowTemplateJson);\n          _this2.submit();\n        }).catch(function (err) {\n          err.msg && _this2.$message.warning(err.msg);\n        });\n      } else {\n        this.$refs['dataForm'].validate(function (valid) {\n          if (!valid) return;\n          _this2.submit();\n        });\n      }\n    },\n    submit: function submit() {\n      var _this3 = this;\n      this.btnLoading = true;\n      var formMethod = this.dataForm.id ? _FlowEngine.Update : _FlowEngine.Create;\n      formMethod(this.dataForm).then(function (res) {\n        if (_this3.activeStep == 1 && res.data && res.data.isMainVersion) {\n          _this3.setMainVersion(res.data.id, res.msg);\n        } else {\n          _this3.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: function onClose() {\n              _this3.btnLoading = false;\n              _this3.closeDialog(true);\n            }\n          });\n        }\n      }).catch(function () {\n        _this3.btnLoading = false;\n      });\n    },\n    setMainVersion: function setMainVersion(id, msg) {\n      var _this4 = this;\n      this.$confirm('流程已被使用，此版本是否覆盖线上流程。覆盖后，新发起的流程按此版本流转?', '提示', {\n        confirmButtonText: '覆盖',\n        cancelButtonText: '存为新版本',\n        type: 'warning'\n      }).then(function () {\n        (0, _FlowEngine.mainVersion)(id).then(function (res) {\n          _this4.$message({\n            message: msg,\n            type: 'success',\n            duration: 1500,\n            onClose: function onClose() {\n              _this4.btnLoading = false;\n              _this4.closeDialog(true);\n            }\n          });\n        }).catch(function () {\n          _this4.btnLoading = false;\n        });\n      }).catch(function () {\n        _this4.btnLoading = false;\n        _this4.closeDialog(true);\n      });\n    },\n    prev: function prev() {\n      this.activeStep -= 1;\n    },\n    next: function next() {\n      var _this5 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          _this5.activeStep += 1;\n        }\n      });\n    },\n    closeDialog: function closeDialog(isRefresh) {\n      this.visible = false;\n      this.$emit('close', isRefresh);\n    },\n    stepChick: function stepChick(key) {\n      if (this.activeStep <= key) return;\n      this.activeStep = key;\n    },\n    openIconBox: function openIconBox() {\n      this.iconBoxVisible = true;\n    },\n    choiceIcon: function choiceIcon(value) {\n      this.dataForm.icon = value;\n    }\n  }\n};",null]}