{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/layout/components/userList/Im.vue?vue&type=template&id=6cc4390d&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/layout/components/userList/Im.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.visible\n    ? _c(\n        \"div\",\n        { staticClass: \"im-container\" },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"header\" },\n            [\n              _c(\"el-avatar\", {\n                attrs: { size: 30, src: _vm.define.comUrl + _vm.info.headIcon },\n              }),\n              _c(\"span\", { staticClass: \"name\" }, [\n                _vm._v(\n                  _vm._s(_vm.info.realName) + \"/\" + _vm._s(_vm.info.account)\n                ),\n              ]),\n              _c(\"el-link\", {\n                attrs: { icon: \"el-icon-close\", underline: false },\n                on: {\n                  click: function ($event) {\n                    _vm.visible = false\n                  },\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"main\" }, [\n            _c(\"div\", { staticClass: \"chatBox\" }, [\n              _c(\n                \"div\",\n                { ref: \"chatList\", staticClass: \"chatList\" },\n                _vm._l(_vm.list, function (item, index) {\n                  return _c(\n                    \"div\",\n                    {\n                      key: index,\n                      staticClass: \"chatList-item\",\n                      class: {\n                        \"chatList-item--mine\":\n                          item.userId == _vm.userInfo.userId,\n                      },\n                    },\n                    [\n                      item.userId == _vm.userInfo.userId\n                        ? _c(\n                            \"div\",\n                            { staticClass: \"chatList-user\" },\n                            [\n                              _c(\"el-avatar\", {\n                                attrs: {\n                                  size: 40,\n                                  src:\n                                    _vm.define.comUrl + _vm.userInfo.headIcon,\n                                },\n                              }),\n                              _c(\"cite\", [\n                                _c(\"i\", [_vm._v(_vm._s(item.dateTime))]),\n                                _vm._v(\"我\"),\n                              ]),\n                            ],\n                            1\n                          )\n                        : _c(\n                            \"div\",\n                            { staticClass: \"chatList-user\" },\n                            [\n                              _c(\"el-avatar\", {\n                                attrs: {\n                                  size: 40,\n                                  src: _vm.define.comUrl + _vm.info.headIcon,\n                                },\n                              }),\n                              _c(\"cite\", [\n                                _vm._v(_vm._s(_vm.info.realName)),\n                                _c(\"i\", [_vm._v(_vm._s(item.dateTime))]),\n                              ]),\n                            ],\n                            1\n                          ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"chatList-text\" },\n                        [\n                          _c(\"div\", { staticClass: \"chatList-arrow\" }),\n                          item.messageType == \"text\"\n                            ? _c(\"p\", {\n                                staticClass: \"chatList__msg--text\",\n                                domProps: { innerHTML: _vm._s(item.message) },\n                              })\n                            : _vm._e(),\n                          item.messageType == \"image\" && item.message.path\n                            ? _c(\"el-image\", {\n                                staticClass: \"chatList__msg--img\",\n                                attrs: {\n                                  src: _vm.define.comUrl + item.message.path,\n                                  \"preview-src-list\": [\n                                    _vm.define.comUrl + item.message.path,\n                                  ],\n                                  \"z-index\": 10000,\n                                },\n                              })\n                            : _vm._e(),\n                          item.messageType == \"voice\" && item.message.path\n                            ? _c(\"audio\", {\n                                staticClass: \"chatList__msg--audio\",\n                                attrs: {\n                                  controls: \"\",\n                                  src: _vm.define.comUrl + item.message.path,\n                                },\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.handleEvent(\n                                      \"voice\",\n                                      _vm.define.comUrl + item.message.path\n                                    )\n                                  },\n                                },\n                              })\n                            : _vm._e(),\n                          item.messageType == \"video\"\n                            ? _c(\"video\", {\n                                staticClass: \"chatList__msg--video\",\n                                attrs: { src: item.message, controls: \"\" },\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.handleEvent(\n                                      \"video\",\n                                      item.message\n                                    )\n                                  },\n                                },\n                              })\n                            : _vm._e(),\n                        ],\n                        1\n                      ),\n                    ]\n                  )\n                }),\n                0\n              ),\n              _c(\"div\", { staticClass: \"toolBox\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"toolBox-left\" },\n                  [\n                    _c(\n                      \"el-popover\",\n                      {\n                        ref: \"popover\",\n                        attrs: {\n                          placement: \"top-start\",\n                          trigger: \"click\",\n                          \"popper-class\": \"emjio-popper\",\n                        },\n                        model: {\n                          value: _vm.popoverVisible,\n                          callback: function ($$v) {\n                            _vm.popoverVisible = $$v\n                          },\n                          expression: \"popoverVisible\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"emjioBox\" }, [\n                          _c(\n                            \"ul\",\n                            { staticClass: \"emjio\" },\n                            _vm._l(this.emojiList, function (item, i) {\n                              return _c(\n                                \"li\",\n                                {\n                                  key: i,\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.selectEmit(item)\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"img\", {\n                                    attrs: {\n                                      src: _vm._f(\"urlFilter\")(item.url),\n                                    },\n                                  }),\n                                ]\n                              )\n                            }),\n                            0\n                          ),\n                        ]),\n                        _c(\"el-link\", {\n                          attrs: {\n                            slot: \"reference\",\n                            icon: \"ym-custom ym-custom-emoticon-neutral\",\n                            underline: false,\n                            title: \"发送表情\",\n                          },\n                          slot: \"reference\",\n                        }),\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-upload\",\n                      {\n                        ref: \"upload\",\n                        staticClass: \"uploadImg-btn\",\n                        attrs: {\n                          \"show-file-list\": false,\n                          action: _vm.define.comUploadUrl + \"/IM\",\n                          limit: 1,\n                          headers: { Authorization: _vm.$store.getters.token },\n                          \"on-success\": _vm.handleSuccess,\n                          \"before-upload\": _vm.beforeUpload,\n                          accept: \"image/*\",\n                        },\n                      },\n                      [\n                        _c(\"el-link\", {\n                          attrs: {\n                            icon: \"ym-custom ym-custom-image\",\n                            underline: false,\n                            title: \"发送图片\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ],\n                  1\n                ),\n                _c(\n                  \"div\",\n                  { staticClass: \"toolBox-right\" },\n                  [\n                    _c(\n                      \"el-link\",\n                      {\n                        attrs: {\n                          icon: \"icon-ym icon-ym-generator-time\",\n                          underline: false,\n                        },\n                        on: { click: _vm.openHistory },\n                      },\n                      [_vm._v(\"\\n            聊天记录\\n          \")]\n                    ),\n                  ],\n                  1\n                ),\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"writeBox\" },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      type: \"textarea\",\n                      rows: 3,\n                      placeholder: \"点击这里，直接输入消息咨询\",\n                    },\n                    nativeOn: {\n                      keyup: function ($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.sendMessage($event)\n                      },\n                    },\n                    model: {\n                      value: _vm.messageContent,\n                      callback: function ($$v) {\n                        _vm.messageContent =\n                          typeof $$v === \"string\" ? $$v.trim() : $$v\n                      },\n                      expression: \"messageContent\",\n                    },\n                  }),\n                  _c(\n                    \"div\",\n                    { staticClass: \"btns\" },\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: {\n                            click: function ($event) {\n                              return _vm.sendMessage()\n                            },\n                          },\n                        },\n                        [_vm._v(\"发 送\")]\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ]),\n            _vm.showHistory\n              ? _c(\n                  \"div\",\n                  { staticClass: \"historyBox\" },\n                  [\n                    _c(\n                      \"el-input\",\n                      {\n                        staticClass: \"JNPF-common-head-input\",\n                        attrs: {\n                          placeholder: \"搜索：请输入关键词\",\n                          clearable: \"\",\n                        },\n                        on: { change: _vm.searchHistory },\n                        model: {\n                          value: _vm.keyword,\n                          callback: function ($$v) {\n                            _vm.keyword = $$v\n                          },\n                          expression: \"keyword\",\n                        },\n                      },\n                      [\n                        _c(\"i\", {\n                          staticClass: \"el-input__icon el-icon-search\",\n                          attrs: { slot: \"suffix\" },\n                          on: {\n                            click: function ($event) {\n                              return _vm.searchHistory()\n                            },\n                          },\n                          slot: \"suffix\",\n                        }),\n                      ]\n                    ),\n                    _c(\n                      \"div\",\n                      { ref: \"historyListBox\", staticClass: \"historyList-box\" },\n                      [\n                        _c(\n                          \"div\",\n                          { staticClass: \"chatList historyList\" },\n                          [\n                            _vm.historyList.length\n                              ? _vm._l(_vm.historyList, function (item, index) {\n                                  return _c(\n                                    \"div\",\n                                    {\n                                      key: index,\n                                      staticClass: \"chatList-item\",\n                                    },\n                                    [\n                                      item.userId == _vm.userInfo.userId\n                                        ? _c(\n                                            \"div\",\n                                            { staticClass: \"chatList-user\" },\n                                            [\n                                              _c(\"el-avatar\", {\n                                                attrs: {\n                                                  size: 40,\n                                                  src:\n                                                    _vm.define.comUrl +\n                                                    _vm.userInfo.headIcon,\n                                                },\n                                              }),\n                                              _c(\"cite\", [\n                                                _vm._v(\"我\"),\n                                                _c(\"i\", [\n                                                  _vm._v(_vm._s(item.dateTime)),\n                                                ]),\n                                              ]),\n                                            ],\n                                            1\n                                          )\n                                        : _c(\n                                            \"div\",\n                                            { staticClass: \"chatList-user\" },\n                                            [\n                                              _c(\"el-avatar\", {\n                                                attrs: {\n                                                  size: 40,\n                                                  src:\n                                                    _vm.define.comUrl +\n                                                    _vm.info.headIcon,\n                                                },\n                                              }),\n                                              _c(\"cite\", [\n                                                _vm._v(\n                                                  _vm._s(_vm.info.realName)\n                                                ),\n                                                _c(\"i\", [\n                                                  _vm._v(_vm._s(item.dateTime)),\n                                                ]),\n                                              ]),\n                                            ],\n                                            1\n                                          ),\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"chatList-text\" },\n                                        [\n                                          _c(\"div\", {\n                                            staticClass: \"chatList-arrow\",\n                                          }),\n                                          item.messageType == \"text\"\n                                            ? _c(\"span\", {\n                                                domProps: {\n                                                  innerHTML: _vm._s(\n                                                    item.message\n                                                  ),\n                                                },\n                                              })\n                                            : _vm._e(),\n                                          item.messageType == \"image\" &&\n                                          item.message.path\n                                            ? _c(\"el-image\", {\n                                                staticClass:\n                                                  \"chatList__msg--img\",\n                                                attrs: {\n                                                  src:\n                                                    _vm.define.comUrl +\n                                                    item.message.path,\n                                                  \"preview-src-list\": [\n                                                    _vm.define.comUrl +\n                                                      item.message.path,\n                                                  ],\n                                                  \"z-index\": 10000,\n                                                },\n                                              })\n                                            : _vm._e(),\n                                          item.messageType == \"voice\" &&\n                                          item.message.path\n                                            ? _c(\"audio\", {\n                                                staticClass:\n                                                  \"chatList__msg--audio\",\n                                                attrs: {\n                                                  controls: \"\",\n                                                  src:\n                                                    _vm.define.comUrl +\n                                                    item.message.path,\n                                                },\n                                                on: {\n                                                  click: function ($event) {\n                                                    return _vm.handleEvent(\n                                                      \"voice\",\n                                                      _vm.define.comUrl +\n                                                        item.message.path\n                                                    )\n                                                  },\n                                                },\n                                              })\n                                            : _vm._e(),\n                                          item.messageType == \"video\"\n                                            ? _c(\"video\", {\n                                                staticClass:\n                                                  \"chatList__msg--video\",\n                                                attrs: {\n                                                  src: item.message,\n                                                  controls: \"\",\n                                                },\n                                                on: {\n                                                  click: function ($event) {\n                                                    return _vm.handleEvent(\n                                                      \"video\",\n                                                      item.message\n                                                    )\n                                                  },\n                                                },\n                                              })\n                                            : _vm._e(),\n                                        ],\n                                        1\n                                      ),\n                                    ]\n                                  )\n                                })\n                              : [\n                                  _c(\"el-empty\", {\n                                    attrs: {\n                                      description: \"暂无数据\",\n                                      \"image-size\": 120,\n                                    },\n                                  }),\n                                ],\n                          ],\n                          2\n                        ),\n                      ]\n                    ),\n                  ],\n                  1\n                )\n              : _vm._e(),\n          ]),\n          _c(\n            \"el-dialog\",\n            {\n              staticClass: \"JNPF-dialog JNPF-dialog_center\",\n              staticStyle: { \"z-index\": \"3000\" },\n              attrs: {\n                visible: _vm.show,\n                width: \"40%\",\n                \"before-close\": _vm.handleClose,\n                \"lock-scroll\": \"\",\n              },\n              on: {\n                \"update:visible\": function ($event) {\n                  _vm.show = $event\n                },\n              },\n            },\n            [\n              _vm.videoSrc\n                ? _c(\"video\", {\n                    staticStyle: { width: \"100%\", \"object-fit\": \"cover\" },\n                    attrs: { src: _vm.videoSrc, controls: \"controls\" },\n                  })\n                : _vm._e(),\n              _vm.audioSrc\n                ? _c(\"audio\", {\n                    staticStyle: { width: \"100%\", \"object-fit\": \"cover\" },\n                    attrs: { src: _vm.audioSrc, controls: \"controls\" },\n                  })\n                : _vm._e(),\n            ]\n          ),\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}