{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/layout/components/userList/Im.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/layout/components/userList/Im.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.replace\");\nrequire(\"core-js/modules/es6.function.name\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _vuex = require(\"vuex\");\nvar _emoji = _interopRequireDefault(require(\"static/emoji.json\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'im',\n  computed: _objectSpread({}, (0, _vuex.mapGetters)(['userInfo'])),\n  filters: {\n    urlFilter: function urlFilter(url) {\n      return require(\"static/emoji/\".concat(url));\n    }\n  },\n  data: function data() {\n    return {\n      key: '',\n      info: {},\n      visible: false,\n      keyword: '',\n      showHistory: false,\n      show: false,\n      imgSrc: '',\n      videoSrc: '',\n      audioSrc: '',\n      messageContent: '',\n      emojiList: _emoji.default,\n      list: [],\n      historyList: [],\n      historyDefaultList: [],\n      currentPage: 1,\n      pageSize: 50,\n      finish: false,\n      ajaxing: false,\n      popoverVisible: false\n    };\n  },\n  watch: {\n    showHistory: function showHistory(val) {\n      if (!val) {\n        // this.$refs.historyListBox && this.$refs.historyListBox.removeEventListener('scroll');\n      }\n    }\n  },\n  mounted: function mounted() {},\n  methods: {\n    init: function init(item) {\n      this.visible = true;\n      this.showHistory = false;\n      this.info = item;\n      this.socket = this.$store.getters.socket;\n    },\n    scroll: function scroll(num) {\n      var _this2 = this;\n      setTimeout(function () {\n        _this2.$nextTick(function () {\n          var ele = _this2.$refs.chatList;\n          if (ele.scrollHeight > ele.clientHeight) {\n            //设置滚动条到最底部\n            ele.scrollTop = ele.scrollHeight;\n          }\n        });\n      }, num || 0);\n    },\n    closeIM: function closeIM() {\n      this.showHistory = false;\n      this.visible = false;\n    },\n    //处理事件\n    handleEvent: function handleEvent(type, src) {\n      if (type === 'image') {\n        this.imgSrc = src;\n        this.show = true;\n      } else if (type === 'video') {\n        this.videoSrc = src;\n        this.show = true;\n      } else if (type === 'voice') {\n        this.audioSrc = src;\n        this.show = true;\n      } else if (type === 'file') {\n        window.open(src);\n      }\n    },\n    handleClose: function handleClose(done) {\n      this.imgSrc = undefined;\n      this.videoSrc = undefined;\n      this.audioSrc = undefined;\n      done();\n    },\n    getList: function getList(data) {\n      var _this3 = this;\n      var list = [];\n      for (var i = 0; i < data.list.length; i++) {\n        var item = data.list[i];\n        if (item.contentType === \"text\") {\n          item.content = this.replaceEmoji(item.content);\n        } else if (item.contentType === \"image\") {\n          item.content = JSON.parse(item.content);\n        } else {\n          item.content = JSON.parse(item.content);\n        }\n        list.push({\n          userId: item.sendUserId,\n          messageType: item.contentType,\n          message: item.content,\n          dateTime: this.jnpf.toDate(item.sendTime)\n        });\n      }\n      if (!this.showHistory) {\n        this.list = list;\n        this.$nextTick(function () {\n          _this3.scroll(800);\n        });\n      } else {\n        this.historyList = [].concat((0, _toConsumableArray2.default)(this.historyList), list);\n        this.currentPage += 1;\n        this.finish = list.length < data.pagination.pageSize;\n      }\n      this.ajaxing = false;\n    },\n    addItem: function addItem(item) {\n      if (item.messageType === \"text\") {\n        item.message = this.replaceEmoji(item.message);\n      } else if (item.messageType === \"image\") {\n        // item.message = JSON.parse(item.message)\n      }\n      this.list.push(item);\n      this.scroll();\n      if (this.showHistory) {\n        this.historyList.push(item);\n      }\n    },\n    searchHistory: function searchHistory() {\n      var _this4 = this;\n      this.currentPage = 1;\n      this.pageSize = 50;\n      this.finish = false;\n      this.historyList = [];\n      this.sendList();\n      this.$nextTick(function () {\n        var ele = _this4.$refs.historyListBox;\n        ele.scrollTop = 0;\n      });\n    },\n    sendMessage: function sendMessage() {\n      if (!this.messageContent) {\n        return;\n      }\n      var socket = this.socket;\n      var msgObj = {\n        method: \"SendMessage\",\n        toUserId: this.info.id,\n        messageType: \"text\",\n        messageContent: this.messageContent,\n        token: this.$store.getters.token\n      };\n      var msg = JSON.stringify(msgObj);\n      socket.send(msg);\n      this.messageContent = '';\n    },\n    openHistory: function openHistory() {\n      var _this5 = this;\n      this.showHistory = !this.showHistory;\n      if (this.showHistory) {\n        this.historyList = [];\n        this.currentPage = 1;\n        this.pageSize = 50;\n        this.finish = false;\n        this.sendList();\n        this.$nextTick(function () {\n          _this5.bindScroll();\n        });\n      }\n    },\n    bindScroll: function bindScroll() {\n      var _this = this,\n        ele = _this.$refs.historyListBox;\n      if (!ele) return;\n      ele.addEventListener(\"scroll\", function () {\n        if (_this.finish || _this.ajaxing) return;\n        if (ele.scrollTop >= ele.scrollHeight - ele.clientHeight - 100) _this.sendList();\n      });\n    },\n    sendList: function sendList() {\n      this.ajaxing = true;\n      var socket = this.socket;\n      var msgObj = {\n        method: \"MessageList\",\n        toUserId: this.info.id,\n        formUserId: this.userInfo.userId,\n        token: this.$store.getters.token,\n        currentPage: this.currentPage,\n        pageSize: this.pageSize,\n        sord: \"asc\",\n        keyword: this.keyword\n      };\n      var msg = JSON.stringify(msgObj);\n      socket.send(msg);\n    },\n    handleSuccess: function handleSuccess(res, file, fileList) {\n      var _this6 = this;\n      if (res.code == 200) {\n        if (!res.data || !res.data.name) return;\n        var name = res.data.name;\n        this.getBase64(file.raw).then(function (res) {\n          var data = res;\n          _this6.getImgSize(data.e).then(function (res) {\n            var messageContent = {\n              name: name,\n              width: res.width,\n              height: res.height\n            };\n            var msgObj = {\n              method: \"SendMessage\",\n              toUserId: _this6.info.id,\n              messageType: \"image\",\n              messageContent: messageContent,\n              token: _this6.$store.getters.token\n            };\n            var msg = JSON.stringify(msgObj);\n            _this6.socket.send(msg);\n            _this6.$nextTick(function () {\n              _this6.scroll(500);\n            });\n          });\n        });\n      } else {\n        fileList = [];\n        this.$message({\n          message: res.msg,\n          type: 'error',\n          duration: 1500\n        });\n      }\n      this.$refs.upload.clearFiles();\n    },\n    beforeUpload: function beforeUpload(file) {\n      var isRightSize = file.size < 1024 * 1024 * 5;\n      if (!isRightSize) {\n        this.$message.error(\"\\u56FE\\u7247\\u5927\\u5C0F\\u4E0D\\u80FD\\u8D85\\u8FC75M\");\n      }\n      return isRightSize;\n    },\n    getBase64: function getBase64(file) {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        var msg = {\n          base64: '',\n          e: null\n        };\n        reader.readAsDataURL(file);\n        reader.onload = function (event) {\n          msg.base64 = reader.result.replace(/data:image\\/.*;base64,/, '');\n          msg.e = event;\n        };\n        reader.onerror = function (error) {\n          reject(error);\n        };\n        reader.onloadend = function () {\n          resolve(msg);\n        };\n      });\n    },\n    getImgSize: function getImgSize(event) {\n      return new Promise(function (resolve, reject) {\n        var size = {\n          width: 0,\n          height: 0\n        };\n        var txt = event.target.result;\n        var img = document.createElement(\"img\");\n        img.src = txt;\n        img.onload = function () {\n          size.width = img.width;\n          size.height = img.height;\n          resolve(size);\n        };\n        img.onerror = function (error) {\n          reject(error);\n        };\n      });\n    },\n    replaceEmoji: function replaceEmoji(str) {\n      var _this7 = this;\n      //替换表情符号为图片\n      var replacedStr = str.replace(/\\[([^(\\]|\\[)]*)\\]/g, function (item, index) {\n        var obj = '';\n        for (var i = 0; i < _this7.emojiList.length; i++) {\n          var row = _this7.emojiList[i];\n          if (row.alt == item) {\n            var url = require(\"static/emoji/\".concat(row.url));\n            obj = \"<img src=\\\"\".concat(url, \"\\\" class=\\\"chatList-text-emoji\\\" />\");\n            break;\n          }\n        }\n        return obj;\n      });\n      str = replacedStr;\n      return str;\n    },\n    // 选择表情\n    selectEmit: function selectEmit(item) {\n      this.messageContent += item.alt;\n      this.popoverVisible = false;\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    // this.$refs.historyListBox  && this.$refs.historyListBox.removeEventListener('scroll');\n  }\n};",null]}