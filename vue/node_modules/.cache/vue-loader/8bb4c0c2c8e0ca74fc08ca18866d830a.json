{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/role/Form.vue?vue&type=template&id=64ff7337","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/role/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      staticClass: \"JNPF-dialog JNPF-dialog_center\",\n      attrs: {\n        title: !_vm.dataForm.id ? \"新建\" : \"编辑\",\n        \"close-on-click-modal\": false,\n        visible: _vm.visible,\n        \"lock-scroll\": \"\",\n        width: \"600px\",\n      },\n      on: {\n        \"update:visible\": function ($event) {\n          _vm.visible = $event\n        },\n      },\n    },\n    [\n      _c(\n        \"el-form\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.formLoading,\n              expression: \"formLoading\",\n            },\n          ],\n          ref: \"dataForm\",\n          attrs: {\n            model: _vm.dataForm,\n            rules: _vm.dataRule,\n            \"label-width\": \"100px\",\n          },\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"角色名称\", prop: \"fullName\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"输入角色名称\", maxlength: \"50\" },\n                model: {\n                  value: _vm.dataForm.fullName,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"fullName\", $$v)\n                  },\n                  expression: \"dataForm.fullName\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"角色编码\", prop: \"enCode\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"输入角色编码\" },\n                model: {\n                  value: _vm.dataForm.enCode,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"enCode\", $$v)\n                  },\n                  expression: \"dataForm.enCode\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"角色类型\", prop: \"globalMark\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: { placeholder: \"请选择角色类型\" },\n                  on: {\n                    change: function ($event) {\n                      _vm.dataForm.organizeIdsTree = []\n                    },\n                  },\n                  model: {\n                    value: _vm.dataForm.globalMark,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.dataForm, \"globalMark\", $$v)\n                    },\n                    expression: \"dataForm.globalMark\",\n                  },\n                },\n                [\n                  _c(\"el-option\", { attrs: { label: \"全局\", value: 1 } }),\n                  _c(\"el-option\", { attrs: { label: \"组织\", value: 0 } }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _vm.dataForm.globalMark === 0\n            ? _c(\n                \"el-form-item\",\n                { attrs: { label: \"所属组织\", prop: \"organizeIdsTree\" } },\n                [\n                  _c(\"JnpfOrganizeSelect\", {\n                    attrs: {\n                      placeholder: \"选择所属组织\",\n                      multiple: \"\",\n                      clearable: \"\",\n                      auth: \"\",\n                    },\n                    model: {\n                      value: _vm.dataForm.organizeIdsTree,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.dataForm, \"organizeIdsTree\", $$v)\n                      },\n                      expression: \"dataForm.organizeIdsTree\",\n                    },\n                  }),\n                ],\n                1\n              )\n            : _vm._e(),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"排序\", prop: \"sortCode\" } },\n            [\n              _c(\"el-input-number\", {\n                attrs: { min: 0, max: 999999, \"controls-position\": \"right\" },\n                model: {\n                  value: _vm.dataForm.sortCode,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"sortCode\", $$v)\n                  },\n                  expression: \"dataForm.sortCode\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"状态\", prop: \"enabledMark\" } },\n            [\n              _c(\"el-switch\", {\n                attrs: { \"active-value\": 1, \"inactive-value\": 0 },\n                model: {\n                  value: _vm.dataForm.enabledMark,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"enabledMark\", $$v)\n                  },\n                  expression: \"dataForm.enabledMark\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"说明\", prop: \"description\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"textarea\", rows: 3 },\n                model: {\n                  value: _vm.dataForm.description,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.dataForm, \"description\", $$v)\n                  },\n                  expression: \"dataForm.description\",\n                },\n              }),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"span\",\n        {\n          staticClass: \"dialog-footer\",\n          attrs: { slot: \"footer\" },\n          slot: \"footer\",\n        },\n        [\n          _c(\n            \"el-button\",\n            {\n              on: {\n                click: function ($event) {\n                  _vm.visible = false\n                },\n              },\n            },\n            [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"primary\", loading: _vm.btnLoading },\n              on: {\n                click: function ($event) {\n                  return _vm.dataFormSubmit()\n                },\n              },\n            },\n            [_vm._v(\"\\n      \" + _vm._s(_vm.$t(\"common.confirmButton\")))]\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}