{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/components/CandidateForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/components/CandidateForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CandidateUserSelect from './CandidateUserSelect'\nexport default {\n  components: { CandidateUserSelect },\n  props: ['candidateList', 'branchList', 'taskId', 'formData', 'isCustomCopy'],\n  data() {\n    return {\n      candidateForm: {\n        copyIds: [],\n        branchList: [],\n        candidateList: []\n      },\n      btnLoading: false\n    }\n  },\n  methods: {\n    onOpen() {\n      this.btnLoading = false\n      this.candidateForm.candidateList = this.candidateList.map(o => ({\n        ...o,\n        isDefault: true,\n        label: '审批人',\n        value: [],\n        rules: [{ required: true, message: `审批人不能为空`, trigger: 'click' }]\n      }))\n      this.candidateForm.branchList = []\n      this.$nextTick(() => {\n        this.$refs['candidateForm'].resetFields()\n      })\n    },\n    onBranchChange(val) {\n      const defaultList = this.candidateForm.candidateList.filter(o => o.isDefault)\n      if (!val.length) return this.candidateForm.candidateList = defaultList\n      let list = []\n      for (let i = 0; i < val.length; i++) {\n        inner: for (let j = 0; j < this.branchList.length; j++) {\n          let o = this.branchList[j]\n          if (val[i] === o.nodeId && o.isCandidates) {\n            list.push({\n              ...o,\n              label: '审批人',\n              value: [],\n              rules: [{ required: true, message: `审批人不能为空`, trigger: 'click' }]\n            })\n            break inner\n          }\n        }\n      }\n      this.candidateForm.candidateList = [...defaultList, ...list]\n    },\n    submitCandidate() {\n      this.$refs['candidateForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          let candidateList = {}\n          for (let i = 0; i < this.candidateForm.candidateList.length; i++) {\n            candidateList[this.candidateForm.candidateList[i].nodeId] = this.candidateForm.candidateList[i].value\n          }\n          this.$emit('submitCandidate', {\n            candidateList,\n            branchList: this.candidateForm.branchList,\n            copyIds: this.candidateForm.copyIds.join(','),\n          })\n        }\n      })\n    },\n    closeDialog() {\n      this.$emit('update:visible', false)\n    },\n  }\n}\n",null]}