{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Jnpf/Qrcode/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Jnpf/Qrcode/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _qrcodejs = _interopRequireDefault(require(\"qrcodejs2\"));\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'JnpfQrcode',\n  props: {\n    dataType: {\n      type: String,\n      default: 'static'\n    },\n    colorLight: {\n      type: String,\n      default: '#000'\n    },\n    colorDark: {\n      type: String,\n      default: '#fff'\n    },\n    width: {\n      type: Number,\n      default: 100\n    },\n    relationField: {\n      type: String,\n      default: ''\n    },\n    staticText: {\n      type: String,\n      default: ''\n    },\n    formData: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      relationText: ''\n    };\n  },\n  computed: {\n    qrcode: function qrcode() {\n      if (this.dataType === 'static') {\n        return this.staticText;\n      } else if (this.dataType === 'relation') {\n        return this.relationText;\n      } else {\n        if (this.formData && this.dynamicModelExtra && this.dynamicModelExtra.id && this.dynamicModelExtra.modelId) {\n          var json = {\n            t: 'DFD',\n            id: this.dynamicModelExtra.id,\n            mid: this.dynamicModelExtra.modelId,\n            mt: this.dynamicModelExtra.type,\n            fid: this.dynamicModelExtra.flowId || '',\n            pid: this.dynamicModelExtra.processId || '',\n            ftid: this.dynamicModelExtra.taskId || '',\n            opt: this.dynamicModelExtra.opType\n          };\n          return JSON.stringify(json);\n        }\n        return '';\n      }\n    },\n    dynamicModelExtra: function dynamicModelExtra() {\n      return this.$store.state.generator.dynamicModelExtra || null;\n    }\n  },\n  watch: {\n    formData: {\n      handler: function handler(val) {\n        if (val && this.dataType === 'relation' && this.relationField) {\n          this.relationText = val[this.relationField];\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    qrcode: function qrcode() {\n      var _this = this;\n      this.$nextTick(function () {\n        _this.getQRimg();\n      });\n    },\n    colorLight: function colorLight() {\n      this.getQRimg();\n    },\n    colorDark: function colorDark() {\n      this.getQRimg();\n    },\n    width: function width() {\n      this.getQRimg();\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    this.$nextTick(function () {\n      _this2.getQRimg();\n    });\n  },\n  methods: {\n    getQRimg: function getQRimg() {\n      if (!this.qrcode || !this.$refs.qrcode) return this.$refs.qrcode.innerHTML = \"\";\n      this.$refs.qrcode.innerHTML = \"\";\n      var qrcode = new _qrcodejs.default(this.$refs.qrcode, {\n        width: this.width,\n        height: this.width,\n        text: this.qrcode,\n        // 二维码内容\n        // render: 'canvas' // 设置渲染方式（有两种方式 table和canvas，默认是canvas）\n        colorDark: this.colorDark,\n        colorLight: this.colorLight,\n        correctLevel: _qrcodejs.default.CorrectLevel.L //容错级别 容错级别有：（1）QRCode.CorrectLevel.L （2）QRCode.CorrectLevel.M （3）QRCode.CorrectLevel.Q （4）QRCode.CorrectLevel.H\n      });\n      qrcode._el.title = '';\n    }\n  }\n};",null]}