{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/src/store/modules/base.js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/store/modules/base.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.array.sort\");\nrequire(\"regenerator-runtime/runtime\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/asyncToGenerator.js\"));\nvar _dictionary = require(\"@/api/systemData/dictionary\");\nvar _user = require(\"@/api/permission/user\");\nvar _position = require(\"@/api/permission/position\");\nvar _role = require(\"@/api/permission/role\");\nvar _printDev = require(\"@/api/system/printDev\");\nvar _jnpf = _interopRequireDefault(require(\"@/utils/jnpf\"));\nvar state = {\n  dictionaryList: [],\n  userList: [],\n  userTree: [],\n  positionList: [],\n  positionTree: [],\n  roleList: [],\n  roleTree: [],\n  printFlowTree: [],\n  printFormTree: [],\n  msgTypeList: []\n};\nvar mutations = {\n  SET_DICTIONARY_LIST: function SET_DICTIONARY_LIST(state, dictionaryList) {\n    state.dictionaryList = dictionaryList;\n  },\n  SET_USER_LIST: function SET_USER_LIST(state, userList) {\n    state.userList = userList;\n  },\n  SET_USER_TREE: function SET_USER_TREE(state, userTree) {\n    state.userTree = userTree;\n  },\n  SET_POSITION_LIST: function SET_POSITION_LIST(state, positionList) {\n    state.positionList = positionList;\n  },\n  SET_POSITION_TREE: function SET_POSITION_TREE(state, positionTree) {\n    state.positionTree = positionTree;\n  },\n  SET_ROLE_LIST: function SET_ROLE_LIST(state, roleList) {\n    state.roleList = roleList;\n  },\n  SET_ROLE_TREE: function SET_ROLE_TREE(state, roleTree) {\n    state.roleTree = roleTree;\n  },\n  SET_PRINT_FLOW_TREE: function SET_PRINT_FLOW_TREE(state, printTree) {\n    state.printFlowTree = printTree;\n  },\n  SET_PRINT_FORM_TREE: function SET_PRINT_FORM_TREE(state, printTree) {\n    state.printFormTree = printTree;\n  },\n  SET_MESSAGE_TYPE_LIST: function SET_MESSAGE_TYPE_LIST(state, msgTypeList) {\n    state.msgTypeList = msgTypeList;\n  }\n};\nvar actions = {\n  getDictionaryAll: function getDictionaryAll(_ref) {\n    var state = _ref.state,\n      commit = _ref.commit;\n    return new Promise(function (resolve, reject) {\n      if (state.dictionaryList.length) {\n        resolve(state.dictionaryList);\n      } else {\n        (0, _dictionary.getDictionaryAll)().then(function (res) {\n          commit('SET_DICTIONARY_LIST', res.data.list);\n          resolve(res.data.list);\n        }).catch(function (error) {\n          reject(error);\n        });\n      }\n    });\n  },\n  getDictionaryData: function getDictionaryData(_ref2, info) {\n    var state = _ref2.state,\n      dispatch = _ref2.dispatch;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve) {\n        var list, data, json, arr, rowData, findData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              list = [], data = [], json = [];\n              if (state.dictionaryList.length) {\n                _context.next = 7;\n                break;\n              }\n              _context.next = 4;\n              return dispatch('getDictionaryAll');\n            case 4:\n              list = _context.sent;\n              _context.next = 8;\n              break;\n            case 7:\n              list = state.dictionaryList;\n            case 8:\n              if (!info.sort) {\n                _context.next = 14;\n                break;\n              }\n              arr = list.filter(function (o) {\n                return o.enCode === info.sort;\n              });\n              if (arr.length) {\n                _context.next = 12;\n                break;\n              }\n              return _context.abrupt(\"return\", resolve([]));\n            case 12:\n              data = arr[0];\n              if (!info.id) {\n                json = data.dictionaryList;\n              } else {\n                rowData = [];\n                if (!data.isTree) {\n                  rowData = data.dictionaryList.filter(function (o) {\n                    return o.id == info.id;\n                  });\n                } else {\n                  findData = function findData(list) {\n                    for (var i = 0; i < list.length; i++) {\n                      var e = list[i];\n                      if (e.id == info.id) {\n                        rowData[0] = e;\n                        break;\n                      }\n                      if (e.children && e.children.length) {\n                        findData(e.children);\n                      }\n                    }\n                  };\n                  findData(data.dictionaryList);\n                }\n                if (rowData.length) {\n                  json = rowData[0];\n                } else {\n                  json = {\n                    id: \"\",\n                    fullName: \"\"\n                  };\n                }\n              }\n            case 14:\n              resolve(json);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  },\n  getDicDataSelector: function getDicDataSelector(_ref4, value) {\n    var state = _ref4.state,\n      dispatch = _ref4.dispatch;\n    var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'id';\n    return new Promise( /*#__PURE__*/function () {\n      var _ref5 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(resolve) {\n        var list, data, json, arr;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              list = [], data = {}, json = [];\n              if (state.dictionaryList.length) {\n                _context2.next = 7;\n                break;\n              }\n              _context2.next = 4;\n              return dispatch('getDictionaryAll');\n            case 4:\n              list = _context2.sent;\n              _context2.next = 8;\n              break;\n            case 7:\n              list = state.dictionaryList;\n            case 8:\n              if (value) {\n                _context2.next = 10;\n                break;\n              }\n              return _context2.abrupt(\"return\", resolve([]));\n            case 10:\n              arr = list.filter(function (o) {\n                return o[key] === value;\n              });\n              if (arr.length) {\n                _context2.next = 13;\n                break;\n              }\n              return _context2.abrupt(\"return\", resolve([]));\n            case 13:\n              data = arr[0];\n              json = data.dictionaryList;\n              resolve(json);\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  },\n  getPositionList: function getPositionList(_ref6) {\n    var state = _ref6.state,\n      commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      if (!state.positionList.length) {\n        (0, _position.getPositionListAll)().then(function (res) {\n          commit('SET_POSITION_LIST', res.data.list);\n          resolve(res.data.list);\n        }).catch(function (error) {\n          reject(error);\n        });\n      } else {\n        resolve(state.positionList);\n      }\n    });\n  },\n  getPositionTree: function getPositionTree(_ref7) {\n    var state = _ref7.state,\n      commit = _ref7.commit;\n    return new Promise(function (resolve, reject) {\n      if (!state.positionTree.length) {\n        (0, _position.getPositionSelector)().then(function (res) {\n          commit('SET_POSITION_TREE', res.data.list);\n          resolve(res.data.list);\n        }).catch(function (error) {\n          reject(error);\n        });\n      } else {\n        resolve(state.positionTree);\n      }\n    });\n  },\n  getRoleList: function getRoleList(_ref8) {\n    var state = _ref8.state,\n      commit = _ref8.commit,\n      dispatch = _ref8.dispatch;\n    return new Promise(function (resolve, reject) {\n      if (!state.roleList.length) {\n        dispatch('getRoleTree').then(function (res) {\n          var data = _jnpf.default.treeToArray(res, 'role');\n          commit('SET_ROLE_LIST', data);\n          resolve(data);\n        }).catch(function (error) {\n          reject(error);\n        });\n      } else {\n        resolve(state.roleList);\n      }\n    });\n  },\n  getRoleTree: function getRoleTree(_ref9) {\n    var state = _ref9.state,\n      commit = _ref9.commit;\n    return new Promise(function (resolve, reject) {\n      if (!state.roleTree.length) {\n        (0, _role.getRoleSelector)().then(function (res) {\n          commit('SET_ROLE_TREE', res.data.list);\n          resolve(res.data.list);\n        }).catch(function (error) {\n          reject(error);\n        });\n      } else {\n        resolve(state.roleTree);\n      }\n    });\n  },\n  getUserTree: function getUserTree(_ref10) {\n    var state = _ref10.state,\n      commit = _ref10.commit;\n    return new Promise(function (resolve, reject) {\n      if (!state.userTree.length) {\n        (0, _user.getUserSelector)().then(function (res) {\n          commit('SET_USER_TREE', res.data.list);\n          resolve(res.data.list);\n        }).catch(function (error) {\n          reject(error);\n        });\n      } else {\n        resolve(state.userTree);\n      }\n    });\n  },\n  getUserList: function getUserList(_ref11) {\n    var state = _ref11.state,\n      commit = _ref11.commit;\n    return new Promise(function (resolve, reject) {\n      if (!state.userList.length) {\n        (0, _user.UserListAll)().then(function (res) {\n          commit('SET_USER_LIST', res.data.list);\n          resolve(res.data.list);\n        }).catch(function (error) {\n          reject(error);\n        });\n      } else {\n        resolve(state.userList);\n      }\n    });\n  },\n  getUserInfo: function getUserInfo(_ref12, id) {\n    var state = _ref12.state,\n      dispatch = _ref12.dispatch;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref13 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(resolve) {\n        var list, item;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              list = [];\n              if (state.userList.length) {\n                _context3.next = 7;\n                break;\n              }\n              _context3.next = 4;\n              return dispatch('getUserList');\n            case 4:\n              list = _context3.sent;\n              _context3.next = 8;\n              break;\n            case 7:\n              list = state.userList;\n            case 8:\n              item = list.filter(function (o) {\n                return o.id === id;\n              })[0];\n              resolve(item || {});\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function (_x3) {\n        return _ref13.apply(this, arguments);\n      };\n    }());\n  },\n  getPrintFlowTree: function getPrintFlowTree(_ref14) {\n    var state = _ref14.state,\n      commit = _ref14.commit;\n    return new Promise(function (resolve, reject) {\n      if (!state.printFlowTree.length) {\n        (0, _printDev.getPrintDevSelector)(1).then(function (res) {\n          // commit('SET_PRINT_FLOW_TREE', res.data.list)\n          resolve(res.data.list);\n        }).catch(function (error) {\n          reject(error);\n        });\n      } else {\n        resolve(state.printFlowTree);\n      }\n    });\n  },\n  getPrintFormTree: function getPrintFormTree(_ref15) {\n    var state = _ref15.state,\n      commit = _ref15.commit;\n    return new Promise(function (resolve, reject) {\n      if (!state.printFormTree.length) {\n        (0, _printDev.getPrintDevSelector)(2).then(function (res) {\n          // commit('SET_PRINT_FORM_TREE', res.data.list)\n          resolve(res.data.list);\n        }).catch(function (error) {\n          reject(error);\n        });\n      } else {\n        resolve(state.printFormTree);\n      }\n    });\n  }\n};\nvar _default = exports.default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}