{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/monitor/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/monitor/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport lineChart from '@/components/Charts/Normal'\nimport { getSystemMonitor } from '@/api/system/monitor'\nexport default {\n  name: 'system-monitor',\n  components: { lineChart },\n  data() {\n    return {\n      loading: true,\n      monitor: null,\n      data: {\n        system: {\n          os: '',\n          day: '',\n          ip: ''\n        },\n        cpu: {\n          name: '',\n          package: '',\n          core: '',\n          coreNumber: '',\n          logic: '',\n          used: '',\n          idle: ''\n        },\n        memory: {\n          total: '',\n          available: '',\n          used: '',\n          usageRate: ''\n        },\n        disk: {\n          total: '',\n          available: '',\n          used: '',\n          usageRate: ''\n        }\n      },\n      cpuPercentage: 0,\n      memoryPercentage: 0,\n      diskPercentage: 0,\n      cpuInfo: {\n        tooltip: {\n          trigger: 'axis'\n        },\n        grid: {\n          top: '10%',\n          left: '2%',\n          right: '10%',\n          bottom: '2%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          name: '时间',\n          boundaryGap: false,\n          axisLine: {\n            symbol: ['none', 'arrow']\n          },\n          data: []\n        },\n        yAxis: {\n          type: 'value',\n          name: '使用率(%)',\n          min: 0,\n          max: 100,\n          axisLine: {\n            symbol: ['none', 'arrow']\n          },\n          interval: 20\n        },\n        series: [{\n          data: [],\n          type: 'line',\n          areaStyle: {\n            normal: {\n              color: 'rgb(32, 160, 255)' // 改变区域颜色\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: '#6fbae1',\n              lineStyle: {\n                color: '#6fbae1' // 改变折线颜色\n              }\n            }\n          }\n        }]\n      },\n      memoryInfo: {\n        tooltip: {\n          trigger: 'axis'\n        },\n        grid: {\n          top: '10%',\n          left: '2%',\n          right: '10%',\n          bottom: '2%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          name: '时间',\n          axisLine: {\n            symbol: ['none', 'arrow']\n          },\n          data: []\n        },\n        yAxis: {\n          type: 'value',\n          name: '使用率(%)',\n          min: 0,\n          max: 100,\n          interval: 20,\n          axisLine: {\n            symbol: ['none', 'arrow']\n          },\n        },\n        series: [{\n          data: [],\n          type: 'line',\n          areaStyle: {\n            normal: {\n              color: 'rgb(32, 160, 255)' // 改变区域颜色\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: '#6fbae1',\n              lineStyle: {\n                color: '#6fbae1' // 改变折线颜色\n              }\n            }\n          }\n        }]\n      }\n    }\n  },\n  created() {\n    this.initData()\n    this.monitor = window.setInterval(() => {\n      setTimeout(() => {\n        this.initData()\n      }, 2)\n    }, 5000)\n  },\n  destroyed() {\n    clearInterval(this.monitor)\n  },\n  methods: {\n    initData() {\n      getSystemMonitor().then(res => {\n        this.data = res.data\n        this.cpuPercentage = this.data.cpu.used == '0.00' ? 0 : Number(this.data.cpu.used)\n        this.memoryPercentage = this.data.memory.usageRate == '0.00' ? 0 : Number(this.data.memory.usageRate)\n        this.diskPercentage = this.data.disk.usageRate == '0.00' ? 0 : Number(this.data.disk.usageRate)\n        if (this.cpuInfo.xAxis.data.length >= 8) {\n          this.cpuInfo.xAxis.data.shift()\n          this.memoryInfo.xAxis.data.shift()\n          this.cpuInfo.series[0].data.shift()\n          this.memoryInfo.series[0].data.shift()\n        }\n        this.cpuInfo.xAxis.data.push(this.jnpf.dateFormat(this.data.time, 'HH:mm:ss'))\n        this.memoryInfo.xAxis.data.push(this.jnpf.dateFormat(this.data.time, 'HH:mm:ss'))\n        this.cpuInfo.series[0].data.push(parseFloat(this.data.memory.used))\n        this.memoryInfo.series[0].data.push(parseFloat(this.data.memory.usageRate))\n        this.loading = false\n      }).catch(() => {\n        this.loading = false\n      })\n    },\n    customColors(percentage) {\n      if (percentage < 70) {\n        return '#5cb87a'\n      } else if (percentage < 90) {\n        return '#e6a23c'\n      } else {\n        return '#f56c6c'\n      }\n    }\n  }\n}\n",null]}