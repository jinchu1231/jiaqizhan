{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/common/Notice.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/common/Notice.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport NoticeColumnData from './NoticeColumnData'\nimport Refresh from '../common/Refresh'\nimport { alignList } from '../../components/config'\nexport default {\n  components: { Refresh, NoticeColumnData },\n  props: ['activeData', 'showType'],\n  data() {\n    return {\n      areaVisible: false,\n      columnVisible: false,\n      alignList,\n      appStyleTypeOptions: [{ label: '纵向1', value: 1 },\n      { label: '纵向2', value: 2 },\n      { label: '横向', value: 3 },],\n      styleTypeOptions: [{ label: '表格', value: 1 },\n      { label: '列表（横向）', value: 2 },\n      { label: '列表（纵向）', value: 3 },]\n    }\n  },\n  watch: {\n\n  },\n  methods: {\n    columnList(data) {\n      if (!data) return\n      if (this.showType === 'app') {\n        this.activeData.option.appColumnList = data\n      } else {\n        if (this.activeData.option.styleType == 1) {\n          this.activeData.option.columnData = data\n        } else {\n          this.activeData.option.rowData = data\n        }\n      }\n      this.renderKeyChange()\n    },\n    renderKeyChange() {\n      this.activeData.renderKey = +new Date()\n    },\n    showColumnData(option, type) {\n      this.columnVisible = true\n      setTimeout(() => {\n        this.$nextTick(() => {\n          this.$refs.noticeColumnData.init(option, type)\n        })\n      }, 300)\n    },\n  }\n}\n",null]}