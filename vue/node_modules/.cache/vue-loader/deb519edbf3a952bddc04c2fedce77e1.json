{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/systemData/dataSync/index.vue?vue&type=template&id=082cce54&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/systemData/dataSync/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"DbCopy-container app-container nohead JNPF-flex-main\" },\n    [\n      _c(\"el-alert\", {\n        staticClass: \"mb-20\",\n        attrs: {\n          title: \"温馨提示：数据同步是由A数据库同步到B数据库。\",\n          type: \"warning\",\n          closable: false,\n          \"show-icon\": \"\",\n        },\n      }),\n      _c(\n        \"el-form\",\n        {\n          ref: \"dataForm\",\n          staticClass: \"mt-10\",\n          attrs: {\n            model: _vm.dataForm,\n            \"label-width\": \"140px\",\n            rules: _vm.dataRule,\n          },\n          nativeOn: {\n            submit: function ($event) {\n              $event.preventDefault()\n            },\n          },\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"数据库连接 From\", prop: \"dbConnectionFrom\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: { placeholder: \"请选择连接\", filterable: \"\" },\n                  model: {\n                    value: _vm.dataForm.dbConnectionFrom,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.dataForm, \"dbConnectionFrom\", $$v)\n                    },\n                    expression: \"dataForm.dbConnectionFrom\",\n                  },\n                },\n                _vm._l(_vm.dbOptions, function (group) {\n                  return _c(\n                    \"el-option-group\",\n                    { key: group.fullName, attrs: { label: group.fullName } },\n                    _vm._l(group.children, function (item) {\n                      return _c(\"el-option\", {\n                        key: item.id,\n                        attrs: { label: item.fullName, value: item.id },\n                      })\n                    }),\n                    1\n                  )\n                }),\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"数据库连接 To\", prop: \"dbConnectionTo\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: { placeholder: \"请选择连接\", filterable: \"\" },\n                  model: {\n                    value: _vm.dataForm.dbConnectionTo,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.dataForm, \"dbConnectionTo\", $$v)\n                    },\n                    expression: \"dataForm.dbConnectionTo\",\n                  },\n                },\n                _vm._l(_vm.dbOptions, function (group) {\n                  return _c(\n                    \"el-option-group\",\n                    { key: group.fullName, attrs: { label: group.fullName } },\n                    _vm._l(group.children, function (item) {\n                      return _c(\"el-option\", {\n                        key: item.id,\n                        attrs: { label: item.fullName, value: item.id },\n                      })\n                    }),\n                    1\n                  )\n                }),\n                1\n              ),\n              _c(\n                \"el-button\",\n                {\n                  staticStyle: { \"margin-left\": \"10px\" },\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.check },\n                },\n                [_vm._v(\"验证连接\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { icon: \"el-icon-plus\" },\n                  on: { click: _vm.addConfigure },\n                },\n                [_vm._v(\"规则配置\")]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"JNPF-common-title\" },\n        [\n          _c(\"h2\", [_vm._v(\"数据库表\")]),\n          _c(\n            \"el-button\",\n            {\n              attrs: { size: \"primary\", type: \"text\" },\n              on: { click: _vm.batch },\n            },\n            [_vm._v(\"批量同步\")]\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"JNPF-table\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.listLoading,\n              expression: \"listLoading\",\n            },\n          ],\n          ref: \"multipleTable\",\n          attrs: { data: _vm.list, hasNO: false },\n          on: { \"selection-change\": _vm.handleSelectionChange },\n        },\n        [\n          _c(\"el-table-column\", {\n            attrs: { type: \"selection\", width: \"70\", align: \"center\" },\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              type: \"index\",\n              width: \"50\",\n              label: \"序号\",\n              align: \"center\",\n            },\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"table\",\n              label: \"表名\",\n              \"show-overflow-tooltip\": \"\",\n            },\n          }),\n          _c(\"el-table-column\", { attrs: { prop: \"sum\", label: \"总数\" } }),\n          _c(\"el-table-column\", { attrs: { prop: \"result\", label: \"结果\" } }),\n          _c(\"el-table-column\", {\n            attrs: { label: \"操作\", fixed: \"right\", width: \"100\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (scope) {\n                  return [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: {\n                          size: \"mini\",\n                          type: \"text\",\n                          loading: scope.row.btnLoading,\n                        },\n                        on: {\n                          click: function ($event) {\n                            return _vm.copy(scope.row)\n                          },\n                        },\n                      },\n                      [_vm._v(\"数据同步\\n        \")]\n                    ),\n                  ]\n                },\n              },\n            ]),\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"JNPF-dialog JNPF-dialog_center rule-dialog\",\n          attrs: {\n            title: \"规则配置\",\n            \"close-on-click-modal\": false,\n            visible: _vm.dialogVisible,\n            \"lock-scroll\": \"\",\n            \"append-to-body\": \"\",\n            width: \"600px\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.dialogVisible = $event\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"option-box-tip\" }, [\n            _vm._v(\n              \"\\n      设置数据库之间的字段转换规则，规则设置错误会导致同步的功能数据转换失败\\n    \"\n            ),\n          ]),\n          _vm._l(_vm.configureList, function (item, i) {\n            return [\n              _c(\n                \"el-row\",\n                { key: i, staticClass: \"mb-10\" },\n                [\n                  _c(\n                    \"el-col\",\n                    { staticClass: \"rule-cell\", attrs: { span: 3 } },\n                    [_vm._v(\"字段类型\")]\n                  ),\n                  _c(\n                    \"el-col\",\n                    { staticClass: \"rule-cell\", attrs: { span: 7 } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { placeholder: \"请选择类型\" },\n                          on: {\n                            change: function ($event) {\n                              return _vm.changeConversion($event, i)\n                            },\n                          },\n                          model: {\n                            value: item.beforeConversion,\n                            callback: function ($$v) {\n                              _vm.$set(item, \"beforeConversion\", $$v)\n                            },\n                            expression: \"item.beforeConversion\",\n                          },\n                        },\n                        _vm._l(\n                          _vm.beforeConversionList,\n                          function (item, index) {\n                            return _c(\"el-option\", {\n                              key: index,\n                              attrs: { label: item.val, value: item.val },\n                            })\n                          }\n                        ),\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { staticClass: \"rule-cell mid\", attrs: { span: 2 } },\n                    [_vm._v(\"转换\")]\n                  ),\n                  _c(\n                    \"el-col\",\n                    { staticClass: \"rule-cell\", attrs: { span: 3 } },\n                    [_vm._v(\"字段类型\")]\n                  ),\n                  _c(\n                    \"el-col\",\n                    { staticClass: \"rule-cell\", attrs: { span: 7 } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { placeholder: \"请选择类型\" },\n                          model: {\n                            value: item.afterConversion,\n                            callback: function ($$v) {\n                              _vm.$set(item, \"afterConversion\", $$v)\n                            },\n                            expression: \"item.afterConversion\",\n                          },\n                        },\n                        _vm._l(item.afterConversionList, function (item) {\n                          return _c(\"el-option\", {\n                            key: item,\n                            attrs: { label: item, value: item },\n                          })\n                        }),\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { staticClass: \"rule-cell\", attrs: { span: 2 } },\n                    [\n                      _c(\"el-button\", {\n                        staticStyle: { \"margin-left\": \"10px\" },\n                        attrs: { type: \"danger\", icon: \"el-icon-close\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.delRule(i)\n                          },\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ]\n          }),\n          _c(\n            \"div\",\n            { staticClass: \"table-actions\", on: { click: _vm.addRule } },\n            [\n              _c(\n                \"el-button\",\n                { attrs: { type: \"text\", icon: \"el-icon-plus\" } },\n                [_vm._v(\"新增规则\")]\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.dialogVisible = false\n                    },\n                  },\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.saveRule } },\n                [_vm._v(\"确定\")]\n              ),\n            ],\n            1\n          ),\n        ],\n        2\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}