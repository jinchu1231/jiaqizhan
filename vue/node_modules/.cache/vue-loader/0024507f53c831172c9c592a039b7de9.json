{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/user/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/user/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getPositionByOrganize } from '@/api/permission/position'\nimport { getRoleByOrganize } from '@/api/permission/role'\nimport { getGroupSelector } from '@/api/permission/group'\nimport { createUser, updateUser, getUserInfo } from '@/api/permission/user'\nexport default {\n  data() {\n    return {\n      visible: false,\n      btnLoading: false,\n      dataForm: {\n        id: '',\n        sortCode: 0,\n        enabledMark: 1,\n        account: '',\n        realName: '',\n        organizeId: '',\n        organizeIdTree: [],\n        managerId: '',\n        positionId: '',\n        roleId: '',\n        groupId: '',\n        description: '',\n        headIcon: '',\n        gender: null,\n        nation: '',\n        nativePlace: '',\n        entryDate: null,\n        certificatesType: '',\n        certificatesNumber: '',\n        education: '',\n        birthday: null,\n        telePhone: '',\n        landline: '',\n        mobilePhone: '',\n        email: '',\n        urgentContacts: '',\n        urgentTelePhone: '',\n        postalAddress: '',\n        ranks: ''\n      },\n      ranksList: [],\n      roleId: [],\n      groupId: [],\n      positionId: [],\n      positionTreeData: [],\n      roleTreeData: [],\n      groupTreeData: [],\n      genderTreeData: [],\n      nationTreeData: [],\n      educationTreeData: [],\n      certificatesTypeTreeData: [],\n      uploadHeaders: { Authorization: this.$store.getters.token },\n      formLoading: false,\n      genderProps: {\n        value: 'enCode',\n        label: 'fullName'\n      },\n      dataRule: {\n        account: [\n          { required: true, message: '请输入账户', trigger: 'blur' },\n          { validator: this.formValidate('fullName', '账户不能含有特殊符号'), trigger: 'blur' },\n          { max: 50, message: '账户最多为50个字符！', trigger: 'blur' }\n        ],\n        realName: [\n          { required: true, message: '请输入真实姓名', trigger: 'blur' },\n          { validator: this.formValidate('fullName', '真实姓名不能含有特殊符号'), trigger: 'blur' },\n          { max: 50, message: '真实姓名最多为50个字符！', trigger: 'blur' }\n        ],\n        gender: [\n          { required: true, message: '请选择性别', trigger: 'change' }\n        ],\n        organizeIdTree: [\n          { required: true, message: '请选择所属组织', trigger: 'click', type: 'array' }\n        ]\n      }\n    }\n  },\n  methods: {\n    init(id, organizeIdTree) {\n      this.visible = true\n      this.dataForm.id = id || ''\n      this.roleId = []\n      this.groupId = []\n      this.positionId = []\n      this.positionTreeData = []\n      this.roleTreeData = []\n      this.dataForm.organizeIdTree = []\n      this.$nextTick(() => {\n        this.formLoading = true\n        this.$refs['dataForm'].resetFields()\n        // 获取分组下拉列表\n        getGroupSelector().then(res => {\n          this.groupTreeData = res.data\n        })\n        // 获取民族\n        this.$store.dispatch('base/getDictionaryData', { sort: 'Nation' }).then(res => {\n          this.nationTreeData = res\n          // 获取学历\n          this.$store.dispatch('base/getDictionaryData', { sort: 'Education' }).then(res => {\n            this.educationTreeData = res\n          })\n          // 获取证件类型\n          this.$store.dispatch('base/getDictionaryData', { sort: 'certificateType' }).then(res => {\n            this.certificatesTypeTreeData = res\n          })\n          // 获取性别\n          this.$store.dispatch('base/getDictionaryData', { sort: 'sex' }).then(res => {\n            this.genderTreeData = res\n          })\n          //获取职级\n          this.$store.dispatch('base/getDictionaryData', { sort: 'Rank' }).then(res => {\n            this.ranksList = res\n          })\n        })\n        if (this.dataForm.id) {\n          getUserInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            if (this.dataForm.roleId) this.roleId = this.dataForm.roleId.split(',')\n            if (this.dataForm.groupId) this.groupId = this.dataForm.groupId.split(',')\n            if (this.dataForm.positionId) this.positionId = this.dataForm.positionId.split(',')\n            if (this.dataForm.organizeIdTree && this.dataForm.organizeIdTree.length) {\n              this.getOptionsByOrgIds(this.dataForm.organizeIdTree)\n            }\n            this.formLoading = false\n          }).catch(() => this.formLoading = false)\n        } else {\n          this.dataForm.organizeIdTree = organizeIdTree.length ? [organizeIdTree] : []\n          if (this.dataForm.organizeIdTree && this.dataForm.organizeIdTree.length) {\n            this.getOptionsByOrgIds(this.dataForm.organizeIdTree)\n          }\n          this.formLoading = false\n        }\n      })\n    },\n    goBack() {\n      this.$emit('close')\n    },\n    onChange(key) {\n      this.dataForm[key] = this[key].join()\n    },\n    onOrganizeChange(val) {\n      this.dataForm.positionId = ''\n      this.dataForm.roleId = ''\n      this.dataForm.organizeId = ''\n      this.positionId = []\n      this.roleId = []\n      if (!val || !val.length) return\n      this.getOptionsByOrgIds(val)\n    },\n    getOptionsByOrgIds(organizeIdTree) {\n      const organizeIds = organizeIdTree.map(o => o[o.length - 1])\n      this.dataForm.organizeId = organizeIds.join()\n      getPositionByOrganize(organizeIds).then(res => {\n        this.positionTreeData = res.data.list.filter(o => o.children && Array.isArray(o.children) && o.children.length)\n      })\n      getRoleByOrganize(organizeIds).then(res => {\n        this.roleTreeData = res.data.list.filter(o => o.children && Array.isArray(o.children) && o.children.length)\n      })\n    },\n    visibleChange(val) {\n      if (!val) return\n      if (!this.dataForm.organizeIdTree || !this.dataForm.organizeIdTree.length) this.$message.warning('请先选择所属组织')\n    },\n    handleAvatarSuccess(res) {\n      if (res.code === 200 && res.data && res.data.url) {\n        this.dataForm.headIcon = res.data.url\n      } else {\n        this.$message.error('头像上传失败');\n      }\n    },\n    handleConfirm() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          const formMethod = this.dataForm.id ? updateUser : createUser\n          formMethod(this.dataForm).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$emit('close', true)\n              }\n            })\n          }).catch(() => {\n            this.btnLoading = false\n          })\n        }\n      })\n    }\n  }\n}\n",null]}