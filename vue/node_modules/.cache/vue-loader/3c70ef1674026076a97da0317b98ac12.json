{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/extend/document/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/document/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { AllList, Create, Delete, Download, DocumentInfo, ShareCancel, ShareOutList, ShareTomeList, TrashDelete, TrashList, TrashRecovery, Update } from '@/api/extend/document'\nimport userBox from './UserBox'\nimport folderTree from './FolderTree'\nimport FileUploader from './fileUploader'\nimport Preview from \"./Preview\";\n\nexport default {\n  name: 'extend-document',\n  components: { userBox, folderTree, FileUploader, Preview },\n  data() {\n    return {\n      userBoxVisible: false,\n      folderTreeVisible: false,\n      detailVisible: false,\n      activeTab: 'allPanel',\n      keyword: '',\n      parentId: '0',\n      listLoading: true,\n      previewVisible: false,\n      list: [],\n      levelList: [{\n        id: '0',\n        fullName: '全部文档'\n      }],\n      activeFile: {\n        fileId: '',\n        name: '',\n        url: '',\n        fileVersionId: ''\n      }\n    }\n  },\n  watch: {\n    activeTab(val) {\n      if (val === 'allPanel') {\n        this.levelList = [{\n          id: \"0\",\n          fullName: '全部文档'\n        }]\n        this.parentId = \"0\"\n      }\n      this.reset()\n    }\n  },\n  created() {\n    this.initData()\n  },\n  methods: {\n    reset() {\n      this.list = []\n      this.keyword = ''\n      this.initData()\n    },\n    initData() {\n      this.listLoading = true\n      let data = { keyword: this.keyword }\n      if (this.activeTab === 'allPanel') {\n        data = { ...data, parentId: this.parentId }\n        AllList(data).then(res => {\n          this.list = res.data.list\n          this.listLoading = false\n        })\n      }\n      if (this.activeTab === 'shareoutPanel') {\n        ShareOutList(data).then(res => {\n          this.list = res.data.list\n          this.listLoading = false\n        })\n      }\n      if (this.activeTab === 'sharetomePanel') {\n        ShareTomeList(data).then(res => {\n          this.list = res.data.list\n          this.listLoading = false\n        })\n      }\n      if (this.activeTab === 'trashPanel') {\n        TrashList(data).then(res => {\n          this.list = res.data.list\n          this.listLoading = false\n        })\n      }\n    },\n    search() {\n      this.initData()\n    },\n    handleDel(index, id) {\n      this.$confirm('您确定要把所选文件放入回收站, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        Delete(id).then(res => {\n          this.list.splice(index, 1);\n          this.$message({\n            type: 'success',\n            message: res.msg\n          });\n        })\n      }).catch(() => { });\n    },\n    unshare(index, id) {\n      this.$confirm('您确定要取消共享, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        ShareCancel(id).then(res => {\n          this.list.splice(index, 1);\n          this.$message({\n            type: 'success',\n            message: res.msg\n          });\n        })\n      }).catch(() => { });\n    },\n    recovery(index, id) {\n      this.$confirm('您确定要还原选中的文件?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        TrashRecovery(id).then(res => {\n          this.list.splice(index, 1);\n          this.$message({\n            type: 'success',\n            message: res.msg\n          });\n        })\n      }).catch(() => { });\n    },\n    trashDel(index, id) {\n      this.$confirm('文件删除后将无法恢复，您确定要彻底删除所选文件吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        TrashDelete(id).then(res => {\n          this.list.splice(index, 1);\n          this.$message({\n            type: 'success',\n            message: res.msg\n          });\n        })\n      }).catch(() => { });\n    },\n    moveTo(id, parentId) {\n      this.folderTreeVisible = true\n      this.$nextTick(() => {\n        this.$refs.folderTree.init(id, parentId)\n      })\n    },\n    shareFolder(id) {\n      this.userBoxVisible = true\n      this.$nextTick(() => {\n        this.$refs.userBox.init(id)\n      })\n    },\n    getFolder(id) {\n      DocumentInfo(id).then(res => {\n        this.addFolder(res.data)\n      })\n    },\n    // 新建文件夹\n    addFolder(info) {\n      let inputValue = \"\"\n      if (info) { inputValue = info.fullName }\n      let title = info ? (info.type ? '重命名文件' : '重命名文件夹') : '新建文件夹'\n      this.$prompt('', title, {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputPlaceholder: '输入名称',\n        inputErrorMessage: '请正确输入文件夹名称',\n        inputValue: inputValue,\n        // inputPattern: /^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/,\n        closeOnClickModal: false\n      }).then(({ value }) => {\n        let data = {\n          type: info && info.type ? info.type : \"0\",\n          parentId: this.parentId,\n          fullName: value\n        }\n        if (info && info.id) {\n          Object.assign(data, { id: info.id })\n          Update(data).then(res => {\n            this.$message({\n              type: 'success',\n              message: res.msg\n            });\n            this.initData()\n          })\n        } else {\n          Create(data).then(res => {\n            this.$message({\n              type: 'success',\n              message: res.msg\n            });\n            this.initData()\n          })\n        }\n      }).catch(() => { });\n    },\n    uploadFile() {\n      this.$refs.fileUploader && this.$refs.fileUploader.openUploader()\n    },\n    fileSuccess() {\n      this.reset()\n    },\n    //预览文件\n    handlepreview(row) {\n      this.activeFile.name = row.fullName;\n      this.activeFile.fileId = row.filePath;\n      this.activeFile.fileVersionId = null;\n      this.activeFile.url = row.uploaderUrl;\n      this.previewVisible = true;\n    },\n    // 下载文件\n    handleDownLoad(id) {\n      Download(id).then(res => {\n        this.jnpf.downloadFile(res.data.url, res.data.name)\n      })\n    },\n    // 打开文件夹\n    openFolder(item) {\n      this.parentId = item.id\n      this.levelList.push(item)\n      this.reset()\n    },\n    jump(item, i) {\n      this.parentId = item.id\n      this.reset()\n      this.levelList = this.levelList.slice(0, i + 1)\n    },\n    toFileExt(ext) {\n      if (ext) ext = ext.replace('.', '')\n      if (ext == \"doc\" || ext == \"docx\") {\n        return \"icon-ym-file-word\";\n      }\n      if (ext == \"xls\" || ext == \"xlsx\") {\n        return \"icon-ym-file-excel\";\n      }\n      if (ext == \"ppt\" || ext == \"pptx\") {\n        return \"icon-ym-file-ppt\";\n      }\n      if (ext == \"rar\" || ext == \"zip\") {\n        return \"icon-ym-file-zip\";\n      }\n      if (ext == \"txt\" || ext == \"log\") {\n        return \"icon-ym-file-text\";\n      }\n      if (ext == \"html\" || ext == \"cs\" || ext == \"xml\") {\n        return \"icon-ym-file-code\";\n      }\n      if (ext == \"gif\" || ext == \"jpg\" || ext == \"jpeg\" || ext == \"bmp\" || ext == \"png\") {\n        return \"icon-ym-file-image1\";\n      }\n      if (ext == \"pdf\") {\n        return \"icon-ym-file-pdf\";\n      }\n      if (ext == \"mp3\") {\n        return \"icon-ym-file-audio\";\n      }\n      if (ext == \"mp4\") {\n        return \"icon-ym-file-movie\";\n      }\n      return \"icon-ym-file-blank\";\n    },\n  }\n}\n",null]}