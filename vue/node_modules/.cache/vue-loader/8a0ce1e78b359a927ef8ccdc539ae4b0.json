{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/components/RightPanel.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/components/RightPanel.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport draggable from 'vuedraggable'\nimport { getSelectorAll } from '@/api/system/menu'\nimport { getFeatureSelector } from '@/api/onlineDev/visualDev'\nimport { getDataInterfaceSelector } from '@/api/systemData/dataInterface'\nimport iconBox from '@/components/JNPF-iconBox'\nimport JSONArea from './JSONArea'\nimport InterfaceDialog from '@/components/Process/PropPanel/InterfaceDialog'\nimport Card from '../RightComponents/common/Card'\nimport Chart from '../RightComponents/chat/Chart'\nimport MainTitle from '../RightComponents/chat/MainTitle'\nimport SubTitle from '../RightComponents/chat/SubTitle'\nimport BarStyle from '../RightComponents/chat/BarStyle'\nimport XAxis from '../RightComponents/chat/XAxis'\nimport YAxis from '../RightComponents/chat/YAxis'\nimport Label from '../RightComponents/chat/Label'\nimport Tooltip from '../RightComponents/chat/Tooltip'\nimport Margin from '../RightComponents/chat/Margin'\nimport Legend from '../RightComponents/chat/Legend'\nimport Color from '../RightComponents/chat/Color'\nimport Data from '../RightComponents/chat/Data'\nimport Tab from '../RightComponents/common/Tab'\nimport Collapse from '../RightComponents/common/Collapse'\nimport Schedule from '../RightComponents/common/Schedule'\nimport Notice from '../RightComponents/common/Notice'\nimport Refresh from '../RightComponents/common/Refresh'\nimport { chartList, needDataSetList, systemList, layoutList } from './config'\nexport default {\n  props: ['activeData', 'showType', 'refresh'],\n  components: {\n    draggable,\n    iconBox,\n    JSONArea,\n    InterfaceDialog,\n    Card,\n    Chart,\n    MainTitle,\n    SubTitle,\n    BarStyle,\n    XAxis,\n    YAxis,\n    Label,\n    Tooltip,\n    Margin,\n    Legend,\n    Color,\n    Data,\n    Tab,\n    Collapse,\n    Schedule,\n    Refresh,\n    Notice\n  },\n  data() {\n    return {\n      iconsVisible: false,\n      areaVisible: false,\n      currentIndex: 0,\n      current: '',\n      menuList: [],\n      appMenuList: [],\n      dataInterfaceOptions: [],\n      activeNames: [],\n      chartList,\n      needDataSetList,\n      noNeedTypeSetList: [...layoutList, ...systemList, 'schedule'],\n      currentTab: '1'\n    }\n  },\n  created() {\n    this.getMenuList()\n    this.getDataInterfaceSelector()\n  },\n  methods: {\n    getMenuList() {\n      getSelectorAll({ category: 'Web' }).then(res => {\n        this.menuList = (res.data.list || []).filter(o => o.children && o.children.length)\n      })\n      getSelectorAll({ category: 'App' }).then(res => {\n        this.appMenuList = (res.data.list || []).filter(o => o.children && o.children.length)\n      })\n    },\n    getDataInterfaceSelector() {\n      getDataInterfaceSelector().then(res => {\n        this.dataInterfaceOptions = res.data\n      })\n    },\n    getSelectValue(data, i) {\n      if (!data[0]) {\n        this.$set(this.activeData.list, i, {\n          fullName: '',\n          id: '',\n          urlAddress: '',\n          icon: '',\n          iconBackgroundColor: '',\n          type: '',\n          propertyJson: '',\n          linkTarget: '_self',\n          enCode: ''\n        })\n      } else {\n        let iconBackgroundColor = ''\n        if (data[1].propertyJson) {\n          let propertyJson = JSON.parse(data[1].propertyJson)\n          iconBackgroundColor = propertyJson.iconBackgroundColor || ''\n        }\n        this.$set(this.activeData.list, i, {\n          fullName: data[1].fullName,\n          id: data[1].id,\n          urlAddress: data[1].urlAddress,\n          type: data[1].type,\n          propertyJson: data[1].propertyJson,\n          linkTarget: data[1].linkTarget,\n          enCode: data[1].enCode,\n          icon: data[1].icon,\n          iconBackgroundColor: iconBackgroundColor\n        })\n      }\n    },\n    addSelectItem() {\n      this.activeData.list.push({\n        fullName: '',\n        id: '',\n        urlAddress: '',\n        icon: '',\n        iconBackgroundColor: '',\n        type: '',\n        propertyJson: '',\n        linkTarget: '_self',\n        enCode: ''\n      })\n    },\n    delSelectItem(index) {\n      if (this.activeData.list.length < 3) {\n        this.$message({\n          message: '选项最少要保留两项',\n          type: 'warning'\n        });\n        return\n      }\n      this.activeData.list.splice(index, 1)\n    },\n    addDataBoardItem() {\n      this.activeData.list.push({ fullName: \"\", num: '', dataType: 'static', propsApi: '', icon: \"\" })\n    },\n    delDataBoardItem(index) {\n      if (this.activeData.list.length < 3) {\n        this.$message({\n          message: '选项最少要保留两项',\n          type: 'warning'\n        });\n        return\n      }\n      this.activeData.list.splice(index, 1)\n    },\n    openIconsDialog(index) {\n      this.iconsVisible = true\n      this.currentIndex = index\n      this.current = this.activeData.list[this.currentIndex].icon\n    },\n    setIcon(val) {\n      this.activeData.list[this.currentIndex].icon = val\n    },\n    propsUrlChange(data, index) {\n      if (!data || !data.length) {\n        this.activeData.list[index].propsApi = ''\n        this.activeData.list[index].propsName = ''\n        return\n      }\n      this.activeData.list[index].propsApi = data[0]\n      this.activeData.list[index].propsName = data[1].fullName\n    },\n  }\n}\n",null]}