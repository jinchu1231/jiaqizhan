{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Process/OrgTransfer/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Process/OrgTransfer/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"regenerator-runtime/runtime\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/asyncToGenerator.js\"));\nvar _JNPFTransfer = _interopRequireDefault(require(\"@/components/JNPF-transfer\"));\nvar _JNPFUserTransfer = _interopRequireDefault(require(\"@/components/JNPF-userTransfer\"));\nvar _JNPFUsersTransfer = _interopRequireDefault(require(\"@/components/JNPF-usersTransfer\"));\nvar _roleTransfer = _interopRequireDefault(require(\"./roleTransfer\"));\nvar _OrgUsersSelect = _interopRequireDefault(require(\"../OrgUsersSelect\"));\nvar _orgTransfer = _interopRequireDefault(require(\"./orgTransfer\"));\nvar _positionTransfer = _interopRequireDefault(require(\"./positionTransfer\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = exports.default = {\n  name: 'org-transfer',\n  components: {\n    JNPFTransfer: _JNPFTransfer.default,\n    usersTransfer: _JNPFUsersTransfer.default,\n    roleTransfer: _roleTransfer.default,\n    orgTransfer: _orgTransfer.default,\n    positionTransfer: _positionTransfer.default,\n    orgUsersSelect: _OrgUsersSelect.default,\n    userTransfer: _JNPFUserTransfer.default\n  },\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    dynamicList: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    type: {\n      type: String,\n      default: 'user'\n    },\n    inlet: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: '组织机构'\n    },\n    dynamicParameter: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      treeData: [],\n      selectedData: []\n    };\n  },\n  methods: {\n    onOpen: function onOpen() {\n      this.dataInit();\n    },\n    closeTransfer: function closeTransfer() {\n      this.$emit('update:visible', false);\n    },\n    confirm: function confirm() {\n      this.$emit('confirm', this.selectedData);\n      this.closeTransfer();\n    },\n    dataInit: function dataInit() {\n      var _this = this;\n      this.loading = true;\n      this.selectedData = [];\n      this.treeData = [];\n      this.$nextTick( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.type === 'user')) {\n                _context.next = 5;\n                break;\n              }\n              _this.selectedData = JSON.parse(JSON.stringify(_this.value));\n              _this.$nextTick(function () {\n                _this.$refs.userTransfer && _this.$refs.userTransfer.init();\n              });\n              _context.next = 32;\n              break;\n            case 5:\n              if (!(_this.type === 'users')) {\n                _context.next = 10;\n                break;\n              }\n              _this.selectedData = JSON.parse(JSON.stringify(_this.value));\n              _this.$nextTick(function () {\n                _this.$refs.usersTransfer && _this.$refs.usersTransfer.init();\n              });\n              _context.next = 32;\n              break;\n            case 10:\n              if (!(_this.type === 'role')) {\n                _context.next = 15;\n                break;\n              }\n              _this.selectedData = JSON.parse(JSON.stringify(_this.value));\n              _this.$nextTick(function () {\n                _this.$refs.roleTransfer && _this.$refs.roleTransfer.init();\n              });\n              _context.next = 32;\n              break;\n            case 15:\n              res = [];\n              if (!(_this.type === 'department' || _this.type === 'organize')) {\n                _context.next = 20;\n                break;\n              }\n              _context.next = 19;\n              return _this.$store.dispatch('generator/getDepTree');\n            case 19:\n              res = _context.sent;\n            case 20:\n              if (!(_this.type === 'group')) {\n                _context.next = 24;\n                break;\n              }\n              _context.next = 23;\n              return _this.$store.dispatch('generator/getGroupTree');\n            case 23:\n              res = _context.sent;\n            case 24:\n              if (!(_this.type === 'position')) {\n                _context.next = 29;\n                break;\n              }\n              _context.next = 27;\n              return _this.$store.dispatch('base/getPositionTree');\n            case 27:\n              res = _context.sent;\n              _this.$nextTick(function () {\n                _this.$refs.positionTransfer && _this.$refs.positionTransfer.init(_this.selectedData);\n              });\n            case 29:\n              _this.$refs.JNPFTransfer && (_this.$refs.JNPFTransfer.filterText = '');\n              _this.treeData = res;\n              _this.selectedData = _this.value;\n            case 32:\n              _this.loading = false;\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })));\n    }\n  }\n};",null]}