{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Process/OrgUsersSelect/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Process/OrgUsersSelect/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.array.find-index\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _user = require(\"@/api/permission/user\");\nvar _position = require(\"@/api/permission/position\");\nvar _role = require(\"@/api/permission/role\");\nvar _group = require(\"@/api/permission/group\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar defaultSelectedList = [{\n  id: \"department\",\n  type: \"department\",\n  fullName: \"部门\",\n  icon: \"icon-ym icon-ym-tree-department1\",\n  children: []\n}, {\n  id: \"position\",\n  type: \"position\",\n  fullName: \"岗位\",\n  icon: \"icon-ym icon-ym-tree-position1\",\n  children: []\n}, {\n  id: \"user\",\n  type: \"user\",\n  fullName: \"用户\",\n  icon: \"icon-ym icon-ym-tree-user2\",\n  children: []\n}, {\n  id: \"group\",\n  type: \"group\",\n  fullName: \"分组\",\n  icon: \"icon-ym icon-ym-generator-group1\",\n  children: []\n}, {\n  id: \"role\",\n  type: \"role\",\n  fullName: \"角色\",\n  icon: \"icon-ym icon-ym-generator-role\",\n  children: []\n}];\nvar _default2 = exports.default = {\n  name: 'JNPF-userTransfer',\n  data: function data() {\n    return {\n      allLoading: false,\n      loading: false,\n      roleLoading: true,\n      positionLoading: true,\n      groupLoading: true,\n      activeName: '',\n      treeData: [],\n      treeData2: [],\n      treeData3: [],\n      treeData4: [],\n      selectedData: [],\n      props: {\n        children: 'children',\n        label: 'fullName',\n        isLeaf: 'isLeaf'\n      },\n      nodeId: '0',\n      ids: [],\n      total: 0,\n      isAsync: false,\n      finish: false,\n      pagination: {\n        keyword: '',\n        currentPage: 1,\n        pageSize: 20\n      },\n      selectedList: defaultSelectedList\n    };\n  },\n  props: {\n    height: {\n      type: String,\n      default: \"400px\"\n    },\n    dynamicList: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    activeName: function activeName(val) {\n      this.pagination.keyword = '';\n      this.isAsync = false;\n      if (!val) return;\n      this.nodeId = '0';\n      this.treeData = [];\n      this.getData();\n    },\n    selectedData: function selectedData(val) {\n      var _this2 = this;\n      if (!this.multiple) return;\n      this.selectedList = JSON.parse(JSON.stringify(defaultSelectedList));\n      var _loop = function _loop() {\n        var item = _this2.selectedData[i];\n        var type = item.type == 'company' ? 'department' : item.type;\n        _this2.selectedList.map(function (res) {\n          if (res.type == type) {\n            var obj = {\n              fullName: item.fullName,\n              type: type,\n              headIcon: item.headIcon,\n              organize: item.organize,\n              id: item.id\n            };\n            res.children.push(obj);\n          }\n        });\n      };\n      for (var i = 0; i < this.selectedData.length; i++) {\n        _loop();\n      }\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this3 = this;\n      this.getOtherData();\n      this.selectedData = [];\n      this.ids = [];\n      this.pagination.keyword = '';\n      this.activeName = '';\n      this.nodeId = '0';\n      this.isAsync = false;\n      this.finish = false;\n      this.$nextTick(function () {\n        _this3.activeName = 'department';\n        _this3.getSelectList();\n      });\n    },\n    bindScroll: function bindScroll() {\n      var _this = this,\n        vBody = _this.$refs.infiniteBody;\n      vBody.addEventListener(\"scroll\", function () {\n        if (vBody.scrollHeight - vBody.clientHeight - vBody.scrollTop <= 200 && !_this.loading && !_this.finish) {\n          _this.pagination.currentPage += 1;\n          _this.getList();\n        }\n      });\n    },\n    getData: function getData() {\n      if (this.activeName === 'department') {\n        this.getList();\n      } else if (['role', 'position', 'group'].includes(this.activeName)) {\n        this.$refs[this.activeName + 'Tree'] && this.$refs[this.activeName + 'Tree'].filter(this.pagination.keyword);\n      } else {\n        this.loading = false;\n      }\n    },\n    getSelectList: function getSelectList() {\n      var _this4 = this;\n      this.allLoading = true;\n      if (!this.value.length) return this.allLoading = false;\n      (0, _user.getSelectedList)(this.value).then(function (res) {\n        _this4.selectedData = res.data.list.map(function (o) {\n          return _objectSpread(_objectSpread({}, o), {}, {\n            id: o.type ? o.id + '--' + o.type : o.id,\n            icon: o.type === 'system' ? 'icon-ym icon-ym-tree-user2' : o.icon,\n            organize: o.organize\n          });\n        });\n        _this4.ids = _this4.selectedData.map(function (o) {\n          return o.id;\n        });\n        _this4.allLoading = false;\n      });\n    },\n    getOtherData: function getOtherData() {\n      var _this5 = this;\n      this.roleLoading = true;\n      this.positionLoading = true;\n      this.groupLoading = true;\n      (0, _role.getRoleSelector)().then(function (res) {\n        _this5.treeData2 = res.data.list;\n        _this5.roleLoading = false;\n      });\n      (0, _position.getPositionSelector)().then(function (res) {\n        _this5.treeData3 = res.data.list;\n        _this5.positionLoading = false;\n      });\n      (0, _group.getGroupSelector)().then(function (res) {\n        _this5.treeData4 = res.data;\n        _this5.groupLoading = false;\n      });\n    },\n    search: function search() {\n      var _this6 = this;\n      this.nodeId = '0';\n      this.treeData = [];\n      this.pagination.currentPage = 1;\n      this.isAsync = !!this.pagination.keyword;\n      this.finish = false;\n      if (this.isAsync && this.activeName === 'department') {\n        this.$nextTick(function () {\n          _this6.bindScroll();\n        });\n      }\n      this.getData();\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data[this.props.label].indexOf(value) !== -1;\n    },\n    getList: function getList() {\n      var _this7 = this;\n      this.loading = true;\n      if (this.pagination.keyword) this.nodeId = '0';\n      (0, _user.getImUserSelector)(this.nodeId, this.pagination).then(function (res) {\n        if (_this7.pagination.keyword) {\n          if (res.data.list.length < _this7.pagination.pageSize) {\n            _this7.finish = true;\n          }\n          _this7.treeData = [].concat((0, _toConsumableArray2.default)(_this7.treeData), (0, _toConsumableArray2.default)(res.data.list));\n          _this7.total = res.data.pagination.total;\n        } else {\n          _this7.treeData = res.data.list;\n        }\n        _this7.loading = false;\n      });\n    },\n    loadNode: function loadNode(node, resolve) {\n      if (node.level === 0) {\n        this.nodeId = '0';\n        return resolve(this.treeData);\n      }\n      this.nodeId = node.data.id;\n      (0, _user.getImUserSelector)(this.nodeId).then(function (res) {\n        resolve(res.data.list);\n      });\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      var usableList = this.multiple ? ['company', 'department', 'role', 'position', 'group', 'user', 'system'] : ['user'];\n      if (!usableList.includes(data.type)) return;\n      var boo = this.selectedData.some(function (o) {\n        return o.id === data.id + '--' + data.type;\n      });\n      var item = JSON.parse(JSON.stringify(data));\n      item.id += '--' + item.type;\n      if (boo) return;\n      this.multiple ? this.selectedData.push(item) : this.selectedData = [item];\n      this.multiple ? this.ids.push(item.id) : this.ids = [item.id];\n      this.$emit('input', this.ids);\n      this.$emit('getValue', this.ids, this.selectedData);\n    },\n    removeAll: function removeAll() {\n      this.selectedData = [];\n      this.ids = [];\n      this.$emit('input', this.ids);\n      this.$emit('getValue', this.ids, this.selectedData);\n    },\n    removeMulData: function removeMulData(id) {\n      var index = this.selectedData.findIndex(function (item) {\n        return item.id == id;\n      });\n      if (index != -1) this.selectedData.splice(index, 1);\n      this.ids = this.selectedData.map(function (o) {\n        return o.id;\n      });\n      this.$emit('input', this.ids);\n      this.$emit('getValue', this.ids, this.selectedData);\n    }\n  }\n};",null]}