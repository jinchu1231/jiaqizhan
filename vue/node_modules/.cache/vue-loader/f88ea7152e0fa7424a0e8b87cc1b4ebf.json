{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/notice/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/notice/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { createNotice, updateNotice, getNoticeInfo, sendMessageConfig } from '@/api/system/message'\nimport MsgDialog from \"@/components/Process/PropPanel/msgDialog\";\nimport singleImg from '@/components/Upload/SingleImg'\nexport default {\n  components: { MsgDialog, singleImg },\n  data() {\n    return {\n      uploadHeaders: { Authorization: this.$store.getters.token },\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      key: +new Date(),\n      dataForm: {\n        id: '',\n        toUserIds: '',\n        title: '',\n        files: '',\n        bodyText: '',\n        coverImage: '',\n        remindCategory: 1,\n        category: '1',\n        sendConfigId: '',\n        sendConfigName: '',\n        expirationTime: null,\n        excerpt: \"\"\n      },\n      sendConfiguredList: [],\n      remindCategoryList: [{ 'fullName': '默认', 'enCode': 1 }, { 'fullName': '自定义', 'enCode': 2 }, { 'fullName': '不提醒', 'enCode': 3 }],\n      categoryList: [],\n      toUserIds: [],\n      files: [],\n      dataRule: {\n        title: [\n          { required: true, message: '公告标题不能为空', trigger: 'blur' }\n        ],\n        sendConfigId: [\n          { required: true, message: '发送配置不能为空', trigger: 'blur' }\n        ],\n        category: [\n          { required: true, message: '类型不能为空', trigger: 'blur' }\n        ],\n        remindCategory: [\n          { required: true, message: '提醒方式不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    goBack() {\n      this.$emit('close')\n    },\n    init(id) {\n      this.dataForm.id = id || 0\n      this.files = []\n      this.toUserIds = []\n      this.visible = true\n      this.formLoading = true\n      this.$nextTick(() => {\n        // 获取公告类型\n        this.$store.dispatch('base/getDictionaryData', { sort: 'NoticeType' }).then(res => {\n          this.categoryList = res\n        })\n        this.$refs['dataForm'].resetFields()\n        if (this.remindCategory != 1 && !this.dataForm.id) this.dataForm.sendConfigName = \"\"\n        if (this.dataForm.id) {\n          getNoticeInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.files = res.data.files ? JSON.parse(res.data.files) : []\n            this.toUserIds = res.data.toUserIds ? res.data.toUserIds.split(',') : []\n            this.$nextTick(() => {\n              if (this.dataForm.sendConfigId) this.sendMessageConfig(this.dataForm.sendConfigId)\n            })\n          })\n        }\n        this.formLoading = false\n        this.key = +new Date()\n      })\n    },\n    sendMessageConfig(id) {\n      sendMessageConfig(id).then(res => {\n        this.dataForm.sendConfigName = res.data.fullName\n        this.key = +new Date()\n      })\n    },\n    onMsgChange(id, item) {\n      if (!id) {\n        this.dataForm.sendConfigId = ''\n        this.dataForm.sendConfigName = ''\n        return\n      }\n      if (this.dataForm.sendConfigId === id) return\n      this.dataForm.sendConfigId = id\n      this.dataForm.sendConfigName = item.fullName\n    },\n    handleAvatarSuccess(res) {\n      if (res.code === 200 && res.data && res.data.url) {\n        this.dataForm.coverImage = res.data.url\n      } else {\n        this.$message.error('头像上传失败');\n      }\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          this.dataForm.files = JSON.stringify(this.files)\n          this.dataForm.toUserIds = this.toUserIds.join(',')\n          const formMethod = this.dataForm.id ? updateNotice : createNotice\n          formMethod(this.dataForm).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$emit('refreshDataList')\n                this.goBack()\n              }\n            })\n          }).catch(() => {\n            this.btnLoading = false\n          })\n        }\n      })\n    }\n  }\n}\n",null]}