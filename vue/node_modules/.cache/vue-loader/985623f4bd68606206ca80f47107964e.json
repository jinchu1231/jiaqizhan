{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/flowTodo/BatchList.vue?vue&type=template&id=72765aa3&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/flowTodo/BatchList.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"transition\", { attrs: { name: \"el-zoom-in-center\" } }, [\n    _c(\n      \"div\",\n      { staticClass: \"JNPF-preview-main\" },\n      [\n        _c(\n          \"div\",\n          { staticClass: \"JNPF-common-page-header\" },\n          [\n            _c(\"el-page-header\", {\n              attrs: { content: \"批量审批\" },\n              on: { back: _vm.goBack },\n            }),\n            _c(\n              \"div\",\n              { staticClass: \"options\" },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    on: {\n                      click: function ($event) {\n                        return _vm.goBack()\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n                ),\n              ],\n              1\n            ),\n          ],\n          1\n        ),\n        _c(\n          \"div\",\n          { staticClass: \"main\" },\n          [\n            _c(\n              \"el-row\",\n              { staticClass: \"JNPF-common-search-box\", attrs: { gutter: 16 } },\n              [\n                _c(\n                  \"el-form\",\n                  {\n                    nativeOn: {\n                      submit: function ($event) {\n                        $event.preventDefault()\n                      },\n                    },\n                  },\n                  [\n                    _c(\n                      \"el-col\",\n                      { attrs: { span: 6 } },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"关键词\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: {\n                                placeholder: \"请输入关键词查询\",\n                                clearable: \"\",\n                              },\n                              nativeOn: {\n                                keyup: function ($event) {\n                                  if (\n                                    !$event.type.indexOf(\"key\") &&\n                                    _vm._k(\n                                      $event.keyCode,\n                                      \"enter\",\n                                      13,\n                                      $event.key,\n                                      \"Enter\"\n                                    )\n                                  ) {\n                                    return null\n                                  }\n                                  return _vm.search()\n                                },\n                              },\n                              model: {\n                                value: _vm.listQuery.keyword,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.listQuery, \"keyword\", $$v)\n                                },\n                                expression: \"listQuery.keyword\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-col\",\n                      { attrs: { span: 6 } },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"所属流程\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                attrs: {\n                                  placeholder: \"请选择所属流程\",\n                                  clearable: \"\",\n                                  filterable: \"\",\n                                },\n                                on: { change: _vm.onTemplateIdChange },\n                                model: {\n                                  value: _vm.listQuery.templateId,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.listQuery, \"templateId\", $$v)\n                                  },\n                                  expression: \"listQuery.templateId\",\n                                },\n                              },\n                              _vm._l(_vm.templateOptions, function (item) {\n                                return _c(\"el-option\", {\n                                  key: item.id,\n                                  attrs: {\n                                    label: item.fullName,\n                                    value: item.id,\n                                  },\n                                })\n                              }),\n                              1\n                            ),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-col\",\n                      { attrs: { span: 6 } },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"所属名称\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                attrs: {\n                                  placeholder: \"请选择所属名称\",\n                                  clearable: \"\",\n                                  filterable: \"\",\n                                },\n                                on: {\n                                  change: _vm.onFlowChange,\n                                  \"visible-change\": _vm.visibleFlowChange,\n                                },\n                                model: {\n                                  value: _vm.listQuery.flowId,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.listQuery, \"flowId\", $$v)\n                                  },\n                                  expression: \"listQuery.flowId\",\n                                },\n                              },\n                              _vm._l(_vm.flowOptions, function (item) {\n                                return _c(\"el-option\", {\n                                  key: item.id,\n                                  attrs: {\n                                    label: item.fullName,\n                                    value: item.id,\n                                  },\n                                })\n                              }),\n                              1\n                            ),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                    _vm.showAll\n                      ? [\n                          _c(\n                            \"el-col\",\n                            { attrs: { span: 6 } },\n                            [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { label: \"所属节点\" } },\n                                [\n                                  _c(\n                                    \"el-select\",\n                                    {\n                                      attrs: {\n                                        placeholder: \"请选择所属节点\",\n                                        clearable: \"\",\n                                        filterable: \"\",\n                                      },\n                                      on: {\n                                        \"visible-change\": _vm.visibleChange,\n                                      },\n                                      model: {\n                                        value: _vm.listQuery.nodeCode,\n                                        callback: function ($$v) {\n                                          _vm.$set(\n                                            _vm.listQuery,\n                                            \"nodeCode\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"listQuery.nodeCode\",\n                                      },\n                                    },\n                                    _vm._l(_vm.nodeOptions, function (item) {\n                                      return _c(\"el-option\", {\n                                        key: item.id,\n                                        attrs: {\n                                          label: item.fullName,\n                                          value: item.id,\n                                        },\n                                      })\n                                    }),\n                                    1\n                                  ),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-col\",\n                            { attrs: { span: 6 } },\n                            [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { label: \"发起时间\" } },\n                                [\n                                  _c(\"el-date-picker\", {\n                                    attrs: {\n                                      type: \"datetimerange\",\n                                      \"start-placeholder\": \"开始时间\",\n                                      \"end-placeholder\": \"结束时间\",\n                                      \"picker-options\": _vm.pickerOptions,\n                                      \"value-format\": \"timestamp\",\n                                      clearable: \"\",\n                                      editable: false,\n                                      \"default-time\": [\"00:00:00\", \"23:59:59\"],\n                                    },\n                                    model: {\n                                      value: _vm.pickerVal,\n                                      callback: function ($$v) {\n                                        _vm.pickerVal = $$v\n                                      },\n                                      expression: \"pickerVal\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-col\",\n                            { attrs: { span: 6 } },\n                            [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { label: \"分类\" } },\n                                [\n                                  _c(\n                                    \"el-select\",\n                                    {\n                                      attrs: {\n                                        placeholder: \"请选择分类\",\n                                        clearable: \"\",\n                                        filterable: \"\",\n                                      },\n                                      model: {\n                                        value: _vm.listQuery.flowCategory,\n                                        callback: function ($$v) {\n                                          _vm.$set(\n                                            _vm.listQuery,\n                                            \"flowCategory\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"listQuery.flowCategory\",\n                                      },\n                                    },\n                                    _vm._l(_vm.categoryList, function (item) {\n                                      return _c(\"el-option\", {\n                                        key: item.id,\n                                        attrs: {\n                                          label: item.fullName,\n                                          value: item.id,\n                                        },\n                                      })\n                                    }),\n                                    1\n                                  ),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-col\",\n                            { attrs: { span: 6 } },\n                            [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { label: \"发起人员\" } },\n                                [\n                                  _c(\"JnpfUserSelect\", {\n                                    attrs: { placeholder: \"请选择发起人员\" },\n                                    model: {\n                                      value: _vm.listQuery.creatorUserId,\n                                      callback: function ($$v) {\n                                        _vm.$set(\n                                          _vm.listQuery,\n                                          \"creatorUserId\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"listQuery.creatorUserId\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                        ]\n                      : _vm._e(),\n                    _c(\n                      \"el-col\",\n                      { attrs: { span: 6 } },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          [\n                            _c(\n                              \"el-button\",\n                              {\n                                attrs: {\n                                  type: \"primary\",\n                                  icon: \"el-icon-search\",\n                                },\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.search()\n                                  },\n                                },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(_vm.$t(\"common.search\"))\n                                ),\n                              ]\n                            ),\n                            _c(\n                              \"el-button\",\n                              {\n                                attrs: { icon: \"el-icon-refresh-right\" },\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.reset()\n                                  },\n                                },\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(_vm.$t(\"common.reset\")) +\n                                    \"\\n              \"\n                                ),\n                              ]\n                            ),\n                            !_vm.showAll\n                              ? _c(\n                                  \"el-button\",\n                                  {\n                                    attrs: {\n                                      type: \"text\",\n                                      icon: \"el-icon-arrow-down\",\n                                    },\n                                    on: {\n                                      click: function ($event) {\n                                        _vm.showAll = true\n                                      },\n                                    },\n                                  },\n                                  [_vm._v(\"展开\")]\n                                )\n                              : _c(\n                                  \"el-button\",\n                                  {\n                                    attrs: {\n                                      type: \"text\",\n                                      icon: \"el-icon-arrow-up\",\n                                    },\n                                    on: {\n                                      click: function ($event) {\n                                        _vm.showAll = false\n                                      },\n                                    },\n                                  },\n                                  [_vm._v(\"\\n                收起\")]\n                                ),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                  ],\n                  2\n                ),\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"alert\" },\n              [\n                _c(\"el-alert\", {\n                  attrs: {\n                    title:\n                      \"请先选择所属流程、名称和节点。（同一流程同一节点的审批数据才能使用批量审批）\",\n                    type: \"warning\",\n                    closable: false,\n                    \"show-icon\": \"\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\"div\", { staticClass: \"JNPF-common-head\" }, [\n              _c(\n                \"div\",\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: {\n                        type: \"warning\",\n                        disabled: !_vm.listQuery.nodeCode,\n                      },\n                      on: {\n                        click: function ($event) {\n                          return _vm.handleBatch(2)\n                        },\n                      },\n                    },\n                    [_vm._v(\"\\n            批量转审\")]\n                  ),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: {\n                        type: \"primary\",\n                        disabled: !_vm.listQuery.nodeCode,\n                        loading: _vm.btnLoading,\n                      },\n                      on: {\n                        click: function ($event) {\n                          return _vm.handleBatch(0)\n                        },\n                      },\n                    },\n                    [_vm._v(\"批量通过\")]\n                  ),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: {\n                        type: \"danger\",\n                        disabled: !_vm.listQuery.nodeCode,\n                      },\n                      on: {\n                        click: function ($event) {\n                          return _vm.handleBatch(1)\n                        },\n                      },\n                    },\n                    [_vm._v(\"批量退回\\n          \")]\n                  ),\n                ],\n                1\n              ),\n            ]),\n            _c(\n              \"JNPF-table\",\n              {\n                directives: [\n                  {\n                    name: \"loading\",\n                    rawName: \"v-loading\",\n                    value: _vm.listLoading,\n                    expression: \"listLoading\",\n                  },\n                ],\n                attrs: { data: _vm.list, \"has-c\": \"\" },\n                on: { \"selection-change\": _vm.handleChange },\n              },\n              [\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"fullName\",\n                    label: \"流程标题\",\n                    \"show-overflow-tooltip\": \"\",\n                    \"min-width\": \"150\",\n                  },\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { prop: \"flowName\", label: \"所属流程\", width: \"130\" },\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"flowVersion\",\n                    label: \"流程版本\",\n                    width: \"130\",\n                    align: \"center\",\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function (scope) {\n                        return [\n                          _c(\"el-tag\", [\n                            _vm._v(\"V:\" + _vm._s(scope.row.flowVersion)),\n                          ]),\n                        ]\n                      },\n                    },\n                  ]),\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"startTime\",\n                    label: \"发起时间\",\n                    width: \"140\",\n                    formatter: _vm.jnpf.tableDateFormat,\n                  },\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { prop: \"userName\", label: \"发起人员\", width: \"130\" },\n                }),\n                _c(\"el-table-column\", {\n                  attrs: { prop: \"thisStep\", label: \"审批节点\", width: \"130\" },\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"flowUrgent\",\n                    label: \"紧急程度\",\n                    width: \"100\",\n                    align: \"center\",\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function (scope) {\n                        return [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(\n                                _vm._f(\"urgentText\")(scope.row.flowUrgent)\n                              ) +\n                              \"\\n          \"\n                          ),\n                        ]\n                      },\n                    },\n                  ]),\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"status\",\n                    label: \"流程状态\",\n                    width: \"130\",\n                    align: \"center\",\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"default\",\n                      fn: function (scope) {\n                        return [\n                          scope.row.status == 2\n                            ? _c(\"el-tag\", { attrs: { type: \"success\" } }, [\n                                _vm._v(\"审核通过\"),\n                              ])\n                            : scope.row.status == 3\n                            ? _c(\"el-tag\", { attrs: { type: \"danger\" } }, [\n                                _vm._v(\"审核退回\"),\n                              ])\n                            : scope.row.status == 4 || scope.row.status == 7\n                            ? _c(\"el-tag\", { attrs: { type: \"info\" } }, [\n                                _vm._v(\"流程撤回\"),\n                              ])\n                            : scope.row.status == 5\n                            ? _c(\"el-tag\", { attrs: { type: \"info\" } }, [\n                                _vm._v(\"审核终止\"),\n                              ])\n                            : _c(\"el-tag\", { attrs: { type: \"primary\" } }, [\n                                _vm._v(\"等待审核\"),\n                              ]),\n                        ]\n                      },\n                    },\n                  ]),\n                }),\n                _c(\"el-table-column\", {\n                  attrs: {\n                    prop: \"creatorTime\",\n                    label: \"接收时间\",\n                    formatter: _vm.jnpf.tableDateFormat,\n                    width: \"140\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\"pagination\", {\n              attrs: {\n                total: _vm.total,\n                page: _vm.listQuery.currentPage,\n                limit: _vm.listQuery.pageSize,\n              },\n              on: {\n                \"update:page\": function ($event) {\n                  return _vm.$set(_vm.listQuery, \"currentPage\", $event)\n                },\n                \"update:limit\": function ($event) {\n                  return _vm.$set(_vm.listQuery, \"pageSize\", $event)\n                },\n                pagination: _vm.initData,\n              },\n            }),\n          ],\n          1\n        ),\n        _vm.approveVisible\n          ? _c(\"approve-dialog\", {\n              ref: \"approveDialog\",\n              on: { submit: _vm.batchOperation },\n            })\n          : _vm._e(),\n        _c(\"error-form\", {\n          attrs: { visible: _vm.errorVisible, nodeList: _vm.errorNodeList },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.errorVisible = $event\n            },\n            submit: _vm.handleError,\n          },\n        }),\n        _vm.userBoxVisible\n          ? _c(\"actionDialog\", {\n              ref: \"userBox\",\n              attrs: { title: \"审批人\" },\n              on: { submit: _vm.handleTransfer },\n            })\n          : _vm._e(),\n      ],\n      1\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}