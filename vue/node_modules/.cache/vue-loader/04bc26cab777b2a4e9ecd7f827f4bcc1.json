{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RRelationForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RRelationForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getFeatureSelector, getFormDataFields } from '@/api/onlineDev/visualDev'\nimport { getDrawingList } from '@/components/Generator/utils/db'\nimport { noAllowRelationList } from '@/components/Generator/generator/comConfig'\nimport draggable from 'vuedraggable'\nimport comMixin from './mixin'\nimport RuleDialog from './RuleDialog'\nimport { systemComponentsList } from '@/components/Generator/generator/comConfig'\nconst noFieldList = ['relationForm', 'popupSelect']\nexport default {\n  props: ['activeData', 'modelType'],\n  mixins: [comMixin],\n  components: { draggable, RuleDialog },\n  data() {\n    return {\n      treeData: [],\n      fieldOptions: [],\n      popupWidthOptions: ['600px', '800px', '1000px', '40%', '50%', '60%', '70%', '80%'],\n      ruleVisible: false\n    }\n  },\n  created() {\n    this.getFeatureSelector()\n    this.getFieldOptions()\n  },\n  computed: {\n    formFieldsOptions() {\n      let list = []\n      const loop = (data, parent) => {\n        if (!data) return\n        if (data.__config__ && this.isIncludesTable(data) && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data)\n        }\n        if (Array.isArray(data)) data.forEach(d => loop(d, parent))\n        if (data.__vModel__ && data.__vModel__ !== this.activeData.__vModel__) {\n          const isTableChild = parent && parent.__config__ && parent.__config__.jnpfKey === 'table'\n          if (isTableChild && !this.isSameSource(data)) return;\n          list.push({\n            realVModel: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n            realLabel: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label,\n            fullName: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label,\n            id: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n            ...data\n          })\n        }\n      }\n      loop(getDrawingList())\n      return list\n    }\n  },\n  methods: {\n    getFeatureSelector() {\n      getFeatureSelector({ type: 1, webType: '1,2', isRelease: 1 }).then(res => {\n        this.treeData = res.data.list\n      })\n    },\n    getFieldOptions() {\n      if (!this.activeData.modelId) return\n      getFormDataFields(this.activeData.modelId, 1).then(res => {\n        this.fieldOptions = res.data.list\n      })\n    },\n    visibleChange(val) {\n      if (!val) return\n      if (!this.activeData.modelId) this.$message.warning('请先选择关联功能')\n    },\n    onModeIdChange(val) {\n      this.activeData.relationField = ''\n      this.$emit('relationChange', this.activeData.__vModel__)\n      if (!val) {\n        this.fieldOptions = []\n        return\n      }\n      this.getFieldOptions()\n    },\n    onChange(val, item) {\n      const list = this.fieldOptions.filter(o => o.vmodel === val) || []\n      if (!list.length) return\n      const active = list[0]\n      item.label = active.label\n    },\n    addSelectItem() {\n      this.activeData.columnOptions.push({\n        value: '',\n        label: ''\n      })\n    },\n    onChangeRule() {\n      if (!this.activeData.modelId) return this.$message.error('请先选择关联功能')\n      this.ruleVisible = true\n      let list = JSON.parse(JSON.stringify(this.formFieldsOptions))\n      if (this.activeData.__config__.isSubTable) list = list.filter(o => o.__config__.isSubTable)\n      list = list.filter(o => ![...systemComponentsList, ...noFieldList].includes(o.__config__.jnpfKey))\n      this.$nextTick(() => {\n        this.$refs.rule.init({ transferList: this.activeData.__config__.transferList, fieldList: this.fieldOptions, formFieldsList: list })\n      })\n    },\n    onChangeFieldRule(val) {\n      this.activeData.__config__.transferList = val\n    },\n    isIncludesTable(data) {\n      if ((!data.__config__.layout || data.__config__.layout === 'rowFormItem') && data.__config__.jnpfKey !== 'table') return true\n      if (this.activeData.__config__.isSubTable) return this.activeData.__config__.parentVModel === data.__vModel__\n      return data.__config__.jnpfKey !== 'table'\n    },\n    isSameSource(data) {\n      const isSubTable = this.activeData.__config__.isSubTable;\n      if (isSubTable) return data.__config__.isSubTable && this.activeData.__config__.parentVModel === data.__config__.parentVModel;\n      return !data.__config__.isSubTable;\n    }\n  }\n}\n",null]}