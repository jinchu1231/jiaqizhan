{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/components/CandidateForm.vue?vue&type=template&id=d792f7d8","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/components/CandidateForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    _vm._g(\n      _vm._b(\n        {\n          staticClass: \"JNPF-dialog JNPF-dialog_center form-script-dialog\",\n          attrs: {\n            title: \"提交审核\",\n            \"close-on-click-modal\": false,\n            \"lock-scroll\": \"\",\n            \"append-to-body\": \"\",\n            width: \"600px\",\n            \"modal-append-to-body\": false,\n          },\n          on: { open: _vm.onOpen },\n        },\n        \"el-dialog\",\n        _vm.$attrs,\n        false\n      ),\n      _vm.$listeners\n    ),\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"candidateForm\",\n          attrs: {\n            model: _vm.candidateForm,\n            \"label-width\":\n              _vm.candidateForm.candidateList.length || _vm.branchList.length\n                ? \"130px\"\n                : \"80px\",\n          },\n        },\n        [\n          _vm.branchList && _vm.branchList.length\n            ? _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: \"分支选择\",\n                    prop: \"branchList\",\n                    rules: [\n                      {\n                        required: true,\n                        message: \"分支不能为空\",\n                        trigger: \"change\",\n                      },\n                    ],\n                  },\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        multiple: \"\",\n                        placeholder: \"请选择审批分支\",\n                        clearable: \"\",\n                      },\n                      on: { change: _vm.onBranchChange },\n                      model: {\n                        value: _vm.candidateForm.branchList,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.candidateForm, \"branchList\", $$v)\n                        },\n                        expression: \"candidateForm.branchList\",\n                      },\n                    },\n                    _vm._l(_vm.branchList, function (item) {\n                      return _c(\"el-option\", {\n                        key: item.nodeId,\n                        attrs: { label: item.nodeName, value: item.nodeId },\n                      })\n                    }),\n                    1\n                  ),\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._l(_vm.candidateForm.candidateList, function (item, i) {\n            return _c(\n              \"el-form-item\",\n              {\n                key: i,\n                attrs: {\n                  label: item.nodeName + item.label,\n                  prop: \"candidateList.\" + i + \".value\",\n                  rules: item.rules,\n                },\n              },\n              [\n                item.hasCandidates\n                  ? _c(\"candidate-user-select\", {\n                      attrs: {\n                        multiple: \"\",\n                        placeholder: \"请选择\" + item.label,\n                        taskId: _vm.taskId,\n                        formData: _vm.formData,\n                        nodeId: item.nodeId,\n                      },\n                      model: {\n                        value: item.value,\n                        callback: function ($$v) {\n                          _vm.$set(item, \"value\", $$v)\n                        },\n                        expression: \"item.value\",\n                      },\n                    })\n                  : _c(\"JnpfUserSelect\", {\n                      attrs: {\n                        multiple: \"\",\n                        placeholder: \"请选择\" + item.label,\n                        title: \"候选人员\",\n                      },\n                      model: {\n                        value: item.value,\n                        callback: function ($$v) {\n                          _vm.$set(item, \"value\", $$v)\n                        },\n                        expression: \"item.value\",\n                      },\n                    }),\n              ],\n              1\n            )\n          }),\n          _vm.isCustomCopy\n            ? _c(\n                \"el-form-item\",\n                { attrs: { label: \"抄送人员\" } },\n                [\n                  _c(\"JnpfUserSelect\", {\n                    attrs: { placeholder: \"请选择\", multiple: \"\" },\n                    model: {\n                      value: _vm.candidateForm.copyIds,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.candidateForm, \"copyIds\", $$v)\n                      },\n                      expression: \"candidateForm.copyIds\",\n                    },\n                  }),\n                ],\n                1\n              )\n            : _vm._e(),\n        ],\n        2\n      ),\n      _c(\n        \"span\",\n        {\n          staticClass: \"dialog-footer\",\n          attrs: { slot: \"footer\" },\n          slot: \"footer\",\n        },\n        [\n          _c(\"el-button\", { on: { click: _vm.closeDialog } }, [\n            _vm._v(_vm._s(_vm.$t(\"common.cancelButton\"))),\n          ]),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"primary\", loading: _vm.btnLoading },\n              on: {\n                click: function ($event) {\n                  return _vm.submitCandidate()\n                },\n              },\n            },\n            [\n              _vm._v(\n                \"\\n      \" + _vm._s(_vm.$t(\"common.confirmButton\")) + \"\\n    \"\n              ),\n            ]\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}