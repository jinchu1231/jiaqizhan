{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/menu/portalManagement/permissionGroup.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/menu/portalManagement/permissionGroup.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _authorize = require(\"@/api/permission/authorize\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = exports.default = {\n  name: 'JNPF-userTransfer',\n  data: function data() {\n    return {\n      allLoading: false,\n      loading: false,\n      positionLoading: false,\n      activeName: 'position',\n      selectedData: [],\n      props: {\n        children: 'children',\n        label: 'fullName',\n        isLeaf: 'isLeaf'\n      },\n      ids: [],\n      keyword: '',\n      treeData: []\n    };\n  },\n  props: {\n    height: {\n      type: String,\n      default: \"400px\"\n    },\n    dynamicList: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: ''\n    }\n  },\n  methods: {\n    init: function init(ids) {\n      var _this = this;\n      this.keyword = '';\n      this.allLoading = true;\n      this.selectedData = [];\n      (0, _authorize.Selector)().then(function (res) {\n        _this.treeData = res.data.list;\n        _this.treeData.forEach(function (element) {\n          if (ids.includes(element.id)) _this.selectedData.push(element);\n        });\n        _this.ids = _this.selectedData.map(function (o) {\n          return o.id;\n        });\n        _this.allLoading = false;\n      });\n    },\n    search: function search() {\n      this.$refs.position.filter(this.keyword);\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data[this.props.label].indexOf(value) !== -1;\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      if (!data.id) return;\n      var ids = this.selectedData.filter(function (o) {\n        return o.id === data.id;\n      });\n      var id = '';\n      if (ids.length) id = ids[0].id;\n      if (id) return;\n      var item = JSON.parse(JSON.stringify(data));\n      this.selectedData.push(item);\n      this.ids.push(data.id);\n      this.$emit('input', this.ids);\n      this.$emit('getValue', this.ids, this.selectedData);\n    },\n    removeAll: function removeAll() {\n      this.selectedData = [];\n      this.ids = [];\n      this.$emit('input', this.ids);\n      this.$emit('getValue', this.ids, this.selectedData);\n    },\n    removeData: function removeData(index) {\n      this.selectedData.splice(index, 1);\n      this.ids.splice(index, 1);\n      this.$emit('input', this.ids);\n      this.$emit('getValue', this.ids, this.selectedData);\n    }\n  }\n};",null]}