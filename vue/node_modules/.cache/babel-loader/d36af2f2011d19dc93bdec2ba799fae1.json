{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/log/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/log/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.search\");\nvar _log = require(\"@/api/system/log\");\nvar _Form = _interopRequireDefault(require(\"./Form\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'system-log',\n  components: {\n    Form: _Form.default\n  },\n  data: function data() {\n    return {\n      btnLoading: false,\n      showAll: false,\n      formVisible: false,\n      listLoading: true,\n      activeName: '1',\n      loginLogData: [],\n      errorLogData: [],\n      requestLogData: [],\n      operationLogData: [],\n      multipleSelection: [],\n      total: 0,\n      listQuery: {\n        keyword: '',\n        startTime: '',\n        loginType: '',\n        loginMark: '',\n        endTime: '',\n        sort: 'desc',\n        currentPage: 1,\n        pageSize: 20,\n        requestMethod: ''\n      },\n      pickerVal: []\n    };\n  },\n  created: function created() {\n    this.initData();\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n      var activeId = this.activeName;\n      this.listLoading = true;\n      this.listQuery.category = activeId;\n      (0, _log.getLogList)(this.listQuery).then(function (res) {\n        if (activeId === '1') _this.loginLogData = res.data.list;\n        if (activeId === '3') _this.operationLogData = res.data.list;\n        if (activeId === '4') _this.errorLogData = res.data.list;\n        if (activeId === '5') _this.requestLogData = res.data.list;\n        _this.total = res.data.pagination.total;\n        _this.listLoading = false;\n        _this.btnLoading = false;\n      }).catch(function () {\n        _this.listLoading = false;\n        _this.btnLoading = false;\n      });\n      return;\n    },\n    handleTabClick: function handleTabClick() {\n      this.reset();\n    },\n    goDetail: function goDetail(data, type) {\n      var _this2 = this;\n      this.formVisible = true;\n      this.$nextTick(function () {\n        _this2.$refs.Form.init(data, type);\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      var res = val.map(function (item) {\n        return item.id;\n      });\n      this.multipleSelection = res;\n    },\n    handleDel: function handleDel() {\n      var _this3 = this;\n      if (!this.multipleSelection.length) {\n        this.$message({\n          type: 'error',\n          message: '请选择一条数据',\n          duration: 1500\n        });\n        return;\n      }\n      var data = {\n        ids: this.multipleSelection\n      };\n      this.$confirm('您确定要删除这些数据吗, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this3.btnLoading = true;\n        (0, _log.delLog)(data).then(function (res) {\n          _this3.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: function onClose() {\n              _this3.initData();\n            }\n          });\n        }).catch(function () {\n          _this3.btnLoading = false;\n        });\n      }).catch(function () {\n        _this3.btnLoading = false;\n      });\n    },\n    batchDel: function batchDel() {\n      var _this4 = this;\n      this.$confirm('此操作会将所有日志删除，是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this4.btnLoading = true;\n        (0, _log.batchDelLog)(_this4.activeName).then(function (res) {\n          _this4.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: function onClose() {\n              _this4.initData();\n            }\n          });\n        }).catch(function () {\n          _this4.btnLoading = false;\n        });\n      }).catch(function () {\n        _this4.btnLoading = false;\n      });\n    },\n    search: function search() {\n      this.btnLoading = true;\n      this.listQuery.currentPage = 1;\n      if (this.pickerVal && this.pickerVal.length) {\n        this.listQuery.startTime = this.pickerVal[0];\n        this.listQuery.endTime = this.pickerVal[1];\n      } else {\n        this.listQuery.startTime = '';\n        this.listQuery.endTime = '';\n      }\n      this.initData();\n    },\n    reset: function reset() {\n      this.pickerVal = [];\n      this.listQuery.keyword = '';\n      this.listQuery.loginMark = '';\n      this.listQuery.loginType = '';\n      this.listQuery.requestMethod = '';\n      this.listQuery.pickerVal = [];\n      this.search();\n    }\n  }\n};",null]}