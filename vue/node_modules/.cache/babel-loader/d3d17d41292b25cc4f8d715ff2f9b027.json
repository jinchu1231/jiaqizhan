{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/basic/dynamicModel/list/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/basic/dynamicModel/list/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.array.find-index\");\nrequire(\"core-js/modules/es6.regexp.search\");\nrequire(\"core-js/modules/es6.regexp.replace\");\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es6.string.fixed\");\nrequire(\"core-js/modules/es6.number.constructor\");\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nrequire(\"core-js/modules/es6.array.sort\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"regenerator-runtime/runtime\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/asyncToGenerator.js\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _PrintDialog = _interopRequireDefault(require(\"@/components/PrintDialog\"));\nvar _batch = _interopRequireDefault(require(\"@/components/PrintBrowse/batch\"));\nvar _visualDev = require(\"@/api/onlineDev/visualDev\");\nvar _workFlowForm = require(\"@/api/workFlow/workFlowForm\");\nvar _printDev = require(\"@/api/system/printDev\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _common = require(\"@/api/common\");\nvar _comConfig = require(\"@/components/Generator/generator/comConfig\");\nvar _FlowBefore = require(\"@/api/workFlow/FlowBefore\");\nvar _FlowEngine = require(\"@/api/workFlow/FlowEngine\");\nvar _Form = _interopRequireDefault(require(\"./Form\"));\nvar _utils = require(\"@/components/Generator/utils\");\nvar _extraForm = _interopRequireDefault(require(\"./extraForm\"));\nvar _FlowBox = _interopRequireDefault(require(\"@/views/workFlow/components/FlowBox\"));\nvar _detail = _interopRequireDefault(require(\"./detail\"));\nvar _RelevanceDetail = _interopRequireDefault(require(\"./RelevanceDetail\"));\nvar _ExportBox = _interopRequireDefault(require(\"@/components/ExportBox\"));\nvar _Search = _interopRequireDefault(require(\"./Search\"));\nvar _childTableColumn = _interopRequireDefault(require(\"./child-table-column\"));\nvar _SuperQuery = _interopRequireDefault(require(\"@/components/SuperQuery\"));\nvar _CandidateForm = _interopRequireDefault(require(\"@/views/workFlow/components/CandidateForm\"));\nvar _JNPFCustom = _interopRequireDefault(require(\"@/components/JNPFCustom\"));\nvar _vuex = require(\"vuex\");\nvar _index = require(\"@/components/Generator/utils/index.js\");\nvar _SelectFlowDialog = _interopRequireDefault(require(\"@/components/SelectFlowDialog\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'dynamicModel',\n  components: {\n    PrintDialog: _PrintDialog.default,\n    PrintBrowse: _batch.default,\n    Form: _Form.default,\n    extraForm: _extraForm.default,\n    ExportBox: _ExportBox.default,\n    Search: _Search.default,\n    Detail: _detail.default,\n    FlowBox: _FlowBox.default,\n    ChildTableColumn: _childTableColumn.default,\n    SuperQuery: _SuperQuery.default,\n    CandidateForm: _CandidateForm.default,\n    CustomBox: _JNPFCustom.default,\n    RelevanceDetail: _RelevanceDetail.default,\n    SelectFlow: _SelectFlowDialog.default\n  },\n  props: ['config', 'modelId', 'isPreview'],\n  data: function data() {\n    return {\n      printDialogVisible: false,\n      printBrowseVisible: false,\n      printId: \"\",\n      printListOptions: [],\n      systemComponentsList: _comConfig.systemComponentsList,\n      keyword: '',\n      treeProps: {\n        children: 'children',\n        label: 'fullName',\n        value: 'id',\n        isLeaf: 'isLeaf'\n      },\n      list: [],\n      cacheList: [],\n      total: 0,\n      listLoading: false,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: '',\n        menuId: '',\n        queryJson: '',\n        superQueryJson: ''\n      },\n      defListQuery: {\n        sort: 'desc',\n        sidx: ''\n      },\n      defaultListQuery: {\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      },\n      flowVisible: false,\n      formVisible: false,\n      extraFormVisible: false,\n      detailVisible: false,\n      detailsVisible: false,\n      importBoxVisible: false,\n      exportBoxVisible: false,\n      uploadBoxVisible: false,\n      customBoxVisible: false,\n      superQueryVisible: false,\n      treeData: [],\n      expandsTree: true,\n      treeActiveId: '',\n      columnData: {\n        columnBtnsList: []\n      },\n      ordersList: [],\n      formData: {},\n      columnList: [],\n      childColumnList: [],\n      columnOptions: [],\n      exportList: [],\n      columnBtnsList: [],\n      customBtnsList: [],\n      hasBatchBtn: false,\n      refreshTable: false,\n      expandsTable: true,\n      multipleSelection: [],\n      settingsColumnList: [],\n      mergeList: [],\n      expandObj: {},\n      flowTemplateJson: {},\n      isCustomCopy: false,\n      candidateVisible: false,\n      candidateType: 1,\n      branchList: [],\n      candidateList: [],\n      currRow: {},\n      workFlowFormData: {},\n      rowStyle: null,\n      cellStyle: null,\n      refreshTree: true,\n      flowList: [],\n      flowListVisible: false,\n      currFlow: {},\n      treeLoading: false,\n      treeRelationObj: {},\n      getLeftTreeActiveInfo: {},\n      countersignOver: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['userInfo'])), {}, {\n    operationWidth: function operationWidth() {\n      var customWidth = this.customBtnsList.length ? 50 : 0;\n      if (this.columnData.type == 4 && this.config.enableFlow) customWidth += 50;\n      return this.columnBtnsList.length * 50 + customWidth;\n    },\n    showMoreBtn: function showMoreBtn() {\n      var _this = this;\n      return this.customBtnsList.length && this.customBtnsList.some(function (o) {\n        return _this.jnpf.hasBtnP(o.value);\n      });\n    }\n  }),\n  watch: {\n    keyword: function keyword(val) {\n      if (this.columnData.treeSynType == 0) this.$refs.treeBox.filter(val);\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function () {\n      var _init = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n        var permissionList, modelId, list, btnsList, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.listLoading = true;\n              this.listQuery.menuId = this.$route.meta.modelId;\n              this.refreshTable = false;\n              if (!(!this.config.columnData || !this.config.formData)) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 5:\n              this.columnData = JSON.parse(this.config.columnData);\n              if (this.columnData.printIds && this.columnData.printIds.length > 0) {\n                this.getPrintListOptions(this.columnData.printIds);\n              }\n              if (this.columnData.type === 3) {\n                this.columnData.columnList = this.columnData.columnList.filter(function (o) {\n                  return o.prop != _this2.columnData.groupField;\n                });\n              }\n              if (this.config.enableFlow == 1) {\n                if (this.config.flowId) this.getFlowList();\n              }\n              this.hasBatchBtn = this.columnData.btnsList.some(function (o) {\n                return ['batchRemove', 'batchPrint', 'download'].includes(o.value);\n              });\n              if (this.columnData.useBtnPermission) {\n                permissionList = this.$store.getters.permissionList;\n                modelId = this.$route.meta.modelId;\n                list = permissionList.filter(function (o) {\n                  return o.modelId === modelId;\n                });\n                btnsList = list[0] && list[0].button ? list[0].button : [];\n                this.hasBatchBtn = btnsList.some(function (o) {\n                  return ['btn_batchRemove', 'btn_batchPrint', 'btn_download'].includes(o.enCode);\n                });\n              }\n              this.formData = JSON.parse(this.config.formData);\n              this.customBtnsList = this.columnData.customBtnsList || [];\n              this.columnBtnsList = this.columnData.columnBtnsList || [];\n              this.columnOptions = this.columnData.columnOptions || [];\n              this.listLoading = true;\n              if (this.isPreview) this.listQuery.menuId = \"270579315303777093\";\n              _context.next = 19;\n              return (0, _common.getColumnsByModuleId)(this.listQuery.menuId);\n            case 19:\n              res = _context.sent;\n              this.settingsColumnList = res.data || [];\n              this.rowStyle = this.jnpf.getScriptFunc.call(this, this.columnData.funcs && this.columnData.funcs.rowStyle);\n              this.cellStyle = this.jnpf.getScriptFunc.call(this, this.columnData.funcs && this.columnData.funcs.cellStyle);\n              this.getSearchSchemas();\n              this.getColumnList();\n              this.$nextTick(function () {\n                _this2.refreshTable = true;\n              });\n              if (this.columnData.type === 4) this.buildOptions();\n              if (!this.isPreview) {\n                _context.next = 29;\n                break;\n              }\n              return _context.abrupt(\"return\", this.listLoading = false);\n            case 29:\n              this.initDefaultSearchData();\n              this.listQuery.pageSize = this.columnData.pageSize;\n              this.listQuery.sort = this.columnData.sort;\n              this.listQuery.sidx = this.columnData.defaultSidx;\n              this.defaultListQuery.pageSize = this.columnData.pageSize;\n              this.defaultListQuery.sort = this.columnData.sort;\n              this.defaultListQuery.sidx = this.columnData.defaultSidx;\n              this.setDefaultQuery(this.columnData.defaultSortConfig);\n              if (this.columnData.type === 3 || !this.columnData.hasPage) this.listQuery.pageSize = 10000;\n              if (this.columnData.type === 2) {\n                this.treeProps.value = this.columnData.treePropsValue || 'id';\n                this.treeProps.label = this.columnData.treePropsLabel || 'fullName';\n                this.treeProps.children = this.columnData.treePropsChildren || 'children';\n                this.getTreeView();\n              } else {\n                this.initData();\n              }\n              this.addSearchList();\n            case 40:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }(),\n    getTooltip: function getTooltip(jnpfKey) {\n      return [\"slider\", \"rate\"].concat((0, _toConsumableArray2.default)(_comConfig.noGroupList)).includes(jnpfKey) ? false : !!this.columnData.showOverflow;\n    },\n    setDefaultQuery: function setDefaultQuery(defaultSortList) {\n      var defaultSortConfig = (defaultSortList || []).map(function (o) {\n        return (o.sort === 'desc' ? '-' : '') + o.field;\n      });\n      this.defListQuery.sidx = defaultSortConfig.join(',');\n    },\n    addSearchList: function addSearchList() {\n      var searchList = this.columnData.searchList;\n      var obj = {\n        label: '关键词',\n        __config__: {\n          jnpfKey: 'input'\n        },\n        value: undefined,\n        id: 'jnpfKeyword',\n        prop: 'jnpfKeyword'\n      };\n      for (var i = 0; i < searchList.length; i++) {\n        var item = searchList[i];\n        if (item.isKeyword) return searchList.unshift(obj);\n      }\n    },\n    getPrintListOptions: function () {\n      var _getPrintListOptions = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(ids) {\n        var _this3 = this;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              (0, _printDev.printOptionsApi)({\n                ids: ids\n              }).then(function (res) {\n                _this3.printListOptions = res.data;\n              });\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function getPrintListOptions(_x) {\n        return _getPrintListOptions.apply(this, arguments);\n      }\n      return getPrintListOptions;\n    }(),\n    treeRefresh: function treeRefresh() {\n      this.keyword = '';\n      this.treeActiveId = '';\n      this.$refs.treeBox.setCurrentKey(null);\n      this.getTreeView();\n    },\n    printBrowseHandle: function printBrowseHandle(id) {\n      this.printDialogVisible = false;\n      this.handleBatchPrint(id);\n    },\n    printDialog: function printDialog() {\n      var _this4 = this;\n      this.printDialogVisible = true;\n      this.$nextTick(function () {\n        if (_this4.printListOptions.length == 1) {\n          _this4.printBrowseHandle(_this4.printListOptions[0].id);\n          return;\n        }\n        _this4.$refs.printDialog.initOptions(_this4.printListOptions);\n      });\n    },\n    handleBatchPrint: function handleBatchPrint(id) {\n      if (!id) {\n        this.$message({\n          type: \"warning\",\n          message: \"请配置打印模板\",\n          duration: 1500\n        });\n        return;\n      }\n      this.printId = id;\n      this.printBrowseVisible = true;\n    },\n    initData: function initData() {\n      var _this5 = this;\n      if (this.isPreview) return;\n      this.listLoading = true;\n      var query = _objectSpread(_objectSpread({}, this.listQuery), this.defListQuery);\n      (0, _visualDev.getModelList)(this.modelId, query).then(function (res) {\n        if (_this5.columnData.type === 4) {\n          _this5.list = res.data.list.map(function (o) {\n            return _objectSpread(_objectSpread(_objectSpread({}, o), _this5.expandObj), {}, {\n              rowEdit: false\n            });\n          });\n          _this5.cacheList = JSON.parse(JSON.stringify(_this5.list));\n        } else {\n          _this5.list = res.data.list.map(function (o) {\n            return _objectSpread(_objectSpread(_objectSpread({}, o), _this5.expandObj), {}, {\n              hasChildren: true\n            });\n          });\n          if (_this5.columnData.type === 3) {\n            _this5.list.map(function (o) {\n              if (o.children && o.children.length) {\n                o.children = o.children.map(function (e) {\n                  return _objectSpread(_objectSpread({}, e), _this5.expandObj);\n                });\n              }\n            });\n          }\n        }\n        if (_this5.columnData.type !== 3 && _this5.columnData.hasPage) _this5.total = res.data.pagination.total;\n        _this5.listLoading = false;\n        _this5.$nextTick(function () {\n          if (_this5.columnData.funcs && _this5.columnData.funcs.afterOnload) _this5.setTableLoadFunc();\n        });\n      });\n    },\n    /**\n    * 对表格进行合计 目前只支持数字，金额，滑块\n    */\n    getTableSummaries: function getTableSummaries(param) {\n      var _this6 = this;\n      var thousandsField = [];\n      this.columnList.forEach(function (res) {\n        if (res.thousands) thousandsField.push(res.id);\n      });\n      var columns = param.columns,\n        data = param.data;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '合计';\n          return;\n        } else if (_this6.columnData.summaryField.includes(column.property)) {\n          var values = data.map(function (item) {\n            return Number(item[column.property]);\n          });\n          if (!values.every(function (value) {\n            return isNaN(value);\n          })) {\n            sums[index] = values.reduce(function (prev, curr) {\n              var value = Number(curr);\n              if (!isNaN(value)) {\n                return prev + curr;\n              } else {\n                return prev;\n              }\n            }, 0).toFixed(2);\n            if (thousandsField.includes(column.property)) sums[index] = (0, _index.thousandsFormat)(sums[index]);\n          } else {\n            sums[index] = '';\n          }\n        }\n      });\n      return sums;\n    },\n    toDetail: function toDetail(modelId, id) {\n      var _this7 = this;\n      if (!id) return;\n      this.mainLoading = true;\n      (0, _visualDev.getConfigData)(modelId).then(function (res) {\n        _this7.mainLoading = false;\n        if (!res.data || !res.data.formData) return;\n        var formData = JSON.parse(res.data.formData);\n        formData.popupType = 'general';\n        _this7.detailsVisible = true;\n        _this7.$nextTick(function () {\n          _this7.$refs.RelevanceDetail.init(formData, modelId, id);\n        });\n      }).catch(function () {\n        _this7.mainLoading = false;\n      });\n    },\n    getTreeView: function getTreeView() {\n      var _this8 = this;\n      this.treeLoading = true;\n      if (this.columnData.treeDataSource === \"dictionary\") {\n        if (!this.columnData.treeDictionary) return this.treeLoading = false;\n        this.$store.dispatch('base/getDicDataSelector', this.columnData.treeDictionary).then(function (res) {\n          _this8.treeData = res;\n          _this8.treeLoading = false;\n          _this8.initData();\n        });\n      }\n      if (this.columnData.treeDataSource === \"organize\") {\n        this.$store.dispatch('generator/getDepTree').then(function (res) {\n          _this8.treeData = res;\n          _this8.treeLoading = false;\n          _this8.initData();\n        });\n      }\n      if (this.columnData.treeDataSource === \"department\") {\n        this.$store.dispatch('generator/getDepTree').then(function (res) {\n          _this8.treeData = res;\n          _this8.treeLoading = false;\n          _this8.initData();\n        });\n      }\n      if (this.columnData.treeDataSource === \"api\") {\n        if (!this.columnData.treePropsUrl) return this.treeLoading = false;\n        (0, _dataInterface.getDataInterfaceRes)(this.columnData.treePropsUrl).then(function (res) {\n          _this8.treeData = Array.isArray(res.data) ? res.data : [];\n          _this8.treeLoading = false;\n          _this8.initData();\n        });\n      }\n    },\n    getSearchSchemas: function getSearchSchemas() {\n      if (this.columnData.treeRelation) {\n        for (var i = 0; i < this.columnData.columnOptions.length; i++) {\n          var e = this.columnData.columnOptions[i];\n          if (e.id === this.columnData.treeRelation) {\n            this.treeRelationObj = _objectSpread(_objectSpread({}, e), {}, {\n              searchMultiple: false,\n              jnpfKey: e.__config__.jnpfKey\n            });\n            break;\n          }\n        }\n      }\n    },\n    getColumnList: function getColumnList() {\n      if (this.isPreview) {\n        var columnList = this.columnData.columnList;\n        this.columnList = this.transformColumnList(columnList);\n        return;\n      }\n      var columnPermissionList = [];\n      if (!this.columnData.useColumnPermission) {\n        columnPermissionList = this.columnData.columnList;\n      } else {\n        var permissionList = this.$store.getters.permissionList;\n        var modelId = this.$route.meta.modelId;\n        var list = permissionList.filter(function (o) {\n          return o.modelId === modelId;\n        });\n        var _columnList = list[0] && list[0].column ? list[0].column : [];\n        for (var i = 0; i < this.columnData.columnList.length; i++) {\n          inner: for (var j = 0; j < _columnList.length; j++) {\n            if (this.columnData.columnList[i].prop === _columnList[j].enCode) {\n              columnPermissionList.push(this.columnData.columnList[i]);\n              break inner;\n            }\n          }\n        }\n      }\n      if (![3, 5].includes(this.columnData.type)) columnPermissionList = this.getComplexColumns(columnPermissionList);\n      this.columnList = this.transformColumnList(columnPermissionList);\n    },\n    getComplexColumns: function getComplexColumns(columns) {\n      var complexHeaderList = this.columnData.complexHeaderList || [];\n      if (!complexHeaderList.length) return columns;\n      var childColumns = [];\n      for (var i = 0; i < complexHeaderList.length; i++) {\n        var e = complexHeaderList[i];\n        e.label = e.fullName;\n        e.align = e.align;\n        e.dataIndex = e.id;\n        e.prop = e.id;\n        e.children = [];\n        e.jnpfKey = 'complexHeader';\n        e.sortable = false;\n        if (e.childColumns && e.childColumns.length) {\n          childColumns.push.apply(childColumns, (0, _toConsumableArray2.default)(e.childColumns));\n          for (var j = 0; j < columns.length; j++) {\n            var o = columns[j];\n            if (e.childColumns.includes(o.id) && o.fixed !== 'left' && o.fixed !== 'right') e.children.push(_objectSpread({}, o));\n          }\n        }\n      }\n      complexHeaderList = complexHeaderList.filter(function (o) {\n        return o.children.length;\n      });\n      for (var _i = 0; _i < columns.length; _i++) {\n        var item = columns[_i];\n        if (!childColumns.includes(item.id)) complexHeaderList.push(item);\n      }\n      return complexHeaderList;\n    },\n    transformColumnList: function transformColumnList(columnList) {\n      var _this9 = this;\n      var list = [];\n      var _loop = function _loop() {\n        var e = columnList[i];\n        if (!e.prop.includes('-')) {\n          list.push(e);\n        } else {\n          var prop = e.prop.split('-')[0];\n          var vModel = e.prop.split('-')[1];\n          var label = e.label.split('-')[0];\n          var childLabel = e.label.replace(label + '-', '');\n          var newItem = {\n            align: \"center\",\n            jnpfKey: \"table\",\n            prop: prop,\n            label: label,\n            children: []\n          };\n          e.vModel = vModel;\n          e.childLabel = childLabel;\n          if (!_this9.expandObj.hasOwnProperty(\"\".concat(prop, \"Expand\"))) _this9.$set(_this9.expandObj, \"\".concat(prop, \"Expand\"), false);\n          if (!list.some(function (o) {\n            return o.prop === prop;\n          })) list.push(newItem);\n          for (var _i2 = 0; _i2 < list.length; _i2++) {\n            if (list[_i2].prop === prop) {\n              list[_i2].children.push(e);\n              break;\n            }\n          }\n        }\n      };\n      for (var i = 0; i < columnList.length; i++) {\n        _loop();\n      }\n      this.getMergeList(list);\n      this.getExportList(list);\n      this.childColumnList = list.filter(function (o) {\n        return o.jnpfKey === 'table';\n      });\n      return list;\n    },\n    getExportList: function getExportList(list) {\n      var exportList = [];\n      for (var i = 0; i < list.length; i++) {\n        if (list[i].jnpfKey === 'table') {\n          if (this.columnData.type != 4) exportList.push.apply(exportList, (0, _toConsumableArray2.default)(list[i].children));\n        } else if (list[i].jnpfKey === 'complexHeader') {\n          exportList.push.apply(exportList, (0, _toConsumableArray2.default)(list[i].children));\n        } else {\n          exportList.push(list[i]);\n        }\n      }\n      this.exportList = exportList.filter(function (o) {\n        return !_comConfig.noGroupList.includes(o.__config__.jnpfKey);\n      });\n    },\n    initDefaultSearchData: function initDefaultSearchData() {\n      var searchList = this.columnData.searchList;\n      //处理搜索条件中的默认值\n      if (searchList != null && searchList.length > 0) {\n        var obj = {};\n        for (var i = 0; i < searchList.length; i++) {\n          var e = searchList[i];\n          if (e.value) {\n            if (Array.isArray(e.value)) {\n              if (e.value.length) obj[e.id] = e.value;\n            } else {\n              obj[e.id] = e.value;\n            }\n          }\n          //if ((Array.isArray(e.value) && e.value.length) || e.value || e.value === 0 || e.value === false) e.defaultValue = e.value;\n        }\n        this.listQuery.queryJson = JSON.stringify(obj) === \"{}\" ? '' : JSON.stringify(obj);\n      }\n    },\n    getMergeList: function getMergeList(list) {\n      var _this10 = this;\n      list.forEach(function (item) {\n        if (item.children && item.children.length > 0 && item.jnpfKey == 'table') {\n          item.children.forEach(function (child, index) {\n            if (index == 0) {\n              _this10.mergeList.push({\n                prop: child.prop,\n                rowspan: 1,\n                colspan: item.children.length\n              });\n            } else {\n              _this10.mergeList.push({\n                prop: child.prop,\n                rowspan: 0,\n                colspan: 0\n              });\n            }\n          });\n        } else {\n          _this10.mergeList.push({\n            prop: item.prop,\n            rowspan: 1,\n            colspan: 1\n          });\n        }\n      });\n    },\n    arraySpanMethod: function arraySpanMethod(_ref) {\n      var column = _ref.column;\n      for (var i = 0; i < this.mergeList.length; i++) {\n        if (column.property == this.mergeList[i].prop) {\n          return [this.mergeList[i].rowspan, this.mergeList[i].colspan];\n        }\n      }\n    },\n    toggleExpand: function toggleExpand(row, field) {\n      row[field] = !row[field];\n    },\n    getNodePath: function getNodePath(node) {\n      var fullPath = [];\n      var loop = function loop(node) {\n        if (node.level) fullPath.unshift(node.data);\n        if (node.parent) loop(node.parent);\n      };\n      loop(node);\n      return fullPath;\n    },\n    handleNodeClick: function handleNodeClick(data, node) {\n      var _this11 = this;\n      if (this.treeActiveId == data[this.treeProps.value]) return;\n      this.treeActiveId = data[this.treeProps.value];\n      this.$refs.Search.treeReset();\n      var queryJson = {};\n      var isMultiple = !this.treeRelationObj ? false : this.treeRelationObj.searchMultiple;\n      if (this.treeRelationObj && this.treeRelationObj.jnpfKey && ['organizeSelect', 'cascader', 'areaSelect'].includes(this.treeRelationObj.jnpfKey)) {\n        var nodePath = this.getNodePath(node);\n        var currValue = nodePath.map(function (o) {\n          return o[_this11.treeProps.value];\n        });\n        this.treeActiveId = currValue;\n        queryJson = (0, _defineProperty2.default)({}, this.columnData.treeRelation, isMultiple ? [currValue] : currValue);\n      } else {\n        queryJson = (0, _defineProperty2.default)({}, this.columnData.treeRelation, isMultiple ? [this.treeActiveId] : this.treeActiveId);\n      }\n      var loop = function loop(data, parent) {\n        if (!data) return;\n        if (data.__config__ && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data);\n        }\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d, parent);\n        });\n        if (data.__config__ && data.__config__.jnpfKey) {\n          if (data.__vModel__ == _this11.columnData.treeRelation) {\n            data.__config__.defaultCurrent = false;\n            data.__config__.defaultValue = data.multiple ? [_this11.treeActiveId] : _this11.treeActiveId;\n            _this11.getLeftTreeActiveInfo = (0, _defineProperty2.default)({}, _this11.columnData.treeRelation, data.__config__.defaultValue);\n          }\n        }\n      };\n      loop(this.formData.fields);\n      this.search(JSON.stringify(queryJson));\n    },\n    handleDel: function handleDel(id, index) {\n      var _this12 = this;\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(function () {\n        if (id) {\n          (0, _visualDev.deleteModel)(_this12.modelId, id).then(function (res) {\n            _this12.$message({\n              type: 'success',\n              message: res.msg,\n              duration: 1000,\n              onClose: function onClose() {\n                _this12.initData();\n              }\n            });\n          });\n        } else {\n          _this12.list.splice(index, 1);\n        }\n      }).catch(function () {});\n    },\n    editForRowEdit: function editForRowEdit(row) {\n      row.rowEdit = true;\n      this.addHandleForRowEdit(true);\n      if (this.columnData.type === 4) return;\n      var flowId = row.flowId || this.flowList[0].id;\n      if (!flowId) return;\n      var list = this.flowList.filter(function (o) {\n        return o.id === flowId;\n      });\n      this.currFlow = !list.length ? this.flowList[0] : list[0];\n      var flowTemplateJson = this.currFlow.flowTemplateJson ? JSON.parse(this.currFlow.flowTemplateJson) : {};\n      this.isCustomCopy = flowTemplateJson.properties && flowTemplateJson.properties.isCustomCopy;\n    },\n    saveForRowEdit: function saveForRowEdit(row, status, candidateData) {\n      var _this13 = this;\n      if (this.isPreview) return this.$message({\n        message: '功能预览不支持数据保存',\n        type: 'warning'\n      });\n      if (this.config.enableFlow == 1) {\n        var query = {\n          id: row.id,\n          status: status || \"1\",\n          candidateType: this.candidateType,\n          countersignOver: this.countersignOver,\n          formData: row,\n          flowId: this.currFlow.id,\n          flowUrgent: 1\n        };\n        if (candidateData) query = _objectSpread(_objectSpread({}, query), candidateData);\n        var formMethod = query.id ? _workFlowForm.Update : _workFlowForm.Create;\n        formMethod(query).then(function (res) {\n          _this13.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: function onClose() {\n              _this13.candidateVisible = false;\n              _this13.initData();\n            }\n          });\n        });\n      } else {\n        var _query = {\n          id: row.id,\n          data: JSON.stringify(row)\n        };\n        var _formMethod = _query.id ? _visualDev.updateModel : _visualDev.createModel;\n        _formMethod(this.modelId, _query).then(function (res) {\n          _this13.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: function onClose() {\n              _this13.candidateVisible = false;\n              _this13.initData();\n            }\n          });\n        });\n      }\n    },\n    submitForRowEdit: function submitForRowEdit(row) {\n      var _this14 = this;\n      this.currRow = row;\n      if (this.isPreview) return this.$message({\n        message: '功能预览不支持数据保存',\n        type: 'warning'\n      });\n      this.workFlowFormData = {\n        id: row.id,\n        formData: row,\n        flowId: this.currFlow.id\n      };\n      (0, _FlowBefore.Candidates)(0, this.workFlowFormData).then(function (res) {\n        var data = res.data;\n        _this14.candidateType = data.type;\n        _this14.countersignOver = data.countersignOver;\n        if (data.type == 1) {\n          _this14.branchList = res.data.list.filter(function (o) {\n            return o.isBranchFlow;\n          });\n          _this14.candidateList = res.data.list.filter(function (o) {\n            return !o.isBranchFlow && o.isCandidates;\n          });\n          _this14.candidateVisible = true;\n        } else if (data.type == 2) {\n          _this14.branchList = [];\n          _this14.candidateList = res.data.list.filter(function (o) {\n            return o.isCandidates;\n          });\n          _this14.candidateVisible = true;\n        } else {\n          if (_this14.isCustomCopy) {\n            _this14.branchList = [];\n            _this14.candidateList = [];\n            _this14.candidateVisible = true;\n            return;\n          }\n          _this14.$confirm('您确定要提交当前流程吗, 是否继续?', '提示', {\n            type: 'warning'\n          }).then(function () {\n            _this14.saveForRowEdit(row, '0');\n          }).catch(function () {});\n        }\n      }).catch(function () {});\n    },\n    submitCandidate: function submitCandidate(data) {\n      this.saveForRowEdit(this.currRow, '0', data);\n    },\n    cancelRowEdit: function cancelRowEdit(row, index) {\n      if (!row.id) return this.list.splice(index, 1);\n      row.rowEdit = false;\n      var item = JSON.parse(JSON.stringify(this.cacheList[index]));\n      this.$set(this.list, index, item);\n    },\n    addHandleForRowEdit: function addHandleForRowEdit(flag) {\n      var item = {\n        rowEdit: true\n      };\n      for (var i = 0; i < this.columnData.columnList.length; i++) {\n        var e = this.columnData.columnList[i];\n        item[e.id] = e.__config__.defaultValue;\n        var config = e.__config__;\n        if (e.__config__.defaultCurrent) {\n          if (e.__config__.jnpfKey === 'datePicker') {\n            if (e.__config__.defaultCurrent == true) item[e.id] = new Date().getTime();\n            if (config.startTimeRule) {\n              if (config.startTimeType == 1) {\n                e.startTime = config.startTimeValue;\n              } else if (config.startTimeType == 3) {\n                e.startTime = new Date().getTime();\n              } else if (config.startTimeType == 4) {\n                var previousDate = '';\n                if (config.startTimeTarget == 1 || config.startTimeTarget == 2) {\n                  previousDate = (0, _index.getDateDay)(config.startTimeTarget, config.startTimeType, config.startTimeValue);\n                  e.startTime = new Date(previousDate).getTime();\n                } else if (config.startTimeTarget == 3) {\n                  previousDate = (0, _index.getBeforeData)(config.startTimeValue);\n                  e.startTime = new Date(previousDate).getTime();\n                } else {\n                  e.startTime = (0, _index.getBeforeTime)(config.startTimeTarget, config.startTimeValue).getTime();\n                }\n              } else if (config.startTimeType == 5) {\n                var _previousDate = '';\n                if (config.startTimeTarget == 1 || config.startTimeTarget == 2) {\n                  _previousDate = (0, _index.getDateDay)(config.startTimeTarget, config.startTimeType, config.startTimeValue);\n                  e.startTime = new Date(_previousDate).getTime();\n                } else if (config.startTimeTarget == 3) {\n                  _previousDate = (0, _index.getLaterData)(config.startTimeValue);\n                  e.startTime = new Date(_previousDate).getTime();\n                } else {\n                  e.startTime = (0, _index.getLaterTime)(config.startTimeTarget, config.startTimeValue).getTime();\n                }\n              }\n            }\n            if (config.endTimeRule) {\n              if (config.endTimeType == 1) {\n                e.endTime = config.endTimeValue;\n              } else if (config.endTimeType == 3) {\n                e.endTime = new Date().getTime();\n              } else if (config.endTimeType == 4) {\n                var _previousDate2 = '';\n                if (config.endTimeTarget == 1 || config.endTimeTarget == 2) {\n                  _previousDate2 = (0, _index.getDateDay)(config.endTimeTarget, config.endTimeType, config.endTimeValue);\n                  e.endTime = new Date(_previousDate2).getTime();\n                } else if (config.endTimeTarget == 3) {\n                  _previousDate2 = (0, _index.getBeforeData)(config.endTimeValue);\n                  e.endTime = new Date(_previousDate2).getTime();\n                } else {\n                  e.endTime = (0, _index.getBeforeTime)(config.endTimeTarget, config.endTimeValue).getTime();\n                }\n              } else if (config.endTimeType == 5) {\n                var _previousDate3 = '';\n                if (config.endTimeTarget == 1 || config.endTimeTarget == 2) {\n                  _previousDate3 = (0, _index.getDateDay)(config.endTimeTarget, config.endTimeType, config.endTimeValue);\n                  e.endTime = new Date(_previousDate3).getTime();\n                } else if (config.endTimeTarget == 3) {\n                  _previousDate3 = (0, _index.getLaterData)(config.endTimeValue);\n                  e.endTime = new Date(_previousDate3).getTime();\n                } else {\n                  e.endTime = (0, _index.getLaterTime)(config.endTimeTarget, config.endTimeValue).getTime();\n                }\n              }\n            }\n          } else if (e.__config__.jnpfKey === 'organizeSelect' && e.__config__.defaultCurrent == true) {\n            item[e.id] = e.multiple ? [this.userInfo.organizeIdList] : this.userInfo.organizeIdList;\n          } else if (config.jnpfKey === 'depSelect' && this.userInfo.departmentId) {\n            item[e.id] = e.multiple ? [this.userInfo.departmentId] : this.userInfo.departmentId;\n          } else if (config.jnpfKey === 'userSelect' && this.userInfo.userId) {\n            item[e.id] = e.multiple ? [this.userInfo.userId] : this.userInfo.userId;\n          } else if (config.jnpfKey === 'usersSelect' && this.userInfo.userId) {\n            item[e.id] = e.multiple ? [this.userInfo.userId + '--user'] : this.userInfo.userId + '--user';\n          } else if (config.jnpfKey === 'posSelect' && this.userInfo.positionIds.length) {\n            item[e.id] = e.multiple ? this.userInfo.positionIds.map(function (o) {\n              return o.id;\n            }) : this.userInfo.positionIds[0].id;\n          } else if (config.jnpfKey === 'roleSelect' && this.userInfo.roleIds.length) {\n            item[e.id] = e.multiple ? this.userInfo.roleIds : this.userInfo.roleIds[0];\n          } else if (config.jnpfKey === 'groupSelect' && this.userInfo.groupIds.length) {\n            item[e.id] = e.multiple ? this.userInfo.groupIds : this.userInfo.groupIds[0];\n          } else if (e.__config__.jnpfKey === 'timePicker') {\n            if (e.__config__.defaultCurrent == true) item[e.id] = this.jnpf.toDate(new Date(), e.format);\n            var format = e.format === 'HH:mm' ? 'HH:mm:00' : e.format;\n            if (config.startTimeRule) {\n              if (config.startTimeType == 1) {\n                e.startTime = config.startTimeValue || '00:00:00';\n                if (e.startTime.split(':').length == 3) {\n                  e.startTime = e.startTime;\n                } else {\n                  e.startTime = e.startTime + ':00';\n                }\n              } else if (config.startTimeType == 3) {\n                e.startTime = this.jnpf.toDate(new Date(), format);\n              } else if (config.startTimeType == 4) {\n                var _previousDate4 = '';\n                _previousDate4 = (0, _index.getBeforeTime)(config.startTimeTarget, config.startTimeValue);\n                e.startTime = this.jnpf.toDate(_previousDate4, format);\n              } else if (config.startTimeType == 5) {\n                var _previousDate5 = '';\n                _previousDate5 = (0, _index.getLaterTime)(config.startTimeTarget, config.startTimeValue);\n                e.startTime = this.jnpf.toDate(_previousDate5, format);\n              }\n            }\n            if (config.endTimeRule) {\n              if (config.endTimeType == 1) {\n                e.endTime = config.endTimeValue || '23:59:59';\n                if (e.endTime.split(':').length == 3) {\n                  e.endTime = e.endTime;\n                } else {\n                  e.endTime = e.endTime + ':00';\n                }\n              } else if (config.endTimeType == 3) {\n                e.endTime = this.jnpf.toDate(new Date(), format);\n              } else if (config.endTimeType == 4) {\n                var _previousDate6 = '';\n                _previousDate6 = (0, _index.getBeforeTime)(config.endTimeTarget, config.endTimeValue);\n                e.endTime = this.jnpf.toDate(_previousDate6, format);\n              } else if (config.endTimeType == 5) {\n                var _previousDate7 = '';\n                _previousDate7 = (0, _index.getLaterTime)(config.endTimeTarget, config.endTimeValue);\n                e.endTime = this.jnpf.toDate(_previousDate7, format);\n              }\n            }\n          } else if (e.__config__.jnpfKey === 'sign' && this.userInfo.signImg) item[e.id] = this.userInfo.signImg;\n        }\n      }\n      if (!flag) this.list.unshift((0, _utils.deepClone)(item));\n    },\n    addHandle: function addHandle() {\n      var _this15 = this;\n      if (this.config.enableFlow == 1) {\n        if (!this.flowList.length) {\n          this.$message({\n            type: 'error',\n            message: '流程不存在'\n          });\n        } else if (this.flowList.length === 1) {\n          this.selectFlow(this.flowList[0]);\n        } else {\n          this.flowListVisible = true;\n          this.$nextTick(function () {\n            _this15.$refs.selectFlow.init(_this15.flowList);\n          });\n        }\n      } else {\n        if (this.columnData.type === 4) {\n          this.addHandleForRowEdit();\n        } else {\n          this.formVisible = true;\n          this.$nextTick(function () {\n            _this15.$refs.Form.init(_this15.formData, _this15.modelId, '', _this15.isPreview, _this15.columnData.useFormPermission, _this15.list, _this15.columnData.type);\n          });\n        }\n      }\n    },\n    selectFlow: function selectFlow(item) {\n      var _this16 = this;\n      this.currFlow = item;\n      if (this.columnData.type === 4) {\n        var flowTemplateJson = item.flowTemplateJson ? JSON.parse(item.flowTemplateJson) : {};\n        this.isCustomCopy = flowTemplateJson.properties && flowTemplateJson.properties.isCustomCopy;\n        this.flowListVisible = false;\n        this.addHandleForRowEdit();\n      } else {\n        var data = {\n          id: '',\n          flowId: item.id,\n          opType: '-1',\n          type: 1,\n          modelId: this.modelId,\n          isPreview: this.isPreview\n        };\n        var treeRelation = this.columnData.treeRelation;\n        if (treeRelation) {\n          data = _objectSpread(_objectSpread({}, data), {}, {\n            'getLeftTreeActiveInfo': this.getLeftTreeActiveInfo\n          });\n        }\n        this.flowListVisible = false;\n        this.flowVisible = true;\n        this.$nextTick(function () {\n          _this16.$refs.FlowBox.init(data);\n        });\n      }\n    },\n    updateHandle: function updateHandle(row) {\n      var _this17 = this;\n      if (this.config.enableFlow == 1) {\n        var data = {\n          id: row.id,\n          flowId: row.flowId || this.flowList[0].id,\n          type: 1,\n          opType: '-1',\n          modelId: this.modelId,\n          isPreview: this.isPreview\n        };\n        this.flowVisible = true;\n        this.$nextTick(function () {\n          _this17.$refs.FlowBox.init(data);\n        });\n      } else {\n        this.formVisible = true;\n        this.$nextTick(function () {\n          _this17.$refs.Form.init(_this17.formData, _this17.modelId, row.id, _this17.isPreview, _this17.columnData.useFormPermission, _this17.list, _this17.columnData.type);\n        });\n      }\n    },\n    headBtnsHandel: function headBtnsHandel(key) {\n      var _this18 = this;\n      if (key === 'add') {\n        this.addHandle();\n      }\n      if (key == 'download') {\n        this.exportBoxVisible = true;\n        this.$nextTick(function () {\n          _this18.$refs.ExportBox.init(_this18.exportList, _this18.multipleSelection);\n        });\n      }\n      if (key == 'upload') {\n        this.uploadBoxVisible = true;\n        this.$nextTick(function () {\n          _this18.$refs.UploadBox.init(_this18.modelId, '', _this18.config.enableFlow, _this18.flowList);\n        });\n      }\n      if (this.isPreview) return;\n      if (key === 'batchRemove') {\n        this.batchRemove();\n      }\n      if (key === 'batchPrint') {\n        if (!this.multipleSelection.length) {\n          this.$message({\n            type: 'error',\n            message: '请选择一条数据',\n            duration: 1500\n          });\n          return;\n        }\n        this.printDialog();\n      }\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      var res = val.map(function (item) {\n        return item.id;\n      });\n      this.multipleSelection = res;\n    },\n    batchRemove: function batchRemove() {\n      var _this19 = this;\n      if (!this.multipleSelection.length) {\n        this.$message({\n          type: 'error',\n          message: '请选择一条数据',\n          duration: 1500\n        });\n        return;\n      }\n      this.$confirm('您确定要删除这些数据吗, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        (0, _visualDev.batchDelete)(_this19.modelId, _this19.multipleSelection).then(function (res) {\n          _this19.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: function onClose() {\n              _this19.initData();\n            }\n          });\n        });\n      }).catch(function () {});\n    },\n    download: function download(data) {\n      var _this20 = this;\n      if (this.isPreview) return this.$message({\n        message: '功能预览不支持数据导出',\n        type: 'warning'\n      });\n      var defaultSortConfig = (this.columnData.defaultSortConfig || []).map(function (o) {\n        return (o.sort === 'desc' ? '-' : '') + o.field;\n      });\n      this.listQuery.sidx = defaultSortConfig.join(',');\n      var query = _objectSpread(_objectSpread({}, this.listQuery), data);\n      (0, _visualDev.exportModel)(this.modelId, query).then(function (res) {\n        if (!res.data.url) return;\n        _this20.jnpf.downloadFile(res.data.url);\n        _this20.$refs.ExportBox.visible = false;\n        _this20.exportBoxVisible = false;\n      });\n    },\n    columnBtnsHandel: function columnBtnsHandel(key, row, index) {\n      if (key === 'edit') {\n        this.updateHandle(row);\n      }\n      if (key === 'detail') {\n        this.goDetail(row);\n      }\n      if (key == 'remove') {\n        this.handleDel(row.id, index);\n      }\n    },\n    goDetail: function goDetail(row) {\n      var _this21 = this;\n      if (this.config.enableFlow == 1) {\n        var data = {\n          id: row.id,\n          flowId: row.flowId,\n          type: 1,\n          opType: 0,\n          modelId: this.modelId,\n          isPreview: this.isPreview\n        };\n        this.flowVisible = true;\n        this.$nextTick(function () {\n          _this21.$refs.FlowBox.init(data);\n        });\n      } else {\n        this.detailVisible = true;\n        this.$nextTick(function () {\n          _this21.$refs.Detail.init(_this21.formData, _this21.modelId, row.id, _this21.columnData.useFormPermission);\n        });\n      }\n    },\n    handleHeaderClass: function handleHeaderClass(_ref2) {\n      var column = _ref2.column;\n      column.order = column.multiOrder;\n    },\n    handleOrderChange: function handleOrderChange(orderColumn, orderState) {\n      var index = this.ordersList.findIndex(function (e) {\n        return e.field === orderColumn;\n      });\n      var sort = orderState === 'ascending' ? 'asc' : orderState === 'descending' ? 'desc' : '';\n      if (index > -1) {\n        this.ordersList[index].sort = orderState;\n      } else {\n        this.ordersList.push({\n          field: orderColumn,\n          sort: sort\n        });\n      }\n      this.ordersList = this.ordersList.filter(function (e) {\n        return e.sort;\n      });\n      this.ordersList.length ? this.setDefaultQuery(this.ordersList) : this.setDefaultQuery(this.columnData.defaultSortConfig);\n      this.initData();\n    },\n    handleTableSort: function handleTableSort(_ref3) {\n      var column = _ref3.column;\n      if (column.sortable !== 'custom') return;\n      column.multiOrder = column.multiOrder === 'descending' ? 'ascending' : column.multiOrder ? '' : 'descending';\n      this.handleOrderChange(column.property, column.multiOrder);\n    },\n    refresh: function refresh(isRefresh) {\n      this.formVisible = false;\n      this.extraFormVisible = false;\n      if (isRefresh) this.initData();\n    },\n    closeFlow: function closeFlow(isRefresh) {\n      this.flowVisible = false;\n      if (isRefresh) this.initData();\n    },\n    reset: function () {\n      var _reset = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var obj, queryJson;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(this.columnData.type === 2 && this.treeActiveId)) {\n                _context3.next = 6;\n                break;\n              }\n              obj = (0, _defineProperty2.default)({}, this.columnData.treeRelation, this.treeActiveId);\n              queryJson = this.treeActiveId ? JSON.stringify(obj) : '';\n              this.search(queryJson);\n              _context3.next = 9;\n              break;\n            case 6:\n              _context3.next = 8;\n              return this.initDefaultSearchData();\n            case 8:\n              this.search(this.listQuery.queryJson);\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function reset() {\n        return _reset.apply(this, arguments);\n      }\n      return reset;\n    }(),\n    searchData: function searchData(queryJson) {\n      if (this.columnData.type === 2 && this.treeActiveId) {\n        queryJson = queryJson ? JSON.parse(queryJson) : '';\n        queryJson = _objectSpread((0, _defineProperty2.default)({}, this.columnData.treeRelation, this.treeActiveId), queryJson);\n        queryJson = JSON.stringify(queryJson);\n      }\n      this.search(queryJson);\n    },\n    search: function search(queryJson) {\n      if (this.isPreview) return;\n      if (!queryJson) this.$refs.treeBox && this.$refs.treeBox.setCurrentKey(null);\n      this.listQuery.queryJson = queryJson;\n      this.listQuery.currentPage = 1;\n      this.initData();\n    },\n    openSuperQuery: function openSuperQuery() {\n      var _this22 = this;\n      this.superQueryVisible = true;\n      this.$nextTick(function () {\n        _this22.$refs.SuperQuery.init();\n      });\n    },\n    superQuery: function superQuery(queryJson) {\n      if (this.isPreview) return;\n      this.listQuery.superQueryJson = queryJson;\n      this.listQuery.currentPage = 1;\n      this.initData();\n    },\n    customBtnsHandel: function customBtnsHandel(item, row, index) {\n      if (item.event.btnType == 1) this.handlePopup(item.event, row, index);\n      if (item.event.btnType == 2) this.handleScriptFunc(item.event, row, index);\n      if (item.event.btnType == 3) this.handleInterface(item.event, row, index);\n    },\n    handlePopup: function handlePopup(item, row, index) {\n      var _this23 = this;\n      this.customBoxVisible = true;\n      this.$nextTick(function () {\n        _this23.$refs.CustomBox.init(item, _this23.modelId, row.id, _this23.isPreview);\n      });\n    },\n    handleScriptFunc: function handleScriptFunc(item, row, index) {\n      var parameter = {\n        data: row,\n        index: index,\n        refresh: this.initData,\n        onlineUtils: this.jnpf.onlineUtils\n      };\n      var func = this.jnpf.getScriptFunc.call(this, item.func);\n      if (!func) return;\n      func.call(this, parameter);\n    },\n    handleInterface: function handleInterface(item, row) {\n      var _this24 = this;\n      var handlerInterface = function handlerInterface() {\n        (0, _visualDev.getModelInfo)(_this24.modelId, row.id).then(function (res) {\n          var dataForm = res.data || {};\n          if (!dataForm.data) return;\n          var data = _objectSpread(_objectSpread({}, JSON.parse(dataForm.data)), {}, {\n            id: row.id\n          });\n          if (item.templateJson && item.templateJson.length) {\n            item.templateJson.forEach(function (e) {\n              var value = data[e.relationField] || data[e.relationField] == 0 || data[e.relationField] == false ? data[e.relationField] : '';\n              e.defaultValue = e.relationField === '@formId' && e.sourceType == 1 ? data.id : e.sourceType == 1 ? value : e.relationField;\n            });\n          }\n          var query = {\n            paramList: item.templateJson || []\n          };\n          (0, _dataInterface.getDataInterfaceRes)(item.interfaceId, query).then(function (res) {\n            _this24.$message({\n              message: res.msg,\n              type: 'success'\n            });\n          });\n        });\n      };\n      if (!item.useConfirm) return handlerInterface();\n      this.$confirm(item.confirmTitle || '确认执行此操作', '提示', {\n        type: 'warning'\n      }).then(function () {\n        handlerInterface();\n      }).catch(function () {});\n    },\n    setTableLoadFunc: function setTableLoadFunc() {\n      var JNPFTable = this.$refs.tableRef.$refs.JNPFTable;\n      var parameter = {\n        data: this.list,\n        tableRef: JNPFTable,\n        onlineUtils: this.jnpf.onlineUtils\n      };\n      var func = this.jnpf.getScriptFunc.call(this, this.columnData.funcs.afterOnload);\n      if (!func) return;\n      func.call(this, parameter);\n    },\n    buildOptions: function buildOptions() {\n      var _this25 = this;\n      this.columnData.columnList.forEach(function (cur) {\n        var config = cur.__config__;\n        if (_comConfig.dyOptionsList.indexOf(config.jnpfKey) > -1) {\n          if (config.dataType === 'dictionary' && config.dictionaryType) {\n            _this25.$store.dispatch('base/getDicDataSelector', config.dictionaryType).then(function (res) {\n              cur.options = res;\n            });\n          }\n          if (config.dataType === 'dynamic' && config.propsUrl) {\n            var query = {\n              paramList: config.templateJson || []\n            };\n            (0, _dataInterface.getDataInterfaceRes)(config.propsUrl, query).then(function (res) {\n              var data = res.data;\n              cur.options = Array.isArray(data) ? data : [];\n            });\n          }\n        }\n      });\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data[this.treeProps.label].indexOf(value) !== -1;\n    },\n    toggleTreeExpand: function toggleTreeExpand(expands) {\n      var _this26 = this;\n      this.keyword = '';\n      this.refreshTree = false;\n      this.expandsTree = expands;\n      this.$nextTick(function () {\n        _this26.refreshTree = true;\n        _this26.$nextTick(function () {\n          _this26.$refs.treeBox.setCurrentKey(null);\n        });\n      });\n    },\n    toggleExpandList: function toggleExpandList() {\n      var _this27 = this;\n      this.refreshTable = false;\n      this.expandsTable = !this.expandsTable;\n      this.$nextTick(function () {\n        _this27.refreshTable = true;\n      });\n    },\n    loadNode: function loadNode(node, resolve) {\n      var nodeData = node.data;\n      var config = this.columnData;\n      if (config.treeInterfaceId) {\n        if (config.treeTemplateJson && config.treeTemplateJson.length) {\n          for (var i = 0; i < config.treeTemplateJson.length; i++) {\n            var element = config.treeTemplateJson[i];\n            element.defaultValue = nodeData[element.relationField] || '';\n          }\n        }\n        var query = {\n          paramList: config.treeTemplateJson || []\n        };\n        (0, _dataInterface.getDataInterfaceRes)(config.treeInterfaceId, query).then(function (res) {\n          var data = res.data;\n          if (Array.isArray(data)) {\n            resolve(data);\n          } else {\n            resolve([]);\n          }\n        });\n      }\n    },\n    treeLoad: function treeLoad(tree, treeNode, resolve) {\n      var _this28 = this;\n      (0, _visualDev.getModelSubList)(this.modelId, tree.id, this.listQuery).then(function (res) {\n        if (res.data.list && Array.isArray(res.data.list)) {\n          var list = res.data.list.map(function (o) {\n            return _objectSpread(_objectSpread(_objectSpread({}, o), _this28.expandObj), {}, {\n              hasChildren: true\n            });\n          });\n          resolve(list);\n        } else {\n          resolve([]);\n        }\n      });\n    },\n    getFlowList: function getFlowList() {\n      var _this29 = this;\n      (0, _FlowEngine.getFlowList)(this.config.flowId, '1').then(function (res) {\n        _this29.flowList = res.data;\n      });\n    },\n    handleRowForm: function handleRowForm(index) {\n      var _this30 = this;\n      this.extraFormVisible = true;\n      var list = [];\n      this.$nextTick(function () {\n        var fields = _this30.columnList.filter(function (o) {\n          return o.jnpfKey != 'table';\n        });\n        fields.forEach(function (res) {\n          if (res.jnpfKey === 'complexHeader') {\n            var _list;\n            (_list = list).push.apply(_list, (0, _toConsumableArray2.default)(res.children));\n          } else {\n            list.push(res);\n          }\n        });\n        list = list.map(function (o) {\n          o.__config__.span = 24;\n          o.__config__.label = o.label;\n          if (o.__config__.templateJson && o.__config__.templateJson.length) {\n            o.__config__.templateJson = o.__config__.templateJson.map(function (o) {\n              return _objectSpread(_objectSpread({}, o), {}, {\n                relationField: ''\n              });\n            });\n          }\n          if (o.templateJson && o.templateJson.length) {\n            o.templateJson = o.templateJson.map(function (o) {\n              return _objectSpread(_objectSpread({}, o), {}, {\n                relationField: ''\n              });\n            });\n          }\n          return o;\n        });\n        var formData = _objectSpread(_objectSpread({}, _this30.formData), {}, {\n          fields: list\n        });\n        _this30.$refs.extraForm.init(formData, _this30.modelId, _this30.isPreview, _this30.columnData.useFormPermission, _this30.list[index]);\n      });\n    },\n    getFixed: function getFixed(item, i) {\n      if (i == 0 && this.columnData.groupField && this.columnData.type == 3) {\n        if (this.columnList.some(function (o) {\n          return o.fixed == 'left';\n        })) return 'left';\n        return false;\n      } else if (this.columnData.childTableStyle != 2) {\n        return item.fixed == 'none' ? false : item.fixed;\n      } else {\n        return false;\n      }\n    }\n  }\n};",null]}