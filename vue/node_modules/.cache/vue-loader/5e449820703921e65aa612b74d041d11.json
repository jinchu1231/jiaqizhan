{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/components/FormBox.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/components/FormBox.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { FlowBeforeInfo } from '@/api/workFlow/FlowBefore'\nexport default {\n  data() {\n    return {\n      currentView: '',\n      setting: {},\n      flowFormInfo: {},\n      flowTaskInfo: {},\n      visible: false,\n      loading: false,\n      btnLoading: false,\n    }\n  },\n  methods: {\n    init(data) {\n      this.loading = true\n      this.setting = data\n      this.visible = true\n      this.getBeforeInfo(data)\n    },\n    getBeforeInfo(data) {\n      FlowBeforeInfo(data.id, { taskNodeId: data.taskNodeId, flowId: data.flowId }).then(res => {\n        this.flowFormInfo = res.data.flowFormInfo\n        this.flowTaskInfo = res.data.flowTaskInfo\n        data.fullName = this.flowTaskInfo.fullName\n        this.flowUrgent = this.flowTaskInfo.flowUrgent || 1\n        data.status = this.flowTaskInfo.status;\n        data.type = this.flowTaskInfo.type\n        data.formData = res.data.formData || {}\n        data.draftData = res.data.draftData || null\n        const formUrl = this.flowFormInfo.formType == 2 ? 'workFlow/workFlowForm/dynamicForm' : this.flowFormInfo.urlAddress ? this.flowFormInfo.urlAddress.replace(/\\s*/g, \"\") : `workFlow/workFlowForm/${this.flowFormInfo.enCode}`\n        this.currentView = (resolve) => require([`@/views/${formUrl}`], resolve)\n        data.formConf = res.data.flowFormInfo.propertyJson\n        if (data.opType != 1) data.readonly = true\n        data.formOperates = res.data.formOperates || []\n        if (data.opType == 0) {\n          for (let i = 0; i < data.formOperates.length; i++) {\n            data.formOperates[i].write = false\n          }\n        }\n        this.setting = data\n      }).catch(() => { this.loading = false })\n    },\n    setPageLoad(val) {\n      this.loading = !!val\n    },\n    setCandidateLoad(val) {\n      this.candidateLoading = !!val\n    },\n    setLoad(val) {\n      this.btnLoading = !!val\n    }\n  }\n}\n",null]}