{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/systemData/dataModel/fields/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/systemData/dataModel/fields/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getList, Delete } from '@/api/systemData/commonFields'\nimport Form from './Form'\n\nexport default {\n  components: { Form },\n  data() {\n    return {\n      drawer: false,\n      listLoading: false,\n      formVisible: false,\n      list: [],\n      options: [\n        { label: '字符串', value: 'varchar' },\n        { label: '整型', value: 'int' },\n        { label: '日期时间', value: 'datetime' },\n        { label: '浮点', value: 'decimal' },\n        { label: '长整型', value: 'bigint' },\n        { label: '文本', value: 'text' }\n      ]\n    }\n  },\n  filters: {\n    getTypeText(type, options) {\n      let item = options.filter(o => o.value == type)[0]\n      return item && item.label ? item.label : ''\n    }\n  },\n  methods: {\n    init() {\n      this.drawer = true\n      this.$nextTick(() => {\n        this.initData()\n      })\n    },\n    initData() {\n      this.list = []\n      this.listLoading = true\n      getList().then(res => {\n        this.list = res.data.list\n        this.listLoading = false\n      }).catch(() => {\n        this.listLoading = false\n      })\n    },\n    addOrUpdateHandle(id) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.Form.init(id)\n      })\n    },\n    handleDel(id, index) {\n      Delete(id).then(res => {\n        this.$message({\n          type: 'success',\n          message: res.msg,\n          duration: 1000,\n          onClose: () => {\n            this.list.splice(index, 1);\n          }\n        })\n      })\n    }\n  }\n}\n",null]}