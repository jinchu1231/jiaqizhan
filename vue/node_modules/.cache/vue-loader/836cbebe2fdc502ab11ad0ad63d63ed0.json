{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RDatePicker.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RDatePicker.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport comMixin from './mixin';\nimport { getDrawingList } from '@/components/Generator/utils/db'\nexport default {\n  props: ['activeData'],\n  mixins: [comMixin],\n  data() {\n    return {\n      formatOptions: [\n        {\n          label: 'yyyy',\n          value: 'yyyy'\n        },\n        {\n          label: 'yyyy-MM',\n          value: 'yyyy-MM'\n        },\n        {\n          label: 'yyyy-MM-dd',\n          value: 'yyyy-MM-dd'\n        },\n        {\n          label: 'yyyy-MM-dd HH:mm',\n          value: 'yyyy-MM-dd HH:mm'\n        },\n        {\n          label: 'yyyy-MM-dd HH:mm:ss',\n          value: 'yyyy-MM-dd HH:mm:ss'\n        }\n      ],\n      typeOptions: [\n        {\n          label: '特定时间',\n          value: 1\n        },\n        {\n          label: '表单字段',\n          value: 2\n        },\n        {\n          label: '填写当前时间',\n          value: 3\n        },\n        {\n          label: '当前时间前',\n          value: 4\n        },\n        {\n          label: '当前时间后',\n          value: 5\n        },\n      ],\n      type: 'date',\n      targetOptions: [],\n      key2: ''\n    }\n  },\n  watch: {\n    'activeData.__config__.startTimeRule'(val) {\n      if (!val) {\n        this.activeData.__config__.__vModel__startRelationField = ''\n        this.activeData.startTime = ''\n        this.activeData.__config__.startTimeValue = ''\n      }\n    },\n    'activeData.__config__.endTimeRule'(val) {\n      if (!val) {\n        this.activeData.__config__.endRelationField = ''\n        this.activeData.endTime = ''\n        this.activeData.__config__.endTimeValue = ''\n      }\n    },\n    'activeData.format'() {\n      this.getTargetOptions()\n      this.key2 = +new Date()\n    },\n  },\n  created() {\n    this.getTargetOptions()\n  },\n  mounted() {\n  },\n  computed: {\n    formFieldsOptions() {\n      let list = []\n      const loop = (data, parent) => {\n        if (!data) return\n        if (data.__config__ && this.isIncludesTable(data) && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data)\n        }\n        if (Array.isArray(data)) data.forEach(d => loop(d, parent))\n        if (data.__vModel__ && data.__config__.jnpfKey === 'datePicker' && this.isIncludesField(data)) {\n          const isTableChild = parent && parent.__config__ && parent.__config__.jnpfKey === 'table'\n          list.push({\n            realVModel: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n            realLabel: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label,\n            ...data\n          })\n        }\n      }\n      loop(getDrawingList())\n      return list\n    }\n  },\n  methods: {\n    startValue(val) {\n      if (val < 1) this.activeData.__config__.startTimeValue = 1\n    },\n    endValue(val) {\n      if (val < 1) this.activeData.__config__.endTimeValue = 1\n    },\n    endTimeRuleChange() {\n      if (!this.activeData.__config__.endTimeRule) {\n        return this.activeData.__config__.endRelationField = ''\n      } else {\n        return this.activeData.__config__.endTimeType = 1\n      }\n    },\n    startTimeRuleChange() {\n      if (!this.activeData.__config__.startTimeRule) {\n        return this.activeData.__config__.startRelationField = ''\n      } else {\n        return this.activeData.__config__.startTimeType = 1\n      }\n    },\n    isIncludesField(data) {\n      let vModel = data.__vModel__\n      let fieldModal = this.activeData.__vModel__\n      if (vModel !== fieldModal) return true\n      if (data.__config__.relationTable && !data.__config__.isSubTable) {\n        if (vModel === fieldModal) return true\n      } else if (data.__config__.isSubTable) {\n        if (vModel === fieldModal && this.activeData.__config__.tableName != data.__config__.tableName) return true\n      } else if (this.activeData.__config__.isSubTable) {\n        if (vModel === fieldModal) return true\n      }\n      return false\n    },\n    isIncludesTable(data) {\n      if ((!data.__config__.layout || data.__config__.layout === 'rowFormItem') && data.__config__.jnpfKey !== 'table') return true\n      if (this.activeData.__config__.isSubTable) return this.activeData.__config__.parentVModel === data.__vModel__\n      return data.__config__.jnpfKey !== 'table'\n    },\n    dateTypeChange(val) {\n      this.getTargetOptions()\n    },\n    startType(val) {\n      this.activeData.startTime = null\n      this.activeData.__config__.startRelationField = ''\n      if (val == 4 || val == 5) {\n        this.activeData.__config__.startTimeValue = 1\n        this.activeData.__config__.startTimeTarget = 1\n      } else if (val == 2) {\n        this.activeData.__config__.startTimeValue = ''\n      } else {\n        this.activeData.__config__.startTimeValue = ''\n      }\n    },\n    endType(val) {\n      this.activeData.endTime = null\n      this.activeData.__config__.endRelationField = ''\n      if (val == 4 || val == 5) {\n        this.activeData.__config__.endTimeValue = 1\n        this.activeData.__config__.endTimeTarget = 1\n      } else {\n        this.activeData.__config__.endTimeValue = ''\n      }\n    },\n    getTargetOptions() {\n      if (this.activeData.format === 'yyyy') {\n        this.targetOptions = [{ label: '年', value: 1 }]\n      } else if (this.activeData.format === 'yyyy-MM') {\n        this.targetOptions = [{ label: '年', value: 1 }, { label: '月', value: 2 }]\n      } else {\n        this.targetOptions = [{ label: '年', value: 1 }, { label: '月', value: 2 }, { label: '日', value: 3 }]\n      }\n      this.activeData.type = this.activeData.format === 'yyyy' ? 'year' : this.activeData.format === 'yyyy-MM' ? 'month' : this.activeData.format === 'yyyy-MM-dd' ? 'date' : 'datetime'\n      if (this.activeData.format === 'yyyy' || this.activeData.format === 'yyyy-MM' || this.activeData.format === 'yyyy-MM-dd') return this.type = 'date'\n      return this.type = 'datetime'\n    },\n    defaultCurrentChange(val) {\n      if (val) this.activeData.__config__.defaultValue = ''\n    }\n  }\n}\n",null]}