{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/position/userRelation.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/position/userRelation.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _userRelation = require(\"@/api/permission/userRelation\");\nvar _user = require(\"@/api/permission/user\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      visible: false,\n      loading: false,\n      btnLoading: false,\n      allLoading: false,\n      pageTitle: '',\n      dataForm: {\n        objectId: '',\n        objectType: 'Position',\n        userIds: []\n      },\n      treeData: [],\n      selectedData: [],\n      keyword: '',\n      props: {\n        children: 'children',\n        label: 'fullName',\n        isLeaf: 'isLeaf'\n      }\n    };\n  },\n  methods: {\n    init: function init(id, fullName) {\n      var _this = this;\n      this.visible = true;\n      this.dataForm.objectId = id;\n      this.dataForm.userIds = [];\n      this.list = [];\n      this.selectedData = [];\n      this.keyword = '';\n      this.$nextTick(function () {\n        _this.pageTitle = _this.$t(\"position.postMember\") + ' - ' + fullName;\n        _this.allLoading = true;\n        _this.initData();\n        (0, _userRelation.getUserRelationList)(_this.dataForm.objectId).then(function (res) {\n          _this.dataForm.userIds = res.data.ids;\n          _this.getSelectList();\n        });\n      });\n    },\n    getSelectList: function getSelectList() {\n      var _this2 = this;\n      if (!this.dataForm.userIds.length) return this.allLoading = false;\n      (0, _user.getUserInfoList)(this.dataForm.userIds).then(function (res) {\n        _this2.selectedData = res.data.list;\n        _this2.allLoading = false;\n      });\n    },\n    search: function search() {\n      this.$refs.tree && this.$refs.tree.filter(this.keyword);\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data[this.props.label].indexOf(value) !== -1;\n    },\n    initData: function initData() {\n      var _this3 = this;\n      this.loading = true;\n      (0, _user.getUsersByPositionId)({\n        positionId: this.dataForm.objectId\n      }).then(function (res) {\n        _this3.treeData = res.data;\n        _this3.loading = false;\n      });\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      if (data.type !== 'user') return;\n      var boo = this.selectedData.some(function (o) {\n        return o.id === data.id;\n      });\n      if (boo) return;\n      this.selectedData.push(data);\n    },\n    removeAll: function removeAll() {\n      this.selectedData = [];\n    },\n    removeData: function removeData(index) {\n      this.selectedData.splice(index, 1);\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this4 = this;\n      this.btnLoading = true;\n      this.dataForm.userIds = this.selectedData.map(function (o) {\n        return o.id;\n      });\n      (0, _userRelation.createUserRelation)(this.dataForm).then(function (res) {\n        _this4.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: function onClose() {\n            _this4.visible = false;\n            _this4.btnLoading = false;\n          }\n        });\n      }).catch(function () {\n        _this4.btnLoading = false;\n      });\n    }\n  }\n};",null]}