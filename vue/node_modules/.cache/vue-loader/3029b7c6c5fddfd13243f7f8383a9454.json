{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/msgCenter/accountConfig/webhookConfig/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/msgCenter/accountConfig/webhookConfig/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  createConfig,\n  updateConfig,\n  getConfigDetail\n} from '@/api/msgCenter/accountConfig'\nexport default {\n  data() {\n    return {\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      dataForm: {\n        fullName: '',\n        enCode: '',\n        webhookType: '',\n        webhookAddress: \"\",\n        approveType: '1',\n        bearer: \"\",\n        userName: '',\n        password: '',\n        sortCode: 0,\n        enabledMark: 1,\n        description: ''\n      },\n      webhookList: [],\n      approveTypeList: [{ fullName: '无需认证', enCode: '1' }, { fullName: 'bearer令牌', enCode: '2' }],\n      dataRule: {\n        fullName: [\n          { required: true, message: '请输入业务名称', trigger: 'blur' },\n          { max: 50, message: '业务名称最多为50个字符！', trigger: 'blur' }\n        ],\n        enCode: [\n          { required: true, message: '请输入业务编码', trigger: 'blur' },\n          { max: 50, message: '业务编码最多为50个字符！', trigger: 'blur' },\n          { validator: this.formValidate('enCode'), trigger: 'blur' },\n        ],\n        webhookType: [\n          { required: true, message: '请选择类型', trigger: 'change' }\n        ],\n        approveType: [\n          { required: true, message: '请选择认证类型', trigger: 'change' }\n        ],\n        webhookAddress: [{ required: true, message: '请输入WebHook地址', trigger: 'blur' }],\n        bearer: [{ required: true, message: '请输Bearer令牌', trigger: 'blur' }]\n      }\n    }\n  },\n  methods: {\n    init(id, webhookList) {\n      this.dataForm.id = id || ''\n      this.webhookList = webhookList\n      this.visible = true\n      this.formLoading = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        if (this.dataForm.id) {\n          getConfigDetail(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n          })\n        }\n      })\n      this.formLoading = false\n    },\n    change(e) {\n      if (e == 2) {\n        this.dataForm.approveType = '1';\n        this.dataForm.bearer = ''\n      }\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          let query = {\n            ...this.dataForm,\n            type: 6\n          }\n          if (query.approveType == 1) {\n            query.bearer = \"\";\n            query.userName = '';\n            query.password = '';\n          } else if (query.approveType == 2) {\n            query.userName = '';\n            query.password = '';\n          } else {\n            query.bearer = \"\";\n          }\n          const formMethod = query.id ? updateConfig : createConfig\n          formMethod(query).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$emit('refreshDataList')\n              }\n            })\n          }).catch(() => {\n            this.btnLoading = false\n          })\n        }\n      })\n    }\n  }\n}\n",null]}