{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/FlowCondition.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/FlowCondition.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Condition from \"./condition\";\nexport default {\n  props: {\n    modelType: {\n      type: [String, Number],\n      default: \"\"\n    },\n    value: {\n      type: Array,\n      default: () => []\n    },\n    formFieldsOptions: {\n      type: Array,\n      default: () => []\n    },\n    options: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      tempCondition: [],\n      dialogVisible: false,\n      conditionList: [],\n      columnOptions: [],\n      matchLogic: 'and',\n    };\n  },\n  methods: {\n    init(data) {\n      // 从缓存拿暂存数据\n      let ruleData = this.$store.getters.ruleData;\n      if (ruleData && ruleData.length > 0) {\n        this.conditionList = JSON.parse(JSON.stringify(ruleData.conditionList));\n        this.matchLogic = ruleData.matchLogic\n      } else {\n        this.$store.commit(\"generator/SET_FILTER_DATA\", JSON.parse(JSON.stringify(data)))\n        this.conditionList = data.conditionList;\n        this.matchLogic = data.matchLogic\n      }\n    },\n    validData() {\n      let isOk = true;\n      for (let i = 0; i < this.conditionList.length; i++) {\n        const e = this.conditionList[i];\n        for (let j = 0; j < e.groups.length; j++) {\n          const child = e.groups[j];\n          if (!child.field) {\n            this.$message.warning('条件字段不能为空');\n            isOk = false;\n            return;\n          }\n          if (!child.symbol) {\n            this.$message.warning('条件符号不能为空');\n            isOk = false;\n            return;\n          }\n          if (!['null', 'notNull'].includes(child.symbol) && !['switch'].includes(child.jnpfKey) && ((!child.fieldValue && child.fieldValue !== 0) || ((typeof child.fieldValue === \"object\" && child.fieldValue.length == 0)) || this.jnpf.isEmpty(child.fieldValue))) {\n            this.$message.warning('数据值不能为空');\n            isOk = false;\n            return;\n          }\n        }\n      }\n      return isOk;\n    },\n    confirm() {\n      // 获取属性配置\n      this.$nextTick(() => {\n        let item = this.$refs.base && this.$refs.base.getData() || ''\n        this.conditionList = item ? item.conditionList : []\n        if (!this.validData()) {\n          return;\n        }\n        let cloneConditions = {\n          conditionList: JSON.parse(JSON.stringify(this.conditionList)),\n          matchLogic: item.matchLogic\n        }\n        this.$store.commit(\"generator/SET_FILTER_DATA\", cloneConditions)\n        this.$emit(\"ruleConfig\", cloneConditions);\n        this.dialogVisible = false;\n      });\n    },\n    handleClose() {\n      this.$emit(\"ruleConfig\", this.$store.getters.ruleData);\n      this.dialogVisible = false;\n    },\n    show(data) {\n      this.dialogVisible = true;\n      if (data && (typeof data === \"object\" && data.length == 0) || data.conditionList.length == 0) {\n        this.conditionList = [];\n        this.addCondition();\n      } else {\n        this.init(data);\n      }\n    },\n    addCondition() {\n      let item = {\n        logic: \"and\",\n        groups: [{\n          fieldValue: '',\n          field: '',\n          symbol: '',\n          jnpfKey: '',\n          cellKey: +new Date()\n        }]\n      };\n      this.conditionList.push(item);\n    }\n  },\n  components: {\n    Condition\n  }\n};\n",null]}