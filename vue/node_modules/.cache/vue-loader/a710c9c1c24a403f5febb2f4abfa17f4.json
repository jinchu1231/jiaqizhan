{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/flowEngine/Form.vue?vue&type=template&id=fda09e26","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/flowEngine/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      staticClass: \"JNPF-full-dialog\",\n      attrs: {\n        visible: _vm.visible,\n        fullscreen: \"\",\n        \"lock-scroll\": \"\",\n        \"show-close\": false,\n        modal: false,\n        \"append-to-body\": \"\",\n      },\n      on: {\n        \"update:visible\": function ($event) {\n          _vm.visible = $event\n        },\n      },\n    },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"JNPF-full-dialog-header\" },\n        [\n          _c(\"div\", { staticClass: \"header-title\" }, [\n            _c(\"img\", {\n              staticClass: \"header-logo\",\n              attrs: { src: require(\"@/assets/images/jnpf.png\") },\n            }),\n            _c(\"p\", { staticClass: \"header-txt\" }, [_vm._v(\" · 流程设计\")]),\n          ]),\n          _c(\n            \"el-steps\",\n            {\n              staticClass: \"steps steps2\",\n              attrs: {\n                active: _vm.activeStep,\n                \"finish-status\": \"success\",\n                simple: \"\",\n              },\n            },\n            [\n              _c(\"el-step\", {\n                attrs: { title: \"基础信息\" },\n                nativeOn: {\n                  click: function ($event) {\n                    return _vm.stepChick(0)\n                  },\n                },\n              }),\n              _c(\"el-step\", {\n                attrs: { title: \"流程设计\" },\n                nativeOn: {\n                  click: function ($event) {\n                    return _vm.stepChick(1)\n                  },\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"options\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { disabled: _vm.activeStep <= 0 || _vm.btnLoading },\n                  on: { click: _vm.prev },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.prev\")) + \"\\n      \")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    disabled:\n                      _vm.activeStep >= 1 || _vm.loading || _vm.btnLoading,\n                  },\n                  on: { click: _vm.next },\n                },\n                [\n                  _vm._v(\n                    \"\\n        \" + _vm._s(_vm.$t(\"common.next\")) + \"\\n      \"\n                  ),\n                ]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    type: \"primary\",\n                    disabled: _vm.loading,\n                    loading: _vm.btnLoading,\n                  },\n                  on: {\n                    click: function ($event) {\n                      return _vm.dataFormSubmit()\n                    },\n                  },\n                },\n                [_vm._v(\"保 存\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      return _vm.closeDialog()\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.loading,\n              expression: \"loading\",\n            },\n          ],\n          staticClass: \"main\",\n        },\n        [\n          !_vm.activeStep\n            ? _c(\n                \"el-row\",\n                {\n                  staticClass: \"basic-box\",\n                  attrs: { type: \"flex\", justify: \"center\", align: \"middle\" },\n                },\n                [\n                  _c(\n                    \"el-col\",\n                    {\n                      staticClass: \"basicForm\",\n                      attrs: { xs: 12, sm: 12, md: 12, lg: 12, xl: 10 },\n                    },\n                    [\n                      _c(\n                        \"el-form\",\n                        {\n                          ref: \"dataForm\",\n                          attrs: {\n                            model: _vm.dataForm,\n                            rules: _vm.dataRule,\n                            \"label-width\": \"80px\",\n                            \"label-position\": \"right\",\n                          },\n                          nativeOn: {\n                            submit: function ($event) {\n                              $event.preventDefault()\n                            },\n                          },\n                        },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"流程名称\", prop: \"fullName\" } },\n                            [\n                              _c(\"el-input\", {\n                                attrs: {\n                                  placeholder: \"流程名称\",\n                                  maxlength: \"50\",\n                                },\n                                model: {\n                                  value: _vm.dataForm.fullName,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.dataForm, \"fullName\", $$v)\n                                  },\n                                  expression: \"dataForm.fullName\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"流程编码\", prop: \"enCode\" } },\n                            [\n                              _c(\"el-input\", {\n                                attrs: {\n                                  placeholder: \"流程编码\",\n                                  maxlength: \"50\",\n                                },\n                                model: {\n                                  value: _vm.dataForm.enCode,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.dataForm, \"enCode\", $$v)\n                                  },\n                                  expression: \"dataForm.enCode\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"流程分类\", prop: \"category\" } },\n                            [\n                              _c(\n                                \"el-select\",\n                                {\n                                  attrs: {\n                                    placeholder: \"选择分类\",\n                                    filterable: \"\",\n                                  },\n                                  model: {\n                                    value: _vm.dataForm.category,\n                                    callback: function ($$v) {\n                                      _vm.$set(_vm.dataForm, \"category\", $$v)\n                                    },\n                                    expression: \"dataForm.category\",\n                                  },\n                                },\n                                _vm._l(_vm.categoryList, function (item) {\n                                  return _c(\"el-option\", {\n                                    key: item.id,\n                                    attrs: {\n                                      label: item.fullName,\n                                      value: item.id,\n                                    },\n                                  })\n                                }),\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"流程类型\", prop: \"type\" } },\n                            [\n                              _c(\"el-input\", {\n                                attrs: { maxlength: \"50\", disabled: \"\" },\n                                model: {\n                                  value: _vm.type,\n                                  callback: function ($$v) {\n                                    _vm.type = $$v\n                                  },\n                                  expression: \"type\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                          _vm.dataForm.type == 0\n                            ? _c(\n                                \"el-form-item\",\n                                { attrs: { label: \"流程图标\", prop: \"icon\" } },\n                                [\n                                  _c(\n                                    \"el-row\",\n                                    { attrs: { type: \"flex\" } },\n                                    [\n                                      _c(\n                                        \"div\",\n                                        {\n                                          staticStyle: {\n                                            flex: \"1\",\n                                            \"margin-right\": \"10px\",\n                                          },\n                                        },\n                                        [\n                                          _c(\n                                            \"el-input\",\n                                            {\n                                              attrs: {\n                                                placeholder: \"请选择流程图标\",\n                                                readonly: \"\",\n                                                \"suffix-icon\":\n                                                  _vm.dataForm.icon,\n                                              },\n                                              model: {\n                                                value: _vm.dataForm.icon,\n                                                callback: function ($$v) {\n                                                  _vm.$set(\n                                                    _vm.dataForm,\n                                                    \"icon\",\n                                                    $$v\n                                                  )\n                                                },\n                                                expression: \"dataForm.icon\",\n                                              },\n                                            },\n                                            [\n                                              _c(\n                                                \"el-button\",\n                                                {\n                                                  attrs: { slot: \"append\" },\n                                                  on: {\n                                                    click: function ($event) {\n                                                      return _vm.openIconBox()\n                                                    },\n                                                  },\n                                                  slot: \"append\",\n                                                },\n                                                [_vm._v(\"选择\")]\n                                              ),\n                                            ],\n                                            1\n                                          ),\n                                        ],\n                                        1\n                                      ),\n                                      _c(\"el-color-picker\", {\n                                        attrs: {\n                                          title: \"图标背景色\",\n                                          predefine: [\n                                            \"#008cff\",\n                                            \"#35b8e0\",\n                                            \"#00cc88\",\n                                            \"#ff9d00\",\n                                            \"#ff4d4d\",\n                                            \"#5b69bc\",\n                                            \"#ff8acc\",\n                                            \"#3b3e47\",\n                                            \"#282828\",\n                                          ],\n                                        },\n                                        model: {\n                                          value: _vm.dataForm.iconBackground,\n                                          callback: function ($$v) {\n                                            _vm.$set(\n                                              _vm.dataForm,\n                                              \"iconBackground\",\n                                              $$v\n                                            )\n                                          },\n                                          expression: \"dataForm.iconBackground\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  ),\n                                ],\n                                1\n                              )\n                            : _vm._e(),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"流程排序\", prop: \"sortCode\" } },\n                            [\n                              _c(\"el-input-number\", {\n                                attrs: {\n                                  min: 0,\n                                  max: 999999,\n                                  \"controls-position\": \"right\",\n                                },\n                                model: {\n                                  value: _vm.dataForm.sortCode,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.dataForm, \"sortCode\", $$v)\n                                  },\n                                  expression: \"dataForm.sortCode\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            {\n                              attrs: { label: \"流程说明\", prop: \"description\" },\n                            },\n                            [\n                              _c(\"el-input\", {\n                                attrs: {\n                                  placeholder: \"流程说明\",\n                                  type: \"textarea\",\n                                  rows: 3,\n                                },\n                                model: {\n                                  value: _vm.dataForm.description,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.dataForm, \"description\", $$v)\n                                  },\n                                  expression: \"dataForm.description\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm.activeStep == 1\n            ? _c(\"Process\", {\n                ref: \"processDesign\",\n                attrs: {\n                  conf: _vm.flowTemplateJson,\n                  flowType: _vm.dataForm.type,\n                  formInfo: _vm.dataForm,\n                },\n              })\n            : _vm._e(),\n        ],\n        1\n      ),\n      _c(\"icon-box\", {\n        ref: \"iconBox\",\n        attrs: { visible: _vm.iconBoxVisible, current: _vm.dataForm.icon },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.iconBoxVisible = $event\n          },\n          choiceIcon: _vm.choiceIcon,\n        },\n      }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}