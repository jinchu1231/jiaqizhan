{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/organize/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/organize/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { createOrganize, updateOrganize, getOrganizeInfo } from '@/api/permission/organize'\n\nexport default {\n  data() {\n    return {\n      visible: false,\n      btnLoading: false,\n      formLoading: false,\n      dataForm: {\n        id: '',\n        parentId: '',\n        fullName: '',\n        enCode: '',\n        enabledMark: 1,\n        sortCode: 0,\n        description: '',\n        propertyJson: {\n          shortName: '',\n          enterpriseNature: '',\n          industry: '',\n          foundedTime: '',\n          telePhone: '',\n          fax: '',\n          webSite: '',\n          address: '',\n          managerName: '',\n          managerTelePhone: '',\n          managerMobilePhone: '',\n          manageEmail: '',\n          bankName: '',\n          bankAccount: '',\n          businessscope: ''\n        }\n      },\n      parentId: '',\n      organizeIdTree: [],\n      natureData: [],\n      industryData: [],\n      pickerOptions: {\n        disabledDate(time) {\n          return time.getTime() > Date.now();\n        }\n      },\n      dataRule: {\n        parentId: [\n          { required: true, message: '上级公司不能为空', trigger: 'change' }\n        ],\n        fullName: [\n          { required: true, message: '请输入公司名称', trigger: 'blur' }\n        ],\n        enCode: [\n          { required: true, message: '请输入公司编码', trigger: 'blur' },\n          { validator: this.formValidate('enCode', '公司编码只能输入英文、数字和小数点且小数点不能放在首尾'), trigger: 'blur' },\n          { max: 50, message: '公司编码最多为50个字符！', trigger: 'blur' }\n        ],\n      }\n    }\n  },\n  methods: {\n    init(id, parentId) {\n      this.visible = true\n      this.dataForm.id = id || ''\n      this.parentId = parentId || ''\n      this.organizeIdTree = []\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        // 获取公司性质\n        this.$store.dispatch('base/getDictionaryData', { sort: 'EnterpriseNature' }).then(res => {\n          this.natureData = res\n        })\n        // 获取所属行业\n        this.$store.dispatch('base/getDictionaryData', { sort: 'IndustryType' }).then(res => {\n          this.industryData = res\n        })\n        if (this.dataForm.id) {\n          this.formLoading = true\n          getOrganizeInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.organizeIdTree = res.data.organizeIdTree || []\n            const propertyJson = res.data.propertyJson ? JSON.parse(res.data.propertyJson) : {}\n            this.dataForm.propertyJson = propertyJson\n            this.formLoading = false\n          }).catch(() => { this.formLoading = false })\n        }\n      })\n    },\n    goBack() {\n      this.$emit('close')\n    },\n    onOrganizeChange(val) {\n      if (!val || !val.length) return this.dataForm.parentId = ''\n      this.dataForm.parentId = val[val.length - 1]\n    },\n    handleConfirm() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          const formMethod = this.dataForm.id ? updateOrganize : createOrganize\n          formMethod(this.dataForm).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$store.commit('generator/SET_COMPANY_TREE', [])\n                this.$store.commit('generator/SET_DEP_TREE', [])\n                this.$emit('close', true)\n              }\n            })\n          }).catch(() => {\n            this.btnLoading = false\n          })\n        }\n      })\n    }\n  }\n}\n",null]}