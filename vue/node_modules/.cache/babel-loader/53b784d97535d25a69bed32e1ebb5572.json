{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/components/FileUploader.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/components/FileUploader.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _common = require(\"@/api/common\");\nvar _mixin = _interopRequireDefault(require(\"@/components/Jnpf/Upload/vue-simple-uploader/mixin\"));\nvar _qs = _interopRequireDefault(require(\"qs\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar units = {\n  KB: 1024,\n  MB: 1024 * 1024,\n  GB: 1024 * 1024 * 1024\n};\nvar _default2 = exports.default = {\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    type: {\n      type: String,\n      default: 'annex'\n    },\n    limit: {\n      type: Number,\n      default: 0\n    },\n    accept: {\n      type: String,\n      default: '*'\n    },\n    sizeUnit: {\n      type: String,\n      default: 'MB'\n    },\n    fileSize: {\n      default: 5\n    }\n  },\n  mixins: [_mixin.default],\n  data: function data() {\n    return {};\n  },\n  computed: {\n    acceptText: function acceptText() {\n      var txt = '';\n      switch (this.accept) {\n        case 'image/*':\n          txt = '图片';\n          break;\n        case 'video/*':\n          txt = '视频';\n          break;\n        case 'audio/*':\n          txt = '音频';\n          break;\n        case '.xls,.xlsx':\n          txt = 'excel';\n          break;\n        case '.doc,.docx':\n          txt = 'word';\n          break;\n        case '.pdf':\n          txt = 'pdf';\n          break;\n        case '.txt':\n          txt = 'txt';\n          break;\n        default:\n          txt = '';\n          break;\n      }\n      return txt;\n    }\n  },\n  methods: {\n    beforeUpload: function beforeUpload(file) {\n      var isTopLimit = this.limit ? this.value.length >= this.limit : false;\n      if (isTopLimit) {\n        this.$message.error(\"\\u5F53\\u524D\\u9650\\u5236\\u6700\\u591A\\u53EF\\u4EE5\\u4E0A\\u4F20\".concat(this.limit, \"\\u4E2A\\u6587\\u4EF6\"));\n        return false;\n      }\n      var unitNum = units[this.sizeUnit];\n      var isRightSize = this.fileSize ? file.size / unitNum < this.fileSize : true;\n      if (!isRightSize) {\n        this.$message.error(\"\\u6587\\u4EF6\\u5927\\u5C0F\\u8D85\\u8FC7\".concat(this.fileSize).concat(this.sizeUnit));\n        return isRightSize;\n      }\n      var extension = file.getExtension();\n      var isAccept = this.accept.indexOf(extension) > -1;\n      if (!isAccept) {\n        this.$message.error(\"\\u8BF7\\u9009\\u62E9\".concat(this.accept, \"\\u7C7B\\u578B\\u7684\\u6587\\u4EF6\"));\n        return isAccept;\n      }\n      return true;\n    },\n    handelSuccess: function handelSuccess(file) {\n      var _this = this;\n      var query = {\n        identifier: file.uniqueIdentifier,\n        fileName: file.name.replaceAll('#', ''),\n        fileSize: file.size,\n        fileType: file.getType(),\n        extension: file.getExtension(),\n        type: this.type\n      };\n      (0, _common.chunkMerge)(_qs.default.stringify(query)).then(function (res) {\n        // 自定义完成状态\n        _this.$set(file, 'customCompleted', true);\n        var data = {\n          name: file.name,\n          fileId: res.data.name,\n          fileSize: res.data.fileSize,\n          fileExtension: res.data.fileExtension,\n          fileVersionId: res.data.fileVersionId,\n          url: res.data.url\n        };\n        _this.$emit('fileSuccess', data);\n        file.cancel();\n      }).catch(function () {\n        file.cancel();\n      });\n    }\n  }\n};",null]}