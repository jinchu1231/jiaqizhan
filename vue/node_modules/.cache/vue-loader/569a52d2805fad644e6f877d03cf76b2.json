{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/onlineDev/integrate/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/onlineDev/integrate/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getIntegrateList, delIntegrate, updateState, copy, exportData } from '@/api/onlineDev/integrate'\nimport Form from './Form'\nimport Drawer from './Drawer'\nimport Design from \"./design\"\nimport Log from \"./log\"\nexport default {\n  name: 'onlineDev-visualPortal',\n  components: { Form, Drawer, Design, Log },\n  data() {\n    return {\n      list: [],\n      keyword: '',\n      category: '',\n      type: '',\n      enabledLock: '',\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      },\n      total: 0,\n      drawerVisible: false,\n      listLoading: false,\n      formVisible: false,\n      flowTemplateJson: {},\n      processVisible: false,\n      logVisible: false,\n      enabledMark: '',\n      options: [\n        { fullName: '启用', id: 1 },\n        { fullName: '禁用', id: 0 },\n      ],\n    }\n  },\n  created() {\n    this.initData()\n  },\n  methods: {\n    inherit(row) {\n      this.processVisible = true\n      this.$nextTick(() => {\n        this.$refs.processDesign && this.$refs.processDesign.init(row)\n      })\n    },\n    reset() {\n      this.keyword = ''\n      this.category = ''\n      this.type = ''\n      this.enabledLock = ''\n      this.enabledMark = '',\n        this.search()\n    },\n    search() {\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      }\n      this.initData()\n    },\n    handleDesign(id, fullName) {\n      this.processVisible = true\n      this.$nextTick(() => {\n        this.$refs.processDesign.init({ id: id, fullName: fullName })\n      })\n    },\n    updateNodes(id, fullName) {\n      this.handleDesign(id, fullName)\n    },\n    initData() {\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        keyword: this.keyword,\n        type: this.type,\n        category: this.category,\n        enabledLock: this.enabledLock,\n        enabledMark: this.enabledMark\n      }\n      getIntegrateList(query).then(res => {\n        this.list = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      })\n    },\n    handleDel(id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        delIntegrate(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    openDrawer() {\n      this.drawerVisible = true\n      this.$nextTick(() => {\n        this.$refs.drawer.open()\n      })\n    },\n    handleState(row) {\n      this.$confirm(row.enabledMark != 1 ? '此操作将启用该集成助手' : '此操作将禁用该集成助手', this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        updateState(row.id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    handleCopy(id) {\n      this.$confirm('您确定要复制该集成助手, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        copy(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    exportTemplate(id) {\n      this.$confirm('您确定要导出该集成助手, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        exportData(id).then(res => {\n          this.jnpf.downloadFile(res.data.url)\n        })\n      }).catch(() => { });\n    },\n    handleLog(row) {\n      this.logVisible = true\n      this.$nextTick(() => {\n        this.$refs.log.init(row)\n      })\n    },\n    design(row) {\n      this.portalDesignVisible = true\n      this.$nextTick(() => {\n        this.$refs.drawer.init(row)\n      })\n    },\n    handleCommand(command) {\n      this.addOrUpdateHandle('', command)\n    },\n    addOrUpdateHandle(id, type) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.form.init(id, type)\n      })\n    },\n    closeForm(isRefresh) {\n      this.formVisible = false\n      if (isRefresh) this.initData()\n    },\n    closeForm1(isRefresh) {\n      this.processVisible = false\n      if (isRefresh) this.initData()\n    }\n  }\n}\n",null]}