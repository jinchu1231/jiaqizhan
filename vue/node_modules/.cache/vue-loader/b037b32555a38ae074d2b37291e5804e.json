{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/msgCenter/sendConfig/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/msgCenter/sendConfig/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getSendConfigDetail, editMsgTemplate, addMsgTemplate } from '@/api/msgCenter/sendConfig'\nimport TemplateForm from './TemplateForm'\nimport Detail from '../msgTemplate/Detail'\n\nexport default {\n  components: { Detail, TemplateForm },\n  name: 'sendConfig-Form',\n  data() {\n    return {\n      dataForm: {\n        id: '',\n        fullName: '',\n        enCode: '',\n        description: '',\n        enabledMark: 1,\n        sortCode: 0,\n        messageSource: '',\n        templateType: 0,\n        sendConfigTemplateList: []\n      },\n      dataRule: {\n        fullName: [\n          { required: true, message: '模板名称不能为空', trigger: 'blur' },\n        ],\n        enCode: [\n          { required: true, message: '模板编码不能为空', trigger: 'blur' },\n          { validator: this.formValidate('enCode'), trigger: 'blur' },\n        ],\n        messageSource: [\n          { required: true, message: '请选择消息来源', trigger: 'change' },\n        ]\n      },\n      msgSourceList: [],\n      btnLoading: false,\n      loading: false,\n      templateVisible: false,\n      messageTypeList: [],\n      viewVisible: false,\n    }\n  },\n  methods: {\n    init(id) {\n      this.dataForm.id = id || ''\n      this.getConfig()\n      this.$nextTick(() => {\n        this.dataForm.sendConfigTemplateList = []\n        this.$refs['dataForm'].resetFields()\n        if (this.dataForm.id) {\n          this.loading = true\n          getSendConfigDetail(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.dataForm.enabledMark = Number(this.dataForm.enabledMark)\n            this.loading = false\n          }).catch(() => {\n            this.loading = false\n          })\n        }\n      })\n    },\n    getConfig() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'msgSendType' }).then((res) => {\n        this.messageTypeList = res\n      })\n      this.$store.dispatch('base/getDictionaryData', { sort: 'msgSourceType' }).then((res) => {\n        this.msgSourceList = res\n      })\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          const formMethod = this.dataForm.id ? editMsgTemplate : addMsgTemplate\n          formMethod(this.dataForm).then((res) => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$emit('close', true)\n              }\n            })\n          }).catch(() => { this.btnLoading = false })\n        }\n      })\n    },\n    addTemplateData(row, index) {\n      if (!this.dataForm.messageSource) return this.$message({ message: '请选择消息来源', type: 'error' })\n      this.templateVisible = true\n      this.$nextTick(() => {\n        this.$refs.TemplateRef.init(row, index, this.dataForm.messageSource)\n      })\n    },\n    addEditTemplate(e, index) {\n      if (!index && index != 0) {\n        this.dataForm.sendConfigTemplateList.push(e)\n      } else {\n        this.$set(this.dataForm.sendConfigTemplateList, index, e)\n      }\n    },\n    handleDel(index) {\n      this.$confirm('删除记录，不可恢复?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.dataForm.sendConfigTemplateList.splice(index, 1)\n      }).catch(() => { });\n    },\n    goBack() {\n      this.$emit('close')\n    },\n    getMsgTypeTitle(messageType) {\n      const item = this.messageTypeList.find((res) => {\n        return messageType == res.enCode\n      })\n      return item.fullName\n    },\n    closeViewForm() {\n      this.viewVisible = false\n    },\n    handleView(id) {\n      this.viewVisible = true\n      this.$nextTick(() => {\n        this.$refs.View.init(id, this.messageTypeList)\n      })\n    },\n    onMessageSourceChange() {\n      this.dataForm.sendConfigTemplateList = []\n    }\n  }\n}\n",null]}