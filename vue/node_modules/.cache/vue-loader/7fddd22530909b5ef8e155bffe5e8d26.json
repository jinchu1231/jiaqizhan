{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/components/ActionDialog.vue?vue&type=template&id=fb80f7fe","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/components/ActionDialog.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      staticClass: \"JNPF-dialog JNPF-dialog_center\",\n      attrs: {\n        title: _vm.title,\n        \"close-on-click-modal\": false,\n        width: \"600px\",\n        visible: _vm.visible,\n        \"lock-scroll\": \"\",\n        \"append-to-body\": \"\",\n      },\n      on: {\n        \"update:visible\": function ($event) {\n          _vm.visible = $event\n        },\n      },\n    },\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"dataForm\",\n          attrs: {\n            model: _vm.dataForm,\n            \"label-width\": \"80px\",\n            rules: _vm.fromRules,\n          },\n        },\n        [\n          _vm.eventType === \"transfer\" ||\n          _vm.eventType === \"assign\" ||\n          _vm.eventType === \"cancel\"\n            ? [\n                _vm.eventType === \"assign\"\n                  ? _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"指派节点\", prop: \"nodeCode\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: { placeholder: \"请选择指派节点\" },\n                            model: {\n                              value: _vm.dataForm.nodeCode,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"nodeCode\", $$v)\n                              },\n                              expression: \"dataForm.nodeCode\",\n                            },\n                          },\n                          _vm._l(_vm.assignNodeList, function (item) {\n                            return _c(\"el-option\", {\n                              key: item.nodeCode,\n                              attrs: {\n                                label: item.nodeName,\n                                value: item.nodeCode,\n                              },\n                            })\n                          }),\n                          1\n                        ),\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                _vm.eventType === \"transfer\" || _vm.eventType === \"assign\"\n                  ? _c(\n                      \"el-form-item\",\n                      {\n                        attrs: {\n                          label: _vm.label + \"给谁\",\n                          prop: \"freeApproverUserId\",\n                          rules: [\n                            {\n                              required: true,\n                              message: \"请选择\" + _vm.label + \"给谁\",\n                              trigger: \"click\",\n                            },\n                          ],\n                        },\n                      },\n                      [\n                        _c(\"JnpfUserSelect\", {\n                          attrs: { placeholder: \"请选择\" + _vm.label + \"给谁\" },\n                          model: {\n                            value: _vm.dataForm.freeApproverUserId,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.dataForm, \"freeApproverUserId\", $$v)\n                            },\n                            expression: \"dataForm.freeApproverUserId\",\n                          },\n                        }),\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                _vm.eventType === \"assign\" ||\n                _vm.eventType === \"cancel\" ||\n                (_vm.eventType === \"transfer\" &&\n                  _vm.properties &&\n                  _vm.properties.hasOpinion)\n                  ? _c(\n                      \"el-form-item\",\n                      {\n                        attrs: {\n                          label: _vm.label + \"原因\",\n                          prop: \"handleOpinion\",\n                        },\n                      },\n                      [\n                        _c(\"el-input\", {\n                          attrs: {\n                            placeholder: \"请输入\" + _vm.label + \"原因\",\n                            type: \"textarea\",\n                            rows: 4,\n                          },\n                          model: {\n                            value: _vm.dataForm.handleOpinion,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.dataForm, \"handleOpinion\", $$v)\n                            },\n                            expression: \"dataForm.handleOpinion\",\n                          },\n                        }),\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                _vm.eventType === \"assign\" ||\n                _vm.eventType === \"cancel\" ||\n                (_vm.eventType === \"transfer\" &&\n                  _vm.properties &&\n                  _vm.properties.hasOpinion)\n                  ? _c(\n                      \"el-form-item\",\n                      {\n                        attrs: { label: _vm.label + \"附件\", prop: \"fileList\" },\n                      },\n                      [\n                        _c(\"JnpfUploadFile\", {\n                          attrs: { limit: 3 },\n                          model: {\n                            value: _vm.dataForm.fileList,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.dataForm, \"fileList\", $$v)\n                            },\n                            expression: \"dataForm.fileList\",\n                          },\n                        }),\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                _vm.properties.hasSign && _vm.eventType === \"transfer\"\n                  ? _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"手写签名\", required: \"\" } },\n                      [\n                        _c(\"div\", { staticClass: \"sign-main\" }, [\n                          _vm.signImg\n                            ? _c(\"img\", {\n                                staticClass: \"sign-img\",\n                                attrs: { src: _vm.signImg, alt: \"\" },\n                              })\n                            : _vm._e(),\n                          _c(\n                            \"div\",\n                            {\n                              staticClass: \"sign-style\",\n                              on: { click: _vm.addSign },\n                            },\n                            [\n                              _c(\"i\", {\n                                staticClass:\n                                  \"icon-ym icon-ym-signature add-sign\",\n                              }),\n                              !_vm.signImg\n                                ? _c(\"span\", { staticClass: \"sign-title\" }, [\n                                    _vm._v(\"手写签名\"),\n                                  ])\n                                : _vm._e(),\n                            ]\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n              ]\n            : [\n                _vm.properties.hasOpinion\n                  ? [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.label + \"原因\",\n                            prop: \"handleOpinion\",\n                          },\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              placeholder: \"请输入\" + _vm.label + \"原因\",\n                              type: \"textarea\",\n                              rows: 4,\n                            },\n                            model: {\n                              value: _vm.dataForm.handleOpinion,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"handleOpinion\", $$v)\n                              },\n                              expression: \"dataForm.handleOpinion\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.label + \"附件\",\n                            prop: \"fileList\",\n                          },\n                        },\n                        [\n                          _c(\"JnpfUploadFile\", {\n                            attrs: { limit: 3 },\n                            model: {\n                              value: _vm.dataForm.fileList,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"fileList\", $$v)\n                              },\n                              expression: \"dataForm.fileList\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]\n                  : _vm._e(),\n                _vm.properties.hasSign\n                  ? _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"手写签名\", required: \"\" } },\n                      [\n                        _c(\"div\", { staticClass: \"sign-main\" }, [\n                          _vm.signImg\n                            ? _c(\"img\", {\n                                staticClass: \"sign-img\",\n                                attrs: { src: _vm.signImg, alt: \"\" },\n                              })\n                            : _vm._e(),\n                          _c(\n                            \"div\",\n                            {\n                              staticClass: \"sign-style\",\n                              on: { click: _vm.addSign },\n                            },\n                            [\n                              _c(\"i\", {\n                                staticClass:\n                                  \"icon-ym icon-ym-signature add-sign\",\n                              }),\n                              !_vm.signImg\n                                ? _c(\"span\", { staticClass: \"sign-title\" }, [\n                                    _vm._v(\"手写签名\"),\n                                  ])\n                                : _vm._e(),\n                            ]\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n              ],\n        ],\n        2\n      ),\n      _c(\n        \"span\",\n        {\n          staticClass: \"dialog-footer\",\n          attrs: { slot: \"footer\" },\n          slot: \"footer\",\n        },\n        [\n          _c(\n            \"el-button\",\n            {\n              on: {\n                click: function ($event) {\n                  _vm.visible = false\n                },\n              },\n            },\n            [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"primary\", loading: _vm.btnLoading },\n              on: {\n                click: function ($event) {\n                  return _vm.handleSure()\n                },\n              },\n            },\n            [\n              _vm._v(\n                \"\\n      \" + _vm._s(_vm.$t(\"common.confirmButton\")) + \"\\n    \"\n              ),\n            ]\n          ),\n        ],\n        1\n      ),\n      _vm.signVisible\n        ? _c(\"SignImgDialog\", {\n            ref: \"SignImg\",\n            attrs: { lineWidth: 3, userInfo: _vm.userInfo, isDefault: 1 },\n            on: { close: _vm.signDialog },\n          })\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}