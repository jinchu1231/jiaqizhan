{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/formDesign/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/formDesign/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Generator from '@/components/Generator/index/Home'\nimport FieldForm from './FieldForm'\nimport TableForm from '@/views/generator/TableForm'\nimport mixin from '@/mixins/generator/common'\nimport { getFormInfo, Create, Update } from '@/api/workFlow/FormDesign'\n\nexport default {\n  mixins: [mixin],\n  components: { Generator, FieldForm, TableForm },\n  data() {\n    return {\n      visible: false,\n      loading: false,\n      activeStep: 0,\n      dataForm: {\n        id: '',\n        fullName: '',\n        enCode: '',\n        dbLinkId: '0',\n        sortCode: 0,\n        category: '',\n        description: \"\",\n        tables: '',\n        formType: 2,\n        columnData: '',\n        interfaceUrl: '',\n        flowType: ''\n      },\n      dataRule: {\n        fullName: [\n          { required: true, message: '表单名称不能为空', trigger: 'blur' },\n          // { pattern: /^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/, message: '请输入正确的表单名称', trigger: 'blur' },\n        ],\n        enCode: [\n          { required: true, message: '表单编码不能为空', trigger: 'blur' },\n          { pattern: /^\\w+$/, message: '请输入正确的表单编码', trigger: 'blur' },\n        ],\n        formType: [\n          { required: true, message: '表单类型不能为空', trigger: 'blur' }\n        ],\n        flowType: [\n          { required: true, message: '表单类别不能为空', trigger: 'blur' }\n        ],\n      },\n      tables: [],\n      formVisible: false,\n      btnLoading: false,\n      mainTableFields: [],\n      relationTable: \"\",\n      draftJson: null,\n      iconBoxVisible: false,\n      dbOptions: [],\n      formType: '系统表单',\n      dbType: \"MySQL\",\n      defaultTable: []\n    }\n  },\n  methods: {\n    init(id, flowType, formType) {\n      this.activeStep = 0\n      this.tables = []\n      this.defaultTable = []\n      this.dataForm.id = id || ''\n      this.getDbOptions()\n      this.visible = true\n      this.loading = true\n      this.$nextTick(() => {\n        if (this.dataForm.id) {\n          getFormInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.formType = res.data.formType == 2 ? \"自定义表单\" : \"系统表单\"\n            this.draftJson = res.data.draftJson && JSON.parse(res.data.draftJson)\n            this.tables = this.dataForm.tableJson && JSON.parse(this.dataForm.tableJson) || []\n            this.defaultTable = JSON.parse(JSON.stringify(this.tables))\n            this.updateFields()\n          }).catch(() => { this.loading = false })\n        } else {\n          this.dataForm.flowType = flowType\n          this.dataForm.formType = formType\n          this.formType = formType == 2 ? \"自定义表单\" : \"系统表单\"\n          this.loading = false\n        }\n      })\n    },\n    dataFormSubmit() {\n      if (this.activeStep === 1) {\n        const model = this.dataForm.formType == 2 ? 'generator' : 'fieldForm'\n        this.$refs[model].getData().then(res => {\n          this.dataForm.draftJson = JSON.stringify(res.formData)\n          this.dataForm.tableJson = JSON.stringify(this.tables)\n          this.draftJson = res.formData\n          this.submit()\n        }).catch(err => {\n          err.msg && this.$message.warning(err.msg)\n        })\n      } else {\n        if (!this.tables.length && this.defaultTable.length) return this.$message.warning('请至少选择一个数据表')\n        this.$refs['dataForm'].validate((valid) => {\n          this.dataForm.tableJson = JSON.stringify(this.tables)\n          if (!valid) return\n          this.submit()\n        })\n      }\n    },\n    submit() {\n      this.btnLoading = true\n      const formMethod = this.dataForm.id ? Update : Create\n      formMethod(this.dataForm).then((res) => {\n        this.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: () => {\n            this.closeDialog(true)\n          }\n        })\n      }).catch(() => { this.btnLoading = false })\n    },\n    next() {\n      if (this.activeStep < 1) {\n        this.$refs['dataForm'].validate((valid) => {\n          if (valid) {\n            this.getDbType()\n            if (!this.tables.length) {\n              if (this.defaultTable.length) {\n                this.$message.warning('请至少选择一个数据表')\n                return\n              }\n              this.$store.commit('generator/SET_TABLE', false)\n              this.activeStep += 1\n            } else {\n              if (!this.exist()) return\n              let subTable = this.tables.filter(o => o.typeId == '0')\n              this.$store.commit('generator/UPDATE_SUB_TABLE', subTable)\n              this.$store.commit('generator/SET_ALL_TABLE', this.tables)\n              this.$store.commit('generator/SET_TABLE', true)\n              this.$store.commit('generator/SET_DATABASE', this.dataForm.dbLinkId)\n              this.$store.commit('generator/UPDATE_FORMITEM_LIST', this.mainTableFields)\n              this.activeStep += 1\n            }\n          }\n        })\n      }\n    },\n    typeChange(val) {\n      if (val == 1) {\n        this.dataForm.icon = ''\n        this.dataForm.iconBackground = '#008cff'\n      }\n    }\n  }\n}\n",null]}