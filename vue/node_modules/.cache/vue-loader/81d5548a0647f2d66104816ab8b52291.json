{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/mainApp.vue?vue&type=template&id=fa6b1606&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/mainApp.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"columnDesign-container\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"main-board\" },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"search-box\" },\n            [\n              _c(\"h4\", { staticClass: \"cap\" }, [_vm._v(\"查询字段\")]),\n              _c(\n                \"el-table\",\n                {\n                  ref: \"dragTableSearch\",\n                  staticClass: \"JNPF-common-table\",\n                  attrs: {\n                    data: _vm.columnData.searchList,\n                    \"row-key\": function (row) {\n                      return row.prop\n                    },\n                  },\n                },\n                [\n                  _c(\n                    \"el-table-column\",\n                    { attrs: { align: \"center\", label: \"拖动\", width: \"50\" } },\n                    [\n                      [\n                        _c(\"i\", {\n                          staticClass: \"drag-handler icon-ym icon-ym-darg\",\n                          staticStyle: { cursor: \"move\", \"font-size\": \"20px\" },\n                          attrs: { title: \"点击拖动\" },\n                        }),\n                      ],\n                    ],\n                    2\n                  ),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"label\", label: \"列名\", width: \"200\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"列名\" },\n                              model: {\n                                value: scope.row.label,\n                                callback: function ($$v) {\n                                  _vm.$set(scope.row, \"label\", $$v)\n                                },\n                                expression: \"scope.row.label\",\n                              },\n                            }),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"prop\", label: \"字段\", width: \"600\" },\n                  }),\n                  _vm.webType == 4\n                    ? _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"jnpfKey\",\n                          label: \"输入类型\",\n                          width: \"240\",\n                        },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _c(\n                                    \"el-select\",\n                                    {\n                                      key: _vm.key,\n                                      attrs: {\n                                        placeholder: \"请选择\",\n                                        disabled:\n                                          scope.row.__config__.isFromParam,\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          return _vm.onJnpfKeyChange(\n                                            $event,\n                                            scope.row,\n                                            scope.$index\n                                          )\n                                        },\n                                      },\n                                      model: {\n                                        value: scope.row.jnpfKey,\n                                        callback: function ($$v) {\n                                          _vm.$set(scope.row, \"jnpfKey\", $$v)\n                                        },\n                                        expression: \"scope.row.jnpfKey\",\n                                      },\n                                    },\n                                    _vm._l(\n                                      _vm.viewJnpfKeyOptions,\n                                      function (item) {\n                                        return _c(\"el-option\", {\n                                          key: item.id,\n                                          attrs: {\n                                            label: item.fullName,\n                                            value: item.id,\n                                          },\n                                        })\n                                      }\n                                    ),\n                                    1\n                                  ),\n                                  [\n                                    \"select\",\n                                    \"datePicker\",\n                                    \"timePicker\",\n                                    \"organizeSelect\",\n                                    \"depSelect\",\n                                    \"userSelect\",\n                                  ].includes(scope.row.__config__.jnpfKey) &&\n                                  !scope.row.__config__.isFromParam\n                                    ? [\n                                        _c(\"i\", {\n                                          staticClass: \"el-icon-setting\",\n                                          staticStyle: {\n                                            \"margin-left\": \"10px\",\n                                            \"font-size\": \"16px\",\n                                            cursor: \"pointer\",\n                                          },\n                                          attrs: { title: \"组件属性设置\" },\n                                          on: {\n                                            click: function ($event) {\n                                              return _vm.openExtraConfig(\n                                                scope.row,\n                                                scope.$index\n                                              )\n                                            },\n                                          },\n                                        }),\n                                      ]\n                                    : _vm._e(),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          2303200658\n                        ),\n                      })\n                    : _vm._e(),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"searchType\",\n                      label: \"条件类型\",\n                      width: \"200\",\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            !scope.row.__config__.isFromParam\n                              ? _c(\n                                  \"el-select\",\n                                  {\n                                    attrs: {\n                                      placeholder: \"请选择\",\n                                      disabled:\n                                        scope.row.jnpfKey !== \"input\" &&\n                                        scope.row.jnpfKey !== \"textarea\",\n                                    },\n                                    model: {\n                                      value: scope.row.searchType,\n                                      callback: function ($$v) {\n                                        _vm.$set(scope.row, \"searchType\", $$v)\n                                      },\n                                      expression: \"scope.row.searchType\",\n                                    },\n                                  },\n                                  [\n                                    _c(\"el-option\", {\n                                      attrs: { label: \"等于查询\", value: 1 },\n                                    }),\n                                    _c(\"el-option\", {\n                                      attrs: { label: \"模糊查询\", value: 2 },\n                                    }),\n                                    _c(\"el-option\", {\n                                      attrs: { label: \"范围查询\", value: 3 },\n                                    }),\n                                  ],\n                                  1\n                                )\n                              : _vm._e(),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _vm.webType != 4\n                    ? _c(\"el-table-column\", {\n                        attrs: { prop: \"label\", label: \"默认值\", width: \"200\" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _vm.textBoxList.includes(scope.row.jnpfKey)\n                                    ? _c(\"el-input\", {\n                                        attrs: { placeholder: \"默认值\" },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.jnpfKey === \"inputNumber\" ||\n                                  scope.row.jnpfKey === \"rate\" ||\n                                  scope.row.jnpfKey === \"slider\"\n                                    ? _c(\"num-range\", {\n                                        attrs: {\n                                          precision: scope.row.precision,\n                                          clearable: \"\",\n                                          filterable: \"\",\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  _vm.selectionBoxList.includes(\n                                    scope.row.jnpfKey\n                                  )\n                                    ? _c(\n                                        \"el-select\",\n                                        {\n                                          key: scope.row.__config__.renderKey,\n                                          staticStyle: { width: \"100%\" },\n                                          attrs: {\n                                            placeholder: \"请选择\",\n                                            filterable: \"\",\n                                            clearable: \"\",\n                                            multiple: scope.row.searchMultiple,\n                                          },\n                                          model: {\n                                            value: scope.row.value,\n                                            callback: function ($$v) {\n                                              _vm.$set(scope.row, \"value\", $$v)\n                                            },\n                                            expression: \"scope.row.value\",\n                                          },\n                                        },\n                                        _vm._l(\n                                          scope.row.options,\n                                          function (item, index) {\n                                            return _c(\"el-option\", {\n                                              key: index,\n                                              attrs: {\n                                                label:\n                                                  item[scope.row.props.label],\n                                                value:\n                                                  item[scope.row.props.value],\n                                              },\n                                            })\n                                          }\n                                        ),\n                                        1\n                                      )\n                                    : _vm._e(),\n                                  scope.row.jnpfKey === \"cascader\"\n                                    ? _c(\"JnpfCascader\", {\n                                        staticStyle: { width: \"100%\" },\n                                        attrs: {\n                                          options: scope.row.options,\n                                          clearable: \"\",\n                                          \"show-all-levels\":\n                                            scope.row.showAllLevels,\n                                          props: scope.row.props,\n                                          multiple: scope.row.searchMultiple,\n                                          filterable: \"\",\n                                          placeholder: \"请选择\",\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.jnpfKey === \"autoComplete\"\n                                    ? _c(\"JnpfAutoComplete\", {\n                                        attrs: {\n                                          placeholder: \"请选择\",\n                                          interfaceId: scope.row.interfaceId,\n                                          clearable: \"\",\n                                          propsValue: scope.row.propsValue,\n                                          relationField:\n                                            scope.row.relationField,\n                                          templateJson: scope.row.templateJson,\n                                          total: scope.row.total,\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.jnpfKey === \"areaSelect\"\n                                    ? _c(\"JnpfAreaSelect\", {\n                                        attrs: {\n                                          placeholder:\n                                            \"请选择\" + scope.row.fullName,\n                                          level: scope.row.level,\n                                          clearable: \"\",\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.jnpfKey === \"datePicker\"\n                                    ? _c(\"JnpfDateRangePicker\", {\n                                        attrs: {\n                                          type: scope.row.type,\n                                          clearable: \"\",\n                                          format: scope.row.format,\n                                          startPlaceholder: \"开始日期\",\n                                          endPlaceholder: \"结束日期\",\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.jnpfKey === \"timePicker\"\n                                    ? _c(\"el-time-picker\", {\n                                        staticClass: \"item\",\n                                        staticStyle: { width: \"100%\" },\n                                        attrs: {\n                                          \"start-placeholder\": \"开始时间\",\n                                          \"end-placeholder\": \"结束时间\",\n                                          clearable: \"\",\n                                          \"value-format\": scope.row.format,\n                                          format: scope.row.format,\n                                          \"is-range\": \"\",\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.__config__.jnpfKey ===\n                                  \"organizeSelect\"\n                                    ? _c(\"JnpfOrganizeSelect\", {\n                                        attrs: {\n                                          placeholder:\n                                            \"请选择\" + scope.row.fullName,\n                                          clearable: \"\",\n                                          multiple: scope.row.searchMultiple,\n                                          selectType: scope.row.selectType,\n                                          ableIds: scope.row.ableIds,\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.__config__.jnpfKey === \"depSelect\"\n                                    ? _c(\"JnpfDepSelect\", {\n                                        attrs: {\n                                          placeholder:\n                                            \"请选择\" + scope.row.fullName,\n                                          clearable: \"\",\n                                          selectType: scope.row.selectType,\n                                          ableIds: scope.row.ableIds,\n                                          multiple: scope.row.searchMultiple,\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.__config__.jnpfKey === \"posSelect\"\n                                    ? _c(\"JnpfPosSelect\", {\n                                        attrs: {\n                                          placeholder:\n                                            \"请选择\" + scope.row.fullName,\n                                          clearable: \"\",\n                                          selectType: scope.row.selectType,\n                                          ableIds: scope.row.ableIds,\n                                          ablePosIds: scope.row.ablePosIds,\n                                          multiple: scope.row.searchMultiple,\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.jnpfKey === \"userSelect\"\n                                    ? _c(\"JnpfUserSelect\", {\n                                        staticClass: \"item\",\n                                        attrs: {\n                                          placeholder:\n                                            \"请选择\" + scope.row.fullName,\n                                          clearable: \"\",\n                                          selectType:\n                                            scope.row.selectType != \"all\" &&\n                                            scope.row.selectType != \"custom\"\n                                              ? \"all\"\n                                              : scope.row.selectType,\n                                          ableIds: scope.row.ableIds,\n                                          multiple: scope.row.searchMultiple,\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.jnpfKey === \"usersSelect\"\n                                    ? _c(\"JnpfUsersSelect\", {\n                                        staticClass: \"item\",\n                                        attrs: {\n                                          placeholder:\n                                            \"请选择\" + scope.row.fullName,\n                                          clearable: \"\",\n                                          selectType: scope.row.selectType,\n                                          ableIds: scope.row.ableIds,\n                                          multiple: scope.row.searchMultiple,\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.__config__.jnpfKey === \"roleSelect\"\n                                    ? _c(\"JnpfRoleSelect\", {\n                                        attrs: {\n                                          placeholder:\n                                            \"请选择\" + scope.row.fullName,\n                                          clearable: \"\",\n                                          multiple: scope.row.searchMultiple,\n                                          ableIds: scope.row.ableIds,\n                                          selectType: scope.row.selectType,\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                  scope.row.__config__.jnpfKey === \"groupSelect\"\n                                    ? _c(\"JnpfGroupSelect\", {\n                                        attrs: {\n                                          placeholder:\n                                            \"请选择\" + scope.row.fullName,\n                                          clearable: \"\",\n                                          selectType: scope.row.selectType,\n                                          multiple: scope.row.searchMultiple,\n                                          ableIds: scope.row.ableIds,\n                                        },\n                                        model: {\n                                          value: scope.row.value,\n                                          callback: function ($$v) {\n                                            _vm.$set(scope.row, \"value\", $$v)\n                                          },\n                                          expression: \"scope.row.value\",\n                                        },\n                                      })\n                                    : _vm._e(),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          1943739527\n                        ),\n                      })\n                    : _vm._e(),\n                  _vm.webType != 4\n                    ? _c(\"el-table-column\", {\n                        attrs: {\n                          prop: \"isKeyword\",\n                          label: \"关键词\",\n                          align: \"center\",\n                        },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _c(\"el-checkbox\", {\n                                    attrs: {\n                                      disabled:\n                                        !_vm.canSetKeyword.includes(\n                                          scope.row.jnpfKey\n                                        ) ||\n                                        (_vm.getIsKeywordDisabled &&\n                                          !scope.row.isKeyword),\n                                    },\n                                    model: {\n                                      value: scope.row.isKeyword,\n                                      callback: function ($$v) {\n                                        _vm.$set(scope.row, \"isKeyword\", $$v)\n                                      },\n                                      expression: \"scope.row.isKeyword\",\n                                    },\n                                  }),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          3151298112\n                        ),\n                      })\n                    : _vm._e(),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"searchMultiple\",\n                      label: \"是否多选\",\n                      align: \"center\",\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            [\n                              \"select\",\n                              \"depSelect\",\n                              \"roleSelect\",\n                              \"userSelect\",\n                              \"usersSelect\",\n                              \"organizeSelect\",\n                              \"posSelect\",\n                              \"groupSelect\",\n                            ].includes(scope.row.jnpfKey)\n                              ? _c(\"el-checkbox\", {\n                                  on: {\n                                    change: function ($event) {\n                                      return _vm.onSearchMultipleChange(\n                                        scope.row,\n                                        scope.$index\n                                      )\n                                    },\n                                  },\n                                  model: {\n                                    value: scope.row.searchMultiple,\n                                    callback: function ($$v) {\n                                      _vm.$set(scope.row, \"searchMultiple\", $$v)\n                                    },\n                                    expression: \"scope.row.searchMultiple\",\n                                  },\n                                })\n                              : _c(\"el-checkbox\", { attrs: { disabled: \"\" } }),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\"el-divider\"),\n          _c(\n            \"div\",\n            { staticClass: \"column-box\" },\n            [\n              _c(\"h4\", { staticClass: \"cap\" }, [_vm._v(\"列表字段\")]),\n              _c(\n                \"el-table\",\n                {\n                  ref: \"dragTable\",\n                  staticClass: \"JNPF-common-table\",\n                  attrs: {\n                    data: _vm.columnData.columnList,\n                    \"row-key\": function (row) {\n                      return row.prop\n                    },\n                  },\n                },\n                [\n                  _c(\n                    \"el-table-column\",\n                    { attrs: { align: \"center\", label: \"拖动\", width: \"50\" } },\n                    [\n                      [\n                        _c(\"i\", {\n                          staticClass: \"drag-handler icon-ym icon-ym-darg\",\n                          staticStyle: { cursor: \"move\", \"font-size\": \"20px\" },\n                          attrs: { title: \"点击拖动\" },\n                        }),\n                      ],\n                    ],\n                    2\n                  ),\n                  _vm.webType != 4\n                    ? _c(\"el-table-column\", {\n                        attrs: { prop: \"label\", label: \"列名\" },\n                      })\n                    : _c(\"el-table-column\", {\n                        attrs: { prop: \"label\", label: \"列名\" },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function (scope) {\n                              return [\n                                _c(\"el-input\", {\n                                  attrs: { placeholder: \"列名\" },\n                                  model: {\n                                    value: scope.row.label,\n                                    callback: function ($$v) {\n                                      _vm.$set(scope.row, \"label\", $$v)\n                                    },\n                                    expression: \"scope.row.label\",\n                                  },\n                                }),\n                              ]\n                            },\n                          },\n                        ]),\n                      }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"prop\", label: \"字段\" },\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"sortable\",\n                      label: \"排序\",\n                      width: \"60\",\n                      align: \"center\",\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            _c(\"el-checkbox\", {\n                              attrs: {\n                                disabled:\n                                  scope.row.__config__ &&\n                                  (scope.row.__config__.isSubTable ||\n                                    _vm.noGroupList.includes(\n                                      scope.row.__config__.jnpfKey\n                                    )),\n                              },\n                              model: {\n                                value: scope.row.sortable,\n                                callback: function ($$v) {\n                                  _vm.$set(scope.row, \"sortable\", $$v)\n                                },\n                                expression: \"scope.row.sortable\",\n                              },\n                            }),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"right-board\" },\n        [\n          _c(\n            \"el-tabs\",\n            {\n              staticClass: \"top-tabs\",\n              model: {\n                value: _vm.currentTab,\n                callback: function ($$v) {\n                  _vm.currentTab = $$v\n                },\n                expression: \"currentTab\",\n              },\n            },\n            [\n              _c(\"el-tab-pane\", {\n                attrs: { label: \"查询字段\", name: \"search\" },\n              }),\n              _c(\"el-tab-pane\", {\n                attrs: { label: \"列表字段\", name: \"column\" },\n              }),\n              _c(\"el-tab-pane\", { attrs: { label: \"列表属性\", name: \"attr\" } }),\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"field-box\" },\n            [\n              _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.currentTab === \"search\",\n                      expression: \"currentTab==='search'\",\n                    },\n                  ],\n                  staticClass: \"columnList\",\n                },\n                [\n                  _c(\n                    \"el-table\",\n                    {\n                      ref: \"searchTable\",\n                      staticClass: \"JNPF-common-table\",\n                      attrs: { data: _vm.searchOptions, height: \"100%\" },\n                      on: { \"selection-change\": _vm.searchSelectionChange },\n                    },\n                    [\n                      _vm.webType != 4\n                        ? _c(\"el-table-column\", {\n                            attrs: { prop: \"fullName\", label: \"查询字段\" },\n                          })\n                        : _c(\"el-table-column\", {\n                            attrs: { prop: \"fullName\", label: \"查询字段\" },\n                          }),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          type: \"selection\",\n                          width: \"55\",\n                          align: \"center\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.currentTab === \"column\",\n                      expression: \"currentTab==='column'\",\n                    },\n                  ],\n                  staticClass: \"columnList\",\n                },\n                [\n                  _c(\n                    \"el-table\",\n                    {\n                      ref: \"columnTable\",\n                      staticClass: \"JNPF-common-table\",\n                      attrs: { data: _vm.columnOptions, height: \"100%\" },\n                      on: { \"selection-change\": _vm.columnSelectionChange },\n                    },\n                    [\n                      _vm.webType != 4\n                        ? _c(\"el-table-column\", {\n                            attrs: { prop: \"label\", label: \"列表字段\" },\n                          })\n                        : _c(\"el-table-column\", {\n                            attrs: { prop: \"fullName\", label: \"列表字段\" },\n                          }),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          type: \"selection\",\n                          width: \"55\",\n                          align: \"center\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-scrollbar\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.currentTab === \"attr\",\n                      expression: \"currentTab==='attr'\",\n                    },\n                  ],\n                  staticClass: \"right-scrollbar\",\n                },\n                [\n                  _c(\n                    \"div\",\n                    { staticClass: \"setting-box\" },\n                    [\n                      _c(\n                        \"el-form\",\n                        {\n                          attrs: {\n                            model: _vm.columnData,\n                            \"label-width\": \"80px\",\n                            \"label-position\": \"left\",\n                          },\n                        },\n                        [\n                          _c(\"el-divider\", [_vm._v(\"表格配置\")]),\n                          _vm.webType != 4\n                            ? _c(\n                                \"el-form-item\",\n                                { attrs: { label: \"数据过滤\" } },\n                                [\n                                  _c(\n                                    \"el-button\",\n                                    {\n                                      staticStyle: { width: \"100%\" },\n                                      on: { click: _vm.filterPanelShow },\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                \" +\n                                          _vm._s(\n                                            this.columnData.ruleListApp &&\n                                              this.columnData.ruleListApp\n                                                .conditionList &&\n                                              this.columnData.ruleListApp\n                                                .conditionList.length > 0\n                                              ? \"编辑过滤条件\"\n                                              : \"添加过滤条件\"\n                                          ) +\n                                          \"\\n              \"\n                                      ),\n                                    ]\n                                  ),\n                                ],\n                                1\n                              )\n                            : _vm._e(),\n                          _c(\"Condition\", {\n                            ref: \"conditionpane\",\n                            attrs: {\n                              modelType: _vm.modelType,\n                              formFieldsOptions:\n                                _vm.webType == 4 ? _vm.columnOptions : _vm.list,\n                            },\n                            on: { ruleConfig: _vm.ruleConfig },\n                          }),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"默认排序\" } },\n                            [\n                              _c(\n                                \"el-button\",\n                                {\n                                  staticStyle: { width: \"100%\" },\n                                  on: { click: _vm.editDefaultSortConfig },\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                默认排序配置\\n              \"\n                                  ),\n                                ]\n                              ),\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"分页设置\" } },\n                            [\n                              _c(\"el-switch\", {\n                                model: {\n                                  value: _vm.columnData.hasPage,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.columnData, \"hasPage\", $$v)\n                                  },\n                                  expression: \"columnData.hasPage\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                          _vm.columnData.hasPage\n                            ? _c(\n                                \"el-form-item\",\n                                { attrs: { label: \"分页条数\" } },\n                                [\n                                  _c(\n                                    \"el-radio-group\",\n                                    {\n                                      model: {\n                                        value: _vm.columnData.pageSize,\n                                        callback: function ($$v) {\n                                          _vm.$set(\n                                            _vm.columnData,\n                                            \"pageSize\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"columnData.pageSize\",\n                                      },\n                                    },\n                                    [\n                                      _c(\n                                        \"el-radio-button\",\n                                        { attrs: { label: 20 } },\n                                        [_vm._v(\"20条\")]\n                                      ),\n                                      _c(\n                                        \"el-radio-button\",\n                                        { attrs: { label: 50 } },\n                                        [_vm._v(\"50条\")]\n                                      ),\n                                      _c(\n                                        \"el-radio-button\",\n                                        { attrs: { label: 100 } },\n                                        [_vm._v(\"100条\")]\n                                      ),\n                                      _c(\n                                        \"el-radio-button\",\n                                        { attrs: { label: 500 } },\n                                        [_vm._v(\"500条\")]\n                                      ),\n                                    ],\n                                    1\n                                  ),\n                                ],\n                                1\n                              )\n                            : _vm._e(),\n                          _c(\"el-divider\", [_vm._v(\"按钮配置\")]),\n                          _vm.webType != 4\n                            ? _c(\n                                \"el-checkbox-group\",\n                                {\n                                  staticClass: \"btnsList\",\n                                  model: {\n                                    value: _vm.btnsList,\n                                    callback: function ($$v) {\n                                      _vm.btnsList = $$v\n                                    },\n                                    expression: \"btnsList\",\n                                  },\n                                },\n                                _vm._l(_vm.btnsOption, function (item) {\n                                  return _c(\n                                    \"el-checkbox\",\n                                    {\n                                      key: item.value,\n                                      attrs: { label: item.value },\n                                    },\n                                    [\n                                      _c(\"span\", { staticClass: \"btn-label\" }, [\n                                        _vm._v(\n                                          _vm._s(_vm._f(\"btnText\")(item.value))\n                                        ),\n                                      ]),\n                                      _c(\"el-input\", {\n                                        model: {\n                                          value: item.label,\n                                          callback: function ($$v) {\n                                            _vm.$set(item, \"label\", $$v)\n                                          },\n                                          expression: \"item.label\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  )\n                                }),\n                                1\n                              )\n                            : _vm._e(),\n                          _vm.webType != 4\n                            ? _c(\n                                \"el-checkbox-group\",\n                                {\n                                  staticClass: \"btnsList columnBtnList\",\n                                  model: {\n                                    value: _vm.columnBtnsList,\n                                    callback: function ($$v) {\n                                      _vm.columnBtnsList = $$v\n                                    },\n                                    expression: \"columnBtnsList\",\n                                  },\n                                },\n                                _vm._l(_vm.columnBtnsOption, function (item) {\n                                  return _c(\n                                    \"el-checkbox\",\n                                    {\n                                      key: item.value,\n                                      attrs: { label: item.value },\n                                    },\n                                    [\n                                      _c(\"span\", { staticClass: \"btn-label\" }, [\n                                        _vm._v(\n                                          _vm._s(_vm._f(\"btnText\")(item.value))\n                                        ),\n                                      ]),\n                                      _c(\"el-input\", {\n                                        model: {\n                                          value: item.label,\n                                          callback: function ($$v) {\n                                            _vm.$set(item, \"label\", $$v)\n                                          },\n                                          expression: \"item.label\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  )\n                                }),\n                                1\n                              )\n                            : _vm._e(),\n                          _vm.modelType == 1\n                            ? [\n                                _c(\n                                  \"p\",\n                                  { staticClass: \"btn-cap mt-10 mb-10\" },\n                                  [_vm._v(\"自定义按钮区\")]\n                                ),\n                                _c(\n                                  \"div\",\n                                  { staticClass: \"custom-btns-list\" },\n                                  [\n                                    _c(\n                                      \"draggable\",\n                                      {\n                                        attrs: {\n                                          list: _vm.columnData.customBtnsList,\n                                          animation: 340,\n                                          group: \"customItem\",\n                                          handle: \".option-drag\",\n                                        },\n                                      },\n                                      _vm._l(\n                                        _vm.columnData.customBtnsList,\n                                        function (item, index) {\n                                          return _c(\n                                            \"div\",\n                                            {\n                                              key: index,\n                                              staticClass: \"custom-item\",\n                                            },\n                                            [\n                                              _c(\n                                                \"div\",\n                                                {\n                                                  staticClass:\n                                                    \"custom-line-icon option-drag\",\n                                                },\n                                                [\n                                                  _c(\"i\", {\n                                                    staticClass:\n                                                      \"icon-ym icon-ym-darg\",\n                                                  }),\n                                                ]\n                                              ),\n                                              _c(\n                                                \"p\",\n                                                {\n                                                  staticClass:\n                                                    \"custom-line-value\",\n                                                },\n                                                [_vm._v(_vm._s(item.value))]\n                                              ),\n                                              _c(\n                                                \"el-input\",\n                                                {\n                                                  attrs: {\n                                                    placeholder: \"按钮名称\",\n                                                    size: \"small\",\n                                                  },\n                                                  model: {\n                                                    value: item.label,\n                                                    callback: function ($$v) {\n                                                      _vm.$set(\n                                                        item,\n                                                        \"label\",\n                                                        $$v\n                                                      )\n                                                    },\n                                                    expression: \"item.label\",\n                                                  },\n                                                },\n                                                [\n                                                  _c(\n                                                    \"template\",\n                                                    { slot: \"append\" },\n                                                    [\n                                                      _c(\n                                                        \"el-button\",\n                                                        {\n                                                          staticClass:\n                                                            \"custom-btn\",\n                                                          attrs: {\n                                                            type: \"primary\",\n                                                          },\n                                                          on: {\n                                                            click: function (\n                                                              $event\n                                                            ) {\n                                                              return _vm.editFunc(\n                                                                item\n                                                              )\n                                                            },\n                                                          },\n                                                        },\n                                                        [\n                                                          _vm._v(\n                                                            \"事件\\n                        \"\n                                                          ),\n                                                        ]\n                                                      ),\n                                                    ],\n                                                    1\n                                                  ),\n                                                ],\n                                                2\n                                              ),\n                                              _c(\n                                                \"div\",\n                                                {\n                                                  staticClass:\n                                                    \"close-btn custom-line-icon\",\n                                                  on: {\n                                                    click: function ($event) {\n                                                      return _vm.columnData.customBtnsList.splice(\n                                                        index,\n                                                        1\n                                                      )\n                                                    },\n                                                  },\n                                                },\n                                                [\n                                                  _c(\"i\", {\n                                                    staticClass:\n                                                      \"el-icon-remove-outline\",\n                                                  }),\n                                                ]\n                                              ),\n                                            ],\n                                            1\n                                          )\n                                        }\n                                      ),\n                                      0\n                                    ),\n                                  ],\n                                  1\n                                ),\n                                _c(\n                                  \"div\",\n                                  [\n                                    _c(\n                                      \"el-button\",\n                                      {\n                                        attrs: {\n                                          type: \"text\",\n                                          icon: \"el-icon-plus\",\n                                        },\n                                        on: { click: _vm.addCustomBtn },\n                                      },\n                                      [_vm._v(\"添加按钮\")]\n                                    ),\n                                  ],\n                                  1\n                                ),\n                              ]\n                            : _vm._e(),\n                          _vm.webType != 4\n                            ? [\n                                _c(\"el-divider\", [_vm._v(\"权限设置\")]),\n                                _c(\n                                  \"el-form-item\",\n                                  { attrs: { label: \"按钮权限\" } },\n                                  [\n                                    _c(\"el-switch\", {\n                                      model: {\n                                        value: _vm.columnData.useBtnPermission,\n                                        callback: function ($$v) {\n                                          _vm.$set(\n                                            _vm.columnData,\n                                            \"useBtnPermission\",\n                                            $$v\n                                          )\n                                        },\n                                        expression:\n                                          \"columnData.useBtnPermission\",\n                                      },\n                                    }),\n                                  ],\n                                  1\n                                ),\n                                _c(\n                                  \"el-form-item\",\n                                  { attrs: { label: \"列表权限\" } },\n                                  [\n                                    _c(\"el-switch\", {\n                                      model: {\n                                        value:\n                                          _vm.columnData.useColumnPermission,\n                                        callback: function ($$v) {\n                                          _vm.$set(\n                                            _vm.columnData,\n                                            \"useColumnPermission\",\n                                            $$v\n                                          )\n                                        },\n                                        expression:\n                                          \"columnData.useColumnPermission\",\n                                      },\n                                    }),\n                                  ],\n                                  1\n                                ),\n                                _c(\n                                  \"el-form-item\",\n                                  { attrs: { label: \"表单权限\" } },\n                                  [\n                                    _c(\"el-switch\", {\n                                      model: {\n                                        value: _vm.columnData.useFormPermission,\n                                        callback: function ($$v) {\n                                          _vm.$set(\n                                            _vm.columnData,\n                                            \"useFormPermission\",\n                                            $$v\n                                          )\n                                        },\n                                        expression:\n                                          \"columnData.useFormPermission\",\n                                      },\n                                    }),\n                                  ],\n                                  1\n                                ),\n                                _c(\n                                  \"el-form-item\",\n                                  { attrs: { label: \"数据权限\" } },\n                                  [\n                                    _c(\"el-switch\", {\n                                      model: {\n                                        value: _vm.columnData.useDataPermission,\n                                        callback: function ($$v) {\n                                          _vm.$set(\n                                            _vm.columnData,\n                                            \"useDataPermission\",\n                                            $$v\n                                          )\n                                        },\n                                        expression:\n                                          \"columnData.useDataPermission\",\n                                      },\n                                    }),\n                                  ],\n                                  1\n                                ),\n                              ]\n                            : _vm._e(),\n                          _vm.modelType == 1\n                            ? [\n                                _c(\"el-divider\", [_vm._v(\"脚本事件\")]),\n                                _c(\n                                  \"el-form-item\",\n                                  { attrs: { label: \"表格事件\" } },\n                                  [\n                                    _c(\n                                      \"el-button\",\n                                      {\n                                        staticStyle: { width: \"100%\" },\n                                        on: {\n                                          click: function ($event) {\n                                            return _vm.addFunc(\n                                              _vm.columnData.funcs.afterOnload,\n                                              \"afterOnload\",\n                                              true\n                                            )\n                                          },\n                                        },\n                                      },\n                                      [_vm._v(\"脚本编写\\n                \")]\n                                    ),\n                                  ],\n                                  1\n                                ),\n                              ]\n                            : _vm._e(),\n                        ],\n                        2\n                      ),\n                    ],\n                    1\n                  ),\n                ]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm.formScriptVisible\n        ? _c(\"form-script\", {\n            ref: \"formScript\",\n            attrs: { value: _vm.activeItem, type: _vm.funcName },\n            on: {\n              updateScript: _vm.updateScript,\n              closeDialog: function ($event) {\n                _vm.formScriptVisible = false\n              },\n            },\n          })\n        : _vm._e(),\n      _vm.customBtnVisible\n        ? _c(\"custom-btn\", {\n            ref: \"customBtn\",\n            attrs: { activeItem: _vm.activeItem },\n            on: {\n              updateCustomBtn: _vm.updateCustomBtn,\n              closeDialog: function ($event) {\n                _vm.customBtnVisible = false\n              },\n            },\n          })\n        : _vm._e(),\n      _vm.searchConfigVisible\n        ? _c(\"DefaultSortConfigModal\", {\n            ref: \"SearchConfig\",\n            on: { confirm: _vm.updateDefaultSortConfig },\n          })\n        : _vm._e(),\n      _vm.ExtraConfigModalVisible\n        ? _c(\"ExtraConfigModal\", {\n            ref: \"ExtraConfigModal\",\n            on: { confirm: _vm.updateSearchRow },\n          })\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}