{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/Home.vue?vue&type=template&id=6d7c4df0","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/Home.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"container\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"left-board\" },\n        [\n          _c(\"el-scrollbar\", { staticClass: \"left-scrollbar\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"components-list\" },\n              _vm._l(_vm.leftComponents, function (item, listIndex) {\n                return _c(\n                  \"div\",\n                  { key: listIndex, staticClass: \"components-part\" },\n                  [\n                    _c(\"div\", { staticClass: \"components-title\" }, [\n                      _vm._v(_vm._s(item.title)),\n                    ]),\n                    _c(\n                      \"draggable\",\n                      {\n                        staticClass: \"components-draggable\",\n                        attrs: {\n                          list: item.list,\n                          group: {\n                            name: \"componentsGroup\",\n                            pull: \"clone\",\n                            put: false,\n                          },\n                          clone: _vm.cloneComponent,\n                          draggable: \".components-item\",\n                          filter: \".disabled\",\n                          sort: false,\n                        },\n                        on: { end: _vm.onEnd },\n                      },\n                      _vm._l(item.list, function (element, index) {\n                        return _c(\n                          \"div\",\n                          {\n                            key: index,\n                            staticClass: \"components-item\",\n                            class: {\n                              disabled: element.__config__.dragDisabled,\n                            },\n                            on: {\n                              click: function ($event) {\n                                return _vm.addComponent(element)\n                              },\n                            },\n                          },\n                          [\n                            _c(\"div\", { staticClass: \"components-body\" }, [\n                              _c(\"i\", { class: element.__config__.tagIcon }),\n                              _vm._v(\n                                \"\\n                \" +\n                                  _vm._s(element.__config__.label) +\n                                  \"\\n              \"\n                              ),\n                            ]),\n                          ]\n                        )\n                      }),\n                      0\n                    ),\n                  ],\n                  1\n                )\n              }),\n              0\n            ),\n          ]),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"center-board\" },\n        [\n          _c(\"div\", { staticClass: \"action-bar\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-bar-right\" },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    class: { \"unActive-btn\": _vm.showType != \"pc\" },\n                    attrs: {\n                      icon: \"icon-ym icon-ym-pc\",\n                      type: \"text\",\n                      size: \"medium\",\n                    },\n                    on: {\n                      click: function ($event) {\n                        _vm.showType = \"pc\"\n                      },\n                    },\n                  },\n                  [_vm._v(\"桌面端\")]\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    class: { \"unActive-btn\": _vm.showType != \"app\" },\n                    attrs: {\n                      icon: \"icon-ym icon-ym-mobile\",\n                      type: \"text\",\n                      size: \"medium\",\n                    },\n                    on: {\n                      click: function ($event) {\n                        _vm.showType = \"app\"\n                      },\n                    },\n                  },\n                  [_vm._v(\"移动端\")]\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"unActive-btn\",\n                    attrs: {\n                      icon: \"el-icon-video-play\",\n                      type: \"text\",\n                      size: \"medium\",\n                    },\n                    on: { click: _vm.preview },\n                  },\n                  [_vm._v(\"预览\")]\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    staticClass: \"delete-btn unActive-btn\",\n                    attrs: {\n                      icon: \"icon-ym icon-ym-clean\",\n                      type: \"text\",\n                      size: \"medium\",\n                    },\n                    on: { click: _vm.empty },\n                  },\n                  [_vm._v(\"清空\")]\n                ),\n              ],\n              1\n            ),\n          ]),\n          _c(\n            \"el-scrollbar\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.showType === \"pc\",\n                  expression: \"showType==='pc'\",\n                },\n              ],\n              staticClass: \"center-scrollbar\",\n            },\n            [\n              _c(\n                \"el-row\",\n                {\n                  staticClass: \"center-board-row\",\n                  attrs: { gutter: _vm.formConf.gutter },\n                },\n                [\n                  _c(\n                    \"el-form\",\n                    {\n                      attrs: {\n                        size: _vm.formConf.size,\n                        \"label-position\": _vm.formConf.labelPosition,\n                        disabled: _vm.formConf.disabled,\n                        \"label-width\": _vm.formConf.labelWidth + \"px\",\n                      },\n                    },\n                    [\n                      _c(\n                        \"draggable\",\n                        {\n                          staticClass: \"drawing-board\",\n                          attrs: {\n                            list: _vm.drawingList,\n                            animation: 340,\n                            group: \"componentsGroup\",\n                          },\n                          on: { end: _vm.onCenterEnd },\n                        },\n                        _vm._l(_vm.drawingList, function (element, index) {\n                          return _c(\"draggable-item\", {\n                            key: element.renderKey,\n                            attrs: {\n                              \"drawing-list\": _vm.drawingList,\n                              element: element,\n                              index: index,\n                              \"active-id\": _vm.activeId,\n                              \"form-conf\": _vm.formConf,\n                              mergeLeftColDisabled: _vm.mergeLeftColDisabled,\n                              mergeRightColDisabled: _vm.mergeRightColDisabled,\n                              mergeWholeRowDisabled: _vm.mergeWholeRowDisabled,\n                              mergeAboveRowDisabled: _vm.mergeAboveRowDisabled,\n                              mergeBelowRowDisabled: _vm.mergeBelowRowDisabled,\n                              mergeWholeColDisabled: _vm.mergeWholeColDisabled,\n                              undoMergeRowDisabled: _vm.undoMergeRowDisabled,\n                              undoMergeColDisabled: _vm.undoMergeColDisabled,\n                              deleteWholeColDisabled:\n                                _vm.deleteWholeColDisabled,\n                              deleteWholeRowDisabled:\n                                _vm.deleteWholeRowDisabled,\n                              put: _vm.shouldClone,\n                              end: _vm.onTableEnd,\n                            },\n                            on: {\n                              activeItem: _vm.activeFormItem,\n                              copyItem: _vm.drawingItemCopy,\n                              deleteItem: _vm.drawingItemDelete,\n                              addRow: _vm.handleTableAddRow,\n                              addCol: _vm.handleTableAddCol,\n                              handleTableSetting: _vm.handleTableSetting,\n                              handleShowMenu: _vm.handleShowMenu,\n                            },\n                          })\n                        }),\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: !_vm.drawingList.length,\n                              expression: \"!drawingList.length\",\n                            },\n                          ],\n                          staticClass: \"empty-info\",\n                        },\n                        [\n                          _c(\"img\", {\n                            staticClass: \"empty-img\",\n                            attrs: {\n                              src: require(\"@/assets/images/emptyElement.png\"),\n                              alt: \"\",\n                            },\n                          }),\n                        ]\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.showType === \"app\",\n                  expression: \"showType==='app'\",\n                },\n              ],\n              attrs: { id: \"ipad\" },\n            },\n            [\n              _c(\"div\", { staticClass: \"outeripad\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"ipadbody\" },\n                  [\n                    _c(\n                      \"el-scrollbar\",\n                      { staticClass: \"center-scrollbar\" },\n                      [\n                        _c(\n                          \"el-row\",\n                          {\n                            staticClass: \"center-board-row\",\n                            attrs: { gutter: _vm.formConf.gutter },\n                          },\n                          [\n                            _c(\n                              \"el-form\",\n                              {\n                                attrs: {\n                                  size: _vm.formConf.size,\n                                  \"label-position\": _vm.formConf.labelPosition,\n                                  disabled: _vm.formConf.disabled,\n                                  \"label-width\": _vm.formConf.labelWidth + \"px\",\n                                },\n                              },\n                              [\n                                _c(\n                                  \"draggable\",\n                                  {\n                                    staticClass: \"drawing-board\",\n                                    attrs: {\n                                      list: _vm.drawingList,\n                                      animation: 340,\n                                      group: \"componentsGroup\",\n                                    },\n                                    on: { end: _vm.onCenterEnd },\n                                  },\n                                  _vm._l(\n                                    _vm.drawingList,\n                                    function (element, index) {\n                                      return _c(\"draggable-item-app\", {\n                                        key: element.renderKey,\n                                        attrs: {\n                                          \"drawing-list\": _vm.drawingList,\n                                          element: element,\n                                          index: index,\n                                          \"active-id\": _vm.activeId,\n                                          \"form-conf\": _vm.formConf,\n                                          put: _vm.shouldClone,\n                                          end: _vm.onTableEnd,\n                                        },\n                                        on: {\n                                          activeItem: _vm.activeFormItem,\n                                          copyItem: _vm.drawingItemCopy,\n                                          deleteItem: _vm.drawingItemDelete,\n                                        },\n                                      })\n                                    }\n                                  ),\n                                  1\n                                ),\n                                _c(\n                                  \"div\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"show\",\n                                        rawName: \"v-show\",\n                                        value: !_vm.drawingList.length,\n                                        expression: \"!drawingList.length\",\n                                      },\n                                    ],\n                                    staticClass: \"empty-info app-empty-info\",\n                                  },\n                                  [\n                                    _c(\"img\", {\n                                      staticClass: \"empty-img\",\n                                      attrs: {\n                                        src: require(\"@/assets/images/emptyElement.png\"),\n                                        alt: \"\",\n                                      },\n                                    }),\n                                  ]\n                                ),\n                              ],\n                              1\n                            ),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                  ],\n                  1\n                ),\n              ]),\n            ]\n          ),\n        ],\n        1\n      ),\n      _c(\"right-panel\", {\n        attrs: {\n          \"active-data\": _vm.activeData,\n          \"form-conf\": _vm.formConf,\n          \"show-field\": !!_vm.drawingList.length,\n          modelType: _vm.modelType,\n          webType: _vm.webType,\n          formInfo: _vm.getFormInfo,\n          drawingList: _vm.drawingList,\n        },\n        on: {\n          \"tag-change\": _vm.tagChange,\n          relationChange: _vm.relationChange,\n          setVModel: _vm.setVModel,\n          copyItem: _vm.drawingItemCopy,\n        },\n      }),\n      _c(\"json-drawer\", {\n        attrs: {\n          size: \"550px\",\n          visible: _vm.jsonDrawerVisible,\n          jsonData: _vm.formData,\n        },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.jsonDrawerVisible = $event\n          },\n          refresh: _vm.refreshJson,\n        },\n      }),\n      _c(\"Preview\", {\n        attrs: { visible: _vm.previewVisible, \"form-data\": _vm.formData },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.previewVisible = $event\n          },\n        },\n      }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}