{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/uploadBox.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/uploadBox.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.set\");\nrequire(\"core-js/modules/es6.string.iterator\");\nrequire(\"core-js/modules/es6.array.from\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _comConfig = require(\"@/components/Generator/generator/comConfig\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar excludeList = [].concat((0, _toConsumableArray2.default)(_comConfig.noVModelList), (0, _toConsumableArray2.default)(_comConfig.noGroupList), ['uploadFile', 'uploadImg', 'colorPicker', 'popupTableSelect', 'relationForm', 'popupSelect', 'calculate', 'groupTitle']);\nvar _default = exports.default = {\n  props: ['value'],\n  data: function data() {\n    return {\n      visible: false,\n      dataForm: {\n        dataType: \"1\"\n      },\n      checkAll: false,\n      checkedList: [],\n      isIndeterminate: false,\n      columnList: [],\n      defaultCheckedList: []\n    };\n  },\n  methods: {\n    init: function init(columnList, selectData, dataType) {\n      this.visible = true;\n      this.columnList = [];\n      this.checkedList = [];\n      this.defaultCheckedList = [];\n      for (var i = 0; i < columnList.length; i++) {\n        var element = columnList[i];\n        var required = element.__config__.required;\n        var jnpfKey = element.__config__.jnpfKey;\n        var disabled = _comConfig.systemComponentsList.includes(jnpfKey) || required;\n        if (!excludeList.includes(jnpfKey)) {\n          this.columnList.push({\n            id: element.id,\n            fullName: element.fullName,\n            disabled: disabled\n          });\n          if (required || _comConfig.systemComponentsList.includes(jnpfKey)) {\n            this.checkedList.push(element.id);\n            this.defaultCheckedList.push(element.id);\n          }\n        }\n      }\n      if (selectData && selectData.length) {\n        var _this$checkedList;\n        (_this$checkedList = this.checkedList).push.apply(_this$checkedList, (0, _toConsumableArray2.default)(selectData));\n        this.checkedList = Array.from(new Set(this.checkedList));\n      }\n      if (this.checkedList.length) {\n        this.isIndeterminate = this.checkedList.length > 0 && this.checkedList.length < this.columnList.length;\n        this.checkAll = this.checkedList.length === this.columnList.length;\n      }\n      if (dataType) this.dataForm.dataType = dataType;\n    },\n    closeDialog: function closeDialog() {\n      this.$emit('update:visible', false);\n    },\n    handleCheckAllChange: function handleCheckAllChange(val) {\n      this.checkedList = val ? this.columnList.map(function (o) {\n        return o.id;\n      }) : this.defaultCheckedList;\n      this.isIndeterminate = false;\n    },\n    handleCheckedChange: function handleCheckedChange(value) {\n      var checkedCount = value.length;\n      this.checkAll = checkedCount === this.columnList.length;\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.columnList.length;\n    },\n    onConfirm: function onConfirm() {\n      if (!this.checkedList.length) return this.$message.warning('请至少选择一个导入字段');\n      this.$emit('onConfirm', {\n        dataType: this.dataForm.dataType,\n        selectKey: this.checkedList\n      });\n      this.closeDialog();\n    }\n  }\n};",null]}