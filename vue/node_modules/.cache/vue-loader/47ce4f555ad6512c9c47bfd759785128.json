{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/layout/components/settings/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/layout/components/settings/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UpdateTheme } from '@/api/permission/userSetting'\nimport themeColor from '@/assets/scss/theme.scss'\nimport themeMinix from './minix'\nexport default {\n  mixins: [themeMinix],\n  name: 'Settings',\n  data() {\n    return {\n      drawer: false,\n      themeClass: '',\n      imgUrl1: [\n        {\n          imgrurl: require('@/assets/images/settings/classic.png'),\n          name: '侧边导航',\n          layoutType: 'classic'\n        },\n        {\n          imgrurl: require('@/assets/images/settings/functional.png'),\n          name: '顶部导航',\n          layoutType: 'functional'\n        },\n        {\n          imgrurl: require('@/assets/images/settings/blend.png'),\n          name: '混合导航',\n          layoutType: 'blend'\n        },\n        {\n          imgrurl: require('@/assets/images/settings/plain.png'),\n          name: '简约导航',\n          layoutType: 'plain'\n        }\n      ],\n      imgUrl2: [\n        {\n          imgrurl: require('@/assets/images/settings/dark.png'),\n          name: '暗黑模式',\n          className: 'dark'\n        },\n        {\n          imgrurl: require('@/assets/images/settings/lightWhite.png'),\n          name: '亮白模式',\n          className: 'lightWhite'\n        },\n      ],\n      imgUrl3: [\n        {\n          name: '经典蓝',\n          className: 'blue',\n          color: themeColor.blueTheme,\n        },\n        {\n          name: '玫紫',\n          className: 'purple',\n          color: themeColor.purpleTheme,\n        },\n        {\n          name: '湛蓝',\n          className: 'azure',\n          color: themeColor.azureTheme,\n        },\n        {\n          name: '海洋',\n          className: 'ocean',\n          color: themeColor.oceanTheme,\n        },\n        {\n          name: '生机',\n          className: 'green',\n          color: themeColor.greenTheme,\n        },\n        {\n          name: '丰收',\n          className: 'yellow',\n          color: themeColor.yellowTheme,\n        },\n        {\n          name: '阳橙',\n          className: 'orange',\n          color: themeColor.orangeTheme,\n        },\n        {\n          name: '热情',\n          className: 'red',\n          color: themeColor.redTheme,\n        },\n      ]\n    }\n  },\n  computed: {\n    defaultThemeClass() {\n      return this.$store.state.settings.themeClass\n    },\n    tagsView: {\n      get() {\n        return this.$store.state.settings.tagsView;\n      },\n      set(val) {\n        this.$store.dispatch(\"settings/changeSetting\", {\n          key: \"tagsView\",\n          value: val\n        });\n      }\n    },\n    tagsIcon: {\n      get() {\n        return this.$store.state.settings.tagsIcon;\n      },\n      set(val) {\n        this.$store.dispatch(\"settings/changeSetting\", {\n          key: \"tagsIcon\",\n          value: val\n        });\n      }\n    },\n    showLanguage: {\n      get() {\n        return this.$store.state.settings.showLanguage;\n      },\n      set(val) {\n        this.$store.dispatch(\"settings/changeSetting\", {\n          key: \"showLanguage\",\n          value: val\n        });\n      }\n    },\n    showSearch: {\n      get() {\n        return this.$store.state.settings.showSearch;\n      },\n      set(val) {\n        this.$store.dispatch(\"settings/changeSetting\", {\n          key: \"showSearch\",\n          value: val\n        });\n      }\n    },\n    useCache: {\n      get() {\n        return this.$store.state.settings.useCache;\n      },\n      set(val) {\n        this.$store.dispatch(\"settings/changeSetting\", {\n          key: \"useCache\",\n          value: val\n        });\n      }\n    },\n    slideClass: {\n      get() {\n        return this.$store.state.settings.slideClass;\n      },\n      set(val) {\n        this.$store.dispatch(\"settings/changeSetting\", {\n          key: \"slideClass\",\n          value: val\n        });\n      }\n    },\n    layoutType: {\n      get() {\n        return this.$store.state.settings.layoutType;\n      },\n      set(val) {\n        UpdateTheme({ theme: val }).then(res => {\n        })\n        this.$store.dispatch(\"settings/changeSetting\", {\n          key: \"layoutType\",\n          value: val\n        });\n      }\n    },\n  },\n  watch: {\n    defaultThemeClass: {\n      handler: function (val, oldVal) {\n        if (!val) return\n        this.themeClass = val\n        let activeItem = this.imgUrl3.filter(o => o.className === val)[0]\n        this.theme = activeItem && activeItem.color ? activeItem.color : \"#1890ff\"\n      },\n      immediate: true\n    },\n  },\n  created() { },\n  methods: {\n    init() {\n      this.drawer = true\n    },\n    checkList(item) {\n      if (item.layoutType === this.layoutType) return\n      this.layoutType = item.layoutType\n    },\n    checkList2(item) {\n      if (item.className === this.slideClass) return\n      this.slideClass = item.className\n    },\n    checkList3(item) {\n      if (item.className === this.themeClass) return\n      this.$store.dispatch(\"settings/changeSetting\", {\n        key: \"themeClass\",\n        value: item.className\n      });\n    }\n  }\n}\n",null]}