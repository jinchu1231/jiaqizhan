{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/formDesign/FieldForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/formDesign/FieldForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { deepClone } from '@/utils'\nimport { inputComponents, selectComponents, systemComponents } from '@/components/Generator/generator/config'\nconst ignoreList = ['divider', 'text', 'link', 'alert', 'button', 'table']\nexport default {\n  props: ['conf', 'enCode'],\n  data() {\n    return {\n      componentList: [],\n      drawingList: [],\n    }\n  },\n  created() {\n    this.getComponentList()\n    if (typeof this.conf === 'object' && this.conf !== null) {\n      this.drawingList = deepClone(this.conf)\n    }\n  },\n  methods: {\n    /**\n      * 供父组件使用 获取表单JSON\n    */\n    getData() {\n      return new Promise((resolve, reject) => {\n        if (!this.exist()) return\n        if (!this.drawingList.length) {\n          reject({ msg: '表单列表不允许为空', target: 1 })\n          return\n        }\n        resolve({ formData: this.drawingList, target: 1 })\n      })\n    },\n    getComponentList() {\n      const realInputComponents = inputComponents.filter(o => !ignoreList.includes(o.__config__.jnpfKey))\n      const realSelectComponents = selectComponents.filter(o => !ignoreList.includes(o.__config__.jnpfKey))\n      this.componentList = [\n        {\n          id: '1',\n          fullName: '基础控件',\n          children: realInputComponents\n        },\n        {\n          id: '2',\n          fullName: '高级控件',\n          children: realSelectComponents\n        },\n        {\n          id: '3',\n          fullName: '系统控件',\n          children: systemComponents\n        }\n      ]\n    },\n    // 验证\n    exist() {\n      let isOk = true;\n      //  遍历数组，判断非空\n      for (let i = 0; i < this.drawingList.length; i++) {\n        const e = this.drawingList[i];\n        if (!e.filedName) {\n          this.$message({\n            showClose: true,\n            message: '名称不能为空',\n            type: 'error',\n            duration: 1000\n          });\n          isOk = false\n          break\n        }\n        let num = this.drawingList.filter(o => o.filedName == e.filedName)\n        if (num.length > 1) {\n          this.$message({\n            showClose: true,\n            message: `名称'${e.filedName}'已重复`,\n            type: 'error',\n            duration: 1000\n          });\n          isOk = false\n          break\n        }\n        if (!e.filedId) {\n          this.$message({\n            showClose: true,\n            message: '字段不能为空',\n            type: 'error',\n            duration: 1000\n          });\n          isOk = false\n          break\n        }\n        let idNum = this.drawingList.filter(o => o.filedId == e.filedId)\n        if (idNum.length > 1) {\n          this.$message({\n            showClose: true,\n            message: `字段'${e.filedId}'已重复`,\n            type: 'error',\n            duration: 1000\n          });\n          isOk = false\n          break\n        }\n      }\n      return isOk;\n    },\n    handleDel(index) {\n      this.drawingList.splice(index, 1);\n    },\n    addHandle() {\n      let item = { filedName: \"\", filedId: \"\", jnpfKey: \"\", required: false, multiple: false }\n      this.drawingList.push(item)\n    }\n  }\n}\n",null]}