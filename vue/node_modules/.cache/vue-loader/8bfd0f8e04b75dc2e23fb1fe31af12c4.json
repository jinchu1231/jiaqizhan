{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/systemData/interfaceOauth/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/systemData/interfaceOauth/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Form from './Form'\nimport Preview from './Preview'\nimport Log from './Log'\nimport Empower from './Empower'\nimport Transfer from './Transfer'\nimport { getInterfaceOauthList, deleteInterfaceIdent } from '@/api/systemData/interfaceOauth.js'\nexport default {\n  name: 'systemData-interfaceOauth',\n  components: { Form, Preview, Log, Empower, Transfer },\n  data() {\n    return {\n      tableList: [],\n      listQuery: {\n        enabledMark: '',\n        keyword: '',\n        currentPage: 1,\n        pageSize: 20,\n        categoryId: '',\n        sort: 'desc'\n      },\n      total: 0,\n      listLoading: false,\n      formVisible: false,\n      previewVisible: false,\n      logVisible: false,\n      empowerVisible: false,\n      userVisible: false\n    }\n  },\n  created() {\n    this.initData()\n  },\n  methods: {\n    initData() {\n      this.listLoading = true\n      getInterfaceOauthList(this.listQuery).then(res => {\n        this.tableList = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      }).catch(() => {\n        this.listLoading = false\n      })\n    },\n    addOrUpdateHandle(data) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.Form.init(data)\n      })\n    },\n    toDetail(data) {\n      this.previewVisible = true\n      this.$nextTick(() => {\n        this.$refs.Preview.init(data)\n      })\n    },\n    viewLog(data) {\n      this.logVisible = true\n      this.$nextTick(() => {\n        this.$refs.Log.init(data)\n      })\n    },\n    handleDel(id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        deleteInterfaceIdent(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          })\n        })\n      }).catch(() => { })\n    },\n    search() {\n      this.listQuery.currentPage = 1\n      this.listQuery.pageSize = 20\n      this.listQuery.sort = 'desc'\n      this.initData()\n    },\n    reset() {\n      this.listQuery.keyword = ''\n      this.listQuery.enabledMark = ''\n      this.search()\n    },\n    closeForm(isRefresh) {\n      this.formVisible = false\n      if (isRefresh) {\n        this.listQuery = {\n          keyword: '',\n          enabledMark: '',\n          currentPage: 1,\n          pageSize: 20,\n          sort: 'desc'\n        }\n        this.initData()\n      }\n    },\n    closeOtherWind() {\n      this.formVisible = false\n      this.previewVisible = false\n      this.logVisible = false\n      this.empowerVisible = false\n    },\n    viewEmpower(data) {\n      this.empowerVisible = true\n      this.$nextTick(() => {\n        this.$refs.Empower.init(data)\n      })\n    },\n    getUsers(id) {\n      this.userVisible = true\n      this.$nextTick(() => {\n        this.$refs.user.init(id)\n      })\n    }\n  }\n}\n",null]}