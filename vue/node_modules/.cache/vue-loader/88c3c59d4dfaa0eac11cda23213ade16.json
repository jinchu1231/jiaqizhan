{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/HSchedule/Form.vue?vue&type=template&id=9f544dd2&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/HSchedule/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"JNPF-dialog JNPF-dialog_center\",\n          attrs: {\n            title: !_vm.dataForm.id ? \"新建\" : \"编辑\",\n            \"close-on-click-modal\": false,\n            visible: _vm.visible,\n            \"lock-scroll\": \"\",\n            width: \"600px\",\n            \"append-to-body\": \"\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.visible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"dataForm\",\n              attrs: {\n                model: _vm.dataForm,\n                rules: _vm.dataRule,\n                \"label-width\": \"100px\",\n              },\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"类型\", prop: \"category\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        placeholder: \"请选择类型\",\n                        clearable: \"\",\n                        filterable: \"\",\n                      },\n                      model: {\n                        value: _vm.dataForm.category,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.dataForm, \"category\", $$v)\n                        },\n                        expression: \"dataForm.category\",\n                      },\n                    },\n                    _vm._l(_vm.typeOptions, function (item) {\n                      return _c(\"el-option\", {\n                        key: item.id,\n                        attrs: { label: item.fullName, value: item.id },\n                      })\n                    }),\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"紧急程度\", prop: \"urgent\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择紧急程度\", filterable: \"\" },\n                      model: {\n                        value: _vm.dataForm.urgent,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.dataForm, \"urgent\", $$v)\n                        },\n                        expression: \"dataForm.urgent\",\n                      },\n                    },\n                    _vm._l(_vm.urgentList, function (item) {\n                      return _c(\"el-option\", {\n                        key: item.id,\n                        attrs: { label: item.fullName, value: item.id },\n                      })\n                    }),\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"标题\", prop: \"title\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"请输入标题\" },\n                    model: {\n                      value: _vm.dataForm.title,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.dataForm, \"title\", $$v)\n                      },\n                      expression: \"dataForm.title\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"内容\", prop: \"content\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      placeholder: \"请输入内容\",\n                      type: \"textarea\",\n                      rows: 3,\n                    },\n                    model: {\n                      value: _vm.dataForm.content,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.dataForm, \"content\", $$v)\n                      },\n                      expression: \"dataForm.content\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"附件\", prop: \"files\" } },\n                [\n                  _c(\"JnpfUploadFile\", {\n                    attrs: { buttonText: \"点击上传\" },\n                    model: {\n                      value: _vm.files,\n                      callback: function ($$v) {\n                        _vm.files = $$v\n                      },\n                      expression: \"files\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"全天\", prop: \"allDay\" } },\n                [\n                  _c(\"el-switch\", {\n                    attrs: { \"active-value\": 1, \"inactive-value\": 0 },\n                    on: { change: _vm.change_providerType },\n                    model: {\n                      value: _vm.dataForm.allDay,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.dataForm, \"allDay\", $$v)\n                      },\n                      expression: \"dataForm.allDay\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"开始时间\", prop: \"startDay\" } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 14 } },\n                    [\n                      _c(\"el-date-picker\", {\n                        attrs: {\n                          type: \"date\",\n                          placeholder: \"请选择开始日期\",\n                          editable: false,\n                          clearable: false,\n                          format: \"yyyy-MM-dd\",\n                          \"value-format\": \"timestamp\",\n                        },\n                        on: { change: _vm.startDayChange },\n                        model: {\n                          value: _vm.dataForm.startDay,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.dataForm, \"startDay\", $$v)\n                          },\n                          expression: \"dataForm.startDay\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 10 } },\n                    [\n                      _vm.dataForm.allDay == 0\n                        ? _c(\"el-time-select\", {\n                            staticClass: \"jnpf-el-row\",\n                            attrs: {\n                              placeholder: \"请选择开始时间\",\n                              \"picker-options\": {\n                                start: \"00:00\",\n                                step: \"00:05\",\n                                end: \"23:55\",\n                              },\n                            },\n                            model: {\n                              value: _vm.dataForm.startTime,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"startTime\", $$v)\n                              },\n                              expression: \"dataForm.startTime\",\n                            },\n                          })\n                        : _vm._e(),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _vm.dataForm.duration != -1 && _vm.dataForm.allDay == 0\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"时长\", prop: \"duration\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { placeholder: \"请选择\", clearable: \"\" },\n                          on: { change: _vm.durationChange },\n                          model: {\n                            value: _vm.dataForm.duration,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.dataForm, \"duration\", $$v)\n                            },\n                            expression: \"dataForm.duration\",\n                          },\n                        },\n                        _vm._l(_vm.durationList, function (item) {\n                          return _c(\"el-option\", {\n                            key: item.id,\n                            attrs: { label: item.fullName, value: item.id },\n                          })\n                        }),\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.dataForm.duration == -1 || _vm.dataForm.allDay\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"结束时间\", prop: \"endDay\" } },\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 14 } },\n                        [\n                          _c(\"el-date-picker\", {\n                            attrs: {\n                              type: \"date\",\n                              placeholder: \"请选择结束日期\",\n                              editable: false,\n                              clearable: false,\n                              format: \"yyyy-MM-dd\",\n                              \"value-format\": \"timestamp\",\n                            },\n                            model: {\n                              value: _vm.dataForm.endDay,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"endDay\", $$v)\n                              },\n                              expression: \"dataForm.endDay\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 10 } },\n                        [\n                          _vm.dataForm.allDay == 0\n                            ? _c(\"el-time-select\", {\n                                staticClass: \"jnpf-el-row\",\n                                attrs: {\n                                  placeholder: \"请选择结束时间\",\n                                  \"picker-options\": {\n                                    start: \"00:00\",\n                                    step: \"00:05\",\n                                    end: \"23:55\",\n                                  },\n                                },\n                                model: {\n                                  value: _vm.dataForm.endTime,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.dataForm, \"endTime\", $$v)\n                                  },\n                                  expression: \"dataForm.endTime\",\n                                },\n                              })\n                            : _vm._e(),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"创建人\", prop: \"creatorUserId\" } },\n                [\n                  _c(\"JnpfUserSelect\", {\n                    attrs: { placeholder: \"创建人\", disabled: \"\" },\n                    model: {\n                      value: _vm.dataForm.creatorUserId,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.dataForm, \"creatorUserId\", $$v)\n                      },\n                      expression: \"dataForm.creatorUserId\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"参与人\", prop: \"toUserIds\" } },\n                [\n                  _c(\"JnpfUserSelect\", {\n                    attrs: {\n                      placeholder: \"请选择参与人\",\n                      multiple: \"\",\n                      clearable: \"\",\n                    },\n                    model: {\n                      value: _vm.dataForm.toUserIds,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.dataForm, \"toUserIds\", $$v)\n                      },\n                      expression: \"dataForm.toUserIds\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"标签颜色\", prop: \"color\" } },\n                [\n                  _c(\"el-color-picker\", {\n                    attrs: {\n                      predefine: [\n                        \"#188ae2\",\n                        \"#35b8e0\",\n                        \"#26bf8c\",\n                        \"#f9c851\",\n                        \"#ff5b5b\",\n                        \"#5b69bc\",\n                        \"#ff8acc\",\n                        \"#3b3e47\",\n                        \"#282828\",\n                      ],\n                    },\n                    model: {\n                      value: _vm.dataForm.color,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.dataForm, \"color\", $$v)\n                      },\n                      expression: \"dataForm.color\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"提醒时间\", prop: \"reminderTime\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择提醒时间\", filterable: \"\" },\n                      model: {\n                        value: _vm.dataForm.reminderTime,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.dataForm, \"reminderTime\", $$v)\n                        },\n                        expression: \"dataForm.reminderTime\",\n                      },\n                    },\n                    _vm._l(_vm.getReminderTimeList, function (item) {\n                      return _c(\"el-option\", {\n                        key: item.id,\n                        attrs: { label: item.fullName, value: item.id },\n                      })\n                    }),\n                    1\n                  ),\n                ],\n                1\n              ),\n              _vm.dataForm.reminderTime != -2\n                ? [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"提醒方式\", prop: \"reminderType\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: {\n                              placeholder: \"请选择提醒方式\",\n                              filterable: \"\",\n                            },\n                            model: {\n                              value: _vm.dataForm.reminderType,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"reminderType\", $$v)\n                              },\n                              expression: \"dataForm.reminderType\",\n                            },\n                          },\n                          _vm._l(_vm.remindList, function (item) {\n                            return _c(\"el-option\", {\n                              key: item.id,\n                              attrs: { label: item.fullName, value: item.id },\n                            })\n                          }),\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                    _vm.dataForm.reminderType == 2\n                      ? _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"发送配置\", prop: \"send\" } },\n                          [\n                            _c(\"msg-dialog\", {\n                              attrs: {\n                                value: _vm.dataForm.send,\n                                title: _vm.dataForm.sendName,\n                                messageSource: 4,\n                              },\n                              on: { change: _vm.onMsgChange },\n                            }),\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                  ]\n                : _vm._e(),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"重复提醒\", prop: \"repetition\" } },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: { placeholder: \"请选择重复提醒\", filterable: \"\" },\n                      on: { change: _vm.repetitionChange },\n                      model: {\n                        value: _vm.dataForm.repetition,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.dataForm, \"repetition\", $$v)\n                        },\n                        expression: \"dataForm.repetition\",\n                      },\n                    },\n                    _vm._l(_vm.repeatReminderList, function (item) {\n                      return _c(\"el-option\", {\n                        key: item.id,\n                        attrs: { label: item.fullName, value: item.id },\n                      })\n                    }),\n                    1\n                  ),\n                ],\n                1\n              ),\n              _vm.dataForm.repetition != 1\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"结束重复\", prop: \"repeatTime\" } },\n                    [\n                      _c(\"el-date-picker\", {\n                        staticStyle: { width: \"100%\" },\n                        attrs: {\n                          type: \"date\",\n                          placeholder: \"请选择结束重复\",\n                          clearable: \"\",\n                          format: \"yyyy-MM-dd\",\n                          \"value-format\": \"timestamp\",\n                        },\n                        model: {\n                          value: _vm.dataForm.repeatTime,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.dataForm, \"repeatTime\", $$v)\n                          },\n                          expression: \"dataForm.repeatTime\",\n                        },\n                      }),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n            ],\n            2\n          ),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _vm.dataForm.id\n                ? _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"danger\" },\n                      on: {\n                        click: function ($event) {\n                          return _vm.handleDel()\n                        },\n                      },\n                    },\n                    [_vm._v(\"删 除\")]\n                  )\n                : _vm._e(),\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.visible = false\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.btnLoading },\n                  on: {\n                    click: function ($event) {\n                      return _vm.dataFormSubmit()\n                    },\n                  },\n                },\n                [_vm._v(\"\\n        \" + _vm._s(_vm.$t(\"common.confirmButton\")))]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"JNPF-dialog JNPF-dialog_center dialog-form\",\n          attrs: {\n            title: \"删除确认\",\n            \"close-on-click-modal\": false,\n            visible: _vm.delVisible,\n            \"lock-scroll\": \"\",\n            width: \"380px\",\n            \"append-to-body\": \"\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.delVisible = $event\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticStyle: { \"margin-bottom\": \"20px\" } }, [\n            _vm._v(\"此为重复日程，将删除（含参与人）应用于\"),\n          ]),\n          _vm._l(_vm.deleteList, function (item, i) {\n            return [\n              _c(\n                \"div\",\n                {\n                  key: i,\n                  staticStyle: { \"margin-bottom\": \"10px\", color: \"#303133\" },\n                },\n                [\n                  _c(\n                    \"el-radio\",\n                    {\n                      attrs: { label: item.id },\n                      model: {\n                        value: _vm.checked,\n                        callback: function ($$v) {\n                          _vm.checked = $$v\n                        },\n                        expression: \"checked\",\n                      },\n                    },\n                    [_vm._v(\" \")]\n                  ),\n                  _vm._v(_vm._s(item.fullName) + \"\\n      \"),\n                ],\n                1\n              ),\n            ]\n          }),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.delVisible = false\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.btnLoading },\n                  on: {\n                    click: function ($event) {\n                      return _vm.handleDel()\n                    },\n                  },\n                },\n                [_vm._v(\"\\n        \" + _vm._s(_vm.$t(\"common.confirmButton\")))]\n              ),\n            ],\n            1\n          ),\n        ],\n        2\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"JNPF-dialog JNPF-dialog_center dialog-form\",\n          attrs: {\n            title: \"编辑确认\",\n            \"close-on-click-modal\": false,\n            visible: _vm.updateVisible,\n            \"lock-scroll\": \"\",\n            width: \"380px\",\n            \"append-to-body\": \"\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.updateVisible = $event\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticStyle: { \"margin-bottom\": \"10px\" } }, [\n            _vm._v(\"此为重复日程，将修改应用于\"),\n          ]),\n          _vm._l(_vm.tableList, function (item, i) {\n            return [\n              item.id != 0\n                ? _c(\n                    \"div\",\n                    {\n                      key: i,\n                      staticStyle: {\n                        \"margin-bottom\": \"10px\",\n                        color: \"#303133\",\n                      },\n                    },\n                    [\n                      _c(\n                        \"el-radio\",\n                        {\n                          attrs: { label: item.id },\n                          model: {\n                            value: _vm.checked,\n                            callback: function ($$v) {\n                              _vm.checked = $$v\n                            },\n                            expression: \"checked\",\n                          },\n                        },\n                        [_vm._v(\" \")]\n                      ),\n                      _vm._v(_vm._s(item.fullName) + \"\\n      \"),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n            ]\n          }),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.updateVisible = false\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.btnLoading },\n                  on: {\n                    click: function ($event) {\n                      return _vm.dataFormSubmit(1)\n                    },\n                  },\n                },\n                [_vm._v(\"\\n        \" + _vm._s(_vm.$t(\"common.confirmButton\")))]\n              ),\n            ],\n            1\n          ),\n        ],\n        2\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}