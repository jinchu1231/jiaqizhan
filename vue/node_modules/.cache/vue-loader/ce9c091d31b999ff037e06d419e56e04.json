{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/menu/components/columnAuthorize/BatchForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/menu/components/columnAuthorize/BatchForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { batchCreateColumn } from '@/api/system/columnAuthorize'\nimport JNPFCodeEditor from '@/components/JNPFEditor/monaco'\nexport default {\n  components: { JNPFCodeEditor },\n  data() {\n    return {\n      options: {\n        readOnly: false,\n        language: 'json'\n      },\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      content: '',\n      dataForm: {\n        moduleId: '',\n        bindTable: '',\n        bindTableName: '',\n        columnJson: []\n      },\n      dataRule: {}\n    }\n  },\n  methods: {\n    init(moduleId) {\n      this.dataForm.moduleId = moduleId\n      this.visible = true\n      this.formLoading = true\n      this.$nextTick(() => {\n        this.content = ''\n        this.$refs['dataForm'].resetFields()\n        this.$refs.CodeEditor.changeEditor({\n          value: '',\n          options: this.options\n        })\n        this.formLoading = false\n      })\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const rtnData = this.content\n          if (!rtnData) return this.$message.warning('请输入字段JSON')\n          const fixedRtnData = rtnData.replace(/(\"\\w+\":)(?=[},])/g, '$1null')\n          const jsonData = JSON.parse(fixedRtnData)\n          this.dataForm.columnJson = jsonData\n          this.btnLoading = true\n          batchCreateColumn(this.dataForm).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.content = ''\n                this.$emit('refreshDataList')\n              }\n            })\n          }).catch(() => { this.btnLoading = false })\n        }\n      })\n    }\n  }\n}\n",null]}