{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/common/DataBoardData.vue?vue&type=template&id=22b73151&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/common/DataBoardData.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"JNPF-dialog JNPF-dialog_center todoData\",\n          attrs: {\n            title: \"选项设置\",\n            \"close-on-click-modal\": false,\n            visible: _vm.visible,\n            \"lock-scroll\": \"\",\n            width: \"1000px\",\n            \"append-to-body\": \"\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.visible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"main\" },\n            [\n              _c(\n                \"JNPF-table\",\n                {\n                  ref: \"dragTable\",\n                  attrs: { data: _vm.list, hasNO: false, \"row-key\": \"id\" },\n                },\n                [\n                  _c(\n                    \"el-table-column\",\n                    { attrs: { align: \"center\", label: \"拖动\", width: \"50\" } },\n                    [\n                      [\n                        _c(\"i\", {\n                          staticClass: \"drag-handler icon-ym icon-ym-darg\",\n                          staticStyle: { cursor: \"move\", \"font-size\": \"20px\" },\n                          attrs: { title: \"点击拖动\" },\n                        }),\n                      ],\n                    ],\n                    2\n                  ),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"field\", label: \"名称\", width: \"160px\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            _c(\"el-input\", {\n                              attrs: {\n                                placeholder: \"请输入名称\",\n                                maxlength: \"50\",\n                                clearable: \"\",\n                              },\n                              model: {\n                                value: scope.row.fullName,\n                                callback: function ($$v) {\n                                  _vm.$set(scope.row, \"fullName\", $$v)\n                                },\n                                expression: \"scope.row.fullName\",\n                              },\n                            }),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _vm.type == 1\n                    ? _c(\"el-table-column\", {\n                        attrs: { prop: \"num\", width: \"180px\", label: \"数值\" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function (scope) {\n                                return [\n                                  _c(\"el-input\", {\n                                    attrs: {\n                                      placeholder: \"请输入数值\",\n                                      maxlength: \"10\",\n                                    },\n                                    model: {\n                                      value: scope.row.num,\n                                      callback: function ($$v) {\n                                        _vm.$set(scope.row, \"num\", $$v)\n                                      },\n                                      expression: \"scope.row.num\",\n                                    },\n                                  }),\n                                ]\n                              },\n                            },\n                          ],\n                          null,\n                          false,\n                          2537132932\n                        ),\n                      })\n                    : _c(\"el-table-column\", {\n                        attrs: { prop: \"field\", label: \"字段\", width: \"140px\" },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function (scope) {\n                              return [\n                                _c(\"el-autocomplete\", {\n                                  staticStyle: { width: \"100%\" },\n                                  attrs: {\n                                    \"fetch-suggestions\": _vm.querySearchAsync,\n                                    clearable: \"\",\n                                    placeholder: \"请输入字段\",\n                                  },\n                                  on: {\n                                    select: function ($event) {\n                                      return _vm.handleSelect(\n                                        $event,\n                                        scope.$index\n                                      )\n                                    },\n                                  },\n                                  scopedSlots: _vm._u(\n                                    [\n                                      {\n                                        key: \"default\",\n                                        fn: function (ref) {\n                                          var item = ref.item\n                                          return [\n                                            _c(\n                                              \"div\",\n                                              {\n                                                staticClass:\n                                                  \"sale-order-popper-item\",\n                                              },\n                                              [\n                                                _c(\"span\", [\n                                                  _vm._v(\n                                                    _vm._s(item.defaultValue)\n                                                  ),\n                                                ]),\n                                              ]\n                                            ),\n                                          ]\n                                        },\n                                      },\n                                    ],\n                                    null,\n                                    true\n                                  ),\n                                  model: {\n                                    value: scope.row.field,\n                                    callback: function ($$v) {\n                                      _vm.$set(scope.row, \"field\", $$v)\n                                    },\n                                    expression: \"scope.row.field\",\n                                  },\n                                }),\n                              ]\n                            },\n                          },\n                        ]),\n                      }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"field\", label: \"单位名称\", width: \"80px\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            _c(\"el-input\", {\n                              attrs: {\n                                placeholder: \"单位名称\",\n                                maxlength: \"5\",\n                              },\n                              model: {\n                                value: scope.row.unit,\n                                callback: function ($$v) {\n                                  _vm.$set(scope.row, \"unit\", $$v)\n                                },\n                                expression: \"scope.row.unit\",\n                              },\n                            }),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"field\", label: \"图标\", width: \"180px\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            _c(\n                              \"el-input\",\n                              {\n                                attrs: { placeholder: \"请输入图标名称\" },\n                                model: {\n                                  value: scope.row.icon,\n                                  callback: function ($$v) {\n                                    _vm.$set(scope.row, \"icon\", $$v)\n                                  },\n                                  expression: \"scope.row.icon\",\n                                },\n                              },\n                              [\n                                _c(\n                                  \"el-button\",\n                                  {\n                                    attrs: { slot: \"append\" },\n                                    on: {\n                                      click: function ($event) {\n                                        return _vm.openIconsDialog(\n                                          scope.row.icon,\n                                          scope.$index\n                                        )\n                                      },\n                                    },\n                                    slot: \"append\",\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n                选择\\n              \"\n                                    ),\n                                  ]\n                                ),\n                              ],\n                              1\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"图标颜色\", width: \"70px\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            _c(\"el-color-picker\", {\n                              staticClass: \"color-picker\",\n                              attrs: { \"color-format\": \"rgb\" },\n                              model: {\n                                value: scope.row.iconColor,\n                                callback: function ($$v) {\n                                  _vm.$set(scope.row, \"iconColor\", $$v)\n                                },\n                                expression: \"scope.row.iconColor\",\n                              },\n                            }),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\n                    \"el-table-column\",\n                    {\n                      attrs: { prop: \"dataLength\", width: \"160px\" },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"default\",\n                          fn: function (scope) {\n                            return [\n                              _c(\n                                \"el-select\",\n                                {\n                                  attrs: {\n                                    placeholder: \"请选择链接类型\",\n                                    clearable: \"\",\n                                    filterable: \"\",\n                                  },\n                                  model: {\n                                    value: scope.row.linkType,\n                                    callback: function ($$v) {\n                                      _vm.$set(scope.row, \"linkType\", $$v)\n                                    },\n                                    expression: \"scope.row.linkType\",\n                                  },\n                                },\n                                _vm._l(\n                                  _vm.linkTypeList,\n                                  function (item, index) {\n                                    return _c(\"el-option\", {\n                                      key: index,\n                                      attrs: {\n                                        label: item.label,\n                                        value: item.value,\n                                      },\n                                    })\n                                  }\n                                ),\n                                1\n                              ),\n                            ]\n                          },\n                        },\n                      ]),\n                    },\n                    [\n                      _c(\"template\", { slot: \"header\" }, [\n                        _c(\n                          \"p\",\n                          [\n                            _vm._v(\"\\n              链接类型\\n              \"),\n                            _c(\n                              \"el-tooltip\",\n                              {\n                                attrs: {\n                                  content: \"地址以http://或https://为开头\",\n                                  placement: \"top\",\n                                },\n                              },\n                              [\n                                _c(\"a\", {\n                                  staticClass:\n                                    \"el-icon-question tooltip-question\",\n                                }),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                    ],\n                    2\n                  ),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"dataLength\", width: \"200px\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            scope.row.linkType == 1\n                              ? _c(\"JnpfTreeSelect\", {\n                                  attrs: {\n                                    options:\n                                      _vm.showType == \"pc\"\n                                        ? _vm.menuList\n                                        : _vm.appMenuList,\n                                    placeholder: \"请选择菜单\",\n                                    lastLevel: \"\",\n                                    clearable: \"\",\n                                  },\n                                  on: {\n                                    change: function ($event) {\n                                      return _vm.getSelectVal(\n                                        arguments,\n                                        scope.$index\n                                      )\n                                    },\n                                  },\n                                  model: {\n                                    value: scope.row.moduleId,\n                                    callback: function ($$v) {\n                                      _vm.$set(scope.row, \"moduleId\", $$v)\n                                    },\n                                    expression: \"scope.row.moduleId\",\n                                  },\n                                })\n                              : _vm._e(),\n                            scope.row.linkType == 2\n                              ? _c(\n                                  \"el-input\",\n                                  {\n                                    attrs: { placeholder: \"请输入链接地址\" },\n                                    model: {\n                                      value: scope.row.urlAddress,\n                                      callback: function ($$v) {\n                                        _vm.$set(scope.row, \"urlAddress\", $$v)\n                                      },\n                                      expression: \"scope.row.urlAddress\",\n                                    },\n                                  },\n                                  [\n                                    _vm.showType == \"pc\"\n                                      ? _c(\n                                          \"el-select\",\n                                          {\n                                            staticStyle: { width: \"80px\" },\n                                            attrs: { slot: \"append\" },\n                                            slot: \"append\",\n                                            model: {\n                                              value: scope.row.linkTarget,\n                                              callback: function ($$v) {\n                                                _vm.$set(\n                                                  scope.row,\n                                                  \"linkTarget\",\n                                                  $$v\n                                                )\n                                              },\n                                              expression:\n                                                \"scope.row.linkTarget\",\n                                            },\n                                          },\n                                          [\n                                            _c(\"el-option\", {\n                                              attrs: {\n                                                label: \"_self\",\n                                                value: \"_self\",\n                                              },\n                                            }),\n                                            _c(\"el-option\", {\n                                              attrs: {\n                                                label: \"_blank\",\n                                                value: \"_blank\",\n                                              },\n                                            }),\n                                          ],\n                                          1\n                                        )\n                                      : _vm._e(),\n                                  ],\n                                  1\n                                )\n                              : _vm._e(),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { label: \"操作\", width: \"50\", fixed: \"right\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"default\",\n                        fn: function (scope) {\n                          return [\n                            _c(\n                              \"el-button\",\n                              {\n                                staticClass: \"JNPF-table-delBtn\",\n                                attrs: { size: \"mini\", type: \"text\" },\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.handleDel(scope.$index)\n                                  },\n                                },\n                              },\n                              [_vm._v(\"删除\\n            \")]\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"table-actions\",\n                  on: {\n                    click: function ($event) {\n                      return _vm.addHandle()\n                    },\n                  },\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    { attrs: { type: \"text\", icon: \"el-icon-plus\" } },\n                    [_vm._v(\"添加\")]\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.visible = false\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n              ),\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.confirm } },\n                [_vm._v(_vm._s(_vm.$t(\"common.confirmButton\")))]\n              ),\n            ],\n            1\n          ),\n        ]\n      ),\n      _c(\"iconBox\", {\n        attrs: { visible: _vm.iconsVisible, current: _vm.currentIcon },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.iconsVisible = $event\n          },\n          choiceIcon: _vm.setIcon,\n        },\n      }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}