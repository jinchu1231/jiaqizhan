{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/userRelation/Selector.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/userRelation/Selector.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getUserRelationList, createUserRelation } from '@/api/permission/userRelation'\nimport userTransfer from '@/components/JNPF-userTransfer'\n\nexport default {\n  components: { userTransfer },\n  data() {\n    return {\n      visible: false,\n      btnLoading: false,\n      pageTitle: '',\n      dataForm: {\n        objectId: '',\n        objectType: '',\n        userIds: []\n      },\n    }\n  },\n  watch: {\n    visible(val) {\n      if (val) return\n      this.$emit('closeDialog')\n    }\n  },\n  methods: {\n    init(id, fullName, type) {\n      this.visible = true\n      this.dataForm.objectId = id\n      this.dataForm.objectType = type\n      this.dataForm.userIds = []\n      this.$nextTick(() => {\n        if (type === 'Position') {\n          this.pageTitle = this.$t(`position.postMember`) + ' - ' + fullName\n        } else if (type === 'Role') {\n          this.pageTitle = this.$t(`role.roleMember`) + ' - ' + fullName\n        } else if (type === 'Group') {\n          this.pageTitle = '组内成员 - ' + fullName\n        }\n        this.$refs.userTransfer && (this.$refs.userTransfer.allLoading = true)\n        getUserRelationList(this.dataForm.objectId).then(res => {\n          this.dataForm.userIds = res.data.ids\n          this.$refs.userTransfer && this.$refs.userTransfer.init()\n        })\n      })\n    },\n    dataFormSubmit() {\n      this.btnLoading = true\n      createUserRelation(this.dataForm).then(res => {\n        this.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: () => {\n            this.visible = false\n            this.btnLoading = false\n          }\n        })\n      }).catch(() => {\n        this.btnLoading = false\n      })\n    }\n  }\n}\n",null]}