{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/integrationProcess/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/integrationProcess/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport ProcessMain from \"./main\"\nimport { NodeUtils, getMockData } from \"./FlowCard/util.js\";\nimport draggable from 'vuedraggable'\nimport { getInfo, update, create } from '@/api/onlineDev/integrate'\n\nexport default {\n  name: 'Process',\n  props: ['flowType', 'conf', 'formInfo'],\n  data() {\n    return {\n      activeConf: null,\n      key: + new Date(),\n      loading: false,\n      verifyMode: false,\n      flowList: [],\n      visible: false,\n      handleType: '',\n      defaultData: {},\n      formFieldList: {},\n      templateJson: null,\n      formData: null\n    };\n  },\n  components: {\n    ProcessMain,\n    draggable\n  },\n  created() {\n    this.init()\n  },\n  methods: {\n    init() {\n      getInfo(this.formInfo.id).then(res => {\n        this.formData = res.data || {}\n        this.templateJson = res.data.templateJson ? JSON.parse(res.data.templateJson) : null;\n        this.defaultData = getMockData(this.formData.type)\n        this.initData()\n      })\n    },\n    initData() {\n      this.loading = true\n      if (this.templateJson !== null && typeof this.templateJson === 'object' && JSON.stringify(this.templateJson) !== '{}') {\n        this.templateJson = this.templateJson\n      } else {\n        this.templateJson = JSON.parse(JSON.stringify(this.defaultData))\n      }\n      this.$nextTick(() => {\n        this.loading = false\n      })\n    },\n    // 给父级组件提供的获取流程数据得方法\n    getData() {\n      return new Promise((resolve, reject) => {\n        this.verifyMode = true;\n        this.formData.templateJson = this.templateJson\n        if (NodeUtils.checkAllNode(this.formData.templateJson)) {\n          resolve({ data: this.formData });\n        } else {\n          reject({ msg: '' });\n        }\n      });\n    },\n  }\n};\n",null]}