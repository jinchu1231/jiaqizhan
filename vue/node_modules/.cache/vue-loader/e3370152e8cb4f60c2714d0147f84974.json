{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/onlineDev/integrate/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/onlineDev/integrate/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getInfo, update, create } from '@/api/onlineDev/integrate'\nexport default {\n  components: {},\n  data() {\n    return {\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      designBtnLoading: false,\n      dataForm: {\n        id: '',\n        fullName: '',\n        enCode: '',\n        enabledMark: 1,\n        type: 0,\n        bodyText: '',\n        templateJson: \"\"\n      },\n      title: '',\n      categoryList: [],\n      dataRule: {\n        fullName: [\n          { required: true, message: '名称不能为空', trigger: 'blur' },\n        ],\n        enCode: [\n          { required: true, message: '编码不能为空', trigger: 'blur' },\n          { validator: this.formValidate('enCode'), trigger: 'blur' },\n        ],\n        type: [\n          { required: true, message: '类型不能为空', trigger: 'change' },\n        ],\n      }\n    }\n  },\n  methods: {\n    init(id, type) {\n      this.visible = true\n      this.dataForm.id = id || ''\n      this.btnLoading = false\n      this.designBtnLoading = false\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        this.dataForm.type = type || 1\n        // 获取表单数据\n        if (this.dataForm.id) {\n          this.formLoading = true\n          getInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.$nextTick(() => { this.formLoading = false })\n          }).catch(() => { })\n        } else {\n          this.dataForm.fullName = ''\n          this.dataForm.enCode = ''\n          this.dataForm.enabledMark = 1\n          this.dataForm.templateJson = \"\"\n          this.dataForm.description = \"\"\n        }\n      })\n    },\n    dataFormSubmit(type) {\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) return\n        if (type) {\n          this.designBtnLoading = true\n        } else {\n          this.btnLoading = true\n        }\n        const formMethod = this.dataForm.id ? update : create\n        formMethod(this.dataForm).then((res) => {\n          this.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: () => {\n              this.btnLoading = false\n              this.designBtnLoading = false\n              this.visible = false\n              if (type == 1) return this.$emit('integrateDesign', res.data, this.dataForm.fullName)\n              this.$emit('close', true)\n            }\n          })\n        }).catch(() => {\n          this.btnLoading = false\n          this.designBtnLoading = false\n        })\n      })\n    }\n  }\n}\n",null]}