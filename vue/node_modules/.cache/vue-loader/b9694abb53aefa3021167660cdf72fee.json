{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/layout/components/userList/UserList.vue?vue&type=template&id=8769389c&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/layout/components/userList/UserList.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-drawer\",\n        {\n          ref: \"drawer\",\n          staticClass: \"contacts-drawer JNPF-common-drawer\",\n          attrs: {\n            title: \"内部聊天\",\n            visible: _vm.drawer,\n            direction: \"rtl\",\n            size: \"280px\",\n            modal: true,\n            wrapperClosable: false,\n            \"before-close\": _vm.handleClose,\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.drawer = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-tabs\",\n            {\n              model: {\n                value: _vm.activeTab,\n                callback: function ($$v) {\n                  _vm.activeTab = $$v\n                },\n                expression: \"activeTab\",\n              },\n            },\n            [\n              _c(\"el-tab-pane\", { attrs: { label: \"消息\", name: \"reply\" } }, [\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"loading\",\n                        rawName: \"v-loading\",\n                        value:\n                          _vm.replyLoading && _vm.listQuery.currentPage == 1,\n                        expression: \"replyLoading && listQuery.currentPage==1\",\n                      },\n                    ],\n                    staticClass: \"userList replyList\",\n                  },\n                  [\n                    _vm.replyList.length\n                      ? _c(\n                          \"div\",\n                          _vm._l(_vm.replyList, function (item, i) {\n                            return _c(\n                              \"div\",\n                              {\n                                key: i,\n                                staticClass: \"userList-item\",\n                                on: {\n                                  contextmenu: function ($event) {\n                                    $event.preventDefault()\n                                    return _vm.openMenu(item, $event)\n                                  },\n                                  click: function ($event) {\n                                    return _vm.readInfo(item, true)\n                                  },\n                                },\n                              },\n                              [\n                                _c(\"el-avatar\", {\n                                  attrs: {\n                                    size: 36,\n                                    src: _vm.define.comUrl + item.headIcon,\n                                  },\n                                }),\n                                _c(\"div\", { staticClass: \"userList-txt\" }, [\n                                  _c(\n                                    \"p\",\n                                    { staticClass: \"title\" },\n                                    [\n                                      _c(\"span\", [\n                                        _vm._v(\n                                          _vm._s(item.realName) +\n                                            \"/\" +\n                                            _vm._s(item.account)\n                                        ),\n                                      ]),\n                                      _c(\"el-badge\", {\n                                        attrs: {\n                                          value: item.unreadMessage,\n                                          hidden: !item.unreadMessage,\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  ),\n                                  _c(\"p\", { staticClass: \"name\" }, [\n                                    _c(\"span\", { staticClass: \"content\" }, [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.getMsgText(\n                                            item.latestMessage,\n                                            item.messageType\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                    _c(\"span\", { staticClass: \"time\" }, [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"toDateText\")(item.latestDate)\n                                        )\n                                      ),\n                                    ]),\n                                  ]),\n                                ]),\n                              ],\n                              1\n                            )\n                          }),\n                          0\n                        )\n                      : _c(\"p\", { staticClass: \"noData-txt\" }, [\n                          _vm._v(_vm._s(_vm.$t(\"common.noData\"))),\n                        ]),\n                    _c(\n                      \"ul\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.visibleMenu,\n                            expression: \"visibleMenu\",\n                          },\n                        ],\n                        staticClass: \"contextmenu\",\n                        style: { left: _vm.left + \"px\", top: _vm.top + \"px\" },\n                      },\n                      [\n                        _c(\n                          \"li\",\n                          {\n                            on: {\n                              click: function ($event) {\n                                return _vm.relocation()\n                              },\n                            },\n                          },\n                          [_vm._v(\"移除\")]\n                        ),\n                        _c(\n                          \"li\",\n                          {\n                            on: {\n                              click: function ($event) {\n                                return _vm.deleteChatRecord()\n                              },\n                            },\n                          },\n                          [_vm._v(\"删除聊天记录\")]\n                        ),\n                      ]\n                    ),\n                  ]\n                ),\n              ]),\n              _c(\n                \"el-tab-pane\",\n                { attrs: { label: \"联系人\", name: \"contacts\" } },\n                [\n                  _c(\n                    \"el-input\",\n                    {\n                      staticClass: \"search-input\",\n                      attrs: {\n                        placeholder: \"搜索：请输入关键词\",\n                        clearable: \"\",\n                      },\n                      nativeOn: {\n                        keyup: function ($event) {\n                          if (\n                            !$event.type.indexOf(\"key\") &&\n                            _vm._k(\n                              $event.keyCode,\n                              \"enter\",\n                              13,\n                              $event.key,\n                              \"Enter\"\n                            )\n                          ) {\n                            return null\n                          }\n                          return _vm.search()\n                        },\n                      },\n                      model: {\n                        value: _vm.listQuery.keyword,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.listQuery, \"keyword\", $$v)\n                        },\n                        expression: \"listQuery.keyword\",\n                      },\n                    },\n                    [\n                      _c(\"i\", {\n                        staticClass: \"el-input__icon el-icon-search\",\n                        attrs: { slot: \"suffix\", title: \"搜索\" },\n                        on: { click: _vm.search },\n                        slot: \"suffix\",\n                      }),\n                    ]\n                  ),\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"loading\",\n                          rawName: \"v-loading\",\n                          value: _vm.loading && _vm.listQuery.currentPage == 1,\n                          expression: \"loading && listQuery.currentPage==1\",\n                        },\n                      ],\n                      ref: \"userList\",\n                      staticClass: \"userList\",\n                    },\n                    [\n                      _vm.userList.length\n                        ? _c(\n                            \"div\",\n                            _vm._l(_vm.userList, function (item, i) {\n                              return _c(\n                                \"div\",\n                                {\n                                  key: i,\n                                  staticClass: \"userList-item\",\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.readInfo(item)\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"el-avatar\", {\n                                    attrs: {\n                                      size: 36,\n                                      src: _vm.define.comUrl + item.headIcon,\n                                    },\n                                  }),\n                                  _c(\"div\", { staticClass: \"userList-txt\" }, [\n                                    _c(\"p\", { staticClass: \"title\" }, [\n                                      _vm._v(\n                                        _vm._s(item.realName) +\n                                          \"/\" +\n                                          _vm._s(item.account)\n                                      ),\n                                    ]),\n                                    _c(\"p\", { staticClass: \"name\" }, [\n                                      _c(\"span\", [\n                                        _vm._v(_vm._s(item.department)),\n                                      ]),\n                                    ]),\n                                  ]),\n                                ],\n                                1\n                              )\n                            }),\n                            0\n                          )\n                        : _c(\"p\", { staticClass: \"noData-txt\" }, [\n                            _vm._v(_vm._s(_vm.$t(\"common.noData\"))),\n                          ]),\n                    ]\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\"Im\", { ref: \"JNPFIm\", attrs: { \"append-to-body\": \"\" } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}