{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/menu/components/buttonAuthorize/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/menu/components/buttonAuthorize/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getButtonAuthorizeList,\n  updateButtonState,\n  delButton,\n  createButton\n} from '@/api/system/buttonAuthorize'\nimport ButtonAuthorizeForm from './Form'\n\nexport default {\n  components: {\n    ButtonAuthorizeForm\n  },\n  inheritAttrs: false,\n  data() {\n    return {\n      buttonAuthorizeListDrawer: false,\n      buttonAuthorizeFormVisible: false,\n      dialogTitle: '',\n      listQuery: {\n        keyword: ''\n      },\n      moduleId: '',\n      loading: false,\n      btnLoading: false,\n      listLoading: false,\n      treeList: [],\n      btnList: [\n        { fullName: '新增', enCode: 'btn_add' },\n        { fullName: '编辑', enCode: 'btn_edit' },\n        { fullName: '详情', enCode: 'btn_detail' },\n        { fullName: '删除', enCode: 'btn_remove' },\n        { fullName: '批量删除', enCode: 'btn_batchRemove' },\n        { fullName: '批量打印', enCode: 'btn_batchPrint' },\n        { fullName: '复制', enCode: 'btn_copy' },\n        { fullName: '导入', enCode: 'btn_upload' },\n        { fullName: '导出', enCode: 'btn_download' }\n      ]\n    }\n  },\n  methods: {\n    init(moduleId, fullName) {\n      this.buttonAuthorizeListDrawer = true\n      this.moduleId = moduleId\n      this.dialogTitle = `按钮权限 - ${fullName}`\n      this.$nextTick(() => {\n        this.listQuery.keyword = ''\n        this.getList()\n      })\n    },\n    getList() {\n      this.listLoading = true\n      getButtonAuthorizeList(this.moduleId, this.listQuery).then(res => {\n        this.treeList = res.data.list\n        this.listLoading = false\n        this.btnLoading = false\n      }).catch(() => {\n        this.listLoading = false\n        this.btnLoading = false\n      })\n    },\n    handleReLoad() {\n      this.btnLoading = true\n      this.getList()\n    },\n    handleUpdateState(row) {\n      const txt = row.enabledMark ? '禁用' : '开启'\n      this.$confirm(`您确定要${txt}当前按钮权限吗, 是否继续?`, '提示', {\n        type: 'warning'\n      }).then(() => {\n        updateButtonState(row.id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              row.enabledMark = row.enabledMark ? 0 : 1\n            }\n          })\n        })\n      }).catch(() => { })\n    },\n    addOrUpdateHandle(id) {\n      this.buttonAuthorizeFormVisible = true\n      this.$nextTick(() => {\n        this.$refs.ButtonAuthorizeForm.init(this.moduleId, id)\n      })\n    },\n    addHandle(item) {\n      this.loading = true\n      let query = {\n        parentId: '-1',\n        moduleId: this.moduleId,\n        fullName: item.fullName,\n        enCode: item.enCode,\n        sortCode: 0,\n        icon: '',\n        enabledMark: 1,\n        description: ''\n      }\n      createButton(query).then(res => {\n        this.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: () => {\n            this.getList()\n            this.loading = false\n          }\n        })\n      }).catch(() => { this.loading = false })\n    },\n    handleDel(id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        delButton(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: () => {\n              this.getList()\n            }\n          })\n        })\n      }).catch(() => { })\n    }\n  }\n}\n",null]}