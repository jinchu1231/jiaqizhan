{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Process/index.vue?vue&type=template&id=71e54f9c&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Process/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      directives: [\n        {\n          name: \"loading\",\n          rawName: \"v-loading\",\n          value: _vm.loading,\n          expression: \"loading\",\n        },\n      ],\n      staticClass: \"process-container\",\n    },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"left-container\" },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"left-search\" },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  placeholder: \"输入关键字搜索\",\n                  \"suffix-icon\": \"el-icon-search\",\n                  clearable: \"\",\n                },\n                model: {\n                  value: _vm.keyword,\n                  callback: function ($$v) {\n                    _vm.keyword = $$v\n                  },\n                  expression: \"keyword\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"draggable\",\n            {\n              staticClass: \"left-list\",\n              attrs: {\n                list: _vm.flowList,\n                animation: 340,\n                group: \"selectItem\",\n                handle: \".option-drag\",\n              },\n            },\n            [\n              _vm.getFlowList.length\n                ? _vm._l(_vm.getFlowList, function (item, i) {\n                    return _c(\n                      \"div\",\n                      {\n                        key: item.flowId,\n                        staticClass: \"left-item\",\n                        class: {\n                          active: _vm.activeConf.flowId === item.flowId,\n                        },\n                        on: {\n                          click: function ($event) {\n                            return _vm.changeFlow(item)\n                          },\n                        },\n                      },\n                      [\n                        !_vm.keyword\n                          ? _c(\"div\", { staticClass: \"option-drag\" }, [\n                              _c(\"i\", { staticClass: \"icon-ym icon-ym-darg\" }),\n                            ])\n                          : _vm._e(),\n                        _c(\"p\", { staticClass: \"name\" }, [\n                          _vm._v(_vm._s(item.fullName)),\n                        ]),\n                        _c(\n                          \"el-dropdown\",\n                          {\n                            on: {\n                              click: function ($event) {\n                                $event.stopPropagation()\n                              },\n                            },\n                          },\n                          [\n                            _c(\"i\", { staticClass: \"icon el-icon-more\" }),\n                            _c(\n                              \"el-dropdown-menu\",\n                              { attrs: { slot: \"dropdown\" }, slot: \"dropdown\" },\n                              [\n                                _c(\n                                  \"el-dropdown-item\",\n                                  {\n                                    nativeOn: {\n                                      click: function ($event) {\n                                        return _vm.copyFlow(item)\n                                      },\n                                    },\n                                  },\n                                  [_vm._v(\"复制\")]\n                                ),\n                                _c(\n                                  \"el-dropdown-item\",\n                                  {\n                                    nativeOn: {\n                                      click: function ($event) {\n                                        return _vm.editFlow(item)\n                                      },\n                                    },\n                                  },\n                                  [_vm._v(\"编辑\")]\n                                ),\n                                _c(\n                                  \"el-dropdown-item\",\n                                  {\n                                    nativeOn: {\n                                      click: function ($event) {\n                                        return _vm.delFlow(i, item.isDelete)\n                                      },\n                                    },\n                                  },\n                                  [_vm._v(\"删除\")]\n                                ),\n                              ],\n                              1\n                            ),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    )\n                  })\n                : _c(\"el-empty\", {\n                    staticClass: \"template-description\",\n                    attrs: { \"image-size\": 120, description: \"暂无数据\" },\n                  }),\n            ],\n            2\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"add-btn\", on: { click: _vm.addFlow } },\n            [\n              _c(\n                \"el-button\",\n                { attrs: { type: \"text\", icon: \"el-icon-plus\" } },\n                [_vm._v(\"添加流程\")]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"center-container\" },\n        [\n          _vm.activeConf && _vm.activeConf.flowTemplateJson\n            ? _c(\"process-main\", {\n                key: _vm.key,\n                attrs: {\n                  conf: _vm.activeConf.flowTemplateJson,\n                  flowType: _vm.flowType,\n                  formInfo: _vm.formInfo,\n                  verifyMode: _vm.verifyMode,\n                },\n              })\n            : _vm._e(),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"JNPF-dialog JNPF-dialog_center\",\n          attrs: {\n            title: _vm.handleType === \"add\" ? \"新建\" : \"编辑\",\n            \"close-on-click-modal\": false,\n            \"append-to-body\": \"\",\n            visible: _vm.visible,\n            \"lock-scroll\": \"\",\n            width: \"600px\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.visible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"dataForm\",\n              attrs: {\n                model: _vm.dataForm,\n                rules: _vm.dataRule,\n                \"label-width\": \"100px\",\n              },\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"流程名称\", prop: \"fullName\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"流程名称\", maxlength: \"50\" },\n                    model: {\n                      value: _vm.dataForm.fullName,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.dataForm, \"fullName\", $$v)\n                      },\n                      expression: \"dataForm.fullName\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.visible = false\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.dataFormSubmit()\n                    },\n                  },\n                },\n                [_vm._v(\"\\n        \" + _vm._s(_vm.$t(\"common.confirmButton\")))]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}