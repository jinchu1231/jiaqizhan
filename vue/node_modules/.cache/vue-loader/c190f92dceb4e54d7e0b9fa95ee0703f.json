{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/extend/tableDemo/printTable/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/tableDemo/printTable/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { TableExampleList, TableExampleDelete } from '@/api/extend/tableExample'\nexport default {\n  name: 'extend-tableDemo-printTable',\n  data() {\n    return {\n      keyword: '',\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc'\n      },\n      formVisible: false,\n      industryTypeList: []\n    }\n  },\n  created() {\n    this.getDictionaryData()\n  },\n  filters: {\n    getTypeText(id, industryTypeList) {\n      let item = industryTypeList.filter(o => o.id == id)[0]\n      return item && item.fullName ? item.fullName : ''\n    }\n  },\n  methods: {\n    getDictionaryData() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'IndustryType' }).then((res) => {\n        this.industryTypeList = res\n        this.initData()\n      })\n    },\n    refresh() {\n      this.keyword = ''\n      this.search()\n    },\n    search() {\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc'\n      }\n      this.initData()\n    },\n    initData() {\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        keyword: this.keyword\n      }\n      TableExampleList(query).then(res => {\n        this.list = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      })\n    },\n    print(id) {\n      const tabStyle = `<style>\n                table{width:100%;display:table-cell!important;box-sizing:border-box;}\n                .el-table__header,.el-table__body,.el-table__footer{width:100%!important;border-collapse: collapse;text-align:center;}\n                table, table tr td { border:1px solid #333;color:#606266;word-wrap:break-word}\n                table tr th,table tr td{padding:4mm 0mm;word-wrap:break-word }\n                table thead{border-bottom:0!important;display:none;}\n                .el-table__body, tr td .cell{width:100%!important}\n                .el-table th.gutter{display: none;}\n                .el-table colgroup.gutter{display: none;}                \n                </style><body>`;\n      const html = document.querySelector('#' + id).innerHTML\n      // 新建一个 DOM\n      const div = document.createElement('div')\n      const printDOMID = 'printDOMElement'\n      div.id = printDOMID\n      div.innerHTML = html;\n      // 提取第一个表格的内容 即表头\n      const ths = div.querySelectorAll('.el-table__header-wrapper th')\n      const ThsTextArry = []\n      for (let i = 0, len = ths.length; i < len; i++) {\n        if (ths[i].innerText !== '') ThsTextArry.push(ths[i].innerText)\n      }\n      // 删除多余的表头\n      div.querySelector('.hidden-columns').remove()\n      //  删掉第一个表格的内容\n      div.querySelector('.el-table__header-wrapper').remove()\n      //取出表头放到tr里面\n      let newHTML = '<tr>'\n      for (let i = 0, len = ThsTextArry.length; i < len; i++) {\n        newHTML += '<td style=\"text-align: center; font-weight: bold;padding:10px;\">' + ThsTextArry[i] + '</td>'\n      }\n      newHTML += '</tr>'\n      let printStr = \"<html><head><meta http-equiv='Content-Type' content='text/html; charset=utf-8'></head>\";\n      let content = \"\";\n      let print = document.getElementById(id).innerHTML;\n      content = content + print;\n      let content1 = content.replace('<tbody>', '<tbody>' + newHTML)\n      let printPart1 = printStr + tabStyle + content1 + \"</body></html>\";\n      let newTab = window.open('_blank');\n      newTab.document.body.innerHTML = printPart1;\n      newTab.focus();\n      newTab.print();\n      newTab.close();\n    }\n\n  }\n}\n",null]}