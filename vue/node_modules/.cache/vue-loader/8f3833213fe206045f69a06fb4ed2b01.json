{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/extend/tableDemo/commonTable/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/tableDemo/commonTable/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { TableExampleList, TableExampleDelete } from '@/api/extend/tableExample'\nimport { getColumnsByModuleId } from '@/api/common'\nimport JNPFForm from '../commonForm'\nexport default {\n  name: 'extend-tableDemo-commonTable',\n  components: {\n    JNPFForm\n  },\n  data() {\n    return {\n      keyword: '',\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc'\n      },\n      formVisible: false,\n      industryTypeList: [],\n      defaultColumnOptions: [\n        {\n          label: '项目名称',\n          prop: 'projectName'\n        },\n        {\n          label: '项目类型',\n          prop: 'projectType'\n        },\n        {\n          label: '项目编码',\n          prop: 'projectCode'\n        },\n        {\n          label: '项目阶段',\n          prop: 'projectPhase'\n        },\n        {\n          label: '客户名称',\n          prop: 'customerName'\n        },\n        {\n          label: '负责人',\n          prop: 'principal'\n        },\n        {\n          label: '立项人',\n          prop: 'jackStands'\n        },\n        {\n          label: '交互时间',\n          prop: 'interactionDate'\n        },\n        {\n          label: '费用金额',\n          prop: 'costAmount'\n        },\n        {\n          label: '已用金额',\n          prop: 'tunesAmount'\n        },\n        {\n          label: '预计收入',\n          prop: 'projectedIncome'\n        },\n        {\n          label: '登记人',\n          prop: 'registrant'\n        },\n        {\n          label: '登记时间',\n          prop: 'registerDate'\n        },\n        {\n          label: '备注',\n          prop: 'description'\n        }\n      ],\n      useColumnPermission: false,\n      columnList: []\n    }\n  },\n  created() {\n    this.getDictionaryData()\n  },\n  filters: {\n    getTypeText(id, industryTypeList) {\n      let item = industryTypeList.filter(o => o.id == id)[0]\n      return item && item.fullName ? item.fullName : ''\n    }\n  },\n  methods: {\n    getColumnsByModuleId() {\n      if (!this.currMenuId) return\n      this.listLoading = true\n      getColumnsByModuleId(this.currMenuId).then(res => {\n        this.settingsColumnList = res.data || []\n        this.getRealColumnList()\n        this.$nextTick(() => {\n          this.getDictionaryData()\n        })\n      })\n    },\n    getDictionaryData() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'IndustryType' }).then((res) => {\n        this.industryTypeList = res\n        this.initData()\n      })\n    },\n    refresh() {\n      this.keyword = ''\n      this.search()\n    },\n    search() {\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc'\n      }\n      this.initData()\n    },\n    initData() {\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        keyword: this.keyword\n      }\n      TableExampleList(query).then(res => {\n        this.list = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      })\n    },\n    handleDel(index, id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        TableExampleDelete(id).then(res => {\n          this.list.splice(index, 1);\n          this.$message({\n            type: 'success',\n            message: res.msg\n          });\n        })\n      }).catch(() => { });\n    },\n    // 新增 / 修改\n    addOrUpdateHandle(id) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.JNPFForm.init(this.industryTypeList, id)\n      })\n    }\n  }\n}\n",null]}