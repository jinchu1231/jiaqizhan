{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/workFlowForm/crmOrder/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/workFlowForm/crmOrder/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.number.constructor\");\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _mixin = _interopRequireDefault(require(\"../mixin\"));\nvar _order = require(\"@/api/extend/order\");\nvar _GoodsBox = _interopRequireDefault(require(\"@/views/extend/order/GoodsBox\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  mixins: [_mixin.default],\n  components: {\n    GoodsBox: _GoodsBox.default\n  },\n  data: function data() {\n    return {\n      activeName: 'goods',\n      billEnCode: 'OrderNumber',\n      dataForm: {\n        id: '',\n        customerName: '',\n        salesmanId: '',\n        orderDate: '',\n        orderCode: '',\n        paymentMode: '',\n        receivableMoney: 0,\n        earnestRate: 0,\n        prepayEarnest: 0,\n        transportMode: '',\n        deliveryDate: '',\n        deliveryAddress: '',\n        description: '',\n        customerId: '',\n        salesmanName: '',\n        goodsList: [],\n        collectionPlanList: [],\n        fileJson: ''\n      },\n      dataRule: {\n        customerName: [{\n          required: true,\n          message: '客户名称不能为空',\n          trigger: 'click'\n        }],\n        salesmanId: [{\n          required: true,\n          message: '业务人员不能为空',\n          trigger: 'click'\n        }],\n        orderDate: [{\n          required: true,\n          message: '订单日期不能为空',\n          trigger: 'change'\n        }],\n        paymentMode: [{\n          required: true,\n          message: '付款方式不能为空',\n          trigger: 'change'\n        }]\n      },\n      options: ['现金', '转帐', '汇票'],\n      transportOptions: ['快递', '物流', '配送', '自提'],\n      goodsBoxVisible: false\n    };\n  },\n  watch: {\n    'dataForm.goodsList': {\n      handler: function handler(newVal, oldVal) {\n        var money = 0;\n        for (var i = 0; i < newVal.length; i++) {\n          var e = newVal[i];\n          money += parseFloat(e.amount);\n        }\n        this.dataForm.receivableMoney = money;\n      },\n      deep: true\n    }\n  },\n  methods: {\n    onChange: function onChange(id, selectedData) {\n      if (!id) return this.dataForm.salesmanName = '';\n      this.dataForm.salesmanName = selectedData.fullName;\n    },\n    querySearchAsync: function querySearchAsync(queryString, cb) {\n      (0, _order.CustomerList)(queryString).then(function (res) {\n        cb(res.data.list);\n      });\n    },\n    handleSelect: function handleSelect(item) {\n      this.dataForm.customerName = item.text;\n      this.dataForm.customerId = item.id;\n    },\n    handleDel: function handleDel(index, row) {\n      this.dataForm.goodsList.splice(index, 1);\n    },\n    handleDelPlan: function handleDelPlan(index, row) {\n      this.dataForm.collectionPlanList.splice(index, 1);\n    },\n    choice: function choice() {\n      var _this = this;\n      this.goodsBoxVisible = true;\n      this.$nextTick(function () {\n        _this.$refs.goodsBox.init();\n      });\n    },\n    getSummaries: function getSummaries(param) {\n      var columns = param.columns,\n        data = param.data;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '合计';\n          return;\n        }\n        if (index === 1) {\n          sums[index] = '';\n          return;\n        }\n        if (index === 11) {\n          sums[index] = '';\n          return;\n        }\n        var values = data.map(function (item) {\n          return Number(item[column.property]);\n        });\n        if (!values.every(function (value) {\n          return isNaN(value);\n        })) {\n          sums[index] = values.reduce(function (prev, curr) {\n            var value = Number(curr);\n            if (!isNaN(value)) {\n              return prev + curr;\n            } else {\n              return prev;\n            }\n          }, 0).toFixed(2);\n        } else {\n          sums[index] = '';\n        }\n      });\n      return sums;\n    },\n    addPlan: function addPlan() {\n      var item = {\n        receivableDate: \"\",\n        receivableRate: 0,\n        receivableMoney: 0,\n        receivableMode: \"\",\n        abstract: \"\"\n      };\n      this.dataForm.collectionPlanList.push(item);\n    },\n    initList: function initList(list) {\n      for (var i = 0; i < list.length; i++) {\n        var e = list[i];\n        var item = {\n          goodsId: e.id,\n          goodsCode: e.code,\n          goodsName: e.text,\n          specifications: e.specifications,\n          unit: e.unit,\n          qty: 1,\n          price: e.price,\n          amount: e.price,\n          discount: 100,\n          cess: 0,\n          actualPrice: e.price,\n          actualAmount: e.price,\n          description: ''\n        };\n        this.dataForm.goodsList.push(item);\n      }\n    },\n    count: function count(row) {\n      //金额 = 数量*单价\n      row.amount = this.jnpf.toDecimal(parseFloat(row.price) * parseFloat(row.qty));\n      //折扣价 = (单价*折扣)\n      var discountPrice = row.price * (row.discount ? row.discount / 100 : 1);\n      //实际单价 = 折扣价 * (1 + (税率 / 100))\n      row.actualPrice = this.jnpf.toDecimal(discountPrice * (1 + (row.cess ? row.cess / 100 : 0)));\n      //实际金额\n      row.actualAmount = this.jnpf.toDecimal(parseFloat(row.actualPrice) * parseFloat(row.qty));\n    }\n  }\n};",null]}