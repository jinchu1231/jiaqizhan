{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/integrationProcess/PropPanel/AddDataNode.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/integrationProcess/PropPanel/AddDataNode.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _FormListModal = _interopRequireDefault(require(\"./FormListModal\"));\nvar _define = require(\"../FlowCard/define.js\");\nvar _msgDialog = _interopRequireDefault(require(\"@/components/Process/PropPanel/msgDialog\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar addRuleOptions = [{\n  id: 0,\n  fullName: '不新增数据'\n}, {\n  id: 1,\n  fullName: '新增一条数据'\n}];\nvar emptyChildItem = {\n  field: '',\n  symbol: '',\n  fieldValueType: 1,\n  fieldValue: undefined,\n  jnpfKey: '',\n  fieldValueJnpfKey: '',\n  cellKey: +new Date()\n};\nvar emptyItem = {\n  logic: 'and',\n  groups: [emptyChildItem]\n};\nvar _default2 = exports.default = {\n  name: 'addDataNode',\n  components: {\n    FlowFormModal: _FormListModal.default,\n    MsgDialog: _msgDialog.default\n  },\n  props: {\n    formConf: {\n      type: Object,\n      default: function _default() {}\n    },\n    integrateType: {\n      type: Number,\n      default: 1\n    },\n    formFieldsOptions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    getFormFieldList: {\n      type: Function,\n      default: null\n    },\n    usedFormItems: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    flowOptions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      addRuleOptions: addRuleOptions,\n      emptyItem: emptyItem,\n      sourceTypeOptions: _define.sourceTypeOptions,\n      logicOptions: _define.logicOptions,\n      symbolOptions: _define.symbolOptions,\n      emptyChildItem: emptyChildItem,\n      transferList: JSON.parse(JSON.stringify(this.formConf.transferList)),\n      ruleList: JSON.parse(JSON.stringify(this.formConf.ruleList)),\n      addRule: JSON.parse(JSON.stringify(this.formConf.addRule)),\n      ruleMatchLogic: JSON.parse(JSON.stringify(this.formConf.ruleMatchLogic)),\n      flowId: JSON.parse(JSON.stringify(this.formConf.flowId))\n    };\n  },\n  computed: {\n    getRuleOptions: function getRuleOptions() {\n      var formFieldList = this.formConf.formFieldList.filter(function (o) {\n        return o.id.indexOf('-') < 0;\n      });\n      return formFieldList.filter(function (o) {\n        return !['relationFormAttr', 'popupAttr', 'uploadFile', 'uploadImg', 'colorPicker', 'editor'].includes(o.__config__.jnpfKey);\n      });\n    }\n  },\n  methods: {\n    onChangeSourceValue: function onChangeSourceValue(item) {\n      if (item.sourceValue) item.sourceValue = undefined;\n    },\n    getItem: function getItem() {\n      this.formConf.flowId = this.flowId;\n      var item = {\n        transferList: this.transferList,\n        ruleList: this.ruleList\n      };\n      if (this.integrateType == 2) {\n        item.addRule = this.addRule;\n        this.formConf.ruleMatchLogic = this.ruleMatchLogic;\n      }\n      return item;\n    },\n    onChangeUpdate: function onChangeUpdate() {\n      this.$forceUpdate();\n    },\n    onFormIdChange: function onFormIdChange(id, item) {\n      this.ruleList = [];\n      this.formConf.ruleList = [];\n      if (this.integrateType != 1) {\n        this.ruleMatchLogic = 'and';\n        var _emptyItem = JSON.parse(JSON.stringify(this.emptyItem));\n        _emptyItem.groups[0].symbol = '==';\n        this.formConf.ruleList.push(_emptyItem);\n      }\n      if (!id) return this.handleNull();\n      this.formConf.formName = item.fullName;\n      this.formConf.formId = id;\n      this.formConf.enableFlow = item.enableFlow;\n      this.formConf.flowId = '';\n      this.transferList = [];\n      this.getFormFieldList(id, 'addData');\n    },\n    handleNull: function handleNull() {\n      this.formConf.formName = '';\n      this.formConf.formId = '';\n      this.formConf.enableFlow = 0;\n      this.formConf.formFieldList = [];\n      this.transferList = [];\n    },\n    addTransferItem: function addTransferItem() {\n      this.transferList.push({\n        targetField: '',\n        targetFieldLabel: '',\n        sourceType: 1,\n        sourceValue: '',\n        required: false\n      });\n    },\n    delTransferItem: function delTransferItem(index) {\n      this.transferList.splice(index, 1);\n    },\n    addItem: function addItem(index) {\n      var emptyChildItem = JSON.parse(JSON.stringify(this.emptyChildItem));\n      if (this.integrateType != 1) emptyChildItem.symbol = '==';\n      this.ruleList[index].groups.push(emptyChildItem);\n    },\n    delItem: function delItem(index, childIndex) {\n      if (this.ruleList.length <= 1 && this.ruleList[0].groups.length <= 1) return this.$message.error('必须保留一个条件');\n      this.ruleList[index].groups.splice(childIndex, 1);\n    },\n    addGroup: function addGroup() {\n      var emptyItem = JSON.parse(JSON.stringify(this.emptyItem));\n      if (this.integrateType != 1) emptyItem.groups[0].symbol = '==';\n      this.ruleList.push(emptyItem);\n    },\n    delGroup: function delGroup(index) {\n      if (this.ruleList.length <= 1) return this.$message.error('必须保留一个条件');\n      this.ruleList.splice(index, 1);\n    },\n    onFieldChange: function onFieldChange(item, val, index, childIndex) {\n      item.symbol = '';\n      var data = this.getRuleOptions.filter(function (o) {\n        return o.__vModel__ == val;\n      })[0];\n      if (!val) {\n        item.jnpfKey = '';\n        if (item.fieldValueType == 2) {\n          item.fieldValue = undefined;\n          item.fieldValueJnpfKey = '';\n        }\n        return;\n      }\n      item.jnpfKey = data.__config__.jnpfKey;\n      var newItem = JSON.parse(JSON.stringify(this.emptyChildItem));\n      for (var _i = 0, _Object$keys = Object.keys(newItem); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        newItem[key] = item[key];\n      }\n      item = _objectSpread(_objectSpread({}, newItem), data);\n      if (item.fieldValueType != 1) {\n        item.fieldValue = undefined;\n        item.fieldValueJnpfKey = '';\n      }\n      if (this.integrateType != 1) item.symbol = '==';\n      this.ruleList[index].groups[childIndex] = item;\n      this.onChangeUpdate();\n    },\n    getTargetOptions: function getTargetOptions(index) {\n      var ignoreOptions = [];\n      for (var i = 0; i < this.transferList.length; i++) {\n        var e = this.transferList[i];\n        if (e.targetField && index !== i) ignoreOptions.push(e.targetField);\n      }\n      var list = this.formConf.formFieldList.filter(function (o) {\n        return !ignoreOptions.includes(o.id);\n      });\n      return list;\n    }\n  }\n};",null]}