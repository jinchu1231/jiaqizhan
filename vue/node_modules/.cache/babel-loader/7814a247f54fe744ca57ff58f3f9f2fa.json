{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RTable/AddTableForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RTable/AddTableForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _db = require(\"@/components/Generator/utils/db\");\nvar _InterfaceDialog = _interopRequireDefault(require(\"@/components/Process/PropPanel/InterfaceDialog\"));\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _JNPFIconBox = _interopRequireDefault(require(\"@/components/JNPF-iconBox\"));\nvar _visualDev = require(\"@/api/onlineDev/visualDev\");\nvar _comConfig = require(\"@/components/Generator/generator/comConfig\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar noFieldList = ['relationForm', 'popupSelect'];\nvar butTypeOptions = [{\n  fullName: '默认按钮',\n  id: ''\n}, {\n  fullName: '主要按钮',\n  id: 'primary'\n}, {\n  fullName: '成功按钮',\n  id: 'success'\n}, {\n  fullName: '信息按钮',\n  id: 'info'\n}, {\n  fullName: '警告按钮',\n  id: 'warning'\n}, {\n  fullName: '危险按钮',\n  id: 'danger'\n}, {\n  fullName: '文字按钮',\n  id: 'text'\n}];\nvar _default = exports.default = {\n  components: {\n    InterfaceDialog: _InterfaceDialog.default,\n    iconBox: _JNPFIconBox.default\n  },\n  data: function data() {\n    return {\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      childList: [],\n      dataForm: {\n        value: '',\n        label: '',\n        show: false,\n        showConfirm: false,\n        btnIcon: '',\n        btnType: ''\n      },\n      dataRule: {\n        label: {\n          required: true,\n          message: '按钮名称不能为空',\n          trigger: 'blur'\n        }\n      },\n      popupWidthOptions: ['600px', '800px', '1000px', '40%', '50%', '60%', '70%', '80%'],\n      fieldJsonList: [],\n      butTypeOptions: butTypeOptions,\n      iconsVisible: false,\n      actionConfig: {\n        dataSource: '',\n        interfaceId: '',\n        interfaceName: '',\n        templateJson: [],\n        hasPage: true,\n        pageSize: 20,\n        columnOptions: [],\n        relationOptions: []\n      },\n      treeData: [],\n      fieldOptions: []\n    };\n  },\n  computed: {\n    formFieldsOptions: function formFieldsOptions() {\n      var list = [];\n      var loop = function loop(data, parent) {\n        if (!data) return;\n        if (data.__config__ && data.__config__.jnpfKey !== 'table' && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data);\n        }\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d, parent);\n        });\n        if (data.__vModel__ && !_comConfig.noAllowRelationList.includes(data.__config__.jnpfKey)) list.push(data);\n      };\n      loop((0, _db.getDrawingList)());\n      return list;\n    }\n  },\n  methods: {\n    init: function init(item, actionConfig, children) {\n      this.visible = true;\n      this.getFeatureSelector();\n      this.getFieldOptions();\n      this.dataForm = _objectSpread(_objectSpread({}, this.dataForm), item);\n      this.actionConfig = {};\n      this.$refs.dataForm && this.$refs.dataForm.clearValidate();\n      if (['copy', 'remove', 'add', 'batchRemove'].includes(item.value)) return;\n      this.actionConfig = _objectSpread(_objectSpread({}, this.actionConfig), actionConfig);\n      this.childList = children.filter(function (o) {\n        return o.__vModel__ && ![].concat((0, _toConsumableArray2.default)(_comConfig.systemComponentsList), noFieldList, (0, _toConsumableArray2.default)(_comConfig.noAllowRelationList)).includes(o.__config__.jnpfKey);\n      });\n      this.getDataInterfaceInfo();\n      this.getFieldOptions();\n    },\n    getFeatureSelector: function getFeatureSelector() {\n      var _this = this;\n      (0, _visualDev.getFeatureSelector)({\n        type: 1,\n        webType: '2',\n        isRelease: 1\n      }).then(function (res) {\n        _this.treeData = res.data.list;\n      });\n    },\n    getFieldOptions: function getFieldOptions() {\n      var _this2 = this;\n      if (!this.actionConfig.modelId) return;\n      (0, _visualDev.getFormDataFields)(this.actionConfig.modelId, 1).then(function (res) {\n        _this2.fieldOptions = res.data.list || [];\n      });\n    },\n    onModeIdChange: function onModeIdChange(val) {\n      if (!val) return this.fieldOptions = [];\n      this.actionConfig.templateJson = this.actionConfig.templateJson ? this.actionConfig.templateJson.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          relationField: '',\n          value: ''\n        });\n      }) : [];\n      this.getFieldOptions();\n    },\n    onInterfaceChange: function onInterfaceChange(id, row) {\n      if (!id) return this.handleNull();\n      if (this.dataForm.interfaceId === id) return;\n      this.actionConfig.interfaceId = id;\n      this.actionConfig.interfaceName = row.fullName;\n      this.actionConfig.templateJson = row.templateJson ? row.templateJson.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          relationField: '',\n          value: ''\n        });\n      }) : [];\n      this.getDataInterfaceInfo();\n    },\n    handleNull: function handleNull() {\n      this.actionConfig.interfaceId = '';\n      this.actionConfig.interfaceName = '';\n      this.actionConfig.templateJson = [];\n      this.fieldJsonList = [];\n      this.actionConfig.modelId = '';\n      this.actionConfig.columnOptions = [];\n      this.actionConfig.templateJson = this.actionConfig.templateJson ? this.actionConfig.templateJson.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          relationField: '',\n          value: ''\n        });\n      }) : [];\n    },\n    onRelationFieldChange: function onRelationFieldChange(val, row) {\n      if (!val) return row.jnpfKey = '';\n      var list = this.formFieldsOptions.filter(function (o) {\n        return o.__vModel__ === val;\n      });\n      if (!list.length) return row.jnpfKey = '';\n      var item = list[0];\n      row.jnpfKey = item.__config__.jnpfKey;\n    },\n    addColumn: function addColumn() {\n      this.actionConfig.columnOptions.push({\n        value: '',\n        label: ''\n      });\n    },\n    addRelationOption: function addRelationOption() {\n      this.actionConfig.relationOptions.push({\n        value: '',\n        field: '',\n        type: 1\n      });\n    },\n    handleDel: function handleDel(index, key) {\n      this.actionConfig[key].splice(index, 1);\n    },\n    onTypeChange: function onTypeChange(row) {\n      row.value = '';\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this3 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          _this3.$emit('submit', _this3.dataForm, _this3.actionConfig);\n          _this3.visible = false;\n        }\n      });\n    },\n    getDataInterfaceInfo: function getDataInterfaceInfo() {\n      var _this4 = this;\n      (0, _dataInterface.getDataInterfaceInfo)(this.dataForm.interfaceId).then(function (res) {\n        _this4.fieldJsonList = res.data && res.data.fieldJson && (JSON.parse(res.data.fieldJson) || []) || [];\n      });\n    },\n    querySearch: function querySearch(queryString, cb) {\n      var restaurants = this.fieldJsonList || [];\n      var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createStateFilter: function createStateFilter(queryString) {\n      return function (state) {\n        return state.defaultValue.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleSelect: function handleSelect(item, field) {\n      field.value = item.defaultValue;\n    },\n    openIconsDialog: function openIconsDialog() {\n      this.iconsVisible = true;\n    },\n    setIcon: function setIcon(val) {\n      this.dataForm.btnIcon = val;\n    },\n    headValue: function headValue(index, val) {\n      if (!val) return this.actionConfig.columnOptions[index].label = '';\n      var item = this.fieldOptions.filter(function (o) {\n        return o.vmodel == val;\n      })[0];\n      this.actionConfig.columnOptions[index].label = item.label;\n    }\n  }\n};",null]}