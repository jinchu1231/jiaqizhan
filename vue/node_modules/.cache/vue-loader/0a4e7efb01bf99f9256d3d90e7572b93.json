{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/components/ComplexHeader/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/components/ComplexHeader/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Sortable from 'sortablejs'\nexport default {\n  props: ['type'],\n  components: {},\n  data() {\n    return {\n      visible: false,\n      list: [],\n      options: [],\n      alignOptions: [\n        {\n          value: 'left',\n          fullName: '左对齐'\n        }, {\n          value: 'center',\n          fullName: '居中对齐'\n        }, {\n          value: 'right',\n          fullName: '右对齐'\n        }],\n    }\n  },\n  methods: {\n    init(data, option) {\n      this.list = data ? JSON.parse(JSON.stringify(data)) : []\n      this.options = option ? JSON.parse(JSON.stringify(option)) : []\n      this.visible = true\n      this.$nextTick(() => {\n        this.setSort()\n      });\n    },\n    closeDialog() {\n      if (this.type == 1) this.$store.commit(\"generator/SET_HEADER_DATA\", JSON.parse(JSON.stringify(this.list)))\n      this.$emit('closeForm', this.list)\n      this.visible = false\n    },\n    getColumnOptions(index) {\n      let childColumns = []\n      for (let i = 0; i < this.list.length; i++) {\n        const e = this.list[i];\n        for (let j = 0; j < e.childColumns.length; j++) {\n          const element = e.childColumns[j];\n          if (i != index) childColumns.push(element)\n        }\n      }\n      return this.options.filter(o => !childColumns.includes(o.__vModel__))\n    },\n    handleDel(index) {\n      this.list.splice(index, 1);\n    },\n    addHandle() {\n      let id = 'complex' + this.jnpf.idGenerator()\n      let item = { fullName: \"表头列名\" + id, childColumns: [], align: 'center', id: id }\n      this.list.push(item)\n    },\n    setSort() {\n      const el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0]\n      this.sortable = Sortable.create(el, {\n        ghostClass: 'sortable-ghost', // Class name for the drop placeholder,\n        setData: function (dataTransfer) {\n          dataTransfer.setData('Text', '')\n        },\n        onEnd: evt => {\n          const targetRow = this.list.splice(evt.oldIndex, 1)[0]\n          this.list.splice(evt.newIndex, 0, targetRow)\n        },\n        handle: '.drag-handler',\n      })\n    },\n  }\n}\n",null]}