{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/components/Comment.vue?vue&type=template&id=1f796568&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/components/Comment.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"comment-container\" },\n    [\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.listLoading && _vm.listQuery.currentPage == 1,\n              expression: \"listLoading && listQuery.currentPage==1\",\n            },\n          ],\n          ref: \"infiniteBody\",\n          staticClass: \"comment-list\",\n        },\n        [\n          _vm.list.length\n            ? _vm._l(_vm.list, function (item, i) {\n                return _c(\"div\", { key: i, staticClass: \"item\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"head\" },\n                    [\n                      _c(\"el-avatar\", {\n                        staticClass: \"avatar\",\n                        attrs: {\n                          size: 40,\n                          src: _vm.define.comUrl + item.creatorUserHeadIcon,\n                        },\n                      }),\n                      _c(\"p\", { staticClass: \"username\" }, [\n                        _vm._v(_vm._s(item.creatorUser)),\n                      ]),\n                      item.isDel\n                        ? _c(\n                            \"el-link\",\n                            {\n                              staticClass: \"del-btn\",\n                              attrs: { underline: false, type: \"danger\" },\n                              on: {\n                                click: function ($event) {\n                                  return _vm.delComment(item.id, i)\n                                },\n                              },\n                            },\n                            [_vm._v(\"删除\")]\n                          )\n                        : _vm._e(),\n                      _c(\"span\", { staticClass: \"time\" }, [\n                        _vm._v(_vm._s(_vm._f(\"toDate\")(item.creatorTime))),\n                      ]),\n                    ],\n                    1\n                  ),\n                  _c(\"div\", { staticClass: \"content\" }, [\n                    _c(\"p\", { staticClass: \"text\" }, [\n                      _vm._v(_vm._s(item.text)),\n                    ]),\n                    item.imageList.length\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"img-list\" },\n                          _vm._l(item.imageList, function (cItem, ci) {\n                            return _c(\"el-image\", {\n                              key: ci,\n                              staticClass: \"img-item\",\n                              attrs: {\n                                src: _vm.define.comUrl + cItem.url,\n                                \"preview-src-list\": _vm.getImgList(\n                                  item.imageList\n                                ),\n                                \"z-index\": 10000,\n                              },\n                            })\n                          }),\n                          1\n                        )\n                      : _vm._e(),\n                    item.fileList.length\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"file-List\" },\n                          [\n                            _c(\"JnpfUploadFile\", {\n                              attrs: { detailed: \"\", disabled: \"\" },\n                              model: {\n                                value: item.fileList,\n                                callback: function ($$v) {\n                                  _vm.$set(item, \"fileList\", $$v)\n                                },\n                                expression: \"item.fileList\",\n                              },\n                            }),\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                  ]),\n                ])\n              })\n            : _c(\"el-empty\", {\n                attrs: { description: \"暂无数据\", \"image-size\": 120 },\n              }),\n        ],\n        2\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"JNPF-dialog JNPF-dialog_center\",\n          attrs: {\n            title: \"流程评论\",\n            visible: _vm.dialogVisible,\n            \"close-on-click-modal\": false,\n            \"lock-scroll\": \"\",\n            \"append-to-body\": \"\",\n            width: \"600px\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.dialogVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"dataForm\",\n              attrs: {\n                model: _vm.dataForm,\n                rules: _vm.dataRule,\n                \"label-width\": \"0\",\n              },\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { prop: \"text\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      placeholder: \"请输入评论\",\n                      type: \"textarea\",\n                      rows: 4,\n                    },\n                    model: {\n                      value: _vm.dataForm.text,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.dataForm, \"text\", $$v)\n                      },\n                      expression: \"dataForm.text\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\n                    \"el-upload\",\n                    {\n                      ref: \"elUploadImg\",\n                      staticClass: \"upload-btn\",\n                      attrs: {\n                        action: _vm.define.comUploadUrl + \"/annexpic\",\n                        headers: _vm.uploadHeaders,\n                        \"on-success\": _vm.handleImgSuccess,\n                        multiple: \"\",\n                        \"show-file-list\": false,\n                        accept: \"image/*\",\n                        \"before-upload\": _vm.beforeImgUpload,\n                        \"on-exceed\": _vm.handleImgExceed,\n                        limit: 9,\n                      },\n                    },\n                    [\n                      _c(\n                        \"el-button\",\n                        { attrs: { size: \"small\", icon: \"el-icon-picture\" } },\n                        [_vm._v(\"图片\")]\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { size: \"small\", icon: \"el-icon-upload\" },\n                      on: { click: _vm.uploadFile },\n                    },\n                    [_vm._v(\"附件\")]\n                  ),\n                ],\n                1\n              ),\n              _vm.dataForm.image.length\n                ? _c(\"el-form-item\", { attrs: { prop: \"image\" } }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"img-list\" },\n                      _vm._l(_vm.dataForm.image, function (item, i) {\n                        return _c(\n                          \"div\",\n                          { key: i, staticClass: \"img-item\" },\n                          [\n                            _c(\"el-image\", {\n                              attrs: {\n                                src: _vm.define.comUrl + item.url,\n                                \"preview-src-list\": _vm.getImgList(\n                                  _vm.dataForm.image\n                                ),\n                                \"z-index\": 100,\n                              },\n                            }),\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"badge\",\n                                on: {\n                                  click: function ($event) {\n                                    $event.stopPropagation()\n                                    return _vm.handleImgRemove(i)\n                                  },\n                                },\n                              },\n                              [_c(\"i\", { staticClass: \"el-icon-close\" })]\n                            ),\n                          ],\n                          1\n                        )\n                      }),\n                      0\n                    ),\n                  ])\n                : _vm._e(),\n              _c(\n                \"el-form-item\",\n                { attrs: { prop: \"file\" } },\n                [\n                  _c(\n                    \"ul\",\n                    {\n                      staticClass:\n                        \"el-upload-list el-upload-list el-upload-list--text\",\n                    },\n                    _vm._l(_vm.dataForm.file, function (file, index) {\n                      return _c(\n                        \"li\",\n                        {\n                          key: file.fileId,\n                          staticClass: \"el-upload-list__item is-success\",\n                        },\n                        [\n                          _c(\n                            \"a\",\n                            { staticClass: \"el-upload-list__item-name\" },\n                            [\n                              _c(\"i\", { staticClass: \"el-icon-paperclip\" }),\n                              _vm._v(\n                                \"\\n              \" +\n                                  _vm._s(file.name) +\n                                  _vm._s(\n                                    file.fileSize\n                                      ? \"（\" +\n                                          _vm.jnpf.toFileSize(file.fileSize) +\n                                          \"）\"\n                                      : \"\"\n                                  ) +\n                                  \"\\n            \"\n                              ),\n                            ]\n                          ),\n                          _c(\"i\", {\n                            staticClass: \"el-icon-view\",\n                            attrs: { title: \"查看\" },\n                            on: {\n                              click: function ($event) {\n                                return _vm.handleFilePreview(file)\n                              },\n                            },\n                          }),\n                          _c(\"i\", {\n                            staticClass: \"el-icon-download\",\n                            attrs: { title: \"下载\" },\n                            on: {\n                              click: function ($event) {\n                                return _vm.handleFileClick(file)\n                              },\n                            },\n                          }),\n                          _c(\n                            \"label\",\n                            {\n                              staticClass: \"el-upload-list__item-status-label\",\n                            },\n                            [\n                              _c(\"i\", {\n                                staticClass:\n                                  \"el-icon-upload-success el-icon-circle-check\",\n                              }),\n                            ]\n                          ),\n                          _c(\"i\", {\n                            staticClass: \"el-icon-close\",\n                            attrs: { title: \"删除\" },\n                            on: {\n                              click: function ($event) {\n                                return _vm.handleFileRemove(index)\n                              },\n                            },\n                          }),\n                        ]\n                      )\n                    }),\n                    0\n                  ),\n                  _c(\"fileUploader\", {\n                    ref: \"fileUploader\",\n                    attrs: {\n                      limit: 2,\n                      fileSize: 50,\n                      type: \"annex\",\n                      accept: _vm.fileAccept,\n                    },\n                    on: { fileSuccess: _vm.fileSuccess },\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.dialogVisible = false\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")) + \"\\n      \")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.btnLoading },\n                  on: {\n                    click: function ($event) {\n                      return _vm.addComment()\n                    },\n                  },\n                },\n                [_vm._v(\"\\n        \" + _vm._s(_vm.$t(\"common.confirmButton\")))]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\"Preview\", {\n        attrs: { visible: _vm.previewVisible, file: _vm.activeFile },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.previewVisible = $event\n          },\n        },\n      }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}