{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RuleDialog/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RuleDialog/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _comConfig = require(\"@/components/Generator/generator/comConfig\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'ruleDialog',\n  props: {\n    type: {\n      type: Number,\n      default: 1\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      transferList: [],\n      fieldList: [],\n      formFieldsList: []\n    };\n  },\n  methods: {\n    init: function init(data) {\n      this.visible = true;\n      this.transferList = JSON.parse(JSON.stringify(data.transferList)) || [];\n      if (!this.transferList.length) this.transferList.push({\n        targetField: '',\n        sourceValue: ''\n      });\n      this.fieldList = data.fieldList || [];\n      this.formFieldsList = data.formFieldsList.filter(function (o) {\n        return ['input', 'textarea'].includes(o.__config__.jnpfKey);\n      }) || [];\n    },\n    getTargetOptions: function getTargetOptions(index) {\n      var ignoreOptions = [];\n      for (var i = 0; i < this.transferList.length; i++) {\n        var e = this.transferList[i];\n        if (e.sourceValue && index !== i) ignoreOptions.push(e.sourceValue);\n      }\n      var list = this.formFieldsList.filter(function (o) {\n        return !ignoreOptions.includes(o.id);\n      });\n      return list;\n    },\n    addTransferItem: function addTransferItem() {\n      this.transferList.push({\n        targetField: '',\n        sourceValue: ''\n      });\n    },\n    delTransferItem: function delTransferItem(index) {\n      this.transferList.splice(index, 1);\n    },\n    handleGenerate: function handleGenerate() {\n      if (!this.formFieldListExist()) return;\n      this.visible = false;\n      this.$emit('confirm', this.transferList);\n    },\n    close: function close() {\n      this.visible = false;\n    },\n    formFieldListExist: function formFieldListExist() {\n      var list = this.transferList;\n      var isOk = true;\n      for (var i = 0; i < list.length; i++) {\n        var e = list[i];\n        if (!e.targetField) {\n          this.$message.warning(\"\\u7B2C\".concat(i + 1, \"\\u884C\").concat(this.type == 1 ? '关联表单字段' : '远端数据字段', \"\\u4E0D\\u80FD\\u4E3A\\u7A7A\"));\n          isOk = false;\n          break;\n        }\n        if (!e.sourceValue) {\n          this.$message.warning(\"\\u7B2C\".concat(i + 1, \" \\u884C\\u5F53\\u524D\\u8868\\u5355\\u5B57\\u6BB5\\u4E0D\\u80FD\\u4E3A\\u7A7A\"));\n          isOk = false;\n          break;\n        }\n      }\n      return isOk;\n    },\n    querySearch: function querySearch(queryString, cb) {\n      var restaurants = this.fieldList || [];\n      var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createStateFilter: function createStateFilter(queryString) {\n      return function (state) {\n        return state.field.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleSelect: function handleSelect(item, index) {\n      this.transferList[index].targetField = item.defaultValue;\n    }\n  }\n};",null]}