{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/extend/tableDemo/signTable/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/tableDemo/signTable/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { TableExampleList, TableExampleDelete, UpdateSign } from '@/api/extend/tableExample'\nimport JNPFForm from '../commonForm'\nexport default {\n  name: 'extend-tableDemo-signTable',\n  components: {\n    JNPFForm\n  },\n  data() {\n    return {\n      keyword: '',\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc'\n      },\n      formVisible: false,\n      industryTypeList: [],\n      filterList: [{ text: '红色', value: '1' }, { text: '橙色', value: '2' }, { text: '黄色', value: '3' }, { text: '绿色', value: '4' }, { text: '蓝色', value: '5' }, { text: '紫色', value: '6' }, { text: '灰色', value: '7' }],\n      options: [\n        { text: '红色', value: '1', color: '#ff625c' },\n        { text: '橙色', value: '2', color: '#f9a646' },\n        { text: '黄色', value: '3', color: '#f4ce4a' },\n        { text: '绿色', value: '4', color: '#6dcc51' },\n        { text: '蓝色', value: '5', color: '#4bb8f3' },\n        { text: '紫色', value: '6', color: '#d088e1' },\n        { text: '灰色', value: '7', color: '#a5a5a8' },\n        { text: '清空', value: '0', color: '' }]\n    }\n  },\n  created() {\n    this.getDictionaryData()\n  },\n  filters: {\n    getTypeText(id, industryTypeList) {\n      let item = industryTypeList.filter(o => o.id == id)[0]\n      return item && item.fullName ? item.fullName : ''\n    }\n  },\n  methods: {\n    getDictionaryData() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'IndustryType' }).then((res) => {\n        this.industryTypeList = res\n        this.initData()\n      })\n    },\n    refresh() {\n      this.keyword = ''\n      this.search()\n    },\n    search() {\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc'\n      }\n      this.initData()\n    },\n    initData() {\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        keyword: this.keyword\n      }\n      TableExampleList(query).then(res => {\n        let list = res.data.list\n        for (let i = 0; i < list.length; i++) {\n          const e = list[i];\n          let signArray = e.sign ? e.sign.split('').filter(o => o != '0') : []\n          this.$set(e, \"signArray\", signArray)\n        }\n        this.list = list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      })\n    },\n    handleDel(index, id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        TableExampleDelete(id).then(res => {\n          this.list.splice(index, 1);\n          this.$message({\n            type: 'success',\n            message: res.msg\n          });\n        })\n      }).catch(() => { });\n    },\n    // 新增 / 修改\n    addOrUpdateHandle(id) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.JNPFForm.init(this.industryTypeList, id)\n      })\n    },\n    filterSign(value, row) {\n      return row.sign.indexOf(value) > -1;\n    },\n    sign(row, value, i) {\n      let sign = '0000000'\n      if (value != 0) {\n        let signArray = row.sign.split('')\n        signArray[i] = signArray[i] == value ? '0' : value\n        sign = signArray.join('')\n      }\n      UpdateSign(row.id, { sign }).then(res => {\n        row.signArray = sign.split('').filter(o => o != '0')\n        row.sign = sign\n        this.$message({\n          type: 'success',\n          message: res.msg\n        });\n      })\n    },\n    sortBy(row, index) {\n      return row.signArray.length\n    }\n  }\n}\n",null]}