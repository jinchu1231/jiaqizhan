{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/components/FlowBox.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/components/FlowBox.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nrequire(\"core-js/modules/es6.regexp.replace\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.array.find-index\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _PrintDialog = _interopRequireDefault(require(\"@/components/PrintDialog\"));\nvar _SignImgDialog = _interopRequireDefault(require(\"@/components/SignImgDialog\"));\nvar _EventLog = _interopRequireDefault(require(\"./EventLog\"));\nvar _FlowBefore = require(\"@/api/workFlow/FlowBefore\");\nvar _FlowLaunch = require(\"@/api/workFlow/FlowLaunch\");\nvar _workFlowForm = require(\"@/api/workFlow/workFlowForm\");\nvar _RecordList = _interopRequireDefault(require(\"./RecordList\"));\nvar _Comment = _interopRequireDefault(require(\"./Comment\"));\nvar _RecordSummary = _interopRequireDefault(require(\"./RecordSummary\"));\nvar _CandidateForm = _interopRequireDefault(require(\"./CandidateForm\"));\nvar _ErrorForm = _interopRequireDefault(require(\"./ErrorForm\"));\nvar _CandidateUserSelect = _interopRequireDefault(require(\"./CandidateUserSelect\"));\nvar _Preview = _interopRequireDefault(require(\"@/components/Process/Preview\"));\nvar _PrintBrowse = _interopRequireDefault(require(\"@/components/PrintBrowse\"));\nvar _ActionDialog = _interopRequireDefault(require(\"@/views/workFlow/components/ActionDialog\"));\nvar _HasFreeApprover = _interopRequireDefault(require(\"./HasFreeApprover\"));\nvar _SuspendDialog = _interopRequireDefault(require(\"./SuspendDialog\"));\nvar _CommonWordsDialog = _interopRequireDefault(require(\"./CommonWordsDialog\"));\nvar _vuex = require(\"vuex\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'FlowBox',\n  components: {\n    PrintDialog: _PrintDialog.default,\n    SignImgDialog: _SignImgDialog.default,\n    HasFreeApprover: _HasFreeApprover.default,\n    recordList: _RecordList.default,\n    Process: _Preview.default,\n    PrintBrowse: _PrintBrowse.default,\n    Comment: _Comment.default,\n    RecordSummary: _RecordSummary.default,\n    CandidateForm: _CandidateForm.default,\n    CandidateUserSelect: _CandidateUserSelect.default,\n    ErrorForm: _ErrorForm.default,\n    ActionDialog: _ActionDialog.default,\n    SuspendDialog: _SuspendDialog.default,\n    CommonWordsDialog: _CommonWordsDialog.default,\n    EventLog: _EventLog.default\n  },\n  data: function data() {\n    return {\n      printTemplateId: '',\n      printDialogVisible: false,\n      subFlowTab: '',\n      resurgenceVisible: false,\n      actionVisible: false,\n      resurgenceForm: {\n        taskNodeId: '',\n        handleOpinion: '',\n        fileList: []\n      },\n      resurgenceRules: {\n        taskNodeId: [{\n          required: true,\n          message: '请选择节点',\n          trigger: 'change'\n        }]\n      },\n      logVisible: false,\n      previewVisible: false,\n      assignNodeList: [],\n      resurgenceNodeList: [],\n      currentView: '',\n      previewTitle: '',\n      formData: {},\n      setting: {},\n      monitorList: [{\n        fullName: '1',\n        flowName: '1',\n        startTime: '1',\n        userName: '1',\n        thisStep: '1'\n      }, {\n        fullName: '1',\n        flowName: '1',\n        startTime: '1',\n        userName: '1',\n        thisStep: '1'\n      }],\n      flowFormInfo: {},\n      flowTemplateInfo: {},\n      flowTaskInfo: {},\n      flowTaskNodeList: [],\n      flowTemplateJson: {},\n      flowTaskOperatorRecordList: [],\n      properties: {},\n      endTime: 0,\n      suspendVisible: false,\n      visible: false,\n      handleId: '',\n      activeTab: '0',\n      isComment: false,\n      isSummary: false,\n      summaryType: 0,\n      loading: false,\n      btnLoading: false,\n      approvalBtnLoading: false,\n      resurgenceBtnLoading: false,\n      candidateLoading: false,\n      candidateVisible: false,\n      hasFreeApproverVisible: false,\n      signVisible: false,\n      candidateType: 1,\n      countersignOver: false,\n      branchList: [],\n      candidateList: [],\n      candidateForm: {\n        branchList: [],\n        candidateList: [],\n        fileList: [],\n        handleOpinion: '',\n        rejectStep: '',\n        rejectType: 1\n      },\n      printBrowseVisible: false,\n      rejectList: [],\n      showReject: false,\n      eventType: '',\n      signImg: '',\n      copyIds: [],\n      fullName: '',\n      thisStep: '',\n      allBtnDisabled: false,\n      flowUrgent: 1,\n      flowUrgentList: [{\n        name: '普通',\n        color: '#409EFF',\n        state: 1\n      }, {\n        name: '重要',\n        color: '#E6A23C',\n        state: 2\n      }, {\n        name: '紧急',\n        color: '#F56C6C',\n        state: 3\n      }],\n      errorVisible: false,\n      errorNodeList: [],\n      isValidate: false,\n      moreBtnList: [],\n      subFlowVisible: false,\n      flowBoxVisible: false,\n      subFlowInfoList: [],\n      commonWordsVisible: false,\n      noOperateAuth: true,\n      // 是否没有操作权限\n      processKey: 0\n    };\n  },\n  computed: _objectSpread({\n    title: function title() {\n      if ([2, 3, 4].includes(this.setting.opType)) return this.fullName;\n      return this.thisStep ? this.fullName + '/' + this.thisStep : this.fullName;\n    },\n    selectState: function selectState() {\n      var _this = this;\n      var index = this.flowUrgentList.findIndex(function (c) {\n        return _this.flowUrgent === c.state;\n      });\n      return index;\n    }\n  }, (0, _vuex.mapGetters)(['userInfo'])),\n  watch: {\n    activeTab: function activeTab(val) {\n      if (val === 'comment') {\n        this.$refs.comment && this.$refs.comment.init();\n        this.moreBtnList.push({\n          label: \"评 论\",\n          key: \"comment\"\n        });\n      } else {\n        this.moreBtnList = this.moreBtnList.filter(function (o) {\n          return o.key != \"comment\";\n        });\n      }\n      if (val === 'recordSummary') {\n        this.$refs.recordSummary && this.$refs.recordSummary.init();\n      }\n    }\n  },\n  methods: {\n    common: function common(val) {\n      this.commonWordsVisible = false;\n      if (val) {\n        if (this.resurgenceVisible) {\n          this.resurgenceForm.handleOpinion += val.commonWordsText;\n        } else {\n          this.candidateForm.handleOpinion += val.commonWordsText;\n        }\n      }\n    },\n    beforeClose: function beforeClose() {\n      this.visible = false;\n      this.$refs.commonWordsDialog.close();\n    },\n    addSign: function addSign() {\n      var _this2 = this;\n      this.signVisible = true;\n      this.$nextTick(function () {\n        _this2.$refs.SignImg.init();\n      });\n    },\n    signDialog: function signDialog(val) {\n      this.signVisible = false;\n      if (val) {\n        this.signImg = val;\n      }\n    },\n    approverDialog: function approverDialog(needClose) {\n      if (needClose) this.$emit('close', true);\n    },\n    handelNodeLog: function handelNodeLog(item) {\n      var _this3 = this;\n      this.logVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs.EventLog.init(item.taskNodeId, item.nodeName);\n      });\n    },\n    activeClick: function activeClick() {\n      var _this4 = this;\n      var data = this.subFlowInfoList.filter(function (o) {\n        return o.flowTaskInfo.id == _this4.subFlowTab;\n      }) || [];\n      if (data.length) {\n        this.fullName = data[0].flowTaskInfo.fullName;\n        this.flowTaskOperatorRecordList = data[0].flowTaskOperatorRecordList || [];\n        var templateJson = data[0].flowTemplateInfo.flowTemplateJson && typeof data[0].flowTemplateInfo.flowTemplateJson === \"string\" ? JSON.parse(data[0].flowTemplateInfo.flowTemplateJson || null) : data[0].flowTemplateInfo.flowTemplateJson;\n        data[0].flowTemplateInfo.flowTemplateJson = templateJson;\n        this.isComment = templateJson.properties.isComment;\n        this.isSummary = templateJson.properties.isSummary;\n        this.summaryType = templateJson.properties.summaryType;\n        this.flowUrgent = data[0].flowTaskInfo.flowUrgent || 1;\n        this.setting.id = data[0].flowTaskInfo.id;\n        if (data[0].flowTaskNodeList.length) {\n          var assignNodeList = [];\n          var _loop = function _loop() {\n            var nodeItem = data[0].flowTaskNodeList[i];\n            data.opType == 4 && nodeItem.type == 1 && nodeItem.nodeType === 'approver' && assignNodeList.push(nodeItem);\n            var loop = function loop(data) {\n              if (Array.isArray(data)) data.forEach(function (d) {\n                return loop(d);\n              });\n              if (data.nodeId === nodeItem.nodeCode) {\n                if (nodeItem.type == 0) data.state = 'state-past';\n                if (nodeItem.type == 1) data.state = 'state-curr';\n                if (nodeItem.nodeType === 'approver' || nodeItem.nodeType === 'start' || nodeItem.nodeType === 'subFlow') data.content = nodeItem.userName;\n                return;\n              }\n              if (data.conditionNodes && Array.isArray(data.conditionNodes)) loop(data.conditionNodes);\n              if (data.childNode) loop(data.childNode);\n            };\n            loop(data[0].flowTemplateInfo.flowTemplateJson);\n          };\n          for (var i = 0; i < data[0].flowTaskNodeList.length; i++) {\n            _loop();\n          }\n          this.assignNodeList = assignNodeList;\n        } else {\n          data[0].flowTemplateInfo.flowTemplateJson.state = 'state-curr';\n        }\n        this.processKey = +new Date();\n      }\n    },\n    subFlow: function subFlow(enCode) {\n      var _this5 = this;\n      var flowTaskNodeList = this.flowTaskNodeList.filter(function (res) {\n        return res.nodeCode == enCode;\n      });\n      if (!flowTaskNodeList.length) return;\n      if (!flowTaskNodeList[0].type || flowTaskNodeList[0].nodeType != 'subFlow') return;\n      var item = _objectSpread(_objectSpread({\n        subFlowVisible: true\n      }, flowTaskNodeList), this.setting);\n      if (document.getElementById('Process')) document.getElementById('Process').style.display = 'none';\n      this.flowBoxVisible = true;\n      this.$nextTick(function () {\n        _this5.$refs.FlowBox.init(item);\n      });\n    },\n    handleResurgence: function handleResurgence(errorRuleUserList) {\n      var _this6 = this;\n      this.$refs['resurgenceForm'].validate(function (valid) {\n        if (!valid) return;\n        var query = _objectSpread(_objectSpread({}, _this6.resurgenceForm), {}, {\n          taskId: _this6.setting.taskId,\n          resurgence: _this6.flowTaskInfo.completion == 100\n        });\n        if (errorRuleUserList) query.errorRuleUserList = errorRuleUserList;\n        _this6.resurgenceBtnLoading = true;\n        (0, _FlowBefore.Resurgence)(query).then(function (res) {\n          var errorData = res.data;\n          if (errorData && Array.isArray(errorData) && errorData.length) {\n            _this6.errorNodeList = errorData;\n            _this6.eventType = 'resurgence';\n            _this6.errorVisible = true;\n            _this6.resurgenceBtnLoading = false;\n          } else {\n            _this6.$message({\n              type: 'success',\n              message: res.msg,\n              duration: 1000,\n              onClose: function onClose() {\n                _this6.resurgenceBtnLoading = false;\n                _this6.visible = false;\n                _this6.errorVisible = false;\n                _this6.$emit('close', true);\n              }\n            });\n          }\n        }).catch(function () {\n          _this6.resurgenceBtnLoading = false;\n        });\n      });\n    },\n    flowResurgence: function flowResurgence() {\n      var _this7 = this;\n      this.resurgenceVisible = true;\n      (0, _FlowBefore.ResurgenceList)(this.setting.taskId).then(function (res) {\n        _this7.resurgenceNodeList = res.data;\n      });\n    },\n    goBack: function goBack(isRefresh) {\n      if (this.subFlowVisible) document.getElementById('Process').style.display = 'block';\n      this.$emit('close', isRefresh);\n    },\n    init: function init(data) {\n      this.loading = true;\n      this.activeTab = '0';\n      this.setting = data;\n      if (data.subFlowVisible) {\n        this.subFlowInfo(data);\n      } else {\n        /**\n         * opType\n         * -1 - 我发起的新建/编辑\n         * 0 - 我发起的详情\n         * 1 - 待办事宜\n         * 2 - 已办事宜\n         * 3 - 抄送事宜\n         * 4 - 流程监控\n         */\n        this.getBeforeInfo(data);\n      }\n    },\n    getBeforeInfo: function getBeforeInfo(data) {\n      var _this8 = this;\n      (0, _FlowBefore.FlowBeforeInfo)(data.id || 0, {\n        taskNodeId: data.taskNodeId,\n        taskOperatorId: data.taskId,\n        flowId: data.flowId\n      }).then(function (res) {\n        _this8.flowFormInfo = res.data.flowFormInfo;\n        _this8.flowTaskInfo = res.data.flowTaskInfo || {};\n        _this8.flowTemplateInfo = res.data.flowTemplateInfo;\n        _this8.noOperateAuth = res.data.noOperateAuth || false;\n        var fullName = data.opType == '-1' ? _this8.flowTemplateInfo.fullName : _this8.flowTaskInfo.fullName;\n        data.fullName = fullName;\n        _this8.fullName = fullName;\n        _this8.thisStep = _this8.flowTaskInfo.thisStep;\n        _this8.flowUrgent = _this8.flowTaskInfo.flowUrgent || 1;\n        data.status = _this8.flowTaskInfo.status;\n        data.type = _this8.flowTemplateInfo.type;\n        data.draftData = res.data.draftData || null;\n        data.formData = res.data.formData || {};\n        data.formEnCode = _this8.flowFormInfo.enCode;\n        var formUrl = _this8.flowFormInfo.formType == 2 ? 'workFlow/workFlowForm/dynamicForm' : _this8.flowFormInfo.urlAddress ? _this8.flowFormInfo.urlAddress.replace(/\\s*/g, \"\") : \"workFlow/workFlowForm/\".concat(_this8.flowFormInfo.enCode);\n        _this8.currentView = function (resolve) {\n          return require([\"@/views/\".concat(formUrl)], resolve);\n        };\n        _this8.flowTaskNodeList = res.data.flowTaskNodeList || [];\n        _this8.flowTemplateJson = _this8.flowTemplateInfo.flowTemplateJson ? JSON.parse(_this8.flowTemplateInfo.flowTemplateJson) : null;\n        _this8.isComment = _this8.flowTemplateJson.properties.isComment;\n        _this8.isSummary = _this8.flowTemplateJson.properties.isSummary;\n        _this8.summaryType = _this8.flowTemplateJson.properties.summaryType;\n        _this8.flowTaskOperatorRecordList = res.data.flowTaskOperatorRecordList || [];\n        _this8.flowTaskOperatorRecordList = _this8.flowTaskOperatorRecordList.reverse();\n        _this8.properties = res.data.approversProperties || {};\n        _this8.candidateForm.rejectType = _this8.properties.rejectType == 3 ? 1 : _this8.properties.rejectType;\n        _this8.endTime = _this8.flowTaskInfo.completion == 100 ? _this8.flowTaskInfo.endTime : 0;\n        data.formConf = _this8.flowFormInfo.propertyJson;\n        if (data.opType != 1 && data.opType != '-1') data.readonly = true;\n        data.formOperates = res.data.formOperates || [];\n        if (data.opType == 0) {\n          for (var i = 0; i < data.formOperates.length; i++) {\n            data.formOperates[i].write = false;\n          }\n        }\n        data.flowTemplateJson = _this8.flowTemplateJson;\n        if (_this8.flowTaskNodeList.length) {\n          var assignNodeList = [];\n          var _loop2 = function _loop2() {\n            var nodeItem = _this8.flowTaskNodeList[_i];\n            data.opType == 4 && nodeItem.type == 1 && nodeItem.nodeType === 'approver' && assignNodeList.push(nodeItem);\n            var loop = function loop(data) {\n              if (Array.isArray(data)) data.forEach(function (d) {\n                return loop(d);\n              });\n              if (data.nodeId === nodeItem.nodeCode) {\n                if (nodeItem.type == 0) data.state = 'state-past';\n                if (nodeItem.type == 1) data.state = 'state-curr';\n                if (nodeItem.nodeType === 'approver' || nodeItem.nodeType === 'start' || nodeItem.nodeType === 'subFlow') data.content = nodeItem.userName;\n                return;\n              }\n              if (data.conditionNodes && Array.isArray(data.conditionNodes)) loop(data.conditionNodes);\n              if (data.childNode) loop(data.childNode);\n            };\n            loop(_this8.flowTemplateJson);\n          };\n          for (var _i = 0; _i < _this8.flowTaskNodeList.length; _i++) {\n            _loop2();\n          }\n          _this8.assignNodeList = assignNodeList;\n        } else {\n          _this8.flowTemplateJson.state = 'state-curr';\n        }\n        _this8.processKey = +new Date();\n        _this8.setting = data;\n        _this8.initBtnList();\n      }).catch(function () {\n        _this8.loading = false;\n      });\n    },\n    initBtnList: function initBtnList() {\n      var list = [];\n      var setting = this.setting;\n      var opType = this.setting.opType;\n      var properties = this.properties;\n      var flowTaskInfo = this.flowTaskInfo;\n      if (opType == '-1' && !setting.hideCancelBtn) list.push({\n        label: properties.saveBtnText || '暂 存',\n        key: 'save'\n      });\n      if (opType == 0 && setting.status == 1 && (properties.hasRevokeBtn || properties.hasRevokeBtn === undefined)) list.push({\n        label: properties.revokeBtnText || '撤 回',\n        key: 'revoke'\n      });\n      if (opType != 4 && setting.id && properties.hasPrintBtn && properties.printId) list.push({\n        label: properties.printBtnText || '打 印',\n        key: 'print'\n      });\n      if (opType == 1) {\n        if (properties.hasTransferBtn) list.push({\n          label: properties.transferBtnText || '转 审',\n          key: 'transfer'\n        });\n        if (properties.hasSaveBtn) list.push({\n          label: properties.saveBtnText || '暂 存',\n          key: 'saveAudit'\n        });\n        if (properties.hasRejectBtn) list.push({\n          label: properties.rejectBtnText || '退 回',\n          key: 'reject'\n        });\n        if (properties.hasFreeApproverBtn) list.push({\n          label: properties.hasFreeApproverBtnText || '加 签',\n          key: 'hasFreeApprover'\n        });\n        if (properties.hasCancelBtn) list.push({\n          label: properties.cancelBtnText || '驳回',\n          key: 'approvalCancel'\n        });\n      }\n      if (opType == 4) {\n        if (this.noOperateAuth) return state.moreBtnList = [];\n        if (flowTaskInfo.completion == 100) list.push({\n          label: '复 活',\n          key: 'resurgence'\n        });\n        if (flowTaskInfo.completion > 0 && flowTaskInfo.completion < 100 && !flowTaskInfo.rejectDataId && (setting.status == 1 || setting.status == 3)) list.push({\n          label: '变 更',\n          key: 'resurgence'\n        });\n        if (setting.status == 1 && this.assignNodeList.length) list.push({\n          label: '指 派',\n          key: 'assign'\n        });\n        if (flowTaskInfo.status == 1) list.push({\n          label: '挂 起',\n          key: 'suspend'\n        });\n        if (flowTaskInfo.status == 6 && !flowTaskInfo.suspend) list.push({\n          label: '恢 复',\n          key: 'recovery'\n        });\n      }\n      this.moreBtnList = list;\n    },\n    subFlowInfo: function subFlowInfo(data) {\n      var _this9 = this;\n      this.loading = false;\n      this.activeTab = '0';\n      this.subFlowVisible = true;\n      (0, _FlowBefore.subFlowInfo)(data[0].id).then(function (res) {\n        _this9.subFlowInfoList = res.data || [];\n        _this9.subFlowTab = _this9.subFlowInfoList[0].flowTaskInfo.id;\n        _this9.flowUrgent = _this9.subFlowInfoList[0].flowTaskInfo.flowUrgent || 1;\n        _this9.fullName = _this9.subFlowInfoList[0].flowTaskInfo.fullName;\n        _this9.flowTaskOperatorRecordList = _this9.subFlowInfoList[0].flowTaskOperatorRecordList || [];\n        _this9.flowTaskOperatorRecordList = _this9.flowTaskOperatorRecordList.reverse();\n        for (var index = 0; index < _this9.subFlowInfoList.length; index++) {\n          var element = _this9.subFlowInfoList[index];\n          element.flowTemplateInfo.flowTemplateJson = element.flowTemplateInfo && element.flowTemplateInfo.flowTemplateJson ? JSON.parse(element.flowTemplateInfo.flowTemplateJson) : {};\n          if (element.flowTaskNodeList.length) {\n            var assignNodeList = [];\n            var _loop3 = function _loop3() {\n              var nodeItem = element.flowTaskNodeList[i];\n              data.opType == 4 && nodeItem.type == 1 && nodeItem.nodeType === 'approver' && assignNodeList.push(nodeItem);\n              var loop = function loop(data) {\n                if (Array.isArray(data)) data.forEach(function (d) {\n                  return loop(d);\n                });\n                if (data.nodeId === nodeItem.nodeCode) {\n                  if (nodeItem.type == 0) data.state = 'state-past';\n                  if (nodeItem.type == 1) data.state = 'state-curr';\n                  if (nodeItem.nodeType === 'approver' || nodeItem.nodeType === 'start' || nodeItem.nodeType === 'subFlow') data.content = nodeItem.userName;\n                  return;\n                }\n                if (data.conditionNodes && Array.isArray(data.conditionNodes)) loop(data.conditionNodes);\n                if (data.childNode) loop(data.childNode);\n              };\n              loop(element.flowTemplateInfo.flowTemplateJson);\n            };\n            for (var i = 0; i < element.flowTaskNodeList.length; i++) {\n              _loop3();\n            }\n            element.assignNodeList = assignNodeList;\n          } else {\n            element.flowTemplateInfo.flowTemplateJson.state = 'state-curr';\n          }\n          var templateJson = element.flowTemplateInfo.flowTemplateJson;\n          _this9.isComment = templateJson.properties.isComment;\n          _this9.isSummary = templateJson.properties.isSummary;\n          _this9.summaryType = templateJson.properties.summaryType;\n          _this9.setting.id = _this9.subFlowInfoList[0].flowTaskInfo.id;\n        }\n      }).catch(function () {\n        _this9.loading = false;\n      });\n    },\n    printBrowseHandle: function printBrowseHandle(id) {\n      this.printTemplateId = id;\n      this.printDialogVisible = false;\n      this.printBrowseVisible = true;\n    },\n    printDialog: function printDialog() {\n      var _this10 = this;\n      this.printDialogVisible = true;\n      this.$nextTick(function () {\n        _this10.$refs.printDialog.init(_this10.properties.printId);\n      });\n    },\n    handleMore: function handleMore(e) {\n      if (e == 'revoke') return this.actionLauncher('revoke');\n      if (e == 'transfer') return this.actionLauncher('transfer');\n      if (e == 'saveAudit') return this.eventLauncher('saveAudit');\n      if (e == 'reject') return this.eventReceiver({}, 'reject');\n      if (e == 'resurgence') return this.flowResurgence();\n      if (e == 'assign') return this.actionLauncher('assign');\n      if (e == 'approvalCancel') return this.actionLauncher('approvalCancel');\n      if (e == 'comment') return this.addComment();\n      if (e == 'print') return this.printDialog();\n      if (e == 'suspend') return this.suspend();\n      if (e == 'recovery') return this.recovery();\n      this.eventLauncher(e);\n    },\n    suspend: function suspend() {\n      var _this11 = this;\n      this.suspendVisible = true;\n      this.$nextTick(function () {\n        _this11.$refs.suspendDialog.init(_this11.setting.id);\n      });\n    },\n    recovery: function recovery() {\n      var _this12 = this;\n      var data = {\n        handleOpinion: '',\n        fileList: []\n      };\n      (0, _FlowBefore.restore)(this.setting.id, data).then(function (res) {\n        _this12.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: function onClose() {\n            _this12.$emit('close', true);\n          }\n        });\n      }).catch(function () {\n        _this12.$refs.suspendDialog.btnLoading = false;\n      });\n    },\n    suspendReceiver: function suspendReceiver(dataForm) {\n      var _this13 = this;\n      (0, _FlowBefore.suspend)(this.setting.id, dataForm).then(function (res) {\n        _this13.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: function onClose() {\n            _this13.$emit('close', true);\n          }\n        });\n      });\n    },\n    eventLauncher: function eventLauncher(eventType) {\n      this.$refs.form && this.$refs.form.dataFormSubmit(eventType, this.flowUrgent);\n    },\n    eventReceiver: function eventReceiver(formData, eventType) {\n      var _this14 = this;\n      this.formData = formData;\n      this.formData.flowId = this.setting.flowId;\n      this.formData.id = this.setting.id;\n      this.eventType = eventType;\n      if (eventType === 'save' || eventType === 'submit') {\n        return this.submitOrSave();\n      }\n      if (eventType === 'saveAudit') {\n        return this.saveAudit();\n      }\n      if (eventType === 'hasFreeApprover') {\n        return this.hasFreeApproverVisible = true;\n      }\n      if (eventType === 'audit' || eventType === 'reject') {\n        this.handleId = '';\n        this.candidateForm.handleOpinion = '';\n        this.candidateForm.fileList = [];\n        this.copyIds = [];\n        this.isValidate = false;\n        if (this.properties.hasSign) this.signImg = this.userInfo.signImg;\n        if (eventType === 'reject') {\n          (0, _FlowBefore.RejectList)(this.setting.taskId).then(function (res) {\n            _this14.showReject = res.data.isLastAppro;\n            _this14.rejectList = res.data.list || [];\n            _this14.candidateForm.rejectStep = _this14.rejectList.length && _this14.rejectList[0].nodeCode || '';\n            if (!_this14.properties.hasSign && !_this14.properties.hasOpinion && !_this14.properties.isCustomCopy && !_this14.showReject) {\n              _this14.$confirm('此操作将退回该审批单，是否继续？', '提示', {\n                type: 'warning'\n              }).then(function () {\n                _this14.handleApproval();\n              }).catch(function () {});\n              return;\n            }\n            _this14.isValidate = true;\n            _this14.visible = true;\n          }).catch({});\n          return;\n        }\n        this.candidateLoading = true;\n        (0, _FlowBefore.Candidates)(this.setting.taskId, this.formData).then(function (res) {\n          var data = res.data;\n          _this14.candidateType = data.type;\n          _this14.countersignOver = data.countersignOver;\n          _this14.candidateLoading = false;\n          _this14.candidateForm.branchList = [];\n          _this14.branchList = [];\n          if (data.type == 1) {\n            _this14.branchList = res.data.list.filter(function (o) {\n              return o.isBranchFlow;\n            });\n            var list = res.data.list.filter(function (o) {\n              return !o.isBranchFlow && o.isCandidates;\n            });\n            _this14.candidateForm.candidateList = list.map(function (o) {\n              return _objectSpread(_objectSpread({}, o), {}, {\n                isDefault: true,\n                label: '审批人',\n                value: [],\n                rules: [{\n                  required: true,\n                  message: \"\\u5BA1\\u6279\\u4EBA\\u4E0D\\u80FD\\u4E3A\\u7A7A\",\n                  trigger: 'click'\n                }]\n              });\n            });\n            _this14.$nextTick(function () {\n              _this14.$refs['candidateForm'].resetFields();\n            });\n            _this14.isValidate = true;\n            _this14.visible = true;\n          } else if (data.type == 2) {\n            var _list = res.data.list.filter(function (o) {\n              return o.isCandidates;\n            });\n            _this14.candidateForm.candidateList = _list.map(function (o) {\n              return _objectSpread(_objectSpread({}, o), {}, {\n                label: '审批人',\n                value: [],\n                rules: [{\n                  required: true,\n                  message: \"\\u5BA1\\u6279\\u4EBA\\u4E0D\\u80FD\\u4E3A\\u7A7A\",\n                  trigger: 'click'\n                }]\n              });\n            });\n            _this14.$nextTick(function () {\n              _this14.$refs['candidateForm'].resetFields();\n            });\n            _this14.isValidate = true;\n            _this14.visible = true;\n          } else {\n            _this14.candidateForm.candidateList = [];\n            if (!_this14.properties.hasSign && !_this14.properties.hasOpinion && !_this14.properties.hasFreeApprover && !_this14.properties.isCustomCopy) {\n              _this14.$confirm('此操作将通过该审批单，是否继续？', '提示', {\n                type: 'warning'\n              }).then(function () {\n                _this14.handleApproval();\n              }).catch(function () {});\n              return;\n            }\n            _this14.isValidate = true;\n            _this14.visible = true;\n          }\n        }).catch(function () {\n          _this14.candidateLoading = false;\n        });\n      }\n    },\n    onBranchChange: function onBranchChange(val) {\n      var defaultList = this.candidateForm.candidateList.filter(function (o) {\n        return o.isDefault;\n      });\n      if (!val.length) return this.candidateForm.candidateList = defaultList;\n      var list = [];\n      for (var i = 0; i < val.length; i++) {\n        inner: for (var j = 0; j < this.branchList.length; j++) {\n          var o = this.branchList[j];\n          if (val[i] === o.nodeId && o.isCandidates) {\n            list.push(_objectSpread(_objectSpread({}, o), {}, {\n              label: '审批人',\n              value: [],\n              rules: [{\n                required: true,\n                message: \"\\u5BA1\\u6279\\u4EBA\\u4E0D\\u80FD\\u4E3A\\u7A7A\",\n                trigger: 'click'\n              }]\n            }));\n            break inner;\n          }\n        }\n      }\n      this.candidateForm.candidateList = [].concat((0, _toConsumableArray2.default)(defaultList), list);\n    },\n    saveAudit: function saveAudit() {\n      var _this15 = this;\n      this.btnLoading = true;\n      (0, _FlowBefore.SaveAudit)(this.setting.taskId, this.formData).then(function (res) {\n        _this15.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: function onClose() {\n            _this15.btnLoading = false;\n            _this15.$emit('close', true);\n          }\n        });\n      }).catch(function () {\n        _this15.btnLoading = false;\n      });\n    },\n    submitOrSave: function submitOrSave() {\n      var _this16 = this;\n      this.formData.status = this.eventType === 'submit' ? 0 : 1;\n      this.formData.flowUrgent = this.flowUrgent;\n      if (this.setting.delegateUserList) {\n        //受委托人不为空的时候走委托创建流程\n        this.formData.delegateUserList = this.setting.delegateUserList;\n      }\n      if (this.eventType === 'save') return this.handleRequest();\n      this.candidateLoading = true;\n      (0, _FlowBefore.Candidates)(0, this.formData).then(function (res) {\n        var data = res.data;\n        _this16.candidateLoading = false;\n        _this16.candidateType = data.type;\n        _this16.countersignOver = data.countersignOver;\n        if (data.type == 1) {\n          _this16.branchList = res.data.list.filter(function (o) {\n            return o.isBranchFlow;\n          });\n          _this16.candidateList = res.data.list.filter(function (o) {\n            return !o.isBranchFlow && o.isCandidates;\n          });\n          _this16.candidateVisible = true;\n        } else if (data.type == 2) {\n          _this16.branchList = [];\n          _this16.candidateList = res.data.list.filter(function (o) {\n            return o.isCandidates;\n          });\n          _this16.candidateVisible = true;\n        } else {\n          if (_this16.properties.isCustomCopy) {\n            _this16.branchList = [];\n            _this16.candidateList = [];\n            _this16.candidateVisible = true;\n            return;\n          }\n          _this16.$confirm('您确定要提交当前流程吗, 是否继续?', '提示', {\n            type: 'warning'\n          }).then(function () {\n            _this16.handleRequest();\n          }).catch(function () {});\n        }\n      }).catch(function () {\n        _this16.candidateLoading = false;\n      });\n    },\n    handleRequest: function handleRequest(candidateData) {\n      var _this17 = this;\n      if (candidateData) this.formData = _objectSpread(_objectSpread({}, this.formData), candidateData);\n      this.formData.candidateType = this.candidateType;\n      this.formData.countersignOver = this.countersignOver;\n      if (!this.formData.id) delete this.formData.id;\n      if (this.eventType === 'save') this.btnLoading = true;\n      this.allBtnDisabled = true;\n      var formMethod = this.formData.id ? _workFlowForm.Update : _workFlowForm.Create;\n      formMethod(this.formData).then(function (res) {\n        var errorData = res.data;\n        if (errorData && Array.isArray(errorData) && errorData.length) {\n          _this17.errorNodeList = errorData;\n          _this17.errorVisible = true;\n          _this17.allBtnDisabled = false;\n        } else {\n          _this17.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: function onClose() {\n              if (_this17.eventType === 'save') _this17.btnLoading = false;\n              _this17.candidateVisible = false;\n              _this17.allBtnDisabled = false;\n              _this17.errorVisible = false;\n              _this17.$emit('close', true);\n            }\n          });\n        }\n      }).catch(function () {\n        if (_this17.eventType === 'save') _this17.btnLoading = false;\n        if (_this17.$refs.candidateForm) _this17.$refs.candidateForm.btnLoading = false;\n        _this17.allBtnDisabled = false;\n        _this17.errorVisible = false;\n      });\n    },\n    submitCandidate: function submitCandidate(data) {\n      this.handleRequest(data);\n    },\n    actionLauncher: function actionLauncher(eventType) {\n      var _this18 = this;\n      this.eventType = eventType;\n      if (['revoke', 'recall', 'approvalCancel'].includes(eventType) && !this.properties.hasOpinion && !this.properties.hasSign) {\n        var title = '';\n        if (eventType == 'revoke') title = '此操作将撤回该流程，是否继续？';\n        if (eventType == 'recall') title = '此操作将撤回该审批单，是否继续？';\n        if (eventType == 'approvalCancel') title = '此操作将审批驳回终止流程，是否继续？';\n        this.$confirm(title, '提示', {\n          type: 'warning'\n        }).then(function () {\n          _this18.actionReceiver();\n        }).catch(function () {});\n        return;\n      }\n      this.showActionDialog();\n    },\n    showActionDialog: function showActionDialog() {\n      var _this19 = this;\n      this.actionVisible = true;\n      this.$nextTick(function () {\n        _this19.$refs.actionDialog.init(_this19.properties, _this19.eventType);\n      });\n    },\n    actionReceiver: function actionReceiver(query) {\n      var _this20 = this;\n      if (!query) {\n        query = {\n          handleOpinion: '',\n          signImg: '',\n          fileList: []\n        };\n      }\n      if (this.eventType == 'approvalCancel') query = _objectSpread(_objectSpread({}, query), {}, {\n        eventType: \"approvalCancel\"\n      });\n      var id = this.eventType == 'revoke' || this.eventType == 'approvalCancel' ? this.setting.id : this.setting.taskId;\n      var actionMethod = this.getActionMethod();\n      this.approvalBtnLoading = true;\n      actionMethod(id, query).then(function (res) {\n        _this20.approvalBtnLoading = false;\n        _this20.$message({\n          type: 'success',\n          message: res.msg,\n          duration: 1000,\n          onClose: function onClose() {\n            _this20.$emit('close', true);\n          }\n        });\n      }).catch(function () {\n        _this20.$refs.actionDialog.btnLoading = false;\n        _this20.approvalBtnLoading = false;\n      });\n    },\n    getActionMethod: function getActionMethod() {\n      if (this.eventType === 'transfer') return _FlowBefore.Transfer;\n      if (this.eventType === 'assign') return _FlowBefore.Assign;\n      if (this.eventType === 'revoke') return _FlowLaunch.Revoke;\n      if (this.eventType === 'recall') return _FlowBefore.Recall;\n      if (this.eventType === 'cancel') return _FlowBefore.Cancel;\n      if (this.eventType === 'approvalCancel') return _FlowBefore.Cancel;\n    },\n    press: function press() {\n      var _this21 = this;\n      this.$confirm('此操作将提示该节点尽快处理，是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        (0, _FlowLaunch.Press)(_this21.setting.id).then(function (res) {\n          _this21.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000\n          });\n        });\n      }).catch(function () {});\n    },\n    handleError: function handleError(data) {\n      if (this.eventType === 'submit') {\n        this.formData.errorRuleUserList = data;\n        this.handleRequest();\n        return;\n      }\n      if (this.eventType === 'audit' || this.eventType === 'reject') {\n        this.handleApproval(data);\n        return;\n      }\n      if (this.eventType === 'resurgence') {\n        this.handleResurgence(data);\n        return;\n      }\n    },\n    handleApproval: function handleApproval(errorRuleUserList) {\n      var _this22 = this;\n      var handleRequest = function handleRequest() {\n        if (_this22.properties.hasSign && !_this22.signImg) {\n          _this22.$message({\n            message: '请签名',\n            type: 'error'\n          });\n          return;\n        }\n        var query = _objectSpread(_objectSpread({\n          handleOpinion: _this22.candidateForm.handleOpinion,\n          fileList: _this22.candidateForm.fileList\n        }, _this22.formData), {}, {\n          enCode: _this22.setting.enCode,\n          signImg: _this22.signImg,\n          copyIds: _this22.copyIds.join(','),\n          branchList: _this22.candidateForm.branchList,\n          candidateType: _this22.candidateType,\n          countersignOver: _this22.countersignOver,\n          rejectType: _this22.candidateForm.rejectType\n        });\n        if (_this22.eventType === 'reject') query.rejectStep = _this22.candidateForm.rejectStep;\n        if (errorRuleUserList) query.errorRuleUserList = errorRuleUserList;\n        if (_this22.candidateForm.candidateList.length) {\n          var candidateList = {};\n          for (var i = 0; i < _this22.candidateForm.candidateList.length; i++) {\n            candidateList[_this22.candidateForm.candidateList[i].nodeId] = _this22.candidateForm.candidateList[i].value;\n          }\n          query.candidateList = candidateList;\n        }\n        if (_this22.eventType === 'audit' && _this22.properties.hasFreeApprover) {\n          query = _objectSpread({\n            freeApproverUserId: _this22.handleId\n          }, query);\n        }\n        var approvalMethod = _this22.eventType === 'audit' ? _FlowBefore.Audit : _FlowBefore.Reject;\n        _this22.approvalBtnLoading = true;\n        approvalMethod(_this22.setting.taskId, query).then(function (res) {\n          var errorData = res.data;\n          if (errorData && Array.isArray(errorData) && errorData.length) {\n            _this22.errorNodeList = errorData;\n            _this22.errorVisible = true;\n            _this22.approvalBtnLoading = false;\n          } else {\n            _this22.$message({\n              type: 'success',\n              message: res.msg,\n              duration: 1000,\n              onClose: function onClose() {\n                _this22.approvalBtnLoading = false;\n                _this22.visible = false;\n                _this22.errorVisible = false;\n                _this22.$emit('close', true);\n              }\n            });\n          }\n        }).catch(function () {\n          _this22.approvalBtnLoading = false;\n        });\n      };\n      if (!this.isValidate) return handleRequest();\n      this.$refs['candidateForm'].validate(function (valid) {\n        if (valid) {\n          handleRequest();\n        }\n      });\n    },\n    addComment: function addComment() {\n      this.$refs.comment && this.$refs.comment.showCommentDialog();\n    },\n    setPageLoad: function setPageLoad(val) {\n      this.loading = !!val;\n    },\n    setCandidateLoad: function setCandidateLoad(val) {\n      this.candidateLoading = !!val;\n      this.allBtnDisabled = !!val;\n    },\n    setLoad: function setLoad(val) {\n      this.btnLoading = !!val;\n    },\n    handleFlowUrgent: function handleFlowUrgent(e) {\n      this.flowUrgent = e;\n    }\n  }\n};",null]}