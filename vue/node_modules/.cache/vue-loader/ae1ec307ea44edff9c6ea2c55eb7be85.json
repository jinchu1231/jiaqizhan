{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/ColumnSettings/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ColumnSettings/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport draggable from 'vuedraggable'\nimport { setColumnsByModuleId } from '@/api/common'\nexport default {\n  name: 'ColumnSettings',\n  components: { draggable },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      drawerVisible: false,\n      defaultList: [],\n      list: []\n    }\n  },\n  computed: {\n    currMenuId() {\n      return this.$route.meta.modelId || ''\n    }\n  },\n  watch: {\n    value: {\n      handler(val) {\n        if (val && val.length) {\n          this.list = JSON.parse(JSON.stringify(val))\n          this.defaultList = JSON.parse(JSON.stringify(val))\n        } else {\n          this.list = []\n          this.defaultList = []\n        }\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.list = this.value || []\n  },\n  methods: {\n    showDrawer() {\n      this.drawerVisible = true\n    },\n    reset() {\n      this.list = this.list.map(o => ({ ...o, visible: true }))\n      this.setColumn()\n    },\n    setColumn() {\n      this.loading = true\n      const query = {\n        moduleId: this.currMenuId,\n        fieldList: JSON.stringify(this.list)\n      }\n      setColumnsByModuleId(query).then(res => {\n        this.$emit('change', this.list)\n        this.loading = false\n      }).catch(() => {\n        this.list = JSON.parse(JSON.stringify(this.defaultList))\n        this.loading = false\n      })\n    }\n  }\n}\n",null]}