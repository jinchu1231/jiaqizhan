{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/extend/projectGantt/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/projectGantt/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ProjectGanttList, Delete } from '@/api/extend/projectGantt'\nimport Form from './Form'\nimport Task from './Task'\nexport default {\n  name: 'extend-projectGantt',\n  components: { Form, Task },\n  data() {\n    return {\n      keyword: '',\n      list: [],\n      listLoading: true,\n      formVisible: false,\n      taskVisible: false,\n    }\n  },\n  created() {\n    this.initData()\n  },\n  methods: {\n    search() {\n      this.initData()\n    },\n    reset() {\n      this.keyword = ''\n      this.search()\n    },\n    initData() {\n      this.listLoading = true\n      let query = { keyword: this.keyword }\n      ProjectGanttList(query).then(res => {\n        this.list = res.data.list\n        this.listLoading = false\n      })\n    },\n    handleDel(index, id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        this.asyncDel(index, id);\n      }).catch(() => { });\n    },\n    asyncDel(index, id) {\n      Delete(id).then(res => {\n        this.list.splice(index, 1);\n        this.$message({\n          type: 'success',\n          message: res.msg\n        });\n      })\n    },\n    toTask(row) {\n      this.taskVisible = true\n      this.$nextTick(() => {\n        this.$refs.task.init(row)\n      })\n    },\n    // 新增 / 修改\n    addOrUpdateHandle(id) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.Form.init(id)\n      })\n    },\n    sortChange({ column, prop, order }) {\n      // this.listQuery.sort = order == 'ascending' ? 'asc' : 'desc'\n      // this.listQuery.sidx = !order ? '' : prop\n      // this.initData()\n    }\n  }\n}\n",null]}