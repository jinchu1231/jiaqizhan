{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/JNPF-uploadBtn/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/JNPF-uploadBtn/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { upload } from '@/api/common';\nimport { getMenuSelector } from '@/api/system/menu';\nimport { importData } from '@/api/onlineDev/dataReport'\n\nconst hideList = ['/system/DataModel', '/system/DataInterfaceVariate']\n\nexport default {\n  name: 'JNPF-uploadBtn',\n  data() {\n    return {\n      loading: false,\n      visible: false,\n      dataForm: {\n        type: 0,\n        fileList: [],\n        parentId: '',\n      },\n      rules: {\n        parentId: [{ required: true, message: '上级菜单不能为空', trigger: 'change' }],\n        type: [{ required: true, message: '请选择识别重复', trigger: 'change', type: 'number' }],\n        fileList: [{ required: true, message: '请上传文件', trigger: 'change' }],\n      },\n      treeOptions: []\n    }\n  },\n  props: {\n    url: {\n      type: String,\n      default: \"\"\n    },\n    buttonText: {\n      type: String,\n      default: '导入'\n    },\n    buttonType: {\n      type: String,\n      default: 'text'\n    },\n    data: {\n      type: Object,\n      default: () => { }\n    },\n    showIcon: {\n      type: Boolean,\n      default: true\n    },\n    accept: {\n      type: String,\n      default: '*'\n    },\n    type: { type: String, default: '' },\n    importType: { type: String, default: '' },\n  },\n  computed: {\n    getTipText() {\n      return `一次只能导入一个文件，文件后缀名必须是${this.accept}。`\n    },\n    getIsHideType() {\n\n      return hideList.some(o => this.url.indexOf(o) > -1)\n    }\n  },\n  methods: {\n    openModal() {\n      this.visible = true\n      this.loading = false\n      if (this.type == 'menu') this.getMenuSelectorList();\n      this.$nextTick(() => {\n        this.$refs.dataForm && this.$refs.dataForm.resetFields()\n      })\n    },\n    getMenuSelectorList() {\n      getMenuSelector({ category: this.data.category }, '', this.data.systemId).then(res => {\n        this.treeOptions = [\n          {\n            fullName: '顶级节点',\n            hasChildren: true,\n            id: '-1',\n            children: res.data.list,\n          },\n        ];\n      });\n    },\n    handleSubmit() {\n      this.loading = true\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) return this.loading = false;\n        if (!this.url && !this.importType) return this.loading = false;\n        const formData = new FormData();\n        formData.append('file', this.dataForm.fileList[0]);\n        formData.append('type', this.dataForm.type);\n        for (let [key, value] of Object.entries(this.data || {})) {\n          formData.append(key, value);\n        }\n        if (this.type == 'menu') formData.append('parentId', this.dataForm.parentId);\n        const formMethod = this.importType === 'dataReport' ? importData : upload\n        formMethod(this.url, formData).then(res => {\n          this.$message.success(res.msg);\n          this.uploadSuccess()\n          this.loading = false\n          this.visible = false;\n        }).catch(() => { this.loading = false })\n      })\n    },\n    uploadSuccess() {\n      this.$emit('on-success');\n    },\n    handleRemove() {\n      this.dataForm.fileList = [];\n    },\n    beforeUpload(file) {\n      const isAccept = this.checkAccept(file);\n      if (!isAccept) {\n        this.$message.error(`请选择${this.accept}类型的文件`);\n        return isAccept;\n      }\n      this.dataForm.fileList = [file];\n      return false;\n    },\n    checkAccept(file) {\n      if (!this.accept || this.accept === '*') return true;\n      const extension = file.name.substring(file.name.lastIndexOf(\".\"));\n      if (this.accept.indexOf(extension) > -1) return true;\n      return false;\n    }\n  }\n};\n",null]}