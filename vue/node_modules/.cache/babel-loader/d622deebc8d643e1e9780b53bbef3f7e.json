{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/msgCenter/sendConfig/TemplateForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/msgCenter/sendConfig/TemplateForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _TemplateDialog = _interopRequireDefault(require(\"./TemplateDialog\"));\nvar _utils = require(\"../../../utils\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    TemplateDialog: _TemplateDialog.default\n  },\n  name: 'sendConfig-TemplateForm',\n  data: function data() {\n    return {\n      dataForm: {\n        id: \"\",\n        enabledMark: 1,\n        sortCode: 0,\n        description: \"\",\n        messageType: \"\",\n        templateName: '',\n        accountName: ''\n      },\n      dataRule: {\n        messageType: [{\n          required: true,\n          message: '消息类型不能为空',\n          trigger: 'blur'\n        }],\n        templateName: [{\n          required: true,\n          message: '模板名称不能为空',\n          trigger: 'change'\n        }],\n        accountName: [{\n          required: true,\n          message: '账号名称不能为空',\n          trigger: 'change'\n        }]\n      },\n      msgTypeList: [],\n      visible: false,\n      btnLoading: false,\n      editIndex: '',\n      messageSource: ''\n    };\n  },\n  methods: {\n    init: function init(row, index, messageSource) {\n      var _this = this;\n      this.editIndex = index;\n      this.messageSource = messageSource;\n      this.getConfig();\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.$refs['dataForm'].resetFields();\n        _this.dataForm = _objectSpread(_objectSpread({}, _this.dataForm), row);\n      });\n    },\n    getConfig: function getConfig() {\n      var _this2 = this;\n      this.$store.dispatch('base/getDictionaryData', {\n        sort: 'msgSendType'\n      }).then(function (res) {\n        _this2.msgTypeList = res;\n      });\n    },\n    onTemplateChange: function onTemplateChange(id, item) {\n      this.dataForm.templateName = item.fullName;\n      this.dataForm.templateId = id;\n      this.dataForm.templateCode = item.enCode;\n    },\n    onAccountChange: function onAccountChange(id, item) {\n      this.dataForm.accountName = item.fullName;\n      this.dataForm.accountConfigId = id;\n      this.dataForm.accountCode = item.enCode;\n    },\n    onMessageTypeChange: function onMessageTypeChange(e) {\n      this.$set(this.dataForm, 'accountName', '');\n      this.$set(this.dataForm, 'accountConfigId', '');\n      this.$set(this.dataForm, 'accountCode', '');\n      this.$set(this.dataForm, 'templateId', '');\n      this.$set(this.dataForm, 'templateName', '');\n      this.$set(this.dataForm, 'templateCode', '');\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this3 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          var item = (0, _utils.deepClone)(_this3.dataForm);\n          _this3.$emit('submit', item, _this3.editIndex);\n          _this3.visible = false;\n        }\n      });\n    }\n  }\n};",null]}