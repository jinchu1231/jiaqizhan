{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Process/PropPanel/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Process/PropPanel/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\nrequire(\"core-js/modules/es6.symbol\");\nrequire(\"core-js/modules/es6.array.from\");\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/es6.regexp.to-string\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/slicedToArray.js\"));\nrequire(\"core-js/modules/es6.string.iterator\");\nrequire(\"core-js/modules/es6.map\");\nrequire(\"core-js/modules/es6.array.find\");\nrequire(\"core-js/modules/es6.array.find-index\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _printDev = require(\"@/api/system/printDev\");\nvar _FlowEngine = require(\"@/api/workFlow/FlowEngine\");\nvar _FormDesign = require(\"@/api/workFlow/FormDesign\");\nvar _util = require(\"../FlowCard/util\");\nvar _config = _interopRequireDefault(require(\"../FlowCard/config\"));\nvar _OrgSelect = _interopRequireDefault(require(\"../OrgSelect\"));\nvar _msgDialog = _interopRequireDefault(require(\"./msgDialog\"));\nvar _InterfaceDialog = _interopRequireDefault(require(\"./InterfaceDialog\"));\nvar _formulaDialog = _interopRequireDefault(require(\"./formulaDialog\"));\nvar _FlowDialog = _interopRequireDefault(require(\"./FlowDialog\"));\nvar _TemplateDetail = _interopRequireDefault(require(\"./TemplateDetail\"));\nvar _FlowFormDialog = _interopRequireDefault(require(\"./FlowFormDialog\"));\nvar _ApproversSortDialog = _interopRequireDefault(require(\"./ApproversSortDialog\"));\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar requiredDisabled = function requiredDisabled(jnpfKey) {\n  return ['billRule', 'createUser', 'createTime', 'modifyTime', 'modifyUser', 'currPosition', 'currOrganize', 'table'].includes(jnpfKey);\n};\nvar getDataType = function getDataType(data) {\n  if (!data.__config__ || !data.__config__.jnpfKey) return '';\n  var jnpfKey = data.__config__.jnpfKey;\n  if (['inputNumber', 'datePicker', 'rate', 'slider'].includes(jnpfKey)) {\n    return 'number';\n  } else if (['checkbox', 'uploadFile', 'uploadImg', 'cascader', 'organizeSelect', 'areaSelect'].includes(jnpfKey)) {\n    return 'array';\n  } else if (['select', 'depSelect', 'posSelect', 'userSelect', 'usersSelect', 'treeSelect', 'roleSelect', 'groupSelect'].includes(jnpfKey)) {\n    if (data.multiple) return 'array';\n  }\n  return '';\n};\nvar defaultSubFlowForm = {\n  errorRule: 1,\n  // 异常处理规则\n  errorRuleUser: [],\n  // 指定人员处理异常\n  formFieldType: 1,\n  // 表单字段审核方式的类型(1-用户 2-部门)\n  initiateType: 6,\n  managerLevel: 1,\n  departmentLevel: 1,\n  formField: '',\n  nodeId: '',\n  getUserUrl: '',\n  initiator: [],\n  flowId: '',\n  flowName: '',\n  assignList: [],\n  prevNodeList: [],\n  launchMsgConfig: {\n    on: 3,\n    msgId: '',\n    msgName: '',\n    templateJson: []\n  },\n  isAsync: false,\n  autoSubmit: false\n};\nvar defaultApproverForm = {\n  extraRule: 1,\n  // 审批人范围,默认无审批人范围\n  extraCopyRule: 1,\n  // 抄送审批人范围,默认无审批人范围\n  hasAgreeRule: false,\n  // 自动同意规则,默认不启用\n  agreeRules: [],\n  // 自动同意规则数组\n  formFieldType: 1,\n  // 表单字段审核方式的类型(1-用户 2-部门)\n  approvers: [],\n  // 审批人集合\n  assigneeType: 6,\n  // 指定审批人\n  userType: 'role',\n  //role,position,user\n  formOperates: [],\n  // 表单权限集合\n  circulateRole: [],\n  // 抄送角色集合\n  circulateUser: [],\n  // 抄送人集合\n  isFormFieldCopy: false,\n  copyFormFieldType: 1,\n  copyFormField: '',\n  isCustomCopy: false,\n  isInitiatorCopy: false,\n  progress: '50',\n  // 进度\n  rejectType: 1,\n  //退回\n  rejectStep: '0',\n  // 退回步骤\n  description: '',\n  // 节点描述\n  managerLevel: 1,\n  departmentLevel: 1,\n  counterSignConfig: {\n    auditType: 1,\n    auditRatio: 100,\n    auditNum: 1,\n    rejectType: 0,\n    rejectRatio: 10,\n    rejectNum: 1\n  },\n  formField: '',\n  nodeId: '',\n  getUserUrl: '',\n  counterSign: 0,\n  noApproverHandler: true,\n  hasFreeApproverBtn: false,\n  hasFreeApproverBtnText: '加 签',\n  hasSaveBtn: false,\n  saveBtnText: '暂 存',\n  hasAuditBtn: true,\n  auditBtnText: '通 过',\n  hasRejectBtn: true,\n  rejectBtnText: '退 回',\n  hasRevokeBtn: true,\n  revokeBtnText: '撤 回',\n  hasTransferBtn: true,\n  transferBtnText: '转 审',\n  hasCancelBtn: false,\n  cancelBtnText: '驳 回',\n  hasPrintBtn: false,\n  printBtnText: '打 印',\n  printId: '',\n  // 打印模板\n  hasSign: false,\n  hasOpinion: true,\n  formId: \"\",\n  formName: \"\",\n  prevNodeList: [],\n  assignList: [],\n  funcConfigRule: 0,\n  approversSortList: [],\n  timeLimitConfig: {\n    on: 2,\n    // 开启\n    nodeLimit: 0,\n    // 节点限定时长起始值类型\n    duringDeal: 24,\n    // 节点处理限定时长(时)\n    formField: '' // 请选择字段\n  },\n  overTimeConfig: {\n    on: 2,\n    // 开启\n    firstOver: 0,\n    // 第一次超时时间(时)\n    overTimeDuring: 2,\n    // 超时间隔(时)\n    overNotice: false,\n    // 超时事务-超时通知\n    overAutoApprove: false,\n    // 超时事务-超时自动审批\n    overAutoApproveTime: 5,\n    // 自动审批超时次数(次)\n    overEvent: false,\n    // 超时事件\n    overEventTime: 5 // 超时事件超时次数(次)\n  },\n  noticeConfig: {\n    on: 2,\n    // 开启\n    firstOver: 1,\n    // 第一次提醒时间(时)\n    overTimeDuring: 2,\n    // 提醒间隔(时)\n    overNotice: false,\n    // 提醒事务-提醒通知\n    overEvent: false,\n    // 提醒事件\n    overEventTime: 5 // 提醒次数(次)\n  },\n  // 节点事件\n  overTimeFuncConfig: {\n    on: false,\n    // 开启\n    interfaceId: '',\n    // 接口id\n    interfaceName: '',\n    // 接口名称\n    templateJson: [] // 模块json\n  },\n  noticeFuncConfig: {\n    on: false,\n    // 开启\n    interfaceId: '',\n    // 接口id\n    interfaceName: '',\n    // 接口名称\n    templateJson: [] // 模块json\n  },\n  overTimeMsgConfig: {\n    on: 2,\n    msgId: '',\n    msgName: '',\n    templateJson: []\n  },\n  noticeMsgConfig: {\n    on: 2,\n    msgId: '',\n    msgName: '',\n    templateJson: []\n  },\n  approveMsgConfig: {\n    on: 2,\n    msgId: '',\n    msgName: '',\n    templateJson: []\n  },\n  rejectMsgConfig: {\n    on: 2,\n    msgId: '',\n    msgName: '',\n    templateJson: []\n  },\n  copyMsgConfig: {\n    on: 2,\n    msgId: '',\n    msgName: '',\n    templateJson: []\n  },\n  approveFuncConfig: {\n    on: false,\n    interfaceId: '',\n    interfaceName: '',\n    templateJson: []\n  },\n  rejectFuncConfig: {\n    on: false,\n    interfaceId: '',\n    interfaceName: '',\n    templateJson: []\n  },\n  recallFuncConfig: {\n    on: false,\n    interfaceId: '',\n    interfaceName: '',\n    templateJson: []\n  }\n};\nvar defaultStep = [{\n  nodeId: '0',\n  properties: {\n    title: '流程发起'\n  }\n}, {\n  nodeId: '1',\n  properties: {\n    title: '上级审批节点'\n  }\n}];\nvar typeOptions = [{\n  label: '指定成员',\n  value: 6\n}, {\n  label: '发起者本人',\n  value: 3\n}, {\n  label: '发起者主管',\n  value: 1\n}, {\n  label: '部门主管',\n  value: 2\n}, {\n  label: '表单变量',\n  value: 4\n}, {\n  label: '流程环节',\n  value: 5\n}, {\n  label: '接口服务',\n  value: 9\n}, {\n  label: '候选人员',\n  value: 7\n}];\nvar noticeOptions = [{\n  value: 1,\n  label: '自定义'\n}, {\n  value: 0,\n  label: '关闭'\n}];\nvar overTimeOptions = [{\n  value: 0,\n  label: '接收时间'\n}, {\n  value: 1,\n  label: '发起时间'\n}, {\n  value: 2,\n  label: '表单变量'\n}];\nvar extraRuleOptions = [{\n  value: 1,\n  label: '无审批人范围'\n}, {\n  value: 6,\n  label: '同一公司'\n}, {\n  value: 2,\n  label: '同一部门'\n}, {\n  value: 3,\n  label: '同一岗位'\n}, {\n  value: 4,\n  label: '发起人上级'\n}, {\n  value: 5,\n  label: '发起人下属'\n}];\nvar nodeNoticeOptions = [{\n  value: 2,\n  label: '同步发起配置'\n}].concat(noticeOptions);\nvar noticeOptionsData = [{\n  value: 3,\n  label: '默认'\n}].concat(noticeOptions);\nvar nodeNoticeOptionsData = [{\n  value: 2,\n  label: '同步发起配置'\n}].concat((0, _toConsumableArray2.default)(noticeOptionsData));\nvar systemFieldOptions = [{\n  __config__: {\n    label: '流程ID',\n    required: true\n  },\n  __vModel__: '@flowId'\n}, {\n  __config__: {\n    label: '任务ID',\n    required: true\n  },\n  __vModel__: '@taskId'\n}, {\n  __config__: {\n    label: '节点ID',\n    required: true\n  },\n  __vModel__: '@taskNodeId'\n}, {\n  __config__: {\n    label: '流程名称',\n    required: true\n  },\n  __vModel__: '@flowFullName'\n}, {\n  __config__: {\n    label: '任务标题',\n    required: true\n  },\n  __vModel__: '@taskFullName'\n}, {\n  __config__: {\n    label: '发起用户ID',\n    required: true\n  },\n  __vModel__: '@launchUserId'\n}, {\n  __config__: {\n    label: '发起用户名',\n    required: true\n  },\n  __vModel__: '@launchUserName'\n}, {\n  __config__: {\n    label: '当前操作用户ID',\n    required: true\n  },\n  __vModel__: '@flowOperatorUserId'\n}, {\n  __config__: {\n    label: '当前操作用户名',\n    required: true\n  },\n  __vModel__: '@flowOperatorUserName'\n}];\nvar auditTypeOptions = [{\n  id: 1,\n  fullName: '按百分比'\n}, {\n  id: 2,\n  fullName: '按人数'\n}];\nvar rejectTypeOptions = [{\n  id: 0,\n  fullName: '无'\n}].concat(auditTypeOptions);\nvar _default = exports.default = {\n  props: [/*当前节点数据*/\"value\", /*整个节点数据*/\"processData\", \"flowType\", 'formInfo'],\n  components: {\n    OrgSelect: _OrgSelect.default,\n    MsgDialog: _msgDialog.default,\n    InterfaceDialog: _InterfaceDialog.default,\n    FormulaDialog: _formulaDialog.default,\n    FlowDialog: _FlowDialog.default,\n    Detail: _TemplateDetail.default,\n    FlowFormDialog: _FlowFormDialog.default,\n    ApproversSortDialog: _ApproversSortDialog.default\n  },\n  data: function data() {\n    return {\n      parameterSource: [{\n        value: 1,\n        label: '字段'\n      }, {\n        value: 2,\n        label: '自定义'\n      }, {\n        value: 3,\n        label: '为空'\n      }],\n      temporaryContent: '',\n      visible: false,\n      // 控制面板显隐\n      activeName: \"config\",\n      // or formAuth  Tab面板key\n      showingPCons: [],\n      // 用户选择了得条件  被选中的才会被展示在面板上编辑\n      pconditions: [],\n      // 从vuex中获取的可以作为流程图条件的集合\n      // 当前节点数据\n      properties: {\n        title: ''\n      },\n      // 发起人  start节点和condition节点需要\n      initiator: [],\n      priorityLength: 0,\n      // 当为条件节点时  显示节点优先级选项的数据\n      startForm: JSON.parse(JSON.stringify(_config.default.defaultStartForm)),\n      ruleVisible: false,\n      subFlowForm: JSON.parse(JSON.stringify(defaultSubFlowForm)),\n      approverForm: JSON.parse(JSON.stringify(defaultApproverForm)),\n      initiateTypeOptions: typeOptions,\n      assigneeTypeOptions: typeOptions,\n      noticeOptions: noticeOptions,\n      nodeNoticeOptions: nodeNoticeOptions,\n      noticeOptionsData: noticeOptionsData,\n      nodeNoticeOptionsData: nodeNoticeOptionsData,\n      systemFieldOptions: systemFieldOptions,\n      overTimeOptions: overTimeOptions,\n      extraRuleOptions: extraRuleOptions,\n      auditTypeOptions: auditTypeOptions,\n      rejectTypeOptions: rejectTypeOptions,\n      realNodeList: [],\n      progressOptions: ['10', '20', '30', '40', '50', '60', '70', '80', '90'],\n      symbolOptions: [{\n        label: '大于等于',\n        value: \">=\"\n      }, {\n        label: '大于',\n        value: \">\"\n      }, {\n        label: '等于',\n        value: \"==\"\n      }, {\n        label: '小于等于',\n        value: \"<=\"\n      }, {\n        label: '小于',\n        value: \"<\"\n      }, {\n        label: '不等于',\n        value: \"<>\"\n      }, {\n        label: '包含',\n        value: \"like\"\n      }, {\n        label: '不包含',\n        value: \"notLike\"\n      }],\n      logicOptions: [{\n        label: 'and',\n        value: \"and\"\n      }, {\n        label: 'or',\n        value: \"or\"\n      }],\n      conditionTypeOptions: [{\n        label: '字段',\n        value: 1\n      }, {\n        label: '公式',\n        value: 3\n      }],\n      conditionTypeOptions1: [{\n        label: '字段',\n        value: 1\n      }, {\n        label: '自定义',\n        value: 2\n      }],\n      assignList: [],\n      printTplList: [],\n      childFieldOptions: [],\n      nodeOptions: [],\n      formulaVisible: false,\n      activeItem: {},\n      viewVisible: false,\n      formFieldList: [],\n      approverTransmitRuleVisible: false,\n      prevNodeList: [],\n      isPrevNodeWithSubForm: false,\n      formOperatesList: [],\n      indeterminateReadFlag: false,\n      readAllChecked: false,\n      indeterminateWriteFlag: false,\n      writeAllChecked: false,\n      requiredAllChecked: false,\n      indeterminateRequiredFlag: false,\n      oldFormId: '',\n      registerApproversSortVisible: false,\n      beforeNodeOptions: []\n    };\n  },\n  computed: {\n    // 未使用的条件个数\n    notUseConNum: function notUseConNum() {\n      // 发起人是默认就有得  所以需要加 1\n      return this.pconditions.length - this.showingPCons.length + 1;\n    },\n    formFieldsOptions: function formFieldsOptions() {\n      return this.formFieldList.filter(function (o) {\n        return o.__config__.jnpfKey !== 'table';\n      });\n    },\n    usedFormItems: function usedFormItems() {\n      return this.formFieldsOptions.filter(function (o) {\n        return o.__vModel__.indexOf('-') < 0;\n      });\n    },\n    funcOptions: function funcOptions() {\n      var options = [].concat(systemFieldOptions, (0, _toConsumableArray2.default)(this.formFieldsOptions));\n      return options;\n    },\n    funcRequiredOptions: function funcRequiredOptions() {\n      return this.formFieldsOptions.filter(function (o) {\n        return o.__config__ && o.__config__.required;\n      });\n    },\n    rejectStepOptions: function rejectStepOptions() {\n      var options = [];\n      var list = [{\n        nodeId: '2',\n        properties: {\n          title: '自选审批节点'\n        }\n      }];\n      options = [].concat(defaultStep, list, (0, _toConsumableArray2.default)(this.realNodeList));\n      if (this.approverForm.rejectType == 2) {\n        options = options.filter(function (o) {\n          return o.nodeId != 1;\n        });\n      }\n      return options;\n    },\n    getCanSetApproversSort: function getCanSetApproversSort() {\n      return this.approverForm.assigneeType === 6 && this.approverForm.approvers.length && this.approverForm.approvers.every(function (o) {\n        return o.indexOf('--user') !== -1;\n      }) && this.approverForm.counterSign == 2;\n    }\n  },\n  methods: {\n    onSwerveNodeChange: function onSwerveNodeChange(id) {\n      if (!id) return;\n      var item = this.beforeNodeOptions.filter(function (o) {\n        return o.id == id;\n      })[0];\n      this.properties.swerveLabel = item.fullName;\n    },\n    onSignNumberChange: function onSignNumberChange(val, key) {\n      var _this2 = this;\n      if (val) return;\n      this.$nextTick(function () {\n        _this2.$set(_this2.approverForm.counterSignConfig, key, 1);\n      });\n    },\n    updateApproversSortList: function updateApproversSortList(data) {\n      this.approverForm.approversSortList = data;\n    },\n    openApproversSortListModal: function openApproversSortListModal() {\n      var _this3 = this;\n      this.registerApproversSortVisible = true;\n      this.approversSort;\n      this.$nextTick(function () {\n        _this3.$refs.approversSort.init({\n          ids: _this3.approverForm.approversSortList\n        });\n      });\n    },\n    onApproversChange: function onApproversChange(val) {\n      var _this4 = this;\n      console.log(val);\n      if (this.approverForm.assigneeType != 6 || !val || !val.length || !val.every(function (o) {\n        return o.indexOf('--user') !== -1;\n      })) return this.approverForm.approversSortList = [];\n      if (!this.approverForm.approversSortList.length) return this.approverForm.approversSortList = val;\n      var arr = this.approverForm.approversSortList.filter(function (o) {\n        return val.indexOf(o) !== -1;\n      });\n      var updated = val.filter(function (o) {\n        return _this4.approverForm.approversSortList.indexOf(o) === -1;\n      });\n      this.approverForm.approversSortList = [].concat((0, _toConsumableArray2.default)(arr), (0, _toConsumableArray2.default)(updated));\n    },\n    handleCheckedCitiesChange: function handleCheckedCitiesChange(val, index) {\n      var totalCount = this.formOperatesList.length;\n      var requiredDisabledCount = this.formOperatesList.filter(function (o) {\n        return !o.requiredDisabled;\n      }).length;\n      var readCount = 0;\n      var writeCount = 0;\n      var requiredCount = 0;\n      this.formOperatesList.forEach(function (item) {\n        if (item.read && index == 1) {\n          readCount++;\n        }\n        if (item.write && index == 2) {\n          writeCount++;\n        }\n        if (item.required && index == 3) {\n          requiredCount++;\n        }\n      });\n      if (index == 1) this.readAllChecked = readCount === totalCount;\n      if (index == 2) this.writeAllChecked = writeCount === totalCount;\n      if (index == 3) this.requiredAllChecked = requiredCount === requiredDisabledCount;\n      if (index == 1) this.indeterminateReadFlag = readCount > 0 && readCount < totalCount;\n      if (index == 2) this.indeterminateWriteFlag = writeCount > 0 && writeCount < totalCount;\n      if (index == 3) this.indeterminateRequiredFlag = requiredCount > 0 && requiredCount < requiredDisabledCount;\n    },\n    updateReadAllSelected: function updateReadAllSelected(val, index) {\n      if (index == 1) this.indeterminateReadFlag = false;\n      if (index == 2) this.indeterminateWriteFlag = false;\n      if (index == 3) this.indeterminateRequiredFlag = false;\n      this.formOperatesList.forEach(function (item) {\n        if (index == 1) item.read = val;\n        if (index == 2) item.write = val;\n        if (index == 3 && !item.requiredDisabled) item.required = val;\n      });\n    },\n    onChangeRelationField: function onChangeRelationField(index, form, type) {\n      var item = this[form][type].templateJson[index];\n      if (item.relationField) item.relationField = undefined;\n      this.$set(this[form][type].templateJson, index, item);\n    },\n    refreshPrintOptions: function refreshPrintOptions() {\n      var _this5 = this;\n      (0, _printDev.getPrintDevSelector)(1).then(function (res) {\n        var data = res.data.list;\n        var list = data.filter(function (o) {\n          return o.children && o.children.length;\n        });\n        _this5.printTplList = list.map(function (o) {\n          return _objectSpread(_objectSpread({}, o), {}, {\n            hasChildren: true\n          });\n        });\n      }).catch(function (error) {\n        reject(error);\n      });\n    },\n    open: function open(url) {\n      window.open(url, \"_blank\");\n    },\n    openPrint: function openPrint() {\n      var routeUrl = this.$router.resolve({\n        path: '/system/printDev?open=true'\n      });\n      this.open(routeUrl.href);\n    },\n    handleSelect: function handleSelect(item) {\n      this.temporaryContent += \"{\" + item.id + \"}\";\n      this.startForm.titleContent = this.temporaryContent;\n    },\n    querySearch: function querySearch(queryString, cb) {\n      var systemParams = [{\n        id: '@flowFullName',\n        value: '@flowFullName(流程名称)'\n      }, {\n        id: '@flowFullCode',\n        value: '@flowFullCode(流程编码)'\n      }, {\n        id: '@launchUserName',\n        value: '@launchUserName(发起用户名)'\n      }, {\n        id: '@launchTime',\n        value: '@launchTime(发起时间)'\n      }];\n      var items = [];\n      items = this.usedFormItems.filter(function (o) {\n        return o.__config__.jnpfKey === 'input' || o.__config__.jnpfKey === 'textarea' || o.__config__.jnpfKey === 'inputNumber';\n      });\n      var params = items.map(function (o) {\n        return {\n          id: o.__vModel__,\n          value: o.__vModel__ + \"(\" + o.__config__.label + \")\"\n        };\n      });\n      cb([].concat(systemParams, (0, _toConsumableArray2.default)(params)));\n    },\n    getFormOperates: function getFormOperates() {\n      var res = [];\n      this.isApproverNode() && (res = this.approverForm.formOperates);\n      this.isStartNode() && (res = this.startForm.formOperates);\n      this.formOperatesList = res;\n      var requiredDisabledCount = this.formOperatesList.filter(function (o) {\n        return !o.requiredDisabled;\n      }).length;\n      var readCount = 0;\n      var writeCount = 0;\n      var requiredCount = 0;\n      if (!this.formOperatesList.length) return res;\n      this.formOperatesList.forEach(function (item) {\n        if (item.read) {\n          readCount++;\n        }\n        if (item.write) {\n          writeCount++;\n        }\n        if (item.required) {\n          requiredCount++;\n        }\n      });\n      this.readAllChecked = readCount === this.formOperatesList.length;\n      this.writeAllChecked = writeCount === this.formOperatesList.length;\n      this.requiredAllChecked = requiredCount === requiredDisabledCount;\n      this.indeterminateReadFlag = readCount > 0 && readCount < this.formOperatesList.length;\n      this.indeterminateWriteFlag = writeCount > 0 && writeCount < this.formOperatesList.length;\n      this.indeterminateRequiredFlag = requiredCount > 0 && requiredCount < requiredDisabledCount;\n      return res;\n    },\n    resetOrgColl: function resetOrgColl() {\n      this.approverForm.approvers = [];\n      this.subFlowForm.initiator = [];\n      this.approverForm.approversSortList = [];\n    },\n    onOrgChange: function onOrgChange(data, key) {},\n    timeRangeLabel: function timeRangeLabel(item) {\n      var index = ['fc-time-duration', 'fc-date-duration'].findIndex(function (t) {\n        return t === item.tag;\n      });\n      if (index > -1) {\n        return '时长' + ['(小时)', '(天)'][index];\n      } else {\n        return item.label;\n      }\n    },\n    getAssignTypeLabel: function getAssignTypeLabel() {\n      var _this6 = this;\n      var res = this.assigneeTypeOptions.find(function (t) {\n        return t.value === _this6.approverForm.assigneeType;\n      });\n      return res ? res.label : '';\n    },\n    changeAllFormOperate: function changeAllFormOperate(val) {\n      var target = this.isStartNode() ? this.startForm : this.approverForm;\n      target.formOperates.forEach(function (t) {\n        return t.formOperate = val;\n      });\n    },\n    // 是否可以显示当前条件组件\n    couldShowIt: function couldShowIt(item) {\n      for (var _len = arguments.length, tag = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        tag[_key - 1] = arguments[_key];\n      }\n      return tag.includes(item.tag) && this.showingPCons.includes(item.formId);\n    },\n    initFormOperates: function initFormOperates(target, isUpdate, isSameForm) {\n      var formOperates = target.properties && target.properties.formOperates || [];\n      var res = [];\n      var getWriteById = function getWriteById(id) {\n        var arr = formOperates.filter(function (o) {\n          return o.id === id;\n        });\n        return arr.length ? arr[0].write : _util.NodeUtils.isStartNode(target);\n      };\n      var getReadById = function getReadById(id) {\n        var arr = formOperates.filter(function (o) {\n          return o.id === id;\n        });\n        return arr.length ? arr[0].read : true;\n      };\n      var getRequiredById = function getRequiredById(id) {\n        var arr = formOperates.filter(function (o) {\n          return o.id === id;\n        });\n        return arr.length ? arr[0].required : false;\n      };\n      if (!formOperates.length || isUpdate) {\n        for (var i = 0; i < this.formFieldList.length; i++) {\n          var data = this.formFieldList[i];\n          res.push({\n            id: data.__vModel__,\n            name: data.__config__.label,\n            required: !isSameForm ? data.__config__.required : data.__config__.required || getRequiredById(data.__vModel__),\n            requiredDisabled: requiredDisabled(data.__config__.jnpfKey) || data.__config__.required,\n            jnpfKey: data.__config__.jnpfKey,\n            dataType: getDataType(data),\n            read: !isSameForm ? true : getReadById(data.__vModel__),\n            write: !isSameForm ? _util.NodeUtils.isStartNode(target) : getWriteById(data.__vModel__)\n          });\n        }\n      } else {\n        res = formOperates;\n      }\n      return res;\n    },\n    initCopyNode: function initCopyNode() {\n      this.properties = this.value.properties;\n    },\n    initStartNodeData: function initStartNodeData() {\n      this.initInitiator();\n    },\n    copyNodeConfirm: function copyNodeConfirm() {\n      this.$emit(\"confirm\", this.properties, this.getOrgSelectLabel('copy') || '发起人自选');\n      this.visible = false;\n    },\n    /**\n     * 条件节点确认保存得回调\n     */\n    conditionNodeConfirm: function conditionNodeConfirm() {\n      if (!this.exist()) return;\n      if (this.properties.conditionType == 1 && !this.properties.swerveNode) return this.$message.error('请设置转向节点');\n      this.properties.conditions = this.pconditions;\n      var content = '';\n      for (var i = 0; i < this.properties.conditions.length; i++) {\n        var e = this.properties.conditions[i];\n        content += this.properties.conditions.length == 1 ? '' : (i == 0 ? '' : \" \".concat(this.properties.matchLogic, \" \")) + '( ';\n        for (var j = 0; j < e.groups.length; j++) {\n          var groups = e.groups[j];\n          var logic = j == 0 ? '' : \" \".concat(e.logic, \" \");\n          var text = \"[ \".concat(groups.fieldName, \" \").concat(groups.symbolName, \"\\n        \").concat(groups.fieldLabel ? groups.fieldLabel : groups.fieldValue || groups.fieldValue === 0 ? groups.fieldValue : '', \" ]\");\n          content += logic + text;\n        }\n        content += this.properties.conditions.length == 1 ? '' : ' )';\n      }\n      if (this.properties.conditionType == 1) content += ' 转向' + this.properties.swerveLabel;\n      this.$emit(\"confirm\", this.properties, content || '请设置条件');\n      this.visible = false;\n    },\n    getOrgSelectLabel: function getOrgSelectLabel(type) {\n      return this.$refs[type + '-org'] && this.$refs[type + '-org']['selectedLabels'];\n    },\n    /**\n     * 开始节点确认保存\n     */\n    startNodeConfirm: function startNodeConfirm() {\n      if (this.startForm.errorRule == 2 && !this.startForm.errorRuleUser.length) {\n        this.$message({\n          message: '请选择异常处理人',\n          type: 'error'\n        });\n        return;\n      }\n      if (this.startForm.hasPrintBtn && !this.startForm.printId) {\n        this.$message.warning('请选择打印模板');\n        return this.value;\n      }\n      var titleObj = {\n        title: this.properties.title\n      };\n      Object.assign(this.properties, this.startForm, titleObj);\n      this.properties.initiator = this.initiator;\n      var content = '',\n        initiatorText = this.getOrgSelectLabel('start-user');\n      if (!initiatorText) {\n        content = \"所有人\";\n      } else {\n        content += (content && initiatorText ? ',' : '') + initiatorText;\n      }\n      this.$emit(\"confirm\", this.properties, content);\n      this.visible = false;\n    },\n    /**\n     * 定时器节点确认保存\n     */\n    timerNodeConfirm: function timerNodeConfirm() {\n      var content = '';\n      var _this$properties = this.properties,\n        day = _this$properties.day,\n        hour = _this$properties.hour,\n        minute = _this$properties.minute,\n        second = _this$properties.second;\n      if (!day && !hour && !minute && !second) {\n        content = '请设置时间';\n      } else {\n        content = \"\\u5C06\\u4E8E\".concat(day ? day + '天' : '').concat(hour ? hour + '小时' : '').concat(minute ? minute + '分钟' : '').concat(second ? second + '秒' : '', \"\\u540E\\u6D41\\u8F6C\");\n      }\n      this.$emit(\"confirm\", this.properties, content);\n      this.visible = false;\n    },\n    /**\n     * 子流程节点确认保存\n     */\n    subFlowNodeConfirm: function subFlowNodeConfirm() {\n      var _this7 = this;\n      if (!this.properties.title) {\n        this.$message({\n          message: '请输入子流程名称',\n          type: 'error'\n        });\n        return;\n      }\n      var content = '';\n      if (this.subFlowForm.initiateType === 6) {\n        if (!this.subFlowForm.initiator.length) {\n          this.$message({\n            message: '请设置发起人',\n            type: 'error'\n          });\n          return;\n        }\n        var initiatorText = this.getOrgSelectLabel('subFlow-user');\n        content += (content && initiatorText ? ',' : '') + initiatorText;\n      } else {\n        content = this.initiateTypeOptions.find(function (t) {\n          return t.value === _this7.subFlowForm.initiateType;\n        }).label;\n      }\n      if (this.subFlowForm.initiateType == 4 && !this.subFlowForm.formField) {\n        this.$message({\n          message: '请选择表单字段',\n          type: 'error'\n        });\n        return;\n      }\n      if (this.subFlowForm.initiateType == 5 && !this.subFlowForm.nodeId) {\n        this.$message({\n          message: '请选择节点',\n          type: 'error'\n        });\n        return;\n      }\n      if (this.subFlowForm.initiateType == 9 && !this.subFlowForm.getUserUrl) {\n        this.$message({\n          message: '请输入接口路径',\n          type: 'error'\n        });\n        return;\n      }\n      if (!this.subFlowForm.flowId) {\n        this.$message({\n          message: '请选择子流程表单',\n          type: 'error'\n        });\n        return;\n      }\n      if (this.subFlowForm.errorRule == 2 && !this.subFlowForm.errorRuleUser.length) {\n        this.$message({\n          message: '请选择异常处理人',\n          type: 'error'\n        });\n        return;\n      }\n      var titleObj = {\n        title: this.properties.title\n      };\n      Object.assign(this.properties, this.subFlowForm, titleObj);\n      this.$emit(\"confirm\", this.properties, content || '请设置发起人');\n      this.visible = false;\n    },\n    /**\n     * 审批节点确认保存\n     */\n    approverNodeConfirm: function approverNodeConfirm() {\n      if (!this.properties.title) {\n        this.$message({\n          message: '请输入节点名称',\n          type: 'error'\n        });\n        return;\n      }\n      if (this.approverForm.hasPrintBtn && !this.approverForm.printId) {\n        this.$message.warning('请选择打印模板');\n        return this.value;\n      }\n      var assigneeType = this.approverForm.assigneeType;\n      var content = '';\n      if (assigneeType == 6) {\n        if (!this.approverForm.approvers.length) {\n          this.$message({\n            message: '请设置审批人',\n            type: 'error'\n          });\n          return;\n        }\n        // approver\n        var approverText = this.getOrgSelectLabel('approver-user');\n        content += (content && approverText ? ',' : '') + approverText;\n      } else {\n        content = this.assigneeTypeOptions.find(function (t) {\n          return t.value === assigneeType;\n        }).label;\n      }\n      if (assigneeType == 4 && !this.approverForm.formField) {\n        this.$message({\n          message: '请选择表单字段',\n          type: 'error'\n        });\n        return;\n      }\n      if (assigneeType == 5 && !this.approverForm.nodeId) {\n        this.$message({\n          message: '请选择节点',\n          type: 'error'\n        });\n        return;\n      }\n      if (assigneeType == 9 && !this.approverForm.getUserUrl) {\n        this.$message({\n          message: '请输入接口路径',\n          type: 'error'\n        });\n        return;\n      }\n      if (this.approverForm.hasAgreeRule && !this.approverForm.agreeRules.length) {\n        this.$message({\n          message: '请选择同意规则配置',\n          type: 'error'\n        });\n        return;\n      }\n      var titleObj = {\n        title: this.properties.title\n      };\n      Object.assign(this.properties, this.approverForm, titleObj);\n      this.$emit(\"confirm\", this.properties, content || '请设置审批人');\n      this.visible = false;\n    },\n    // 确认修改\n    confirm: function confirm() {\n      this.isCopyNode() && this.copyNodeConfirm();\n      this.isStartNode() && this.startNodeConfirm();\n      this.isTimerNode() && this.timerNodeConfirm();\n      this.isSubFlowNode() && this.subFlowNodeConfirm();\n      this.isApproverNode() && this.approverNodeConfirm();\n      this.isConditionNode() && this.conditionNodeConfirm();\n    },\n    // 关闭抽屉\n    cancel: function cancel() {\n      var _this8 = this;\n      setTimeout(function () {\n        _this8.$emit(\"cancel\");\n        _this8.visible = false;\n      }, 0);\n    },\n    /**\n     * 删除流程条件\n     */\n    onDelCondition: function onDelCondition(index) {\n      this.pconditions.splice(index, 1);\n    },\n    // 配合getPriorityLength 获取前一个节点条件数组长度 用于设置优先级\n    getPrevData: function getPrevData() {\n      return _util.NodeUtils.getPreviousNode(this.value.prevId, this.processData);\n    },\n    // 用于获取节点优先级范围\n    getPriorityLength: function getPriorityLength() {\n      this.priorityLength = this.getPrevData().conditionNodes.length;\n    },\n    // 判断是否是条件节点\n    isConditionNode: function isConditionNode() {\n      return this.value ? _util.NodeUtils.isConditionNode(this.value) : false;\n    },\n    /** 判断是否是审批节点*/isApproverNode: function isApproverNode() {\n      return this.value ? _util.NodeUtils.isApproverNode(this.value) : false;\n    },\n    isStartNode: function isStartNode() {\n      return this.value ? _util.NodeUtils.isStartNode(this.value) : false;\n    },\n    isCopyNode: function isCopyNode() {\n      return this.value ? _util.NodeUtils.isCopyNode(this.value) : false;\n    },\n    isTimerNode: function isTimerNode() {\n      return this.value ? _util.NodeUtils.isTimerNode(this.value) : false;\n    },\n    isSubFlowNode: function isSubFlowNode() {\n      return this.value ? _util.NodeUtils.isSubFlowNode(this.value) : false;\n    },\n    // 初始化发起人节点\n    initInitiator: function initInitiator() {\n      this.initiator = this.value.properties && this.value.properties.initiator;\n      var properties = JSON.parse(JSON.stringify(this.value.properties));\n      Object.assign(this.startForm, properties);\n      this.oldFormId = this.startForm.formId;\n      if (!this.oldFormId) return;\n      var formFieldList = [];\n      if (this.startForm.allFormMap && this.startForm.allFormMap['form_' + this.oldFormId]) {\n        formFieldList = this.startForm.allFormMap['form_' + this.oldFormId] || [];\n      }\n      this.formFieldList = formFieldList;\n      this.getFormOperates();\n    },\n    /**\n    * 初始化审批节点所需数据\n    */\n    initApproverNodeData: function initApproverNodeData() {\n      this.activeName = 'config';\n      this.isPrevNodeWithSubForm = false;\n      var properties = JSON.parse(JSON.stringify(this.value.properties));\n      var formFieldList = [];\n      var formId = properties.formId || this.processData.properties.formId;\n      this.oldFormId = formId;\n      if (formId && this.processData.properties.allFormMap && this.processData.properties.allFormMap['form_' + formId]) {\n        formFieldList = this.processData.properties.allFormMap['form_' + formId] || [];\n      }\n      this.formFieldList = formFieldList;\n      this.approverForm.formOperates = this.initFormOperates(this.value);\n      Object.assign(this.approverForm, properties);\n      this.getNodeOption();\n      this.getPrevNodeOption();\n      this.approverForm.approveMsgConfig.on = typeof this.approverForm.approveMsgConfig.on === 'number' ? this.approverForm.approveMsgConfig.on : 2;\n      this.approverForm.rejectMsgConfig.on = typeof this.approverForm.rejectMsgConfig.on === 'number' ? this.approverForm.rejectMsgConfig.on : 2;\n      this.getFormOperates();\n    },\n    initSubFlowData: function initSubFlowData() {\n      this.getNodeOption();\n      this.getPrevNodeOption();\n      var properties = JSON.parse(JSON.stringify(this.value.properties));\n      Object.assign(this.subFlowForm, properties);\n      var prevNode = this.prevNodeList[0];\n      var formFieldList = [];\n      var formId = prevNode.properties.formId || this.processData.properties.formId;\n      if (formId && this.processData.properties.allFormMap && this.processData.properties.allFormMap['form_' + formId]) {\n        formFieldList = this.processData.properties.allFormMap['form_' + formId] || [];\n      }\n      this.formFieldList = formFieldList;\n      this.subFlowForm.launchMsgConfig.on = typeof this.subFlowForm.launchMsgConfig.on === 'number' ? this.subFlowForm.launchMsgConfig.on : 0;\n    },\n    openApproverTransmitRuleBox: function openApproverTransmitRuleBox() {\n      var assignList = this.approverForm.assignList ? JSON.parse(JSON.stringify(this.approverForm.assignList)) : [];\n      this.getRealAssignList(assignList);\n      this.approverTransmitRuleVisible = true;\n    },\n    getRealAssignList: function getRealAssignList(assignList) {\n      var _this9 = this;\n      var newAssignList = this.prevNodeList.map(function (o) {\n        var formFieldList = [];\n        var formId = o.properties.formId || _this9.processData.properties.formId;\n        if (formId && _this9.processData.properties.allFormMap && _this9.processData.properties.allFormMap['form_' + formId]) {\n          formFieldList = _this9.processData.properties.allFormMap['form_' + formId] || [];\n        }\n        formFieldList = formFieldList.filter(function (o) {\n          return o.__config__.jnpfKey !== 'table';\n        });\n        return {\n          nodeId: o.nodeId,\n          title: o.properties.title,\n          formFieldList: formFieldList,\n          ruleList: []\n        };\n      });\n      if (!assignList.length) {\n        this.assignList = newAssignList;\n      } else {\n        var list = [];\n        // 去掉被删掉的节点\n        for (var i = 0; i < assignList.length; i++) {\n          var e = assignList[i];\n          inter: for (var j = 0; j < newAssignList.length; j++) {\n            if (e.nodeId === newAssignList[j].nodeId) {\n              var item = {\n                nodeId: e.nodeId,\n                title: newAssignList[j].title,\n                formFieldList: newAssignList[j].formFieldList,\n                ruleList: e.ruleList\n              };\n              list.push(item);\n              break inter;\n            }\n          }\n        }\n        var addList = newAssignList.filter(function (o) {\n          return !assignList.some(function (item) {\n            return item.nodeId === o.nodeId;\n          });\n        });\n        this.assignList = [].concat(list, (0, _toConsumableArray2.default)(addList));\n      }\n    },\n    addTransmitRule: function addTransmitRule(i) {\n      this.assignList[i].ruleList.push({\n        parentField: '',\n        childField: '',\n        childFieldOptions: []\n      });\n    },\n    delTransmitRule: function delTransmitRule(i, cIndex) {\n      this.assignList[i].ruleList.splice(cIndex, 1);\n    },\n    saveApproverTransmitRule: function saveApproverTransmitRule() {\n      var boo = true;\n      for (var i = 0; i < this.assignList.length; i++) {\n        var e = this.assignList[i];\n        var ruleList = e.ruleList;\n        for (var j = 0; j < ruleList.length; j++) {\n          if (!ruleList[j].parentField) {\n            boo = false;\n            this.$message({\n              message: \"\\u8BF7\\u9009\\u62E9\".concat(e.title, \"\\u7684\\u4E0A\\u8282\\u70B9\\u5B57\\u6BB5\"),\n              type: 'error'\n            });\n            break;\n          }\n          if (!ruleList[j].childField) {\n            boo = false;\n            this.$message({\n              message: \"\\u8BF7\\u9009\\u62E9\".concat(e.title, \"\\u7684\\u672C\\u8282\\u70B9\\u5B57\\u6BB5\"),\n              type: 'error'\n            });\n            break;\n          }\n        }\n      }\n      if (!boo) return;\n      this.approverForm.assignList = this.assignList;\n      this.approverTransmitRuleVisible = false;\n      this.assignList = [];\n    },\n    openRuleBox: function openRuleBox() {\n      var _this10 = this;\n      if (!this.subFlowForm.flowId) {\n        this.$message({\n          message: '请选择子流程表单',\n          type: 'error'\n        });\n        return;\n      }\n      (0, _FlowEngine.getFlowFormInfo)(this.subFlowForm.flowId).then(function (res) {\n        var _res$data = res.data,\n          _res$data$formType = _res$data.formType,\n          formType = _res$data$formType === void 0 ? 1 : _res$data$formType,\n          propertyJson = _res$data.propertyJson;\n        var formJson = {},\n          fieldList = [];\n        if (propertyJson) formJson = JSON.parse(propertyJson);\n        if (formType == 1) {\n          fieldList = _this10.transformFormJson(formJson);\n        } else {\n          fieldList = formJson.fields;\n        }\n        _this10.childFieldOptions = _this10.transformFieldList(fieldList).filter(function (o) {\n          return o.__config__.jnpfKey !== 'table';\n        });\n        var assignList = _this10.subFlowForm.assignList ? JSON.parse(JSON.stringify(_this10.subFlowForm.assignList)) : [];\n        _this10.getRealAssignList(assignList);\n        _this10.ruleVisible = true;\n      });\n    },\n    saveRule: function saveRule() {\n      var boo = true;\n      for (var i = 0; i < this.assignList.length; i++) {\n        var e = this.assignList[i];\n        var ruleList = e.ruleList;\n        for (var j = 0; j < ruleList.length; j++) {\n          if (!ruleList[j].parentField) {\n            boo = false;\n            this.$message({\n              message: \"\\u8BF7\\u9009\\u62E9\".concat(e.title, \"\\u7684\\u7236\\u6D41\\u7A0B\\u5B57\\u6BB5\"),\n              type: 'error'\n            });\n            break;\n          }\n          if (!ruleList[j].childField) {\n            boo = false;\n            this.$message({\n              message: \"\\u8BF7\\u9009\\u62E9\".concat(e.title, \"\\u7684\\u5B50\\u6D41\\u7A0B\\u5B57\\u6BB5\"),\n              type: 'error'\n            });\n            break;\n          }\n        }\n      }\n      if (!boo) return;\n      this.subFlowForm.assignList = this.assignList;\n      this.ruleVisible = false;\n      this.assignList = [];\n    },\n    // 获取上一节数据\n    getPrevNodeOption: function getPrevNodeOption() {\n      var _this11 = this;\n      var prevNode = _util.NodeUtils.getPreviousNode(this.value.prevId, this.processData);\n      var node = JSON.parse(JSON.stringify(prevNode));\n      delete node.childNode;\n      var prevNodeList = [];\n      var loop = function loop(nodeData) {\n        if (nodeData.conditionNodes) {\n          var hasCondition = nodeData.conditionNodes.some(function (o) {\n            return o.nodeId === _this11.value.nodeId;\n          });\n          if (hasCondition) return prevNodeList.push(nodeData);\n        }\n        if (nodeData.childNode) {\n          loop(nodeData.childNode);\n        } else if (nodeData.conditionNodes && !nodeData.childNode) {\n          var _iterator = _createForOfIteratorHelper(nodeData.conditionNodes),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var c = _step.value;\n              loop(c);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          prevNodeList.push(nodeData);\n        }\n      };\n      loop(node);\n      this.prevNodeList = prevNodeList;\n      this.getPrevNodeRealList();\n    },\n    getPrevNodeRealList: function getPrevNodeRealList() {\n      var _this12 = this;\n      var loop = function loop(data) {\n        var _loop = function _loop(i) {\n          if (['condition', 'subFlow', 'timer'].includes(data[i].type)) {\n            if (data[i].type === 'subFlow') _this12.isPrevNodeWithSubForm = true;\n            var prevNode = _util.NodeUtils.getPreviousNode(data[i].prevId, _this12.processData);\n            var node = JSON.parse(JSON.stringify(prevNode));\n            delete node.childNode;\n            var prevNodeList = [];\n            var getPrevNodeAllList = function getPrevNodeAllList(nodeData) {\n              if (nodeData.conditionNodes) {\n                var hasCondition = nodeData.conditionNodes.some(function (o) {\n                  return o.nodeId === data[i].nodeId;\n                });\n                if (hasCondition) return prevNodeList.push(nodeData);\n              }\n              if (nodeData.childNode) {\n                getPrevNodeAllList(nodeData.childNode);\n              } else if (nodeData.conditionNodes && !nodeData.childNode) {\n                var _iterator2 = _createForOfIteratorHelper(nodeData.conditionNodes),\n                  _step2;\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    var c = _step2.value;\n                    getPrevNodeAllList(c);\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n              } else {\n                prevNodeList.push(nodeData);\n              }\n            };\n            getPrevNodeAllList(node);\n            data.splice.apply(data, [i, 1].concat(prevNodeList));\n            loop(data);\n            return 1; // break inner\n          }\n        };\n        inner: for (var i = 0; i < data.length; i++) {\n          if (_loop(i)) break inner;\n        }\n      };\n      loop(this.prevNodeList);\n      this.prevNodeList = this.unique(this.prevNodeList, 'nodeId');\n    },\n    // 去重\n    unique: function unique(arr, attrName) {\n      var res = new Map();\n      // 根据对象的某个属性值去重\n      return arr.filter(function (o) {\n        return !res.has(o[attrName]) && res.set(o[attrName], 1);\n      });\n    },\n    // 获取退回步骤选项\n    getNodeOption: function getNodeOption() {\n      var list = [],\n        _this = this;\n      var loop = function loop(data) {\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d);\n        });\n        if (data.type === 'approver') list.push(data);\n        if (data.conditionNodes && Array.isArray(data.conditionNodes)) loop(data.conditionNodes);\n        if (data.childNode) loop(data.childNode);\n      };\n      loop(this.processData);\n      var beforeNodeList = [];\n      for (var i = 0; i < list.length; i++) {\n        if (list[i].nodeId === _this.value.nodeId) break;\n        beforeNodeList.push(list[i]);\n      }\n      this.beforeNodeOptions = beforeNodeList.map(function (o) {\n        return {\n          id: o.nodeId,\n          fullName: o.properties.title\n        };\n      });\n      var realList = [];\n      for (var _i = 0; _i < list.length; _i++) {\n        if (list[_i].nodeId === _this.value.nodeId) break;\n        realList.push(list[_i]);\n      }\n      this.realNodeList = realList;\n      var nodeOptions = list.filter(function (o) {\n        return o.nodeId !== _this.value.nodeId;\n      });\n      this.nodeOptions = nodeOptions;\n    },\n    getSwerveNodeOption: function getSwerveNodeOption() {\n      var list = [];\n      var loop = function loop(data) {\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d);\n        });\n        if (data.type === 'approver' || data.type === 'start') list.push(data);\n        if (data.conditionNodes && Array.isArray(data.conditionNodes)) loop(data.conditionNodes);\n        if (data.childNode) loop(data.childNode);\n      };\n      loop(this.processData);\n      var prevNode = this.prevNodeList[0];\n      var beforeNodeList = [];\n      for (var i = 0; i < list.length; i++) {\n        if (list[i].nodeId === prevNode.nodeId) break;\n        beforeNodeList.push(list[i]);\n      }\n      this.beforeNodeOptions = beforeNodeList.map(function (o) {\n        return {\n          id: o.nodeId,\n          fullName: o.properties.title\n        };\n      });\n    },\n    /**\n     * 初始化条件节点数据\n     */\n    initConditionNodeData: function initConditionNodeData() {\n      this.getConditionNodeFieldList();\n      this.getSwerveNodeOption();\n      // 初始化条件表单数据\n      var nodeConditions = this.value.properties && this.value.properties.conditions;\n      for (var i = 0; i < nodeConditions.length; i++) {\n        for (var j = 0; j < this.usedFormItems.length; j++) {\n          if (nodeConditions[i].__vModel__ === this.usedFormItems[j].__vModel__) {\n            nodeConditions[i] = _objectSpread(_objectSpread({}, nodeConditions[i]), this.usedFormItems[j]);\n          }\n        }\n      }\n      this.pconditions = JSON.parse(JSON.stringify(nodeConditions));\n      this.pconditions.matchLogic = this.properties.matchLogic || 'and';\n    },\n    addCondition: function addCondition() {\n      var item = {\n        logic: \"&&\",\n        groups: [{\n          fieldValue: \"\",\n          props: {},\n          fieldType: 1,\n          fieldValueType: 2,\n          fieldLabel: \"\",\n          dataOptions: [],\n          dataLabel: \"\",\n          dataValue: \"\",\n          field: \"\",\n          symbol: \"\",\n          jnpfKey: \"\"\n        }]\n      };\n      this.pconditions.push(item);\n    },\n    getConditionNodeFieldList: function getConditionNodeFieldList() {\n      this.getPrevNodeOption();\n      if (!this.prevNodeList.length) {\n        this.formFieldList = [];\n      } else {\n        var prevNode = this.prevNodeList[0];\n        var formFieldList = [];\n        var formId = prevNode.properties.formId || this.processData.properties.formId;\n        if (formId && this.processData.properties.allFormMap && this.processData.properties.allFormMap['form_' + formId]) {\n          formFieldList = this.processData.properties.allFormMap['form_' + formId] || [];\n        }\n        this.formFieldList = formFieldList.filter(function (o) {\n          return o.__config__.jnpfKey !== 'table';\n        });\n      }\n    },\n    fieldNameChange: function fieldNameChange(val, item, i, childIndex) {\n      var obj = this.usedFormItems.filter(function (o) {\n        return o.__vModel__ == val;\n      })[0];\n      item.fieldName = obj.__config__.label;\n      item.jnpfKey = obj.__config__.jnpfKey;\n      item = _objectSpread(_objectSpread({}, item), obj);\n      item.fieldValue = undefined;\n      item.fieldLabel = '';\n      item.fieldValueJnpfKey = '';\n      this.$set(this.pconditions[i].groups, childIndex, item);\n    },\n    symbolChange: function symbolChange(val, item) {\n      var obj = this.symbolOptions.filter(function (o) {\n        return o.value == val;\n      })[0];\n      item.symbolName = obj.label;\n    },\n    logicChange: function logicChange(val, item) {\n      var obj = this.logicOptions.filter(function (o) {\n        return o.value == val;\n      })[0];\n      item.logicName = obj.label;\n    },\n    fieldValueTypeChange: function fieldValueTypeChange(item) {\n      item.fieldValue = '';\n      item.fieldLabel = '';\n      item.fieldValueJnpfKey = '';\n    },\n    fieldTypeChange: function fieldTypeChange(item) {\n      item.field = '';\n      item.fieldName = '';\n      item.jnpfKey = '';\n      item.fieldValue = '';\n    },\n    fieldValueChange: function fieldValueChange(val, item) {\n      var obj = this.usedFormItems.filter(function (o) {\n        return o.__vModel__ == val;\n      })[0];\n      item.fieldLabel = obj.__config__.label;\n      item.fieldValueJnpfKey = obj.__config__.jnpfKey || '';\n    },\n    // 条件字段验证\n    exist: function exist() {\n      var isOk = true;\n      //  遍历数组，判断非空\n      for (var i = 0; i < this.pconditions.length; i++) {\n        var e = this.pconditions[i];\n        if (!e.groups.length) return this.$message.warning('条件配置不能为空');\n        for (var index = 0; index < e.groups.length; index++) {\n          var element = e.groups[index];\n          if (!element.field && element.fieldType == 1) {\n            this.$message({\n              showClose: true,\n              message: '条件字段不能为空',\n              type: 'error',\n              duration: 1000\n            });\n            isOk = false;\n            break;\n          }\n          if (!element.symbol) {\n            this.$message({\n              showClose: true,\n              message: '比较不能为空',\n              type: 'error',\n              duration: 1000\n            });\n            isOk = false;\n            break;\n          }\n        }\n      }\n      return isOk;\n    },\n    getPrintTplList: function getPrintTplList() {\n      var _this13 = this;\n      this.$store.dispatch('base/getPrintFlowTree').then(function (res) {\n        var list = res.filter(function (o) {\n          return o.children && o.children.length;\n        });\n        _this13.printTplList = list.map(function (o) {\n          return _objectSpread(_objectSpread({}, o), {}, {\n            hasChildren: true\n          });\n        });\n      });\n    },\n    onMsgChange: function onMsgChange(obj, key, params) {\n      var _params = (0, _slicedToArray2.default)(params, 2),\n        id = _params[0],\n        item = _params[1];\n      if (!id) {\n        this[obj][key].msgId = '';\n        this[obj][key].msgName = '';\n        this[obj][key].templateJson = [];\n        return;\n      }\n      if (this[obj][key].msgId === id) return;\n      this[obj][key].msgId = id;\n      this[obj][key].msgName = item.fullName;\n      this[obj][key].templateJson = item.templateJson;\n    },\n    onFuncChange: function onFuncChange(obj, key, params) {\n      var _params2 = (0, _slicedToArray2.default)(params, 2),\n        id = _params2[0],\n        item = _params2[1];\n      if (!id) {\n        this[obj][key].interfaceId = '';\n        this[obj][key].interfaceName = '';\n        this[obj][key].templateJson = [];\n        return;\n      }\n      if (this[obj][key].interfaceId === id) return;\n      this[obj][key].interfaceId = id;\n      this[obj][key].interfaceName = item.fullName;\n      this[obj][key].templateJson = item.templateJson.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          sourceType: 1\n        });\n      });\n    },\n    onRelationFieldChange: function onRelationFieldChange(val, item) {\n      if (!val) return;\n      var list = this.funcOptions.filter(function (o) {\n        return val === o.__vModel__;\n      });\n      if (!list.length) return;\n      var obj = list[0];\n      this.$set(item, 'isSubTable', obj.__config__ && obj.__config__.isSubTable ? obj.__config__.isSubTable : false);\n    },\n    onSubFlowIdChange: function onSubFlowIdChange(id, item) {\n      if (!id) {\n        this.subFlowForm.flowId = '';\n        this.subFlowForm.flowName = '';\n        return;\n      }\n      if (this.subFlowForm.flowId === id) return;\n      this.subFlowForm.flowId = id;\n      this.subFlowForm.flowName = item.fullName;\n      this.subFlowForm.assignList = [];\n    },\n    addGroup: function addGroup() {\n      var item = {\n        logic: \"and\",\n        groups: [{\n          fieldName: '',\n          symbolName: '',\n          fieldValue: undefined,\n          fieldType: 1,\n          fieldValueType: 2,\n          fieldLabel: '',\n          fieldValueJnpfKey: '',\n          logicName: '并且',\n          field: '',\n          symbol: '',\n          logic: '&&',\n          jnpfKey: '',\n          cellKey: +new Date()\n        }]\n      };\n      this.pconditions.push(item);\n    },\n    addItem: function addItem(index) {\n      this.pconditions[index].groups.push({\n        fieldName: '',\n        symbolName: '',\n        fieldValue: undefined,\n        fieldType: 1,\n        fieldValueType: 2,\n        fieldLabel: '',\n        fieldValueJnpfKey: '',\n        logicName: '并且',\n        field: '',\n        symbol: '',\n        logic: '&&',\n        jnpfKey: '',\n        cellKey: +new Date()\n      });\n    },\n    delGroup: function delGroup(index) {\n      this.pconditions.splice(index, 1);\n    },\n    delItem: function delItem(index, childIndex) {\n      this.pconditions[index].groups.splice(childIndex, 1);\n    },\n    // 条件节点\n    onConditionDateChange: function onConditionDateChange(val, item) {\n      if (!val) return item.fieldLabel = '';\n      var format = item.format || 'yyyy-MM-dd HH:mm:ss';\n      item.fieldLabel = this.jnpf.toDate(val, format);\n    },\n    onConditionListChange: function onConditionListChange(data, item) {\n      if (!data || !data[1]) return item.fieldLabel = '';\n      var labelList = data[1].map(function (o) {\n        return o.fullName;\n      });\n      item.fieldLabel = labelList.join('/');\n    },\n    onConditionObjChange: function onConditionObjChange(data, item) {\n      if (!data || !data[1]) return item.fieldLabel = '';\n      item.fieldLabel = data[1].fullName || '';\n    },\n    editFormula: function editFormula(item) {\n      var _this14 = this;\n      this.activeItem = item;\n      this.$nextTick(function () {\n        _this14.formulaVisible = true;\n      });\n    },\n    updateFormula: function updateFormula(formula) {\n      this.activeItem.field = formula;\n      this.activeItem.fieldName = formula;\n    },\n    goDetail: function goDetail(id) {\n      var _this15 = this;\n      this.viewVisible = true;\n      this.$nextTick(function () {\n        _this15.$refs.View.init(id);\n      });\n    },\n    onStartFormIdChange: function onStartFormIdChange(id, item) {\n      if (!id) return this.handleNull('startForm');\n      var isSameForm = this.startForm.formId === id;\n      this.startForm.formName = item.fullName;\n      this.startForm.formId = id;\n      this.getFormFieldList(id, 'startForm', isSameForm);\n    },\n    onApproverFormIdChange: function onApproverFormIdChange(id, item) {\n      if (!id) return this.handleNull('approverForm');\n      var isSameForm = this.startForm.formId === id;\n      this.approverForm.formName = item.fullName;\n      this.approverForm.formId = id;\n      this.approverForm.assignList = [];\n      this.getFormFieldList(id, 'approverForm', isSameForm);\n    },\n    handleNull: function handleNull(form) {\n      this[form].formName = '';\n      this[form].formId = '';\n      var formFieldList = [];\n      if (form === 'approverForm') {\n        var formId = this.processData.properties.formId;\n        if (formId && this.processData.properties.allFormMap && this.processData.properties.allFormMap['form_' + formId]) {\n          formFieldList = this.processData.properties.allFormMap['form_' + formId] || [];\n        }\n      }\n      this.formFieldList = formFieldList;\n      this[form].formOperates = this.initFormOperates(this.value, true);\n      if (form === 'startForm') this.updateAllNodeFormOperates();\n      this.updateAllFormMap('', form, formFieldList);\n    },\n    getFormFieldList: function getFormFieldList(id, form, isSameForm) {\n      var _this16 = this;\n      (0, _FormDesign.getFormInfo)(id).then(function (res) {\n        var _res$data2 = res.data,\n          _res$data2$formType = _res$data2.formType,\n          formType = _res$data2$formType === void 0 ? 1 : _res$data2$formType,\n          propertyJson = _res$data2.propertyJson;\n        var formJson = {},\n          fieldList = [];\n        if (propertyJson) formJson = JSON.parse(propertyJson);\n        if (formType == 1) {\n          fieldList = _this16.transformFormJson(formJson);\n        } else {\n          fieldList = formJson.fields;\n        }\n        var list = _this16.transformFieldList(fieldList);\n        _this16.formFieldList = list;\n        _this16[form].formOperates = _this16.initFormOperates(_this16.value, true, isSameForm);\n        _this16.updateAllFormMap(id, form, list);\n        // 更新所有没设置表单的节点的表单权限\n        if (form === 'startForm') _this16.updateAllNodeFormOperates(isSameForm);\n        _this16.getFormOperates();\n      });\n    },\n    // 更新allFormMap\n    updateAllFormMap: function updateAllFormMap(id, form, list) {\n      if (form === 'startForm') {\n        if (!this[form].allFormMap) this[form].allFormMap = {};\n        if (this.oldFormId && !this.getHasSameFormId(this.oldFormId)) delete this[form].allFormMap['form_' + this.oldFormId];\n        if (id) this[form].allFormMap['form_' + id] = list;\n      } else {\n        if (!this.processData.properties.allFormMap) this.processData.properties.allFormMap = {};\n        if (this.oldFormId && !this.getHasSameFormId(this.oldFormId)) delete this.processData.properties.allFormMap['form_' + this.oldFormId];\n        if (id) this.processData.properties.allFormMap['form_' + id] = list;\n      }\n      this.oldFormId = id;\n    },\n    // 判断其他节点是否跟当前节点旧表单同一表单\n    getHasSameFormId: function getHasSameFormId(formId) {\n      var _this17 = this;\n      if (!formId) return false;\n      var hasSameFormId = false;\n      var loop = function loop(data) {\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d);\n        });\n        if ((data.type === 'approver' || data.type === 'start') && data.nodeId !== _this17.value.nodeId && data.properties.formId === formId) {\n          return hasSameFormId = true;\n        }\n        if (data.conditionNodes && Array.isArray(data.conditionNodes)) loop(data.conditionNodes);\n        if (data.childNode) loop(data.childNode);\n      };\n      loop(this.processData);\n      return hasSameFormId;\n    },\n    transformFormJson: function transformFormJson(list) {\n      var fieldList = list.map(function (o) {\n        return {\n          __config__: {\n            label: o.filedName,\n            jnpfKey: o.jnpfKey || '',\n            required: o.required || false\n          },\n          __vModel__: o.filedId,\n          multiple: o.multiple || false\n        };\n      });\n      return fieldList;\n    },\n    transformFieldList: function transformFieldList(formFieldList) {\n      var list = [];\n      var loop = function loop(data, parent) {\n        if (!data) return;\n        if (data.__vModel__) {\n          var isTableChild = parent && parent.__config__ && parent.__config__.jnpfKey === 'table';\n          var obj = _objectSpread(_objectSpread({}, data), {}, {\n            id: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n            __vModel__: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n            fullName: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label,\n            __config__: {\n              label: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label,\n              jnpfKey: data.__config__.jnpfKey,\n              required: data.__config__.required,\n              isSubTable: data.__config__.isSubTable\n            }\n          });\n          delete obj.on;\n          delete obj.style;\n          delete obj.options;\n          delete obj.props;\n          delete obj.templateJson;\n          delete obj.columnOptions;\n          delete obj.addTableConf;\n          delete obj.tableConf;\n          list.push(obj);\n        }\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d, parent);\n        });\n        if (data.__config__ && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data);\n        }\n      };\n      loop(formFieldList);\n      return list;\n    },\n    updateAllNodeFormOperates: function updateAllNodeFormOperates(isSameForm) {\n      var _this18 = this;\n      var loop = function loop(data) {\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d);\n        });\n        if (data.type === 'approver' && !data.properties.formId) {\n          data.properties.formOperates = _this18.initFormOperates(data, true, isSameForm);\n        }\n        if (data.conditionNodes && Array.isArray(data.conditionNodes)) loop(data.conditionNodes);\n        if (data.childNode) loop(data.childNode);\n      };\n      loop(this.processData);\n    },\n    radioInput: function radioInput(val) {\n      this.approverForm.rejectStep = '0';\n    }\n  },\n  watch: {\n    visible: function visible(val) {\n      if (!val) {\n        this.approverForm = JSON.parse(JSON.stringify(defaultApproverForm)); // 重置数据为默认状态\n        this.subFlowForm = JSON.parse(JSON.stringify(defaultSubFlowForm));\n        this.startForm = JSON.parse(JSON.stringify(_config.default.defaultStartForm));\n        return;\n      }\n      this.isStartNode() && this.initStartNodeData();\n      this.isSubFlowNode() && this.initSubFlowData();\n      this.isApproverNode() && this.initApproverNodeData();\n      this.isConditionNode() && this.initConditionNodeData();\n      this.getPrintTplList();\n    },\n    'startForm.titleContent': function startFormTitleContent(newVal) {\n      this.temporaryContent = newVal;\n    },\n    value: function value(newVal) {\n      if (newVal && newVal.properties) {\n        this.visible = true;\n        this.properties = JSON.parse(JSON.stringify(newVal.properties));\n        if (this.properties) {\n          _util.NodeUtils.isConditionNode(newVal) && this.getPriorityLength();\n        }\n      }\n    }\n  }\n};",null]}