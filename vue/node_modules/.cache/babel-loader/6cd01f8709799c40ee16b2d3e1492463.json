{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Jnpf/PopupSelect/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Jnpf/PopupSelect/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _emitter = _interopRequireDefault(require(\"element-ui/src/mixins/emitter\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar dispatch = _emitter.default.methods.dispatch;\nvar _default2 = exports.default = {\n  name: 'JnpfPopupSelect',\n  props: {\n    value: {\n      default: ''\n    },\n    rowIndex: {\n      default: null\n    },\n    formData: {\n      type: Object\n    },\n    templateJson: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    interfaceId: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '请选择'\n    },\n    propsValue: {\n      type: String,\n      default: 'id'\n    },\n    relationField: {\n      type: String,\n      default: 'fullName'\n    },\n    popupType: {\n      type: String,\n      default: 'dialog'\n    },\n    popupTitle: {\n      type: String,\n      default: '选择数据'\n    },\n    popupWidth: {\n      type: String,\n      default: '800px'\n    },\n    field: {\n      type: String,\n      default: ''\n    },\n    columnOptions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    hasPage: {\n      type: Boolean,\n      default: false\n    },\n    pageSize: {\n      type: Number,\n      default: 20\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  data: function data() {\n    return {\n      list: [],\n      innerValue: '',\n      listQuery: {\n        keyword: '',\n        currentPage: 1,\n        pageSize: 20\n      },\n      total: 0,\n      checked: '',\n      checkedTxt: '',\n      checkedRow: {},\n      listLoading: false,\n      visible: false,\n      inputHovering: false\n    };\n  },\n  watch: {\n    value: function value(val) {\n      this.setDefault();\n    }\n  },\n  computed: {\n    showClose: function showClose() {\n      var hasValue = this.multiple ? Array.isArray(this.value) && this.value.length > 0 : this.value !== undefined && this.value !== null && this.value !== '';\n      var criteria = this.clearable && !this.disabled && this.inputHovering && hasValue;\n      return criteria;\n    },\n    propsLabel: function propsLabel() {\n      return this.columnOptions[0].value;\n    }\n  },\n  created: function created() {\n    this.listQuery.pageSize = this.hasPage ? this.pageSize : 100000;\n    this.setDefault();\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n      if (!this.interfaceId) return;\n      this.listLoading = true;\n      var paramList = this.getParamList();\n      var columnOptions = this.columnOptions.map(function (o) {\n        return o.value;\n      });\n      var query = _objectSpread(_objectSpread({}, this.listQuery), {}, {\n        interfaceId: this.interfaceId,\n        propsValue: this.propsValue,\n        relationField: this.relationField,\n        columnOptions: columnOptions.join(','),\n        paramList: paramList\n      });\n      (0, _dataInterface.getDataInterfaceDataSelect)(this.interfaceId, query).then(function (res) {\n        _this.list = res.data.list;\n        _this.total = res.data.pagination.total;\n        _this.listLoading = false;\n      }).catch(function () {\n        _this.listLoading = false;\n      });\n    },\n    getParamList: function getParamList() {\n      var templateJson = this.templateJson;\n      if (!this.formData) return templateJson;\n      for (var i = 0; i < templateJson.length; i++) {\n        if (templateJson[i].relationField) {\n          if (templateJson[i].relationField.includes('-')) {\n            var tableVModel = templateJson[i].relationField.split('-')[0];\n            var childVModel = templateJson[i].relationField.split('-')[1];\n            templateJson[i].defaultValue = this.formData[tableVModel] && this.formData[tableVModel][this.rowIndex] && this.formData[tableVModel][this.rowIndex][childVModel] || '';\n          } else {\n            templateJson[i].defaultValue = this.formData[templateJson[i].relationField] || '';\n          }\n        }\n      }\n      return templateJson;\n    },\n    interfaceDataHandler: function interfaceDataHandler(data) {\n      if (!data.dataProcessing) return data.list;\n      var dataHandler = this.jnpf.getScriptFunc.call(this, data.dataProcessing);\n      if (!dataHandler) return data.list;\n      return dataHandler(data.list);\n    },\n    search: function search() {\n      this.initData();\n      this.listQuery.currentPage = 1;\n      this.listQuery.pageSize = this.hasPage ? this.pageSize : 10000;\n    },\n    reset: function reset() {\n      this.listQuery.keyword = '';\n      this.listQuery.currentPage = 1;\n      this.listQuery.pageSize = this.hasPage ? this.pageSize : 10000;\n      this.initData();\n    },\n    openDialog: function openDialog() {\n      if (this.disabled) return;\n      this.checked = this.value;\n      this.visible = true;\n      this.reset();\n    },\n    clear: function clear(event) {\n      this.checked = '';\n      this.innerValue = '';\n      this.checkedRow = {};\n      this.$emit('input', this.checked);\n      this.$emit('change', this.checked, this.checkedRow);\n      dispatch.call(this, 'ElFormItem', 'el.form.change', this.checked);\n      event.stopPropagation();\n    },\n    select: function select() {\n      if (!this.checked) return;\n      this.innerValue = this.checkedTxt;\n      this.$emit('input', this.checked);\n      this.$emit('change', this.checked, this.checkedRow);\n      dispatch.call(this, 'ElFormItem', 'el.form.change', this.checked);\n      this.visible = false;\n    },\n    rowClick: function rowClick(row) {\n      this.checked = row[this.propsValue];\n      this.checkedTxt = row[this.relationField];\n      this.checkedRow = row;\n    },\n    setDefault: function setDefault() {\n      var _this2 = this;\n      if (this.value) {\n        if (!this.interfaceId) return;\n        var paramList = this.getParamList();\n        var query = {\n          ids: [this.value],\n          interfaceId: this.interfaceId,\n          propsValue: this.propsValue,\n          relationField: this.relationField,\n          paramList: paramList\n        };\n        (0, _dataInterface.getDataInterfaceDataInfoByIds)(this.interfaceId, query).then(function (res) {\n          var data = res.data && res.data.length ? res.data[0] : {};\n          _this2.innerValue = data[_this2.relationField];\n          if (!_this2.field) return;\n          var relationData = _this2.$store.state.generator.relationData;\n          _this2.$set(relationData, _this2.field, data);\n          _this2.$eventBus.$emit('popupAttrEventBus', relationData, _this2.field);\n          _this2.$store.commit('generator/UPDATE_RELATION_DATA', relationData);\n        });\n      } else {\n        this.innerValue = '';\n        if (!this.field) return;\n        var relationData = this.$store.state.generator.relationData;\n        this.$set(relationData, this.field, {});\n        this.$eventBus.$emit('popupAttrEventBus', relationData, this.field);\n        this.$store.commit('generator/UPDATE_RELATION_DATA', relationData);\n      }\n    }\n  }\n};",null]}