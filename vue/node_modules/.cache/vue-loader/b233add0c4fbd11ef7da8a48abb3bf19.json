{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Jnpf/Calculate/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Jnpf/Calculate/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getAmountChinese, thousandsFormat, mergeNumberOfExps, validExp, toRPN, calcRPN, debounce } from \"@/components/Generator/utils/index\"\nexport default {\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: [\n    \"value\",\n    \"formData\",\n    \"expression\",\n    \"tableVModel\",\n    \"componentVModel\",\n    'isStorage',\n    \"rowIndex\", // 计算公式放在表格中时， 需要获取在表格中的行位置\n    \"detailed\",\n    \"isAmountChinese\",\n    \"thousands\",\n    'precision'\n  ],\n  name: 'JnpfCalculate',\n  data() {\n    return {\n      innerValue: this.value,\n      RPN_EXP: toRPN(mergeNumberOfExps(this.expression)),\n      setValue: 0,\n      amountChineseName: ''\n    }\n  },\n  computed: {\n    rootFormData() {\n      return this.formData || this.getFormData()\n    },\n  },\n  methods: {\n    getFormData() {\n      var root = this.$parent\n      while (root) {\n        if ('vmFormData' in root) {\n          return root.vmFormData\n        }\n        root = root.$parent\n      }\n    },\n    /**\n     * 获取指定组件的值\n     */\n    getFormVal(vModel) {\n      try {\n        if (vModel.indexOf('.') > -1) {\n          let [tableVModel, cmpVModel] = vModel.split('.')\n          if (typeof this.rowIndex === 'number') {\n            return this.rootFormData[tableVModel][this.rowIndex][cmpVModel] || 0\n          } else {\n            return this.rootFormData[tableVModel].reduce((sum, c) => (c[cmpVModel] ? Number(c[cmpVModel]) : 0) + sum, 0)\n          }\n        }\n        return this.rootFormData[vModel] || 0\n      } catch (error) {\n        console.warn('计算公式出错, 可能包含无效的组件值', error)\n        return 0\n      }\n    },\n    /**\n     * 计算表达式\n     */\n    execRPN() {\n      const temp = this.RPN_EXP.map(t => typeof t === 'object' ? this.getFormVal(t.__vModel__) : t)\n      this.innerValue = parseFloat(parseFloat(calcRPN(temp)).toFixed(this.precision || 0))\n      this.setValue = JSON.parse(JSON.stringify(this.innerValue))\n      if (isNaN(this.innerValue)) this.innerValue = 0\n      if (isNaN(this.setValue)) this.setValue = 0\n      this.$emit('input', this.setValue)\n      if (this.rowIndex >= 0 && this.componentVModel && this.tableVModel) {\n        if (this.rootFormData[this.tableVModel][this.rowIndex][this.componentVModel] !== this.innerValue) {\n          this.$emit('change', this.setValue)\n        }\n      }\n      if (this.thousands) {\n        this.innerValue = thousandsFormat(this.innerValue)\n      }\n      if (this.isAmountChinese) this.amountChineseName = getAmountChinese(this.setValue||0)\n    }\n  },\n  watch: {\n    formData: {\n      handler: function (val) {\n        if (!val) return\n        if (!this.computeExps) { // formData更新可能比较频繁\n          this.computeExps = debounce(this.execRPN, 100)\n        }\n        this.computeExps()\n      },\n      deep: true,\n      immediate: true\n    }\n\n  },\n}\n",null]}