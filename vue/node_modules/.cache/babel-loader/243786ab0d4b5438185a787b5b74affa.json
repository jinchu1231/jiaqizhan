{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RDatePicker.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RDatePicker.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _mixin = _interopRequireDefault(require(\"./mixin\"));\nvar _db = require(\"@/components/Generator/utils/db\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  props: ['activeData'],\n  mixins: [_mixin.default],\n  data: function data() {\n    return {\n      formatOptions: [{\n        label: 'yyyy',\n        value: 'yyyy'\n      }, {\n        label: 'yyyy-MM',\n        value: 'yyyy-MM'\n      }, {\n        label: 'yyyy-MM-dd',\n        value: 'yyyy-MM-dd'\n      }, {\n        label: 'yyyy-MM-dd HH:mm',\n        value: 'yyyy-MM-dd HH:mm'\n      }, {\n        label: 'yyyy-MM-dd HH:mm:ss',\n        value: 'yyyy-MM-dd HH:mm:ss'\n      }],\n      typeOptions: [{\n        label: '特定时间',\n        value: 1\n      }, {\n        label: '表单字段',\n        value: 2\n      }, {\n        label: '填写当前时间',\n        value: 3\n      }, {\n        label: '当前时间前',\n        value: 4\n      }, {\n        label: '当前时间后',\n        value: 5\n      }],\n      type: 'date',\n      targetOptions: [],\n      key2: ''\n    };\n  },\n  watch: {\n    'activeData.__config__.startTimeRule': function activeData__config__StartTimeRule(val) {\n      if (!val) {\n        this.activeData.__config__.__vModel__startRelationField = '';\n        this.activeData.startTime = '';\n        this.activeData.__config__.startTimeValue = '';\n      }\n    },\n    'activeData.__config__.endTimeRule': function activeData__config__EndTimeRule(val) {\n      if (!val) {\n        this.activeData.__config__.endRelationField = '';\n        this.activeData.endTime = '';\n        this.activeData.__config__.endTimeValue = '';\n      }\n    },\n    'activeData.format': function activeDataFormat() {\n      this.getTargetOptions();\n      this.key2 = +new Date();\n    }\n  },\n  created: function created() {\n    this.getTargetOptions();\n  },\n  mounted: function mounted() {},\n  computed: {\n    formFieldsOptions: function formFieldsOptions() {\n      var _this = this;\n      var list = [];\n      var loop = function loop(data, parent) {\n        if (!data) return;\n        if (data.__config__ && _this.isIncludesTable(data) && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data);\n        }\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d, parent);\n        });\n        if (data.__vModel__ && data.__config__.jnpfKey === 'datePicker' && _this.isIncludesField(data)) {\n          var isTableChild = parent && parent.__config__ && parent.__config__.jnpfKey === 'table';\n          list.push(_objectSpread({\n            realVModel: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n            realLabel: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label\n          }, data));\n        }\n      };\n      loop((0, _db.getDrawingList)());\n      return list;\n    }\n  },\n  methods: {\n    startValue: function startValue(val) {\n      if (val < 1) this.activeData.__config__.startTimeValue = 1;\n    },\n    endValue: function endValue(val) {\n      if (val < 1) this.activeData.__config__.endTimeValue = 1;\n    },\n    endTimeRuleChange: function endTimeRuleChange() {\n      if (!this.activeData.__config__.endTimeRule) {\n        return this.activeData.__config__.endRelationField = '';\n      } else {\n        return this.activeData.__config__.endTimeType = 1;\n      }\n    },\n    startTimeRuleChange: function startTimeRuleChange() {\n      if (!this.activeData.__config__.startTimeRule) {\n        return this.activeData.__config__.startRelationField = '';\n      } else {\n        return this.activeData.__config__.startTimeType = 1;\n      }\n    },\n    isIncludesField: function isIncludesField(data) {\n      var vModel = data.__vModel__;\n      var fieldModal = this.activeData.__vModel__;\n      if (vModel !== fieldModal) return true;\n      if (data.__config__.relationTable && !data.__config__.isSubTable) {\n        if (vModel === fieldModal) return true;\n      } else if (data.__config__.isSubTable) {\n        if (vModel === fieldModal && this.activeData.__config__.tableName != data.__config__.tableName) return true;\n      } else if (this.activeData.__config__.isSubTable) {\n        if (vModel === fieldModal) return true;\n      }\n      return false;\n    },\n    isIncludesTable: function isIncludesTable(data) {\n      if ((!data.__config__.layout || data.__config__.layout === 'rowFormItem') && data.__config__.jnpfKey !== 'table') return true;\n      if (this.activeData.__config__.isSubTable) return this.activeData.__config__.parentVModel === data.__vModel__;\n      return data.__config__.jnpfKey !== 'table';\n    },\n    dateTypeChange: function dateTypeChange(val) {\n      this.getTargetOptions();\n    },\n    startType: function startType(val) {\n      this.activeData.startTime = null;\n      this.activeData.__config__.startRelationField = '';\n      if (val == 4 || val == 5) {\n        this.activeData.__config__.startTimeValue = 1;\n        this.activeData.__config__.startTimeTarget = 1;\n      } else if (val == 2) {\n        this.activeData.__config__.startTimeValue = '';\n      } else {\n        this.activeData.__config__.startTimeValue = '';\n      }\n    },\n    endType: function endType(val) {\n      this.activeData.endTime = null;\n      this.activeData.__config__.endRelationField = '';\n      if (val == 4 || val == 5) {\n        this.activeData.__config__.endTimeValue = 1;\n        this.activeData.__config__.endTimeTarget = 1;\n      } else {\n        this.activeData.__config__.endTimeValue = '';\n      }\n    },\n    getTargetOptions: function getTargetOptions() {\n      if (this.activeData.format === 'yyyy') {\n        this.targetOptions = [{\n          label: '年',\n          value: 1\n        }];\n      } else if (this.activeData.format === 'yyyy-MM') {\n        this.targetOptions = [{\n          label: '年',\n          value: 1\n        }, {\n          label: '月',\n          value: 2\n        }];\n      } else {\n        this.targetOptions = [{\n          label: '年',\n          value: 1\n        }, {\n          label: '月',\n          value: 2\n        }, {\n          label: '日',\n          value: 3\n        }];\n      }\n      this.activeData.type = this.activeData.format === 'yyyy' ? 'year' : this.activeData.format === 'yyyy-MM' ? 'month' : this.activeData.format === 'yyyy-MM-dd' ? 'date' : 'datetime';\n      if (this.activeData.format === 'yyyy' || this.activeData.format === 'yyyy-MM' || this.activeData.format === 'yyyy-MM-dd') return this.type = 'date';\n      return this.type = 'datetime';\n    },\n    defaultCurrentChange: function defaultCurrentChange(val) {\n      if (val) this.activeData.__config__.defaultValue = '';\n    }\n  }\n};",null]}