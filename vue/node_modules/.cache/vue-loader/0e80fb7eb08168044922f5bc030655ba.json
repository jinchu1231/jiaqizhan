{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/formShortLink/list/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/formShortLink/list/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { createModel, updateModel, getModelInfo } from '@/api/onlineDev/visualDev'\nimport Parser from '@/components/Generator/parser/Parser'\nimport PrintBrowse from '@/components/PrintBrowse'\nimport { deepClone } from '@/utils'\nexport default {\n  components: { Parser, PrintBrowse },\n  data() {\n    return {\n      visible: false,\n      key: +new Date(),\n      formConf: {},\n      dataForm: {\n        id: '',\n        data: ''\n      },\n      modelId: '',\n      formData: {},\n      btnLoading: false,\n      loading: true,\n      isPreview: false,\n      useFormPermission: false,\n      printBrowseVisible: false,\n      formOperates: [],\n      dialogLoading: false\n    }\n  },\n  methods: {\n    goBack() {\n      this.$emit('refreshDataList')\n    },\n    print() {\n      if (this.isPreview) return this.$message({ message: '功能预览不支持打印', type: 'warning' })\n      this.printBrowseVisible = true\n    },\n    init(formConf, modelId, id, isPreview, useFormPermission) {\n      this.formConf = deepClone(formConf)\n      this.modelId = modelId\n      this.isPreview = isPreview\n      this.useFormPermission = useFormPermission\n      this.dataForm.id = id || ''\n      this.getFormOperates()\n      this.loading = true\n      this.dialogLoading = false\n      this.$nextTick(() => {\n        if (this.dataForm.id) {\n          let extra = {\n            modelId,\n            id,\n            type: 2\n          }\n          this.$store.commit('generator/SET_DYNAMIC_MODEL_EXTRA', extra)\n          getModelInfo(modelId, this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            if (!this.dataForm.data) return\n            this.formData = { ...JSON.parse(this.dataForm.data), id: this.dataForm.id }\n            this.fillFormData(this.formConf, this.formData)\n            this.dialogLoading = true\n            this.$nextTick(() => {\n              this.visible = true\n              this.loading = false\n            })\n          })\n        } else {\n          this.$store.commit('generator/SET_DYNAMIC_MODEL_EXTRA', {})\n          this.formData = {}\n          this.fillFormData(this.formConf, this.formData)\n          this.dialogLoading = true\n          this.$nextTick(() => {\n            this.visible = true\n            this.loading = false\n          })\n        }\n        this.key = +new Date()\n      })\n    },\n    getFormOperates() {\n      if (this.isPreview || !this.useFormPermission) return\n      const permissionList = this.$store.getters.permissionList\n      const modelId = this.$route.meta.modelId\n      const list = permissionList.filter(o => o.modelId === modelId)\n      this.formOperates = list[0] && list[0].form ? list[0].form : []\n    },\n    fillFormData(form, data) {\n      const loop = (list, parent) => {\n        for (let i = 0; i < list.length; i++) {\n          let item = list[i]\n          if (item.__vModel__) {\n            const val = data.hasOwnProperty(item.__vModel__) ? data[item.__vModel__] : item.__config__.defaultValue\n            if (!item.__config__.isSubTable) item.__config__.defaultValue = val\n            if (!this.isPreview && this.useFormPermission) {\n              let id = item.__config__.isSubTable ? parent.__vModel__ + '-' + item.__vModel__ : item.__vModel__\n              let noShow = true\n              if (this.formOperates && this.formOperates.length) {\n                noShow = !this.formOperates.some(o => o.enCode === id)\n              }\n              noShow = item.__config__.noShow ? item.__config__.noShow : noShow\n              this.$set(item.__config__, 'noShow', noShow)\n            }\n          }\n          if (item.__config__ && item.__config__.children && Array.isArray(item.__config__.children)) {\n            loop(item.__config__.children, item)\n          }\n        }\n      }\n      loop(form.fields)\n      form.formData = data\n    },\n    submitForm(data, callback) {\n      if (!data) return\n      this.btnLoading = true\n      const formData = { ...this.formData, ...data }\n      this.dataForm.data = JSON.stringify(formData)\n      const formMethod = this.dataForm.id ? updateModel : createModel\n      formMethod(this.modelId, this.dataForm).then(res => {\n        this.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: () => {\n            if (callback && typeof callback === \"function\") callback()\n            this.visible = false\n            this.btnLoading = false\n            this.$emit('refreshDataList', true)\n          }\n        })\n      }).catch(() => { this.btnLoading = false })\n    },\n    dataFormSubmit() {\n      if (this.isPreview) return this.$message({ message: '功能预览不支持数据保存', type: 'warning' })\n      this.$refs.dynamicForm && this.$refs.dynamicForm.submitForm()\n    }\n  }\n}\n",null]}