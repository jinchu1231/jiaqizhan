{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/authorize/AuthorizePortal.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/authorize/AuthorizePortal.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.string.iterator\");\nrequire(\"core-js/modules/es6.set\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _authorize = require(\"@/api/permission/authorize\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      visible: false,\n      treeLoading: false,\n      btnLoading: false,\n      checkStrictly: true,\n      objectId: '',\n      dataForm: {\n        ids: []\n      },\n      portalData: [],\n      title: '',\n      active: 0,\n      list: [],\n      defaultProps: {\n        // 配置项（必选）\n        value: 'id',\n        label: 'fullName',\n        children: 'children'\n      }\n    };\n  },\n  methods: {\n    init: function init(id, fullName) {\n      var _this = this;\n      Object.assign(this.$data, this.$options.data());\n      this.treeLoading = true;\n      this.visible = true;\n      this.objectId = id;\n      this.title = fullName;\n      this.$nextTick(function () {\n        _this.$refs['dataForm'].resetFields();\n        _this.getPortalSelector();\n      });\n    },\n    getPortalSelector: function getPortalSelector() {\n      var _this2 = this;\n      this.list = [];\n      (0, _authorize.getPortalSelector)(this.objectId).then(function (res) {\n        _this2.list = res.data.list;\n        _this2.portalData = res.data.all;\n        _this2.dataForm.ids = (0, _toConsumableArray2.default)(res.data.ids);\n        _this2.dataForm.ids = (0, _toConsumableArray2.default)(new Set(_this2.dataForm.ids));\n        _this2.moduleIdsTemp = _this2.dataForm.ids;\n        _this2.ids = _this2.moduleIdsTemp;\n        _this2.$refs.authorizeTree.setCheckedKeys(_this2.dataForm.ids);\n        _this2.checkStrictly = false;\n        _this2.treeLoading = false;\n      }).catch(function () {\n        _this2.treeLoading = false;\n      });\n    },\n    goBack: function goBack() {\n      this.$emit('close');\n    },\n    // 全选/全不选\n    handleCheck: function handleCheck(val) {\n      if (val === 'checkAll') {\n        this.$refs.authorizeTree.setCheckedKeys(this.portalData);\n      }\n      if (val === 'cancelCheckAll') {\n        this.$refs.authorizeTree.setCheckedKeys([]);\n      }\n    },\n    // 折叠 展开\n    setAllExpand: function setAllExpand(state) {\n      var result;\n      if (state === 'open') {\n        result = true;\n      }\n      if (state === 'close') {\n        result = false;\n      }\n      var nodes = this.$refs.authorizeTree.store.nodesMap;\n      for (var i in nodes) {\n        nodes[i].expanded = result;\n      }\n    },\n    // 设置数据\n    selectTreeNodeClick: function selectTreeNodeClick() {\n      var parentIds = this.$refs.authorizeTree.getHalfCheckedKeys();\n      var childrenIds = this.$refs.authorizeTree.getCheckedKeys();\n      var newIds = [].concat((0, _toConsumableArray2.default)(parentIds), (0, _toConsumableArray2.default)(childrenIds));\n      var dataIds = (0, _toConsumableArray2.default)(new Set(newIds));\n      this.dataForm.ids = dataIds;\n    },\n    handleConfirm: function handleConfirm() {\n      var _this3 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          _this3.btnLoading = true;\n          (0, _authorize.savePortal)(_this3.objectId, _this3.dataForm).then(function (res) {\n            _this3.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: function onClose() {\n                _this3.visible = false;\n                _this3.btnLoading = false;\n                _this3.$emit('close', true);\n              }\n            });\n          }).catch(function () {\n            _this3.btnLoading = false;\n          });\n        }\n      });\n    }\n  }\n};",null]}