{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/src/components/PrintBrowse/printMinxin.js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/PrintBrowse/printMinxin.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\nrequire(\"core-js/modules/es6.symbol\");\nrequire(\"core-js/modules/es6.string.iterator\");\nrequire(\"core-js/modules/es6.array.from\");\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.to-string\");\nrequire(\"core-js/modules/es6.number.constructor\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.regexp.match\");\nrequire(\"core-js/modules/es6.regexp.replace\");\nrequire(\"regenerator-runtime/runtime\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/asyncToGenerator.js\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _vuex = require(\"vuex\");\nvar _qrcodejs = _interopRequireDefault(require(\"qrcodejs2\"));\nvar _jsbarcode = _interopRequireDefault(require(\"jsbarcode\"));\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\nvar _jnpf = _interopRequireDefault(require(\"@/utils/jnpf\"));\nvar _dayjs = _interopRequireDefault(require(\"dayjs\"));\nvar _index2 = require(\"@/components/Generator/utils/index\");\nvar _printDev = require(\"@/api/system/printDev\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar printOptionApi = {\n  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['userInfo'])), (0, _vuex.mapGetters)(['dictionaryList'])),\n  props: [\"id\", \"formId\", \"fullName\", \"batchIds\", \"printTitle\"],\n  data: function data() {\n    return {\n      data: {},\n      batchData: [],\n      printTemplate: \"\",\n      recordList: [],\n      loading: false\n    };\n  },\n  methods: {\n    initData: function () {\n      var _initData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(tag) {\n        var _this2 = this;\n        var query, getDataApi;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.id) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _context2.next = 4;\n              return this.$store.dispatch('base/getDictionaryAll');\n            case 4:\n              this.data = {};\n              this.batchData = [];\n              this.printTemplate = \"\";\n              this.loading = true;\n              query = {\n                id: this.id,\n                formId: this.formId\n              };\n              getDataApi = _printDev.getData;\n              if (tag == 'batch') {\n                this.pageIndex = 0;\n                query.formId = this.batchIds;\n                getDataApi = _printDev.getBatchData;\n              }\n              getDataApi(query).then(function (res) {\n                if (!res.data) return;\n                var array = tag == 'batch' ? res.data : [res.data];\n                for (var index = 0; index < array.length; index++) {\n                  var element = array[index];\n                  _this2.batchData.push(element.printTemplate);\n                }\n                _this2.$nextTick( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                  var dom, _index, _element, domCurrent;\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        dom = _this2.$refs[\"tsPrint\"];\n                        _index = 0;\n                      case 2:\n                        if (!(_index < array.length)) {\n                          _context.next = 12;\n                          break;\n                        }\n                        _element = array[_index];\n                        domCurrent = dom.querySelectorAll(\".print-content\")[_index];\n                        if (!_element.printData) {\n                          _this2.batchData[_index] = domCurrent.innerHTML;\n                        }\n                        _context.next = 8;\n                        return _this2.handleData(_element, domCurrent);\n                      case 8:\n                        _this2.$set(_this2.batchData, _index, _this2.printTemplate);\n                      case 9:\n                        _index++;\n                        _context.next = 2;\n                        break;\n                      case 12:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                })));\n                _this2.loading = false;\n              });\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function initData(_x) {\n        return _initData.apply(this, arguments);\n      }\n      return initData;\n    }(),\n    handleData: function () {\n      var _handleData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(data, domCurrent) {\n        var _this3 = this;\n        var pageBreak;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              this.data = data.printData;\n              this.recordList = data.operatorRecordList || [];\n              this.printTemplate = domCurrent.innerHTML;\n              this.replaceSysValue();\n              this.createTable(domCurrent, false);\n              this.createTable(domCurrent, true);\n              this.replaceContent(domCurrent, 'p');\n              this.replaceCommonValue();\n              this.replaceAmountThousands();\n              this.$nextTick(function () {\n                _this3.replaceEmptyTag();\n                _this3.collapseBorder();\n              });\n              pageBreak = '<p style=\"page-break-after:always;\"></p>';\n              this.printTemplate = this.printTemplate.replace('<p><!-- pagebreak --></p>', pageBreak);\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function handleData(_x2, _x3) {\n        return _handleData.apply(this, arguments);\n      }\n      return handleData;\n    }(),\n    replaceEmptyTag: function replaceEmptyTag() {\n      var _this4 = this;\n      var barEmpty = /&lt;barCode(\\S|\\s)*?\\/barCode&gt;/g;\n      var list = this.printTemplate.match(barEmpty) || [];\n      list.forEach(function (element) {\n        _this4.replaceValue(element, '');\n      });\n      var qrEmpty = /&lt;qrCode(\\S|\\s)*?\\/qrCode&gt;/g;\n      var list2 = this.printTemplate.match(qrEmpty) || [];\n      list2.forEach(function (element) {\n        _this4.replaceValue(element, '');\n      });\n      var imgEmpty = /&lt;img(\\S|\\s)*?\\/img&gt;/g;\n      var list3 = this.printTemplate.match(imgEmpty) || [];\n      list3.forEach(function (element) {\n        _this4.replaceValue(element, '');\n      });\n    },\n    // 当table是100%,且外层是td时合并border\n    collapseBorder: function collapseBorder() {\n      var _this5 = this;\n      var strList = this.printTemplate.match(/<td.*>\\n<table style=\"border-collapse: collapse; width: 100%; height: 100%;\"/g);\n      if (strList && strList.length > 0) {\n        strList.forEach(function (str) {\n          var newStr = str.substring(0, str.length - 1) + ' border-style:hidden;\"';\n          _this5.replaceValue(str, newStr);\n        });\n      }\n    },\n    getTdTrueValue: function getTdTrueValue(text) {\n      if (!text.match(/tablekey=\"([^\"]*)\"/)) return;\n      var info = text.match(/tablekey=\"([^\"]*)\"/)[1];\n      var dataTag = info.split('.')[0];\n      var line = info.split('.')[1];\n      var field = text.match(/{([^}]*)}/)[1];\n      var value = '';\n      if (dataTag == 'headTable') {\n        value = this.data[field] || '';\n      } else {\n        value = this.data[dataTag][line][field] || '';\n      }\n      return value;\n    },\n    getTrueValue: function getTrueValue(text) {\n      var info = text.match(/data-tag=\"([^\"]*)\"/)[1];\n      var dataTag = info.split('.')[0];\n      var field = text.match(/{([^}]*)}/)[1];\n      if (dataTag == 'headTable') return this.data[field] || '';\n      var data = this.data[dataTag] || '';\n      if (!data) return '';\n      var val = '';\n      var _iterator = _createForOfIteratorHelper(data),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          val += item[field] || '' + '-';\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return val;\n    },\n    // 替换普通值\n    replaceCommonValue: function replaceCommonValue() {\n      var _this6 = this;\n      this.$nextTick(function () {\n        var spanList = _this6.printTemplate.match(/<span class=\"wk-print-tag-wukong.*?[^}]}.*?<\\/span>/g);\n        if (!spanList) return;\n        for (var index = 0; index < spanList.length; index++) {\n          var element = spanList[index];\n          if (element.includes('{') && element.includes('data-tag')) {\n            var value = _this6.getTrueValue(element);\n            var spanText = element.match(/<span class=\"wk-print-tag-wukong.*?[^}]}.*?<\\/span>/);\n            if (spanText && spanText.length > 0) {\n              spanText = spanText[0];\n              var fieldStr = spanText.match(/{.*}/g);\n              var newStr = spanText.replace(fieldStr[0], value);\n              _this6.replaceValue(spanText, newStr);\n            }\n          }\n        }\n      });\n    },\n    replaceAmountThousands: function replaceAmountThousands() {\n      var list = this.printTemplate.match(/大写金额\\((.*?)\\)/g) || [];\n      for (var i = 0; i < list.length; i++) {\n        var element = list[i];\n        var value = element.match(/大写金额\\((.*?)\\)/)[1];\n        if (isNaN(Number(value))) continue;\n        this.replaceValue(element, (0, _index2.getAmountChinese)(value));\n      }\n      var list_ = this.printTemplate.match(/千位分隔符\\((.*?)\\)/g) || [];\n      for (var _i = 0; _i < list_.length; _i++) {\n        var _element2 = list_[_i];\n        var data = _element2.match(/千位分隔符\\((.*?)\\)/);\n        var arr = data && data[1].split(',');\n        var _value = arr[0] ? arr[0] : '';\n        if (isNaN(Number(_value))) continue;\n        var place = arr[1] ? arr[1] : 0;\n        this.replaceValue(_element2, this.getThousands(_value, place));\n      }\n    },\n    replaceContent: function replaceContent(domCurrent, tag) {\n      var _this7 = this;\n      var getTrueValue = tag == 'td' ? this.getTdTrueValue : this.getTrueValue;\n      var domList = domCurrent.querySelectorAll(tag);\n      var _iterator2 = _createForOfIteratorHelper(domList),\n        _step2;\n      try {\n        var _loop = function _loop() {\n            var dom = _step2.value;\n            try {\n              var pcontent = dom.outerHTML;\n              if (pcontent.includes('{') && pcontent.includes('data-tag')) {\n                // 替换千分符\n                if (pcontent.includes('千位分隔符(')) {\n                  var text = pcontent.match(/千位分隔符\\(\\<span[^>]+\"[^<]+\\>[^)]+\\)/)[0];\n                  var place = 0;\n                  if (text.includes(\"</span>,\")) place = text.split('</span>,')[1].replace(')', '') || 0;\n                  var value = getTrueValue(tag == 'td' ? pcontent : text);\n                  var transValue = _this7.getThousands(value, place);\n                  _this7.replaceValue(text, transValue);\n                  return 0; // continue\n                }\n                // 替换数字金额\n                if (pcontent.includes('大写金额(')) {\n                  var _text = pcontent.match(/大写金额\\(\\<span[^>]+\"[^<]+\\>[^)]+\\)/)[0];\n                  var _value2 = getTrueValue(tag == 'td' ? pcontent : _text);\n                  var _transValue = (0, _index2.getAmountChinese)(_value2);\n                  _this7.replaceValue(_text, _transValue);\n                  return 0; // continue\n                }\n                //日期选择\n                if (pcontent.includes('日期选择(')) {\n                  var _text2 = pcontent.match(/日期选择\\(\\<span[^>]+\"[^<]+\\>[^)]+\\)/)[0];\n                  var _value3 = getTrueValue(tag == 'td' ? pcontent : _text2);\n                  var format = _text2.includes(\"</span>,\") ? _text2.split('</span>,')[1].replace(')', '') || '' : '';\n                  format = format.replaceAll('\"', '').replaceAll(\"'\", '');\n                  _this7.replaceValue(_text2, _this7.getDateValue(_value3, format));\n                  return 0; // continue\n                }\n                // 数据字典\n                if (pcontent.includes('数据字典(')) {\n                  var _text3 = pcontent.match(/数据字典\\(\\<span[^>]+\"[^<]+\\>[^)]+\\)/)[0];\n                  var _value4 = getTrueValue(tag == 'td' ? pcontent : _text3);\n                  var id = _text3.includes(\"</span>,\") ? _text3.split('</span>,')[1].replace(')', '') || '' : '';\n                  id = id.replaceAll('\"', '').replaceAll(\"'\", '');\n                  _this7.replaceValue(_text3, _this7.getDictionaryValue(_value4, id));\n                  return 0; // continue\n                }\n                // 替换图片\n                if (pcontent.includes('&lt;img')) {\n                  var _value5 = getTrueValue(pcontent);\n                  if (!_value5) {\n                    var cloneNode = dom.cloneNode(true);\n                    var height = _this7.getWidthHeight(dom.innerHTML, 'height');\n                    cloneNode.height = height;\n                    cloneNode.innerText = '';\n                    _this7.replaceValue(pcontent, cloneNode.outerHTML);\n                    return 0; // continue\n                  }\n                  _this7.replaceImage(dom, _value5 || '[]');\n                  return 0; // continue\n                }\n                if (pcontent.includes('&lt;qrCode')) {\n                  var _value6 = getTrueValue(pcontent);\n                  if (!_value6) return 0; // continue\n                  if (_value6.trim() == '') {\n                    var _cloneNode = dom.cloneNode(true);\n                    _cloneNode.innerText = '';\n                    _this7.replaceValue(pcontent, _cloneNode.outerHTML);\n                    return 0; // continue\n                  }\n                  _this7.replaceQrCode(dom, _value6);\n                  return 0; // continue\n                }\n                if (pcontent.includes('&lt;barCode')) {\n                  var _value7 = getTrueValue(pcontent);\n                  if (!_value7) return {\n                    v: void 0\n                  };\n                  if (_value7.trim() == '') {\n                    _this7.replaceValue(dom.innerHTML, '');\n                    return 0; // continue\n                  }\n                  _this7.replaceBarCode(dom, _value7);\n                  return 0; // continue\n                }\n                setTimeout(function () {\n                  if (tag == 'td') {\n                    var _value8 = getTrueValue(pcontent);\n                    var spanText = pcontent.match(/<span class=\"wk-print-tag-wukong.*?[^}]}.*?<\\/span>/);\n                    if (spanText && spanText.length > 0) {\n                      spanText = spanText[0];\n                      var fieldStr = spanText.match(/{.*}/g);\n                      var newStr = spanText.replace(fieldStr[0], _value8);\n                      _this7.replaceValue(spanText, newStr);\n                    }\n                  }\n                }, 0);\n              } else {\n                if (pcontent.includes('千位分隔符(')) {\n                  var data = pcontent.match(/千位分隔符\\((.*?)\\)/);\n                  var arr = data && data[1].split(',');\n                  var _value9 = arr[0] ? arr[0] : '';\n                  if (isNaN(Number(_value9))) return 0; // continue\n                  var _place = arr[1] ? arr[1] : 0;\n                  var _transValue2 = _this7.getThousands(_value9, _place);\n                  _this7.replaceValue(data, _transValue2);\n                  return 0; // continue\n                }\n                if (pcontent.includes('大写金额(')) {\n                  var _text4 = pcontent.match(/大写金额\\((.*?)\\)/) && pcontent.match(/大写金额\\((.*?)\\)/)[0];\n                  var _value10 = pcontent.match(/大写金额\\((.*?)\\)/) && pcontent.match(/大写金额\\((.*?)\\)/)[1];\n                  if (!_value10 || isNaN(Number(_value10))) return 0; // continue\n                  var _transValue3 = (0, _index2.getAmountChinese)(_value10);\n                  _this7.replaceValue(_text4, _transValue3);\n                  return 0; // continue\n                }\n                // 替换二维码\n                if (pcontent.includes('&lt;qrCode')) {\n                  var _value11 = pcontent.match(/&gt;(.*?)&lt;/)[1];\n                  _this7.replaceQrCode(dom, _value11);\n                  return 0; // continue\n                }\n                if (pcontent.includes('&lt;barCode')) {\n                  var _value12 = pcontent.match(/&gt;(.*?)&lt;/)[1];\n                  _this7.replaceBarCode(dom, _value12);\n                  return 0; // continue\n                }\n                if (pcontent.includes('&lt;img')) {\n                  var _value13 = pcontent.match(/&gt;(http.*)&lt;/)[1];\n                  _this7.replaceImage(dom, JSON.stringify([{\n                    url: _value13\n                  }]));\n                }\n              }\n            } catch (error) {\n              return 0; // continue\n            }\n          },\n          _ret;\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          _ret = _loop();\n          if (_ret === 0) continue;\n          if (_ret) return _ret.v;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    },\n    /**\n     * 创建表格行\n     * @param {*} table 表格dom\n     * @param {*} tableKey 表格的key\n     * @param {*} index 记录下标\n     * @param {*} removeTitleTr 是否移除标题行\n     */\n    createTr: function createTr(table, tableKey, index, removeTitleTr, tableBody) {\n      var cloneTable = table.cloneNode(true);\n      var trs = cloneTable.querySelectorAll('tr');\n      var _iterator3 = _createForOfIteratorHelper(trs),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var tr = _step3.value;\n          tr.style.height = '17px';\n          if (tr.innerText.trim() == '') {\n            tableBody.appendChild(tr);\n            continue;\n          }\n          if (removeTitleTr && !tr.innerHTML.includes('{')) {\n            continue;\n          }\n          var tds = tr.querySelectorAll('td');\n          var _iterator4 = _createForOfIteratorHelper(tds),\n            _step4;\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var td = _step4.value;\n              if (td.innerHTML.includes('{')) {\n                td.setAttribute('tableKey', tableKey + \".\" + index);\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n          tableBody.appendChild(tr);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return cloneTable;\n    },\n    /**\n     * 创建表格\n     * @param {*} domCurrent\n     */\n    createTable: function createTable(domCurrent, jump) {\n      var tableList = domCurrent.querySelectorAll('table');\n      for (var j = 0; j < tableList.length; j++) {\n        var table = tableList[j];\n        var tdMode = table.parentElement.tagName === 'TD';\n        if (tdMode && jump == false || jump) {\n          var tableWrap = document.createElement('table');\n          var tableBody = tableWrap.appendChild(document.createElement('tbody'));\n          var tableKey = this.getTableKey(table);\n          var data = this.data[tableKey] || '';\n          if (data && Array.isArray(data)) {\n            // 子表\n            var tableSize = data && Array.isArray(data) ? data.length : 0;\n            for (var index = 0; index < tableSize; index++) {\n              if (index == 0) {\n                this.createTr(table, tableKey, index, false, tableBody);\n              } else {\n                this.createTr(table, tableKey, index, true, tableBody);\n              }\n            }\n          } else {\n            this.createTr(table, 'headTable', '', false, tableBody);\n          }\n          this.replaceValue(table.innerHTML, tableWrap.innerHTML);\n          this.replaceContent(tableWrap, 'td');\n        }\n      }\n    },\n    /**\n     * 替换图片\n     * @param {*} dom\n     * @param {*} data 替换的值\n     */\n    replaceImage: function replaceImage(dom, data) {\n      if (!data) return;\n      var list = JSON.parse(data);\n      if (JSON.stringify(list) == '[]') {\n        var _replaceDom = dom.cloneNode(true);\n        _replaceDom.innerHTML = '';\n        this.replaceValue(dom.innerHTML, _replaceDom.innerHTML);\n      }\n      var template = '';\n      var width = this.getWidthHeight(dom.innerHTML);\n      var height = this.getWidthHeight(dom.innerHTML, 'height');\n      for (var index = 0; index < list.length; index++) {\n        var element = list[index];\n        if (element.url) {\n          var value = element.url.includes('http') ? element.url : this.define.comUrl + element.url;\n          template += \"<img style=\\\"width:\".concat(width, \"px;height:\").concat(height, \"px;display:inline-block;\\\" src='\").concat(value, \"'/>\");\n        }\n      }\n      var replaceDom = dom.cloneNode(true);\n      replaceDom.innerHTML = template;\n      this.replaceValue(dom.innerHTML, replaceDom.innerHTML);\n    },\n    /**\n     * 替换二维码\n     * @param {*} dom\n     * @param {*} value\n     */\n    replaceQrCode: function replaceQrCode(dom, value) {\n      var _this8 = this;\n      var imgRegular = /&lt;qrCode(\\S|\\s)*?&lt;\\/qrCode&gt;/g;\n      var imgList = dom.innerHTML.match(imgRegular);\n      if (imgList && imgList.length) {\n        var _loop2 = function _loop2() {\n          var item = imgList[i];\n          var width = _this8.getWidthHeight(item);\n          var height = _this8.getWidthHeight(item, 'height');\n          var id = _this8.jnpf.idGenerator();\n          var imgdom = document.createElement('img');\n          imgdom.width = width;\n          imgdom.height = height;\n          imgdom.id = id;\n          _this8.$nextTick(function () {\n            var qrcode = new _qrcodejs.default(imgdom, {\n              width: width ? width : 265,\n              height: height ? height : 265,\n              // 高度\n              text: value,\n              // 二维码内容\n              correctLevel: _qrcodejs.default.CorrectLevel.H //容错级别 容错级别有：（1）QRCode.CorrectLevel.L （2）QRCode.CorrectLevel.M （3）QRCode.CorrectLevel.Q （4）QRCode.CorrectLevel.H\n            });\n            var canvas = qrcode._el.querySelector(\"canvas\"); //获取生成二维码中的canvas，并将canvas转换成base64\n            var url = canvas.toDataURL(\"image/png\");\n            var template = \"<img style=\\\"width:\".concat(width, \"px;height:\").concat(height, \"px;display:inline-block;\\\" src=\").concat(url, \" />\");\n            _this8.replaceValue(dom.innerHTML, template);\n          });\n        };\n        for (var i = 0; i < imgList.length; i++) {\n          _loop2();\n        }\n      }\n    },\n    /**\n     * 替换条码\n     * @param {*} dom\n     * @param {*} value\n     */\n    replaceBarCode: function replaceBarCode(dom, value) {\n      var _this9 = this;\n      var imgRegular = /&lt;barCode(\\S|\\s)*?&lt;\\/barCode&gt;/g;\n      var imgList = dom.innerHTML.match(imgRegular);\n      if (imgList && imgList.length) {\n        var _loop3 = function _loop3() {\n          var item = imgList[i];\n          var width = _this9.getWidthHeight(item);\n          var height = _this9.getWidthHeight(item, 'height');\n          var id = _this9.jnpf.idGenerator();\n          var imgdom = document.createElement('img');\n          imgdom.width = width;\n          imgdom.height = height;\n          imgdom.id = 'barcode' + id;\n          var domContainer = _this9.$refs.barcodewrap;\n          domContainer.appendChild(imgdom);\n          _this9.$nextTick(function () {\n            (0, _jsbarcode.default)('#' + imgdom.id, value, {\n              width: width ? width : 4,\n              height: height ? height : 80,\n              displayValue: false\n            });\n            var imgDom = document.querySelector(\"#barcode\".concat(id));\n            domContainer.removeChild(imgdom);\n            _this9.replaceValue(dom.innerHTML, imgDom.outerHTML);\n          });\n        };\n        for (var i = 0; i < imgList.length; i++) {\n          _loop3();\n        }\n      }\n    },\n    replaceValue: function replaceValue(key, value) {\n      this.printTemplate = this.printTemplate.replace(key, value);\n    },\n    getTableKey: function getTableKey(dom) {\n      var tdDoms = dom.querySelectorAll('span');\n      var _iterator5 = _createForOfIteratorHelper(tdDoms),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var tdDom = _step5.value;\n          var dataTag = tdDom.getAttribute('data-tag');\n          if (['thousands', 'isAmountChinese', 'jnpfDictionary', 'jnpfDate'].includes(dataTag)) {\n            tdDom = tdDom.querySelector('span');\n            dataTag = tdDom && tdDom.getAttribute('data-tag');\n          }\n          if (dataTag) {\n            return dataTag.split(\".\")[0];\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return '';\n    },\n    replaceSysValue: function replaceSysValue() {\n      var recordList = this.recordList;\n      var systemPrinter = this.userInfo.userName + '/' + this.userInfo.userAccount;\n      var systemPrintTime = this.jnpf.toDate(new Date());\n      var systemApprovalContent = '';\n      if (recordList.length) {\n        systemApprovalContent += '<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\" data-mce-style=\"border-collapse: collapse; width: 100%;\"><tbody><tr><td style=\"width:20%;\" data-mce-style=\"width: 20%;\">节点名称</td><td style=\"width:20%;\" data-mce-style=\"width: 20%;\">操作人员</td><td style=\"width:20%;\" data-mce-style=\"width: 20%;\">操作时间</td><td style=\"width:20%;\" data-mce-style=\"width: 20%;\">执行动作</td><td style=\"width: 20%;\" data-mce-style=\"width: 20%;\">备注</td></tr>';\n        var content = '';\n        for (var i = 0; i < recordList.length; i++) {\n          var record = recordList[i];\n          content += \"<tr><td style=\\\"width: 20%;\\\" data-mce-style=\\\"width: 20%;\\\"><span class=\\\"wk-print-tag-wukong wk-tiny-color--common\\\" contenteditable=\\\"false\\\">\".concat(record.nodeName, \"</span></td><td style=\\\"width: 20%;\\\" data-mce-style=\\\"width: 20%;\\\"><span class=\\\"wk-print-tag-wukong wk-tiny-color--common\\\" contenteditable=\\\"false\\\">\").concat(record.userName, \"</span></td><td style=\\\"width: 20%;\\\" data-mce-style=\\\"width: 20%;\\\"><span class=\\\"wk-print-tag-wukong wk-tiny-color--common\\\" contenteditable=\\\"false\\\">\").concat(this.jnpf.toDate(record.handleTime), \"</span></td><td style=\\\"width: 20%;\\\" data-mce-style=\\\"width: 20%;\\\"><span class=\\\"wk-print-tag-wukong wk-tiny-color--common\\\" contenteditable=\\\"false\\\">\").concat(this.getHandleName(record.handleStatus), \"</span></td><td style=\\\"width: 20%;\\\" data-mce-style=\\\"width: 20%;\\\"><span class=\\\"wk-print-tag-wukong wk-tiny-color--common\\\" contenteditable=\\\"false\\\">\").concat(record.handleOpinion || \"\", \"</span></td></tr>\");\n        }\n        systemApprovalContent += content;\n        systemApprovalContent += '</tbody></table>';\n      }\n      this.printTemplate = this.printTemplate.replaceAll('{systemPrinter}', systemPrinter);\n      this.printTemplate = this.printTemplate.replaceAll('{systemPrintTime}', systemPrintTime);\n      this.printTemplate = this.printTemplate.replaceAll('{systemApprovalContent}', systemApprovalContent);\n    },\n    getThousands: function getThousands(value, place) {\n      if (!value && value !== 0) return '';\n      place = place ? place : this.getPlace(value);\n      value = Number(value).toFixed(place);\n      var numArr = value.toString().split('.');\n      numArr[0] = numArr[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n      numArr[1] = numArr[1] ? numArr[1].toString().substring(0, place) : '';\n      return numArr[1] ? numArr.join('.') : numArr[0];\n    },\n    getPlace: function getPlace(value) {\n      if (!value || value.toString().indexOf(\".\") == -1) return 0;\n      var index = value.toString().indexOf(\".\") + 1;\n      var count = value.toString().length - index;\n      return count;\n    },\n    getWidthHeight: function getWidthHeight(item) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'width';\n      var regular = \"\";\n      if (type == 'width') regular = /width=[\\\"|'](.*?)[\\\"|']/gi;\n      if (type == 'height') regular = /height=[\\\"|'](.*?)[\\\"|']/gi;\n      var quotes = /[\"|'](.*)[\"|']/;\n      var data = item.match(regular);\n      var value = \"\";\n      if (data && data.length) {\n        var res = data[0].match(quotes);\n        value = res && res.length ? res[1] : 100;\n      }\n      return value;\n    },\n    getJsBarcode: function getJsBarcode(value, id, width, height) {\n      if (!value) return;\n      (0, _jsbarcode.default)(id, value, {\n        width: width ? width : 4,\n        height: height ? height : 80,\n        displayValue: false\n      });\n    },\n    getHandleName: function getHandleName(handleStatus) {\n      if (handleStatus == 0) return \"退回\";\n      if (handleStatus == 1) return \"通过\";\n      if (handleStatus == 2) return \"发起\";\n      if (handleStatus == 3) return \"撤回\";\n      if (handleStatus == 4) return \"终止\";\n      if (handleStatus == 5) return \"指派\";\n      if (handleStatus == 6) return \"加签\";\n      if (handleStatus == 7) return \"转审\";\n      if (handleStatus == 8) return \"变更\";\n      if (handleStatus == 9) return \"复活\";\n      return '';\n    },\n    word: function word() {\n      var print = this.$refs.tsPrint.innerHTML;\n      var blob = new Blob([print], {\n        type: ''\n      });\n      var name = this.fullName ? \"\".concat(this.fullName, \".doc\") : '下载文档.doc';\n      this.downloadFile(blob, name);\n    },\n    downloadFile: function downloadFile(data, name, type) {\n      var blob = new Blob([data], {\n        type: type || ''\n      });\n      var downloadElement = document.createElement('a');\n      var href = window.URL.createObjectURL(blob);\n      downloadElement.href = href;\n      downloadElement.download = name;\n      document.body.appendChild(downloadElement);\n      downloadElement.click();\n      document.body.removeChild(downloadElement);\n      window.URL.revokeObjectURL(href);\n    },\n    print: function print(tag) {\n      var print = this.$refs.tsPrint.innerHTML;\n      print = print + \"<style>html * {word-break:break-all}</style>\";\n      var iframe = document.createElement('IFRAME');\n      document.body.appendChild(iframe);\n      iframe.setAttribute(\"style\", \"position:absolute;width:0px;height:0px;left:-500px;top:-500px;\");\n      iframe.contentWindow.focus();\n      var doc = iframe.contentWindow.document;\n      var _this = this;\n      iframe.onload = function () {\n        var oldTitle = document.title;\n        iframe.contentWindow.onafterprint = function (e) {\n          var title = oldTitle.split('-')[0];\n          var data = {\n            printTitle: _this.fullName ? _this.fullName : title,\n            printNum: tag == 'batch' ? _this.batchIds.split(\",\").length : 1,\n            printId: _this.id\n          };\n          (0, _request.default)({\n            url: \"/api/system/printLog/save\",\n            method: \"post\",\n            data: data\n          }).then(function (res) {});\n        };\n        document.title = \"JNPF快速开发平台\";\n        iframe.contentWindow.print();\n        document.title = oldTitle;\n        setTimeout(function () {\n          document.body.removeChild(iframe);\n        }, 0);\n      };\n      doc.write(print);\n      doc.close();\n    },\n    closeDialog: function closeDialog() {\n      this.$emit('update:visible', false);\n    },\n    getDateValue: function getDateValue(value, format) {\n      if (!value) return '';\n      return (0, _dayjs.default)(value).format(_jnpf.default.getDateFormat(format) || 'YYYY-MM-DD HH:mm:ss');\n    },\n    getDictionaryValue: function getDictionaryValue(value, id) {\n      if (!value || !id) return '';\n      var list = this.getDicDataSelector(id);\n      if (!list.length) return '';\n      try {\n        var val = JSON.parse(value);\n        if (Array.isArray(val)) {\n          var txt = [];\n          for (var i = 0; i < list.length; i++) {\n            for (var j = 0; j < val.length; j++) {\n              if (list[i].id == val[j]) txt.push(list[i].fullName);\n            }\n          }\n          return txt.join(',');\n        } else {\n          var arr = list.filter(function (o) {\n            return o.id == value;\n          });\n          return arr.length ? arr[0].fullName : '';\n        }\n      } catch (_unused) {\n        var _arr = list.filter(function (o) {\n          return o.id == value;\n        });\n        return _arr.length ? _arr[0].fullName : '';\n      }\n    },\n    getDicDataSelector: function getDicDataSelector(id) {\n      var list = this.dictionaryList;\n      var arr = list.filter(function (o) {\n        return o.id === id;\n      });\n      if (!arr.length) return [];\n      if (!arr[0].isTree) return arr[0].dictionaryList;\n      var rowData = [];\n      var findData = function findData(list) {\n        for (var i = 0; i < list.length; i++) {\n          var e = list[i];\n          rowData.push(e);\n          if (e.children && e.children.length) findData(e.children);\n        }\n      };\n      findData(arr[0].dictionaryList);\n      return rowData;\n    }\n  }\n};\nvar _default = exports.default = printOptionApi;",null]}