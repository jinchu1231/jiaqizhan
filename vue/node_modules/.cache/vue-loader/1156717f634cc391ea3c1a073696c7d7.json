{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/integrationProcess/PropPanel/FormListModal.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/integrationProcess/PropPanel/FormListModal.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getVisualDevFormList } from '@/api/onlineDev/visualDev.js'\nexport default {\n  name: 'FlowFormDialog',\n  props: {\n    value: {\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '请选择'\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    enableFlow: {\n      default: null\n    },\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  data() {\n    return {\n      list: [],\n      innerValue: '',\n      listQuery: {\n        keyword: '',\n        currentPage: 1,\n        pageSize: 20,\n      },\n      total: 0,\n      checked: '',\n      checkedRow: {},\n      listLoading: false,\n      inputHovering: false,\n      visible: false\n    }\n  },\n  computed: {\n    showClose() {\n      let hasValue = this.value !== undefined && this.value !== null && this.value !== '';\n      let criteria = this.clearable &&\n        !this.disabled &&\n        this.inputHovering &&\n        hasValue;\n      return criteria;\n    },\n  },\n  methods: {\n    initData() {\n      this.listLoading = true\n      let q = {\n        ...this.listQuery,\n        enableFlow: this.enableFlow\n      }\n      getVisualDevFormList(q).then(res => {\n        this.list = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      }).catch(() => { this.listLoading = false })\n    },\n    openDialog() {\n      if (this.disabled) return\n      this.checked = this.value\n      this.checkedRow = {\n        id: this.value,\n        fullName: this.title\n      }\n      this.visible = true\n      this.reset()\n    },\n    reset() {\n      this.listQuery.keyword = ''\n      this.search()\n    },\n    search() {\n      this.listQuery.currentPage = 1\n      this.listQuery.pageSize = 20\n      this.initData()\n    },\n    clear() {\n      this.checked = ''\n      this.checkedRow = {}\n      this.$emit('input', this.checked)\n      this.$emit('change', this.checked, this.checkedRow)\n    },\n    select() {\n      if (!this.checked) return\n      this.$emit('input', this.checked)\n      this.$emit('change', this.checked, this.checkedRow)\n      this.visible = false\n    },\n    rowClick(row) {\n      this.checked = row.id\n      this.checkedRow = row\n    }\n  }\n}\n",null]}