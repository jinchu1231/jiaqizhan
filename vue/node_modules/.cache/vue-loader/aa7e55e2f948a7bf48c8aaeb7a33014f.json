{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/user/ResetPassword.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/user/ResetPassword.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  resetUserPassword\n} from '@/api/permission/user'\nimport md5 from 'js-md5'\nimport { getSystemConfig } from '@/api/system/sysConfig'\n\nexport default {\n  data() {\n    const validateUserPassword = (rule, value, callback) => {\n\n      if (value === '') {\n        callback(new Error('新密码不能为空'));\n      }else{\n        if (this.dataForm.password2 !== '') {\n          this.$refs.dataForm.validateField('password2');\n        }\n        callback();\n      }\n    }\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入新密码'));\n      } else if (value !== this.dataForm.userPassword) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    }\n    return {\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      dataForm: {\n        id: '',\n        account: '',\n        userPassword: '',\n        validatePassword: ''\n      },\n      dataRule: {\n        userPassword: [\n          { required: true, validator: validateUserPassword, trigger: 'blur' }\n        ],\n        validatePassword: [\n          { required: true, validator: validatePassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n\n    init(id, account) {\n      this.visible = true\n      this.formLoading = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        this.dataForm.id = id\n        this.dataForm.account = account\n        this.formLoading = false\n      })\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          const formData = {\n            id: this.dataForm.id,\n            userPassword: md5(this.dataForm.userPassword),\n            validatePassword: md5(this.dataForm.validatePassword)\n          }\n          resetUserPassword(formData).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$emit('refreshDataList')\n              }\n            })\n          }).catch(() => {\n            this.btnLoading = false\n          })\n        }\n      })\n    }\n  }\n}\n",null]}