{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/common/Tab.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/common/Tab.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport draggable from 'vuedraggable'\nimport iconBox from '@/components/JNPF-iconBox'\nexport default {\n  components: { draggable, iconBox },\n  props: ['activeData', 'showType'],\n  data() {\n    return {\n      iconsVisible: false,\n      currentIcon: '',\n      currentIndex: 0\n    }\n  },\n  methods: {\n    addItem() {\n      const uuid = this.jnpf.idGenerator()\n      this.activeData.children.push({\n        title: 'New Tab ' + uuid,\n        name: uuid,\n        icon: '',\n        children: []\n      })\n    },\n    delItem(index, item) {\n      let list = this.activeData.children\n      let length = list.length\n      if (length < 2) {\n        this.$message({\n          message: '最后一项不能删除',\n          type: 'warning'\n        });\n        return\n      }\n      this.$confirm('删除后不能撤销，确定要删除吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        if (this.activeData.active === item.name) {\n          let nextTab = list[index + 1] || list[index - 1];\n          if (nextTab) this.activeData.active = nextTab.name;\n        }\n        this.activeData.children.splice(index, 1)\n      }).catch(() => { });\n    },\n    setIcon(val) {\n      this.$set(this.activeData.children[this.currentIndex], 'icon', val)\n    },\n    openIconsDialog(icon, index) {\n      this.currentIcon = icon\n      this.currentIndex = index\n      this.iconsVisible = true\n    },\n  }\n}\n",null]}