{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Process/OrgTransfer/roleTransfer.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Process/OrgTransfer/roleTransfer.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es6.regexp.search\");\nvar _role = require(\"@/api/permission/role\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = exports.default = {\n  name: 'JNPF-roleTransfer',\n  data: function data() {\n    return {\n      allLoading: false,\n      loading: false,\n      activeName: '',\n      treeData: [],\n      treeData2: [],\n      selectedData: [],\n      allList: [],\n      props: {\n        children: 'children',\n        label: 'fullName'\n      },\n      keyword: '',\n      ids: [],\n      dynamicDataList: []\n    };\n  },\n  props: {\n    height: {\n      type: String,\n      default: \"400px\"\n    },\n    dynamicList: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    auth: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    activeName: function activeName(val) {\n      this.keyword = '';\n      this.search();\n    }\n  },\n  methods: {\n    init: function init() {\n      this.selectedData = [];\n      this.ids = [];\n      this.keyword = '';\n      this.activeName = 'organize';\n      this.dynamicDataList = this.dynamicList.map(function (o) {\n        return _objectSpread({\n          'type': 'role'\n        }, o);\n      });\n      this.getList();\n    },\n    getSelectList: function getSelectList() {\n      this.allLoading = true;\n      if (!this.value.length) return this.allLoading = false;\n      var list = [];\n      for (var i = 0; i < this.value.length; i++) {\n        inner: for (var j = 0; j < this.allList.length; j++) {\n          if (this.value[i] === this.allList[j].id) {\n            list.push(this.allList[j]);\n            break inner;\n          }\n        }\n      }\n      this.selectedData = list;\n      this.ids = this.selectedData.map(function (o) {\n        return o.id;\n      });\n      this.allLoading = false;\n    },\n    search: function search() {\n      var tree = this.activeName === 'organize' ? 'tree2' : 'tree1';\n      this.$refs[tree].filter(this.keyword);\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data[this.props.label].indexOf(value) !== -1;\n    },\n    getList: function getList() {\n      var _this = this;\n      this.loading = true;\n      if (this.auth) {\n        (0, _role.getRoleSelectorByPermission)().then(function (res) {\n          var list = res.data.list;\n          _this.treeData = list.filter(function (o) {\n            return o.id === '1';\n          });\n          _this.treeData2 = list.filter(function (o) {\n            return o.id !== '1';\n          });\n          _this.$store.dispatch('base/getRoleList').then(function (res) {\n            _this.allList = [].concat((0, _toConsumableArray2.default)(res), (0, _toConsumableArray2.default)(_this.dynamicDataList));\n            _this.getSelectList();\n            _this.loading = false;\n          });\n        });\n      } else {\n        this.$store.dispatch('base/getRoleTree').then(function (res) {\n          _this.treeData = res.filter(function (o) {\n            return o.id === '1';\n          });\n          _this.treeData2 = res.filter(function (o) {\n            return o.id !== '1';\n          });\n          _this.$store.dispatch('base/getRoleList').then(function (res) {\n            _this.allList = [].concat((0, _toConsumableArray2.default)(res), (0, _toConsumableArray2.default)(_this.dynamicDataList));\n            _this.getSelectList();\n            _this.loading = false;\n          });\n        });\n      }\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      if (data.type === 'system' || data.type === 'role') {\n        var boo = this.selectedData.some(function (o) {\n          return o.id === data.id;\n        });\n        if (boo) return;\n        var item = {\n          id: data.id,\n          fullName: data.fullName\n        };\n        this.multiple ? this.selectedData.push(item) : this.selectedData = [item];\n        this.multiple ? this.ids.push(item.id) : this.ids = [item.id];\n        this.$emit('input', this.ids);\n        this.$emit('getValue', this.ids, this.selectedData);\n      }\n    },\n    removeAll: function removeAll() {\n      this.selectedData = [];\n      this.ids = [];\n      this.$emit('input', this.ids);\n      this.$emit('getValue', this.ids, this.selectedData);\n    },\n    removeData: function removeData(index) {\n      this.selectedData.splice(index, 1);\n      this.ids.splice(index, 1);\n      this.$emit('input', this.ids);\n      this.$emit('getValue', this.ids, this.selectedData);\n    }\n  }\n};",null]}