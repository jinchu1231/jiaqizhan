{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/msgCenter/sendConfig/Detail.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/msgCenter/sendConfig/Detail.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getSendConfigDetail } from '@/api/msgCenter/sendConfig'\nimport Detail from '../msgTemplate/Detail'\n\nexport default {\n  components: { Detail },\n  name: 'sendConfig-Detail',\n  data() {\n    return {\n      dataForm: {\n        id: '',\n        fullName: '',\n        enCode: '',\n        description: '',\n        enabledMark: 1,\n        sortCode: 0,\n        messageSource: '',\n        templateType: 0,\n        sendConfigTemplateList: []\n      },\n      loading: false,\n      templateVisible: false,\n      messageTypeList: [],\n      viewVisible: false,\n    }\n  },\n  methods: {\n    init(id, messageSourceName) {\n      this.dataForm.id = id || ''\n      this.getConfig()\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        if (this.dataForm.id) {\n          this.loading = true\n          getSendConfigDetail(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.dataForm.messageSourceName = messageSourceName\n            this.dataForm.enabledMark = Number(this.dataForm.enabledMark)\n            this.loading = false\n          }).catch(() => {\n            this.loading = false\n          })\n        }\n      })\n    },\n    getConfig() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'msgSendType' }).then((res) => {\n        this.messageTypeList = res\n      })\n    },\n    goBack() {\n      this.$emit('close')\n    },\n    getMsgTypeTitle(messageType) {\n      const item = this.messageTypeList.find((res) => {\n        return messageType == res.enCode\n      })\n      return item.fullName\n    },\n    closeViewForm() {\n      this.viewVisible = false\n    },\n    handleView(id) {\n      this.viewVisible = true\n      this.$nextTick(() => {\n        this.$refs.View.init(id, this.messageTypeList)\n      })\n    },\n  }\n}\n",null]}