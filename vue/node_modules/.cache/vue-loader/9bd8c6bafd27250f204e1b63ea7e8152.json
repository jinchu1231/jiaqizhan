{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/systemData/dataInterface/FieldForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/systemData/dataInterface/FieldForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    var checkName = (rule, value, callback) => {\n      let checkName = rule.field === 'parameter' ? '参数名称' : rule.field === 'field' ? '字段名称' : '映射字段'\n      let boo = true\n      let name = this.tableType == 1 ? 'parameter' : 'field'\n      for (let i = 0; i < this.list.length; i++) {\n        if (this.dataForm[name] === this.list[i].field && this.dataForm.id !== this.list[i].id) {\n          boo = false\n          break\n        }\n      }\n      if (boo) {\n        callback()\n      } else {\n        callback(new Error(`${checkName}重复`));\n      }\n    }\n    return {\n      visible: false,\n      type: 'add',\n      tableType: 1,\n      dataForm: {\n        id: '',\n        defaultValue: '',\n        field: '',\n        dataType: 'varchar',\n        required: 0,\n        fieldName: '',\n        parameter: ''\n      },\n      list: [],\n      options: [\n        { label: '字符串', value: 'varchar' },\n        { label: '整型', value: 'int' },\n        { label: '日期时间', value: 'datetime' },\n        { label: '浮点', value: 'decimal' },\n      ],\n      dataRule: {\n        field: [\n          { required: true, message: '请输入字段名称', trigger: 'blur' },\n          { validator: checkName, trigger: 'blur' }\n        ],\n        parameter: [\n          { required: true, message: '请输入参数名称', trigger: 'blur' },\n          { validator: checkName, trigger: 'blur' }\n        ],\n        defaultValue: [\n          { required: true, message: '请输入映射字段', trigger: 'blur' },\n          { validator: checkName, trigger: 'blur' }\n        ],\n        dataType: [\n          { required: true, message: '请选择参数类型', trigger: 'change' }\n        ]\n      }\n    }\n  },\n  computed: {\n    title() {\n      if (this.type === 'add') {\n        return '新建'\n      } else {\n        return '编辑'\n      }\n    }\n  },\n  methods: {\n    init(dataForm, list, type) {\n      this.visible = true\n      this.tableType = type\n      this.list = list || []\n      if (this.tableType == 1) this.dataForm.parameter = this.dataForm.field\n      this.$nextTick(() => {\n        this.$refs['fieldForm'].clearValidate()\n        if (dataForm) {\n          this.type = 'edit'\n          this.dataForm = {\n            ...this.dataForm,\n            ...JSON.parse(JSON.stringify(dataForm))\n          }\n          if (type == 1) this.dataForm.parameter = this.dataForm.field\n        } else {\n          this.$refs['fieldForm'].resetFields()\n          this.dataForm.id = this.jnpf.idGenerator()\n          this.dataForm.defaultValue = ''\n          this.dataForm.fieldName = ''\n          this.type = 'add'\n        }\n      })\n    },\n    dataFormSubmit() {\n      this.$refs['fieldForm'].validate((valid) => {\n        if (valid) {\n          if (this.tableType == 1) this.dataForm.field = this.dataForm.parameter\n          this.$emit('addParameter', this.type, this.dataForm, this.tableType)\n          this.visible = false\n        }\n      })\n    }\n  }\n}\n",null]}