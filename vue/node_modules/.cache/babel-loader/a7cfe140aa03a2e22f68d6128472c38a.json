{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Jnpf/InputNumber/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Jnpf/InputNumber/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.replace\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _index = require(\"@/components/Generator/utils/index\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'JnpfInputNumber',\n  components: {},\n  props: {\n    controlsPosition: {\n      type: String,\n      default: ''\n    },\n    controls: {\n      type: Boolean,\n      default: true\n    },\n    value: {\n      type: [Number, String],\n      default: undefined\n    },\n    max: {\n      type: Number,\n      default: Infinity\n    },\n    min: {\n      type: Number,\n      default: -Infinity\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    precision: {\n      type: Number,\n      default: undefined\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    thousands: {\n      type: Boolean,\n      default: false\n    },\n    isAmountChinese: {\n      type: Boolean,\n      default: false\n    },\n    addonBefore: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '数字文本'\n    },\n    addonAfter: {\n      type: String,\n      default: ''\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      innerValue: undefined,\n      amountChineseName: '',\n      key2: ''\n    };\n  },\n  watch: {\n    innerValue: {\n      handler: function handler(val) {\n        this.amountChinese(val);\n      },\n      deep: true\n    },\n    value: {\n      handler: function handler(val) {\n        var value = val ? val : val === 0 ? 0 : undefined;\n        this.innerValue = value;\n        this.amountChinese(val);\n      },\n      deep: true,\n      immediate: true\n    },\n    isAmountChinese: function isAmountChinese() {\n      this.amountChinese(this.value);\n    },\n    thousands: function thousands(val) {\n      this.key2 = +new Date();\n    }\n  },\n  directives: {\n    thousands: {\n      // 被绑定元素插入父节点时调用\n      inserted: function inserted(el, binding, vnode) {\n        var precision = vnode.child.precision;\n        var thousands = vnode.context.thousands;\n        // 获取input节点\n        if (el.tagName.toLocaleUpperCase() !== 'INPUT') {\n          el = el.getElementsByTagName('input')[0];\n        }\n        if (thousands) {\n          // 千分位\n          el.value = vnode.context.format_number_thousandth(el.value);\n          // 聚焦转化为数字格式（去除千分位）\n          el.onfocus = function (e) {\n            if (el.value) {\n              var a = el.value.replace(/,/g, ''); //去除千分号的','\n              el.value = Number(parseFloat(a));\n              if (precision) el.value = Number(el.value).toFixed(precision);\n            }\n          };\n          el.onblur = function (e) {\n            el.value = vnode.context.format_number_thousandth(el.value);\n          };\n        }\n      },\n      componentUpdated: function componentUpdated(el, binding, vnode) {\n        // 聚焦转化为数字格式（去除千分位）\n        el.focus();\n        var precision = vnode.child.precision;\n        var thousands = vnode.context.thousands;\n        if (thousands) {\n          if (el.tagName.toLocaleUpperCase() !== 'INPUT') {\n            el = el.getElementsByTagName('input')[0];\n          }\n          el.onblur = function (e) {\n            if (el.value) {\n              if (precision) el.value = Number(el.value).toFixed(precision);\n              el.value = vnode.context.format_number_thousandth(el.value);\n            }\n          };\n        }\n      },\n      unbind: function unbind(el, binding, vnode) {\n        // 聚焦转化为数字格式（去除千分位）\n        if (el.tagName.toLocaleUpperCase() !== 'INPUT') {\n          el = el.getElementsByTagName('input')[0];\n        }\n      }\n    }\n  },\n  methods: {\n    amountChinese: function amountChinese(val) {\n      if (!this.isAmountChinese) return;\n      this.amountChineseName = (0, _index.getAmountChinese)(val);\n    },\n    format_number_thousandth: function format_number_thousandth(num) {\n      return (0, _index.thousandsFormat)(num);\n    },\n    onblur: function onblur(event) {\n      this.$emit('blur', event);\n    },\n    change: function change(val) {\n      var value = val ? val : val == 0 ? 0 : undefined;\n      this.$emit('input', value);\n      this.$emit('change', value);\n    }\n  }\n};",null]}