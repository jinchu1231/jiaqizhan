{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/userRelation/Selector.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/userRelation/Selector.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _userRelation = require(\"@/api/permission/userRelation\");\nvar _JNPFUserTransfer = _interopRequireDefault(require(\"@/components/JNPF-userTransfer\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    userTransfer: _JNPFUserTransfer.default\n  },\n  data: function data() {\n    return {\n      visible: false,\n      btnLoading: false,\n      pageTitle: '',\n      dataForm: {\n        objectId: '',\n        objectType: '',\n        userIds: []\n      }\n    };\n  },\n  watch: {\n    visible: function visible(val) {\n      if (val) return;\n      this.$emit('closeDialog');\n    }\n  },\n  methods: {\n    init: function init(id, fullName, type) {\n      var _this = this;\n      this.visible = true;\n      this.dataForm.objectId = id;\n      this.dataForm.objectType = type;\n      this.dataForm.userIds = [];\n      this.$nextTick(function () {\n        if (type === 'Position') {\n          _this.pageTitle = _this.$t(\"position.postMember\") + ' - ' + fullName;\n        } else if (type === 'Role') {\n          _this.pageTitle = _this.$t(\"role.roleMember\") + ' - ' + fullName;\n        } else if (type === 'Group') {\n          _this.pageTitle = '组内成员 - ' + fullName;\n        }\n        _this.$refs.userTransfer && (_this.$refs.userTransfer.allLoading = true);\n        (0, _userRelation.getUserRelationList)(_this.dataForm.objectId).then(function (res) {\n          _this.dataForm.userIds = res.data.ids;\n          _this.$refs.userTransfer && _this.$refs.userTransfer.init();\n        });\n      });\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this2 = this;\n      this.btnLoading = true;\n      (0, _userRelation.createUserRelation)(this.dataForm).then(function (res) {\n        _this2.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: function onClose() {\n            _this2.visible = false;\n            _this2.btnLoading = false;\n          }\n        });\n      }).catch(function () {\n        _this2.btnLoading = false;\n      });\n    }\n  }\n};",null]}