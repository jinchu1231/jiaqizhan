{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/printDev/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/printDev/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getPrintDevList, Delete, Copy, exportTpl } from '@/api/system/printDev'\nimport Form from './Form'\nimport log from './log.vue'\nimport Preview from './Preview'\nexport default {\n  name: 'system-printDev',\n  components: { Form, Preview, log },\n  data() {\n    return {\n      logPanel: false,\n      list: [],\n      categoryList: [],\n      keyword: '',\n      category: '',\n      enabledMark: '',\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      },\n      total: 0,\n      listLoading: true,\n      formVisible: false,\n      previewVisible: false,\n      activeId: ''\n    }\n  },\n  created() {\n    this.getDictionaryData()\n    this.initData()\n  },\n  methods: {\n    log(row) {\n      this.logPanel = true\n      this.$nextTick(() => {\n        this.$refs.log.show(row)\n      })\n    },\n    reset() {\n      this.keyword = ''\n      this.category = ''\n      this.enabledMark = ''\n      this.search()\n    },\n    search() {\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      }\n      this.initData()\n    },\n    initData() {\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        keyword: this.keyword,\n        category: this.category,\n        enabledMark: this.enabledMark\n      }\n      getPrintDevList(query).then(res => {\n        this.list = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      }).catch(() => {\n        this.listLoading = false\n      })\n    },\n    getDictionaryData() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'printDev' }).then((res) => {\n        this.categoryList = res\n        if (window.location.href.includes('open')) {\n          this.addOrUpdateHandle()\n        }\n      })\n    },\n    addOrUpdateHandle(id) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.Form.init(this.categoryList, id)\n      })\n    },\n    copy(id) {\n      this.$confirm('您确定要复制该打印模板, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        Copy(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    exportTpl(id) {\n      this.$confirm('您确定要导出该打印模板, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        exportTpl(id).then(res => {\n          this.jnpf.downloadFile(res.data.url)\n        })\n      }).catch(() => { });\n    },\n    preview(id) {\n      if (!id) return\n      this.activeId = id\n      this.previewVisible = true\n    },\n    closeForm(isRefresh) {\n      this.formVisible = false\n      if (isRefresh) {\n        this.initData()\n      }\n    },\n    handleDel(id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        Delete(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: () => {\n              this.initData()\n            }\n          })\n        })\n      }).catch(() => { })\n    },\n  }\n}\n",null]}