{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/layout/components/AppMain.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/layout/components/AppMain.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ResetPwdForm from './ResetPassword'\nimport { mapGetters } from 'vuex'\nimport { getSystemConfig } from '@/api/system/sysConfig'\nimport { updatePasswordMessage } from '@/api/user'\n\nexport default {\n  name: 'AppMain',\n  components: {\n    ResetPwdForm\n  },\n  data() {\n    return {\n      resetFormVisible: false,\n      baseForm:{\n        mandatoryModificationOfInitialPassword:0,\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['userInfo']),\n    cachedViews() {\n      return this.$store.state.tagsView.cachedViews\n    },\n    useCache() {\n      return this.$store.state.settings.useCache\n    },\n    key() {\n      return this.$route.path\n    },\n    sysConfig() {\n      return this.$store.state.settings.sysConfig\n    }\n  },\n  created() {\n    this.initData()\n  },\n  methods: {\n    initData() {\n      this.listLoading = true\n      this.$nextTick(() => {\n        updatePasswordMessage().then(res => {\n\n        }),\n        getSystemConfig().then(res => {\n          if(this.userInfo.changePasswordDate==null && res.data.mandatoryModificationOfInitialPassword==1){\n            this.resetFormVisible = true\n            this.$nextTick(() => {\n              this.$refs.ResetPwdForm.init(this.userInfo.userId, this.userInfo.userAccount)\n            })\n          }\n          this.listLoading = false\n        }).catch(() => {\n          this.listLoading = false\n        })\n      })\n    },\n  }\n}\n",null]}