{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/authorize/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/authorize/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getAuthorizeInfo, Update, Create } from '@/api/permission/authorize'\nexport default {\n  components: {},\n  data() {\n    return {\n      visible: false,\n      loading: false,\n      btnLoading: false,\n      dataForm: {\n        id: '',\n        fullName: '',\n        enCode: '',\n        sortCode: 0,\n        enabledMark: 1,\n        description: ''\n      },\n      dataRule: {\n        fullName: [\n          { required: true, message: '权限组名称不能为空', trigger: 'blur' },\n        ],\n        enCode: [\n          { required: true, message: '权限组编码不能为空', trigger: 'blur' },\n          { validator: this.formValidate('enCode'), trigger: 'blur' },\n        ],\n      }\n    }\n  },\n  methods: {\n    init(id) {\n      this.dataForm.id = id || ''\n      this.visible = true\n      this.btnLoading = false\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        if (this.dataForm.id) {\n          this.loading = true\n          getAuthorizeInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.loading = false\n          }).catch(() => {\n            this.loading = false\n          })\n        }\n      })\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) return\n        const formMethod = this.dataForm.id ? Update : Create\n        formMethod(this.dataForm).then((res) => {\n          this.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: () => {\n              this.btnLoading = false\n              this.visible = false\n              this.$emit('close', true)\n            }\n          })\n        }).catch(() => {\n          this.btnLoading = false\n        })\n      })\n    }\n  }\n}\n",null]}