{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RAutoComplete.vue?vue&type=template&id=6eacdeb8&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RAutoComplete.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-row\",\n    [\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"控件标题\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { placeholder: \"请输入控件标题\" },\n            model: {\n              value: _vm.activeData.__config__.label,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"label\", $$v)\n              },\n              expression: \"activeData.__config__.label\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"显示标题\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.__config__.showLabel,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"showLabel\", $$v)\n              },\n              expression: \"activeData.__config__.showLabel\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"标题提示\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { type: \"textarea\", rows: 2, placeholder: \"请输入标题提示\" },\n            model: {\n              value: _vm.activeData.__config__.tipLabel,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"tipLabel\", $$v)\n              },\n              expression: \"activeData.__config__.tipLabel\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"占位提示\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { placeholder: \"请输入占位提示\" },\n            model: {\n              value: _vm.activeData.placeholder,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData, \"placeholder\", $$v)\n              },\n              expression: \"activeData.placeholder\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"远端数据\" } },\n        [\n          _c(\"interface-dialog\", {\n            attrs: {\n              value: _vm.activeData.interfaceId,\n              title: _vm.activeData.interfaceName,\n              popupTitle: \"远端数据\",\n            },\n            on: { change: _vm.onInterfaceIdChange },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"显示字段\" } },\n        [\n          _c(\"el-autocomplete\", {\n            staticClass: \"inline-input\",\n            staticStyle: { width: \"100%\" },\n            attrs: {\n              \"fetch-suggestions\": _vm.querySearch,\n              placeholder: \"请输入内容\",\n            },\n            on: {\n              select: function ($event) {\n                return _vm.handleSelect($event, \"relationField\")\n              },\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function (ref) {\n                  var item = ref.item\n                  return [\n                    _c(\"div\", { staticClass: \"sale-order-popper-item\" }, [\n                      _c(\"span\", [_vm._v(_vm._s(item.defaultValue))]),\n                    ]),\n                  ]\n                },\n              },\n            ]),\n            model: {\n              value: _vm.activeData.relationField,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData, \"relationField\", $$v)\n              },\n              expression: \"activeData.relationField\",\n            },\n          }),\n        ],\n        1\n      ),\n      _vm.activeData.templateJson && _vm.activeData.templateJson.length\n        ? _c(\n            \"el-table\",\n            {\n              staticClass: \"auto-table\",\n              attrs: { data: _vm.activeData.templateJson },\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: {\n                  type: \"index\",\n                  width: \"50\",\n                  label: \"序号\",\n                  align: \"center\",\n                },\n              }),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"field\", label: \"参数名称\" },\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"default\",\n                      fn: function (scope) {\n                        return [\n                          _c(\"span\", { staticClass: \"required-sign\" }, [\n                            _vm._v(_vm._s(scope.row.required ? \"*\" : \"\")),\n                          ]),\n                          _vm._v(\n                            \"\\n        \" +\n                              _vm._s(\n                                scope.row.fieldName\n                                  ? scope.row.field +\n                                      \"(\" +\n                                      scope.row.fieldName +\n                                      \")\"\n                                  : scope.row.field\n                              ) +\n                              \"\\n      \"\n                          ),\n                        ]\n                      },\n                    },\n                  ],\n                  null,\n                  false,\n                  3347837687\n                ),\n              }),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"value\", label: \"表单字段\" },\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"default\",\n                      fn: function (scope) {\n                        return [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: {\n                                placeholder: \"请选择表单字段\",\n                                clearable: \"\",\n                                filterable: \"\",\n                              },\n                              on: {\n                                change: function ($event) {\n                                  return _vm.onRelationFieldChange(\n                                    $event,\n                                    scope.row\n                                  )\n                                },\n                              },\n                              model: {\n                                value: scope.row.relationField,\n                                callback: function ($$v) {\n                                  _vm.$set(scope.row, \"relationField\", $$v)\n                                },\n                                expression: \"scope.row.relationField\",\n                              },\n                            },\n                            _vm._l(_vm.formFieldsOptions, function (item) {\n                              return _c(\"el-option\", {\n                                key: item.realVModel,\n                                attrs: {\n                                  label: item.realLabel,\n                                  value: item.realVModel,\n                                },\n                              })\n                            }),\n                            1\n                          ),\n                        ]\n                      },\n                    },\n                  ],\n                  null,\n                  false,\n                  3708884993\n                ),\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _c(\n        \"jnpf-form-tip-item\",\n        { attrs: { label: \"显示条数\", tipLabel: \"最大值只能设置为50\" } },\n        [\n          _c(\"el-input-number\", {\n            attrs: {\n              placeholder: \"请输入显示条数\",\n              min: 1,\n              max: 50,\n              precision: _vm.activeData.precision,\n              \"controls-position\": \"right\",\n            },\n            model: {\n              value: _vm.activeData.total,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData, \"total\", $$v)\n              },\n              expression: \"activeData.total\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"能否清空\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.clearable,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData, \"clearable\", $$v)\n              },\n              expression: \"activeData.clearable\",\n            },\n          }),\n        ],\n        1\n      ),\n      _vm.activeData.__config__.jnpfKey === \"popupTableSelect\"\n        ? _c(\n            \"el-form-item\",\n            { attrs: { label: \"能否搜索\" } },\n            [\n              _c(\"el-switch\", {\n                model: {\n                  value: _vm.activeData.filterable,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData, \"filterable\", $$v)\n                  },\n                  expression: \"activeData.filterable\",\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.activeData.__config__.jnpfKey === \"popupTableSelect\"\n        ? _c(\n            \"el-form-item\",\n            { attrs: { label: \"能否多选\" } },\n            [\n              _c(\"el-switch\", {\n                on: { change: _vm.multipleChange },\n                model: {\n                  value: _vm.activeData.multiple,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData, \"multiple\", $$v)\n                  },\n                  expression: \"activeData.multiple\",\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"是否禁用\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.disabled,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData, \"disabled\", $$v)\n              },\n              expression: \"activeData.disabled\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"是否隐藏\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.__config__.noShow,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"noShow\", $$v)\n              },\n              expression: \"activeData.__config__.noShow\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"是否必填\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.__config__.required,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"required\", $$v)\n              },\n              expression: \"activeData.__config__.required\",\n            },\n          }),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}