{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/msgCenter/accountConfig/wxWananchiConfig/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/msgCenter/accountConfig/wxWananchiConfig/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  createConfig,\n  updateConfig,\n  getConfigDetail,\n  testConfig\n} from '@/api/msgCenter/accountConfig'\nexport default {\n  data() {\n    return {\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      testBtnLoading: false,\n      dataForm: {\n        fullName: '',\n        enCode: '',\n        appKey: \"\",\n        appId: \"\",\n        appSecret: \"\",\n        sortCode: 0,\n        enabledMark: 1,\n        description: '',\n        bearer: '',\n        agentId: ''\n      },\n      categoryList: [],\n      dataRule: {\n        fullName: [\n          { required: true, message: '请输入名称', trigger: 'blur' },\n          { max: 50, message: '名称最多为50个字符！', trigger: 'blur' }\n        ],\n        enCode: [\n          { required: true, message: '请输入编码', trigger: 'blur' },\n          { max: 50, message: '编码最多为50个字符！', trigger: 'blur' },\n          { validator: this.formValidate('enCode'), trigger: 'blur' },\n        ],\n        appKey: [\n          { required: true, message: '请输入原始ID', trigger: 'blur' },\n        ],\n        appId: [\n          { required: true, message: '请输入AppID', trigger: 'blur' }\n        ],\n        appSecret: [\n          { required: true, message: '请输入Secret', trigger: 'blur' }\n        ],\n        agentId: [\n          { required: true, message: '请输入token', trigger: 'blur' }\n        ],\n        bearer: [\n          { required: true, message: '请输入encodingAESKey', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    init(id) {\n      this.dataForm.id = id || ''\n      this.visible = true\n      this.formLoading = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        if (this.dataForm.id) {\n          getConfigDetail(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n          })\n        }\n      })\n      this.formLoading = false\n    },\n    sendTest() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.testBtnLoading = true\n          let query = {\n            ...this.dataForm,\n            type: 7\n          }\n          testConfig(query, 'testQyWebChatConnect').then(res => {\n            this.$message({\n              type: 'success',\n              message: res.msg,\n              duration: 1000,\n              onClose: () => {\n                this.testBtnLoading = false\n              }\n            });\n          }).catch(() => {\n            this.testBtnLoading = false\n          })\n        }\n      })\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          let query = {\n            ...this.dataForm,\n            type: 7\n          }\n          this.btnLoading = true\n          const formMethod = this.dataForm.id ? updateConfig : createConfig\n          formMethod(query).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$emit('refreshDataList')\n              }\n            })\n          }).catch(() => {\n            this.btnLoading = false\n          })\n        }\n      })\n    }\n  }\n}\n",null]}