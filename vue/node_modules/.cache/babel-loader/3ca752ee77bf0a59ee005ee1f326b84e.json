{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/formDesign/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/formDesign/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _Home = _interopRequireDefault(require(\"@/components/Generator/index/Home\"));\nvar _FieldForm = _interopRequireDefault(require(\"./FieldForm\"));\nvar _TableForm = _interopRequireDefault(require(\"@/views/generator/TableForm\"));\nvar _common = _interopRequireDefault(require(\"@/mixins/generator/common\"));\nvar _FormDesign = require(\"@/api/workFlow/FormDesign\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  mixins: [_common.default],\n  components: {\n    Generator: _Home.default,\n    FieldForm: _FieldForm.default,\n    TableForm: _TableForm.default\n  },\n  data: function data() {\n    return {\n      visible: false,\n      loading: false,\n      activeStep: 0,\n      dataForm: {\n        id: '',\n        fullName: '',\n        enCode: '',\n        dbLinkId: '0',\n        sortCode: 0,\n        category: '',\n        description: \"\",\n        tables: '',\n        formType: 2,\n        columnData: '',\n        interfaceUrl: '',\n        flowType: ''\n      },\n      dataRule: {\n        fullName: [{\n          required: true,\n          message: '表单名称不能为空',\n          trigger: 'blur'\n        }\n        // { pattern: /^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/, message: '请输入正确的表单名称', trigger: 'blur' },\n        ],\n        enCode: [{\n          required: true,\n          message: '表单编码不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\w+$/,\n          message: '请输入正确的表单编码',\n          trigger: 'blur'\n        }],\n        formType: [{\n          required: true,\n          message: '表单类型不能为空',\n          trigger: 'blur'\n        }],\n        flowType: [{\n          required: true,\n          message: '表单类别不能为空',\n          trigger: 'blur'\n        }]\n      },\n      tables: [],\n      formVisible: false,\n      btnLoading: false,\n      mainTableFields: [],\n      relationTable: \"\",\n      draftJson: null,\n      iconBoxVisible: false,\n      dbOptions: [],\n      formType: '系统表单',\n      dbType: \"MySQL\",\n      defaultTable: []\n    };\n  },\n  methods: {\n    init: function init(id, flowType, formType) {\n      var _this = this;\n      this.activeStep = 0;\n      this.tables = [];\n      this.defaultTable = [];\n      this.dataForm.id = id || '';\n      this.getDbOptions();\n      this.visible = true;\n      this.loading = true;\n      this.$nextTick(function () {\n        if (_this.dataForm.id) {\n          (0, _FormDesign.getFormInfo)(_this.dataForm.id).then(function (res) {\n            _this.dataForm = res.data;\n            _this.formType = res.data.formType == 2 ? \"自定义表单\" : \"系统表单\";\n            _this.draftJson = res.data.draftJson && JSON.parse(res.data.draftJson);\n            _this.tables = _this.dataForm.tableJson && JSON.parse(_this.dataForm.tableJson) || [];\n            _this.defaultTable = JSON.parse(JSON.stringify(_this.tables));\n            _this.updateFields();\n          }).catch(function () {\n            _this.loading = false;\n          });\n        } else {\n          _this.dataForm.flowType = flowType;\n          _this.dataForm.formType = formType;\n          _this.formType = formType == 2 ? \"自定义表单\" : \"系统表单\";\n          _this.loading = false;\n        }\n      });\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this2 = this;\n      if (this.activeStep === 1) {\n        var model = this.dataForm.formType == 2 ? 'generator' : 'fieldForm';\n        this.$refs[model].getData().then(function (res) {\n          _this2.dataForm.draftJson = JSON.stringify(res.formData);\n          _this2.dataForm.tableJson = JSON.stringify(_this2.tables);\n          _this2.draftJson = res.formData;\n          _this2.submit();\n        }).catch(function (err) {\n          err.msg && _this2.$message.warning(err.msg);\n        });\n      } else {\n        if (!this.tables.length && this.defaultTable.length) return this.$message.warning('请至少选择一个数据表');\n        this.$refs['dataForm'].validate(function (valid) {\n          _this2.dataForm.tableJson = JSON.stringify(_this2.tables);\n          if (!valid) return;\n          _this2.submit();\n        });\n      }\n    },\n    submit: function submit() {\n      var _this3 = this;\n      this.btnLoading = true;\n      var formMethod = this.dataForm.id ? _FormDesign.Update : _FormDesign.Create;\n      formMethod(this.dataForm).then(function (res) {\n        _this3.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: function onClose() {\n            _this3.closeDialog(true);\n          }\n        });\n      }).catch(function () {\n        _this3.btnLoading = false;\n      });\n    },\n    next: function next() {\n      var _this4 = this;\n      if (this.activeStep < 1) {\n        this.$refs['dataForm'].validate(function (valid) {\n          if (valid) {\n            _this4.getDbType();\n            if (!_this4.tables.length) {\n              if (_this4.defaultTable.length) {\n                _this4.$message.warning('请至少选择一个数据表');\n                return;\n              }\n              _this4.$store.commit('generator/SET_TABLE', false);\n              _this4.activeStep += 1;\n            } else {\n              if (!_this4.exist()) return;\n              var subTable = _this4.tables.filter(function (o) {\n                return o.typeId == '0';\n              });\n              _this4.$store.commit('generator/UPDATE_SUB_TABLE', subTable);\n              _this4.$store.commit('generator/SET_ALL_TABLE', _this4.tables);\n              _this4.$store.commit('generator/SET_TABLE', true);\n              _this4.$store.commit('generator/SET_DATABASE', _this4.dataForm.dbLinkId);\n              _this4.$store.commit('generator/UPDATE_FORMITEM_LIST', _this4.mainTableFields);\n              _this4.activeStep += 1;\n            }\n          }\n        });\n      }\n    },\n    typeChange: function typeChange(val) {\n      if (val == 1) {\n        this.dataForm.icon = '';\n        this.dataForm.iconBackground = '#008cff';\n      }\n    }\n  }\n};",null]}