{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/group/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/group/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getGroupList, delGroup } from '@/api/permission/group'\nimport Form from './Form'\nimport UserRelationList from '@/views/permission/userRelation/Selector'\nimport CheckPermissions from '@/components/CheckPermissions'\nexport default {\n  components: {\n    Form,\n    UserRelationList,\n    CheckPermissions\n  },\n  name: 'permission-group',\n  data() {\n    return {\n      list: [],\n      categoryList: [],\n      keyword: '',\n      type: '',\n      enabledMark: '',\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      },\n      total: 0,\n      listLoading: true,\n      formVisible: false,\n      userRelationListVisible: false,\n      checkPermissionsVisible: false,\n      options: [\n        { fullName: '启用', id: 1 },\n        { fullName: '禁用', id: 0 },\n      ],\n      typeOptions: []\n    }\n  },\n  created() {\n    this.initData()\n  },\n  methods: {\n    checkPermissions(item) {\n      this.checkPermissionsVisible = true\n      this.$nextTick(() => {\n        item = { ...item, type: 'group' }\n        this.$refs.checkPermissions.init(item, 2)\n      })\n    },\n    reset() {\n      this.keyword = '',\n        this.type = '',\n        this.enabledMark = '',\n        this.search()\n    },\n    search() {\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      }\n      this.initData()\n    },\n    initData() {\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        keyword: this.keyword,\n        type: this.type,\n        enabledMark: this.enabledMark,\n      }\n      this.$store.dispatch('base/getDictionaryData', { sort: 'groupType' }).then(res => {\n        this.typeOptions = res\n      })\n      getGroupList(query).then(res => {\n        this.list = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      }).catch(() => {\n        this.listLoading = false\n      })\n    },\n    addOrUpdateHandle(id) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.Form.init(id)\n      })\n    },\n    removeUserRelationList(isRefresh) {\n      this.userRelationListVisible = false\n      if (isRefresh) {\n        this.initData()\n      }\n    },\n    handleDel(id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        delGroup(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: () => {\n              this.$store.commit('generator/SET_GROUP_TREE', [])\n              this.initData()\n            }\n          })\n        })\n      }).catch(() => { })\n    },\n    handleUserRelation(id, fullName) {\n      this.userRelationListVisible = true\n      this.$nextTick(() => {\n        this.$refs.UserRelationList.init(id, fullName, 'Group')\n      })\n    }\n  }\n}\n",null]}