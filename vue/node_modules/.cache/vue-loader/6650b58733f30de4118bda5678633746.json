{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/HTable/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/HTable/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CardHeader from \"../CardHeader\"\nimport { getDataInterfaceRes } from '@/api/systemData/dataInterface'\nexport default {\n  components: { CardHeader },\n  props: {\n    showType: { type: String, default: 'pc' },\n    activeData: { type: Object, default: () => { } },\n  },\n  data() {\n    return {\n      key: +new Date(),\n      defaultValue: [],\n      list: []\n    }\n  },\n  watch: {\n\n  },\n  created() {\n    this.initData()\n  },\n  methods: {\n    tableRowClassName({ row, rowIndex }) {\n      let styleJson = {}\n      styleJson['font-size'] = this.activeData.option.tableFontSize + 'px'\n      styleJson['color'] = this.activeData.option.tableFontColor\n      if (rowIndex % 2 == 0) {\n        styleJson.background = this.activeData.option.tableOddLineColor ? this.activeData.option.tableOddLineColor : this.activeData.option.tableBgColor\n        return styleJson\n      } else {\n        styleJson.background = this.activeData.option.tableEvenLineColor ? this.activeData.option.tableEvenLineColor : this.activeData.option.tableBgColor\n        return styleJson\n      }\n    },\n    initData() {\n      let tableCount = this.activeData.option.tableCount\n      this.defaultValue = JSON.parse(JSON.stringify(this.activeData.option.defaultValue))\n      this.defaultValue = this.defaultValue.slice(0, tableCount || 50)\n      if (this.activeData.option.styleType == 1) {\n        this.list = this.activeData.option.columnData\n      } else {\n        this.list = this.activeData.option.rowData\n      }\n      if (this.activeData.dataType === 'dynamic') {\n        const propsApi = this.activeData.propsApi\n        if (!propsApi) return this.option.defaultValue = ''\n        getDataInterfaceRes(propsApi).then(res => {\n          this.defaultValue = res.data\n          this.defaultValue = this.defaultValue.slice(0, tableCount || 50)\n        })\n      }\n      this.$nextTick(() => this.$refs.tableRef.doLayout())\n    },\n    sliceCount() {\n      let defaultValue = JSON.parse(JSON.stringify(this.activeData.option.defaultValue))\n      return defaultValue\n    }\n  }\n}\n",null]}