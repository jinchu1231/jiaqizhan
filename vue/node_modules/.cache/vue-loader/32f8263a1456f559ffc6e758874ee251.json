{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/integrationProcess/PropPanel/MessageNode.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/integrationProcess/PropPanel/MessageNode.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport MsgDialog from '@/components/Process/PropPanel/msgDialog'\nimport Detail from '@/components/Process/PropPanel/TemplateDetail'\nexport default {\n  name: 'DeleteDataNode',\n  components: { MsgDialog, Detail },\n  props: {\n    formConf: {\n      type: Object,\n      default: () => { }\n    },\n    integrateType: {\n      type: Number,\n      default: 1\n    },\n    formFieldsOptions: {\n      type: Array,\n      default: () => []\n    },\n  },\n  data() {\n    return {\n      dataForm: JSON.parse(JSON.stringify(this.formConf)),\n      viewVisible: false\n    }\n  },\n  methods: {\n    getDataForm() {\n      return this.dataForm\n    },\n    onMsgChange(val, params) {\n      const [id, item] = params\n      if (!id) {\n        this.dataForm.msgId = ''\n        this.dataForm.msgName = ''\n        this.dataForm.templateJson = []\n        return\n      }\n      //if (this.dataForm.msgId === val) return\n      this.dataForm.msgId = id\n      this.dataForm.msgName = item.fullName\n      this.dataForm.templateJson = item.templateJson\n    },\n    onRelationFieldChange(val, row) {\n      if (!val) return;\n      let list = this.formFieldsOptions.filter(o => o.id === val);\n      if (!list.length) return;\n      let item = list[0];\n      row.isSubTable = item.__config__ && item.__config__.isSubTable ? item.__config__.isSubTable : false;\n    },\n    goDetail(id) {\n      this.viewVisible = true\n      this.$nextTick(() => {\n        this.$refs.View.init(id)\n      })\n    }\n  }\n}\n\n",null]}