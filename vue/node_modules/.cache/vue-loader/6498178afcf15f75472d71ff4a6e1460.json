{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/ExtraConfigModal.vue?vue&type=template&id=43420f76&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/ExtraConfigModal.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      staticClass: \"JNPF-dialog JNPF-dialog_center dialog_height\",\n      attrs: {\n        title: \"组件属性配置\",\n        \"close-on-click-modal\": false,\n        visible: _vm.dialogVisible,\n        \"lock-scroll\": \"\",\n        width: \"600px\",\n        \"append-to-body\": \"\",\n      },\n      on: {\n        \"update:visible\": function ($event) {\n          _vm.dialogVisible = $event\n        },\n      },\n    },\n    [\n      _c(\n        \"el-form\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.loading,\n              expression: \"loading\",\n            },\n          ],\n          ref: \"activeData\",\n          attrs: { model: _vm.activeData, \"label-width\": \"80px\" },\n        },\n        [\n          _vm.activeData.jnpfKey === \"select\"\n            ? [\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"数据来源\" } },\n                  [\n                    _c(\n                      \"el-radio-group\",\n                      {\n                        staticStyle: { \"text-align\": \"center\" },\n                        attrs: { size: \"small\" },\n                        on: { change: _vm.dataTypeChange },\n                        model: {\n                          value: _vm.activeData.__config__.dataType,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.activeData.__config__, \"dataType\", $$v)\n                          },\n                          expression: \"activeData.__config__.dataType\",\n                        },\n                      },\n                      [\n                        _c(\"el-radio-button\", { attrs: { label: \"static\" } }, [\n                          _vm._v(\"静态数据\"),\n                        ]),\n                        _c(\n                          \"el-radio-button\",\n                          { attrs: { label: \"dictionary\" } },\n                          [_vm._v(\"数据字典\")]\n                        ),\n                        _c(\"el-radio-button\", { attrs: { label: \"dynamic\" } }, [\n                          _vm._v(\"远端数据\"),\n                        ]),\n                      ],\n                      1\n                    ),\n                  ],\n                  1\n                ),\n                _vm.activeData.__config__.dataType === \"static\"\n                  ? [\n                      _c(\n                        \"draggable\",\n                        {\n                          attrs: {\n                            list: _vm.activeData.options,\n                            animation: 340,\n                            group: \"selectItem\",\n                            handle: \".option-drag\",\n                          },\n                        },\n                        _vm._l(_vm.activeData.options, function (item, index) {\n                          return _c(\n                            \"div\",\n                            { key: index, staticClass: \"select-item\" },\n                            [\n                              _c(\n                                \"div\",\n                                { staticClass: \"select-line-icon option-drag\" },\n                                [\n                                  _c(\"i\", {\n                                    staticClass: \"icon-ym icon-ym-darg\",\n                                  }),\n                                ]\n                              ),\n                              _c(\"el-input\", {\n                                attrs: { placeholder: \"选项名\", size: \"small\" },\n                                model: {\n                                  value: item.fullName,\n                                  callback: function ($$v) {\n                                    _vm.$set(item, \"fullName\", $$v)\n                                  },\n                                  expression: \"item.fullName\",\n                                },\n                              }),\n                              _c(\"el-input\", {\n                                attrs: { placeholder: \"选项值\", size: \"small\" },\n                                model: {\n                                  value: item.id,\n                                  callback: function ($$v) {\n                                    _vm.$set(item, \"id\", $$v)\n                                  },\n                                  expression: \"item.id\",\n                                },\n                              }),\n                              _c(\n                                \"div\",\n                                {\n                                  staticClass: \"close-btn select-line-icon\",\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.activeData.options.splice(\n                                        index,\n                                        1\n                                      )\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", {\n                                    staticClass: \"el-icon-remove-outline\",\n                                  }),\n                                ]\n                              ),\n                            ],\n                            1\n                          )\n                        }),\n                        0\n                      ),\n                      _c(\n                        \"div\",\n                        { staticStyle: { \"margin-left\": \"29px\" } },\n                        [\n                          _c(\n                            \"el-button\",\n                            {\n                              staticStyle: { \"padding-bottom\": \"0\" },\n                              attrs: {\n                                icon: \"el-icon-circle-plus-outline\",\n                                type: \"text\",\n                              },\n                              on: { click: _vm.addSelectItem },\n                            },\n                            [_vm._v(\"\\n            添加选项\\n          \")]\n                          ),\n                          _c(\"el-divider\", {\n                            attrs: { direction: \"vertical\" },\n                          }),\n                          _c(\n                            \"el-button\",\n                            {\n                              staticStyle: { \"padding-bottom\": \"0\" },\n                              attrs: { type: \"text\" },\n                              on: { click: _vm.updateSelectItem },\n                            },\n                            [_vm._v(\"\\n            批量编辑\\n          \")]\n                          ),\n                        ],\n                        1\n                      ),\n                    ]\n                  : _vm._e(),\n                _vm.activeData.__config__.dataType === \"dictionary\"\n                  ? [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"数据字典\" } },\n                        [\n                          _c(\n                            \"el-row\",\n                            { staticClass: \"jnpf-el-row\" },\n                            [\n                              _c(\n                                \"el-col\",\n                                { attrs: { span: 18 } },\n                                [\n                                  _c(\"JnpfTreeSelect\", {\n                                    attrs: {\n                                      options: _vm.dicOptions,\n                                      placeholder: \"请选择数据字典\",\n                                      lastLevel: \"\",\n                                      clearable: \"\",\n                                    },\n                                    on: {\n                                      change: _vm.dictionaryTypeChange,\n                                      selectChange: _vm.selectChange,\n                                    },\n                                    model: {\n                                      value:\n                                        _vm.activeData.__config__\n                                          .dictionaryType,\n                                      callback: function ($$v) {\n                                        _vm.$set(\n                                          _vm.activeData.__config__,\n                                          \"dictionaryType\",\n                                          $$v\n                                        )\n                                      },\n                                      expression:\n                                        \"activeData.__config__.dictionaryType\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                              _c(\n                                \"el-col\",\n                                { attrs: { span: 6 } },\n                                [\n                                  _c(\n                                    \"el-button\",\n                                    {\n                                      on: {\n                                        click: function ($event) {\n                                          return _vm.goDictionary()\n                                        },\n                                      },\n                                    },\n                                    [_vm._v(\"\\n                添加\")]\n                                  ),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"存储字段\" } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"请选择存储字段\" },\n                              model: {\n                                value: _vm.activeData.props.value,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.activeData.props, \"value\", $$v)\n                                },\n                                expression: \"activeData.props.value\",\n                              },\n                            },\n                            [\n                              _c(\"el-option\", {\n                                attrs: { label: \"id\", value: \"id\" },\n                              }),\n                              _c(\"el-option\", {\n                                attrs: { label: \"enCode\", value: \"enCode\" },\n                              }),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ]\n                  : _vm._e(),\n                _vm.activeData.__config__.dataType === \"dynamic\"\n                  ? [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"远端数据\" } },\n                        [\n                          _c(\"interface-dialog\", {\n                            attrs: {\n                              value: _vm.activeData.__config__.propsUrl,\n                              title: _vm.activeData.__config__.propsName,\n                              popupTitle: \"远端数据\",\n                            },\n                            on: { change: _vm.propsUrlChange },\n                          }),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"存储字段\" } },\n                        [\n                          _c(\"el-autocomplete\", {\n                            staticClass: \"inline-input\",\n                            staticStyle: { width: \"100%\" },\n                            attrs: {\n                              \"fetch-suggestions\": _vm.querySearch,\n                              placeholder: \"请输入存储字段\",\n                            },\n                            on: {\n                              select: function ($event) {\n                                return _vm.handleSelect($event, \"value\")\n                              },\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"default\",\n                                  fn: function (ref) {\n                                    var item = ref.item\n                                    return [\n                                      _c(\n                                        \"div\",\n                                        {\n                                          staticClass: \"sale-order-popper-item\",\n                                        },\n                                        [\n                                          _c(\"span\", [\n                                            _vm._v(_vm._s(item.defaultValue)),\n                                          ]),\n                                        ]\n                                      ),\n                                    ]\n                                  },\n                                },\n                              ],\n                              null,\n                              false,\n                              582861419\n                            ),\n                            model: {\n                              value: _vm.activeData.props.value,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.activeData.props, \"value\", $$v)\n                              },\n                              expression: \"activeData.props.value\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"显示字段\" } },\n                        [\n                          _c(\"el-autocomplete\", {\n                            staticClass: \"inline-input\",\n                            staticStyle: { width: \"100%\" },\n                            attrs: {\n                              \"fetch-suggestions\": _vm.querySearch,\n                              placeholder: \"请输入显示字段\",\n                            },\n                            on: {\n                              select: function ($event) {\n                                return _vm.handleSelect($event, \"label\")\n                              },\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"default\",\n                                  fn: function (ref) {\n                                    var item = ref.item\n                                    return [\n                                      _c(\n                                        \"div\",\n                                        {\n                                          staticClass: \"sale-order-popper-item\",\n                                        },\n                                        [\n                                          _c(\"span\", [\n                                            _vm._v(_vm._s(item.defaultValue)),\n                                          ]),\n                                        ]\n                                      ),\n                                    ]\n                                  },\n                                },\n                              ],\n                              null,\n                              false,\n                              582861419\n                            ),\n                            model: {\n                              value: _vm.activeData.props.label,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.activeData.props, \"label\", $$v)\n                              },\n                              expression: \"activeData.props.label\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]\n                  : _vm._e(),\n              ]\n            : _vm._e(),\n          _vm.activeData.jnpfKey === \"datePicker\"\n            ? _c(\n                \"el-form-item\",\n                { attrs: { label: \"日期类型\" } },\n                [\n                  _c(\"jnpf-select\", {\n                    attrs: {\n                      placeholder: \"请选择日期类型\",\n                      options: _vm.dateFormatOptions,\n                      props: _vm.props,\n                    },\n                    model: {\n                      value: _vm.activeData.format,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData, \"format\", $$v)\n                      },\n                      expression: \"activeData.format\",\n                    },\n                  }),\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm.activeData.jnpfKey === \"timePicker\"\n            ? _c(\n                \"el-form-item\",\n                { attrs: { label: \"时间类型\" } },\n                [\n                  _c(\"jnpf-select\", {\n                    attrs: {\n                      placeholder: \"请选择时间类型\",\n                      options: _vm.timeFormatOptions,\n                      props: _vm.props,\n                    },\n                    model: {\n                      value: _vm.activeData.format,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData, \"format\", $$v)\n                      },\n                      expression: \"activeData.format\",\n                    },\n                  }),\n                ],\n                1\n              )\n            : _vm._e(),\n          [\"organizeSelect\", \"depSelect\", \"userSelect\"].includes(\n            _vm.activeData.jnpfKey\n          )\n            ? _c(\n                \"el-form-item\",\n                { attrs: { label: \"\" } },\n                [\n                  _c(\n                    \"el-checkbox\",\n                    {\n                      model: {\n                        value: _vm.activeData.isIncludeSubordinate,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.activeData, \"isIncludeSubordinate\", $$v)\n                        },\n                        expression: \"activeData.isIncludeSubordinate\",\n                      },\n                    },\n                    [\n                      _vm._v(\n                        \"\\n        查询当前\" +\n                          _vm._s(\n                            _vm.activeData.jnpfKey === \"organizeSelect\"\n                              ? \"组织及子组织\"\n                              : _vm.activeData.jnpfKey === \"depSelect\"\n                              ? \"部门及子部门\"\n                              : \"用户及下属\"\n                          ) +\n                          \"\\n      \"\n                      ),\n                    ]\n                  ),\n                ],\n                1\n              )\n            : _vm._e(),\n        ],\n        2\n      ),\n      _c(\n        \"span\",\n        {\n          staticClass: \"dialog-footer\",\n          attrs: { slot: \"footer\" },\n          slot: \"footer\",\n        },\n        [\n          _c(\n            \"el-button\",\n            {\n              on: {\n                click: function ($event) {\n                  _vm.dialogVisible = false\n                },\n              },\n            },\n            [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n          ),\n          _c(\n            \"el-button\",\n            { attrs: { type: \"primary\" }, on: { click: _vm.handleSubmit } },\n            [_vm._v(_vm._s(_vm.$t(\"common.confirmButton\")))]\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        [\n          _c(\n            \"el-dialog\",\n            {\n              staticClass:\n                \"JNPF-dialog JNPF-dialog_center JNPF-dialog-tree-select\",\n              attrs: {\n                visible: _vm.dicVisible,\n                \"append-to-body\": \"\",\n                \"lock-scroll\": \"\",\n                width: \"80%\",\n              },\n              on: {\n                \"update:visible\": function ($event) {\n                  _vm.dicVisible = $event\n                },\n                close: _vm.defaultValueChange,\n              },\n            },\n            [_c(\"dicIndex\", { ref: \"dicIndex\" })],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm.updateVisible\n        ? _c(\"BatchEditing\", {\n            ref: \"batchEditing\",\n            on: { change: _vm.handleSure },\n          })\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}