{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/area/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/area/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _province = require(\"@/api/system/province\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      visible: false,\n      formLoading: false,\n      treeLoading: false,\n      btnLoading: false,\n      singleSelectTreeVal: \"\",\n      //单选树默认label值\n      singleSelectTreeKey: \"\",\n      //单选树默认key值\n      treeData: [],\n      //单选树的值\n      props: {\n        children: \"children\",\n        label: \"fullName\",\n        isLeaf: 'isLeaf'\n      },\n      dataForm: {\n        parentId: '',\n        fullName: '',\n        enCode: '',\n        enabledMark: 1,\n        sortCode: 0,\n        description: ''\n      },\n      nodeId: '0',\n      dataRule: {\n        parentId: [{\n          required: true,\n          message: '请选择区域上级',\n          trigger: 'blur'\n        }],\n        fullName: [{\n          required: true,\n          message: '请输入区域名称',\n          trigger: 'blur'\n        }, {\n          validator: this.formValidate('fullName', '区域名称不能含有特殊符号'),\n          trigger: 'blur'\n        }, {\n          max: 50,\n          message: '区域名称最多为50个字符！',\n          trigger: 'blur'\n        }],\n        enCode: [{\n          required: true,\n          message: '请输入区域编码',\n          trigger: 'blur'\n        }, {\n          validator: this.formValidate('userCode', '区域编码只能是数字'),\n          trigger: 'blur'\n        }, {\n          max: 50,\n          message: '区域编码最多为50个字符！',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    init: function init(id) {\n      var _this = this;\n      this.dataForm.id = id || 0;\n      this.visible = true;\n      this.formLoading = true;\n      this.$nextTick(function () {\n        _this.selectTreeClearHandle();\n        _this.$refs['dataForm'].resetFields();\n        _this.treeLoading = true;\n        (0, _province.getProvinceSelector)('-1', _this.dataForm.id || 0).then(function (res) {\n          var topItem = {\n            fullName: \"顶级节点\",\n            id: \"-1\",\n            isLeaf: true\n          };\n          _this.treeData = [topItem].concat((0, _toConsumableArray2.default)(res.data.list));\n          _this.treeLoading = false;\n        });\n        if (_this.dataForm.id) {\n          (0, _province.getProvinceInfo)(_this.dataForm.id).then(function (res) {\n            _this.dataForm = res.data;\n            if (res.data.parentName) {\n              _this.singleSelectTreeKey = res.data.parentId;\n              _this.singleSelectTreeVal = res.data.parentName;\n            } else {\n              _this.singleSelectTreeVal = '顶级节点';\n              _this.singleSelectTreeKey = '-1';\n            }\n          });\n        }\n        _this.formLoading = false;\n      });\n    },\n    getChildrenNode: function getChildrenNode(node, resolve) {\n      var _this2 = this;\n      this.nodeId = node.data.id;\n      (0, _province.getProvinceSelector)(this.nodeId, this.dataForm.id || 0).then(function (res) {\n        _this2.childrenList = res.data.list;\n        resolve(_this2.childrenList);\n      });\n    },\n    loadNode: function loadNode(node, resolve) {\n      if (node.level === 0) {\n        this.nodeId = '-1';\n        return resolve(this.treeData);\n      }\n      if (node.level > 0) {\n        this.getChildrenNode(node, resolve);\n      }\n    },\n    selectTreeNodeClick: function selectTreeNodeClick(data) {\n      this.singleSelectTreeVal = data.fullName;\n      this.singleSelectTreeKey = data.id;\n      this.dataForm.parentId = data.id;\n      this.$refs.singleTree.blur();\n    },\n    selectTreeClearHandle: function selectTreeClearHandle() {\n      this.singleSelectTreeVal = '';\n      this.singleSelectTreeKey = '';\n      this.dataForm.parentId = '';\n      this.$refs.singleSelectTree.setCurrentKey('');\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this3 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          _this3.btnLoading = true;\n          var formMethod = _this3.dataForm.id ? _province.updateProvince : _province.createProvince;\n          formMethod(_this3.dataForm).then(function (res) {\n            _this3.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: function onClose() {\n                _this3.visible = false;\n                _this3.btnLoading = false;\n                _this3.$emit('refreshDataList');\n              }\n            });\n          }).catch(function () {\n            _this3.btnLoading = false;\n          });\n        }\n      });\n    }\n  }\n};",null]}