{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/basic/profile/components/SysLog.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/basic/profile/components/SysLog.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { LogList } from '@/api/permission/userSetting'\nimport { delLog, deleteAll } from '@/api/system/log'\nexport default {\n  name: 'sysLog',\n  data() {\n    return {\n      btnLoading: false,\n      showAll: false,\n      keyword: '',\n      loginMark: '',\n      loginType: '',\n      startTime: '',\n      endTime: '',\n      loginLogData: [],\n      multipleSelection: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc'\n      },\n      pickerVal: []\n    };\n  },\n  created() {\n    this.initData()\n  },\n  methods: {\n    initData() {\n      let category = 1\n      this.listLoading = true\n      let data = {\n        ...this.listQuery,\n        keyword: this.keyword,\n        startTime: this.startTime,\n        endTime: this.endTime,\n        loginMark: this.loginMark,\n        loginType: this.loginType,\n        category\n      }\n      LogList(data).then(res => {\n        this.loginLogData = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n        this.btnLoading = false\n      })\n    },\n    handleSelectionChange(val) {\n      const res = val.map(item => item.id)\n      this.multipleSelection = res\n    },\n    search() {\n      this.btnLoading = true\n      if (this.pickerVal && this.pickerVal.length) {\n        this.startTime = this.pickerVal[0]\n        this.endTime = this.pickerVal[1]\n      } else {\n        this.startTime = ''\n        this.endTime = ''\n      }\n      this.initData()\n    },\n    batchDel() {\n      if (!this.loginLogData.length) return\n      this.btnLoading = true\n      this.$confirm('此操作会将所有日志删除，是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        deleteAll().then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: () => {\n              this.initData()\n            }\n          })\n        }).catch(() => {\n          this.btnLoading = false\n        })\n      }).catch(() => {\n        this.btnLoading = false\n      })\n    },\n    handleDel() {\n      if (!this.multipleSelection.length) {\n        this.$message({\n          type: 'error',\n          message: '请选择一条数据',\n          duration: 1500,\n        })\n        return\n      }\n      const data = {\n        ids: this.multipleSelection\n      }\n      this.$confirm('您确定要删除这些数据吗, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.btnLoading = true\n        delLog(data).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: () => {\n              this.initData()\n            }\n          })\n        }).catch(() => { this.btnLoading = false })\n      }).catch(() => { this.btnLoading = false })\n    },\n    reset() {\n      this.btnLoading = true\n      this.keyword = ''\n      this.list = []\n      this.pickerVal = []\n      this.startTime = ''\n      this.endTime = ''\n      this.loginMark = ''\n      this.loginType = ''\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc'\n      }\n      this.initData()\n    }\n  }\n}\n",null]}