{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/common/CommonFunData.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/common/CommonFunData.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport iconBox from '@/components/JNPF-iconBox'\nimport Sortable from 'sortablejs'\nimport { linkTypeList } from '../../components/config'\nimport { validURL } from '@/utils/validate'\nexport default {\n  components: { iconBox },\n  props: ['menuList', 'appMenuList', 'showType'],\n  data() {\n    return {\n      visible: false,\n      list: [],\n      categoryList: [],\n      iconsVisible: false,\n      currentIcon: '',\n      currentIndex: '',\n      linkTypeList,\n    }\n  },\n  methods: {\n    init(data) {\n      this.list = JSON.parse(JSON.stringify(data))\n      this.getDictionaryData()\n      this.visible = true\n      this.$nextTick(() => {\n        this.setSort()\n      })\n    },\n    getDictionaryData() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'WorkFlowCategory' }).then((res) => {\n        this.categoryList = res\n      })\n    },\n    confirm() {\n      for (let i = 0; i < this.list.length; i++) {\n        const element = this.list[i];\n        if (!element.fullName) return this.$message.warning('名称不能为空')\n        if (!element.icon) return this.$message.warning('请选择图标')\n        if (!element.iconBgColor) return this.$message.warning('请选择图标颜色')\n        if (element.linkType == 1 && (!element.urlAddress && !element.moduleId)) return this.$message.warning('请选择菜单')\n        if (element.linkType == 2 && !element.urlAddress) return this.$message.warning('链接地址不能为空')\n        if (element.linkType == 2 && !validURL(element.urlAddress)) return this.$message.warning('请输入正确的链接地址')\n      }\n      this.visible = false\n      this.$emit('refresh', this.list)\n    },\n    openIconsDialog(icon, index) {\n      this.currentIcon = icon\n      this.currentIndex = index\n      this.iconsVisible = true\n    },\n    setIcon(val) {\n      this.list[this.currentIndex].icon = val\n    },\n    setSort() {\n      const el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0]\n      Sortable.create(el, {\n        ghostClass: 'sortable-ghost',\n        setData: function (dataTransfer) {\n          dataTransfer.setData('Text', '')\n        },\n        onEnd: evt => {\n          const targetRow = this.list.splice(evt.oldIndex, 1)[0]\n          this.list.splice(evt.newIndex, 0, targetRow)\n        },\n        handle: '.drag-handler',\n      })\n    },\n    getSelectVal(data, index) {\n      const item = data[1]\n      this.list[index].type = item.type\n      this.list[index].urlAddress = item.urlAddress\n      if (item.linkTarget) this.list[index].linkTarget = item.linkTarget\n      if (item.propertyJson) this.list[index].propertyJson = item.propertyJson\n    },\n    addHandle() {\n      const item = {\n        fullName: \"\",\n        moduleId: \"\",\n        linkType: '',\n        urlAddress: '',\n        linkTarget: '_self',\n        icon: \"icon-ym icon-ym-webDesign\",\n        iconBgColor: \"#1890FF\",\n        type: 2,\n        id: this.jnpf.idGenerator()\n      }\n      this.list.push(item)\n    },\n    handleDel(index) {\n      this.list.splice(index, 1)\n    },\n    linkTypeChange(index) {\n      this.list[index].urlAddress = ''\n    }\n  }\n}\n",null]}