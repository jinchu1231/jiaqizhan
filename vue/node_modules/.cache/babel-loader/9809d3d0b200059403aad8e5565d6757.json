{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/billRule/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/billRule/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.replace\");\nvar _billRule = require(\"@/api/system/billRule\");\nvar _dayjs = _interopRequireDefault(require(\"dayjs\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    var validateZero = function validateZero(rule, value, callback) {\n      var str = value.replace(/0/g, '');\n      if (!str) callback(new Error(\"\\u6D41\\u6C34\\u8D77\\u59CB\\u4E0D\\u80FD\\u4E3A\".concat(value)));\n      callback();\n    };\n    return {\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      dataForm: {\n        fullName: '',\n        enCode: '',\n        prefix: '',\n        dateFormat: '',\n        digit: '',\n        startNumber: '',\n        example: '',\n        sortCode: 0,\n        enabledMark: 1,\n        description: '',\n        category: ''\n      },\n      categoryList: [],\n      dataRule: {\n        fullName: [{\n          required: true,\n          message: '请输入业务名称',\n          trigger: 'blur'\n        }, {\n          max: 50,\n          message: '业务名称最多为50个字符！',\n          trigger: 'blur'\n        }],\n        enCode: [{\n          required: true,\n          message: '请输入业务编码',\n          trigger: 'blur'\n        }, {\n          max: 50,\n          message: '业务编码最多为50个字符！',\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: '请选择业务分类',\n          trigger: 'change'\n        }],\n        prefix: [{\n          required: true,\n          message: '请输入流水前缀',\n          trigger: 'blur'\n        }],\n        dateFormat: [{\n          required: true,\n          message: '请选择流水日期',\n          trigger: 'change'\n        }],\n        digit: [{\n          required: true,\n          message: '请输入流水位数',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          message: '仅能输入正整数'\n        }, {\n          pattern: /^[1-9]\\d*$/,\n          message: '仅能输入正整数'\n        }],\n        startNumber: [{\n          required: true,\n          message: '只能输入数字',\n          trigger: 'blur'\n        }, {\n          pattern: /^[0-9]*$/,\n          message: '只能输入数字',\n          trigger: 'blur'\n        }, {\n          validator: validateZero\n        }]\n      }\n    };\n  },\n  methods: {\n    init: function init(id, categoryList) {\n      var _this = this;\n      this.dataForm.id = id || '';\n      this.categoryList = categoryList;\n      this.visible = true;\n      this.formLoading = true;\n      this.$nextTick(function () {\n        _this.$refs['dataForm'].resetFields();\n        if (_this.dataForm.id) {\n          (0, _billRule.getBillRuleInfo)(_this.dataForm.id).then(function (res) {\n            _this.dataForm = res.data;\n          });\n        }\n      });\n      this.formLoading = false;\n    },\n    handleChange: function handleChange() {\n      // 流水前缀\n      var prefix = this.dataForm.prefix;\n\n      // 流水日期格式\n      var dateFormat = this.dataForm.dateFormat;\n      var dateVal = '';\n      if (dateFormat && dateFormat !== 'no') {\n        dateVal = (0, _dayjs.default)().format(dateFormat.toUpperCase());\n      }\n      // 流水位数\n      var digitVal = this.dataForm.digit;\n      if (digitVal != \"\") digitVal = Array(digitVal > 0 ? digitVal - ('' + 0).length + 1 : 0).join('0') + 0;\n\n      // 流水起始\n      var startNumber = this.dataForm.startNumber;\n      var startNumberVal = '';\n      if (startNumber != \"\") {\n        startNumberVal = digitVal + startNumber;\n        digitVal = startNumberVal.substring(startNumberVal.length - digitVal.length, startNumberVal.length);\n        this.dataForm.startNumber = digitVal;\n      }\n      // 流水范例\n      this.dataForm.example = prefix + dateVal + digitVal;\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this2 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          _this2.btnLoading = true;\n          var formMethod = _this2.dataForm.id ? _billRule.updateBillRule : _billRule.createBillRule;\n          formMethod(_this2.dataForm).then(function (res) {\n            _this2.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: function onClose() {\n                _this2.visible = false;\n                _this2.btnLoading = false;\n                _this2.$emit('refreshDataList');\n              }\n            });\n          }).catch(function () {\n            _this2.btnLoading = false;\n          });\n        }\n      });\n    }\n  }\n};",null]}