{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/ComRight.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/ComRight.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport comMixin from './mixin';\nimport OrgSelect from '@/components/Process/OrgSelect'\nimport { getDrawingList } from '@/components/Generator/utils/db'\nconst selectTypeOptions = [{\n  value: 'all',\n  label: '全部'\n}, {\n  value: 'custom',\n  label: '自定义'\n}]\nconst userSelectTypeOptions = [\n  ...selectTypeOptions,\n  {\n    value: 'dep',\n    label: '部门组件联动'\n  },\n  {\n    value: 'pos',\n    label: '岗位组件联动'\n  },\n  {\n    value: 'role',\n    label: '角色组件联动'\n  },\n  {\n    value: 'group',\n    label: '分组组件联动'\n  },\n]\nexport default {\n  props: ['activeData'],\n  mixins: [comMixin],\n  components: {\n    OrgSelect\n  },\n  data() {\n    return {\n      selectTypeOptions,\n      userSelectTypeOptions,\n      relationOptions: [],\n      key: +new Date()\n    }\n  },\n  computed: {\n    formFieldsOptions() {\n      if (this.activeData.selectType === 'all' || this.activeData.selectType === 'custom') return []\n      let list = []\n      const loop = (data, parent) => {\n        if (!data) return\n        if (data.__config__ && this.isIncludesTable(data) && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data)\n        }\n        if (Array.isArray(data)) data.forEach(d => loop(d, parent))\n        if (data.__vModel__ && data.__config__.jnpfKey === `${this.activeData.selectType}Select` && data.__vModel__ !== this.activeData.__vModel__) {\n          const isTableChild = parent && parent.__config__ && parent.__config__.jnpfKey === 'table'\n          list.push({\n            realVModel: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n            realLabel: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label,\n            ...data\n          })\n        }\n      }\n      loop(getDrawingList())\n      return list\n    }\n  },\n  created() { },\n  methods: {\n    onTypeChange() {\n      this.$set(this.activeData.__config__, 'defaultValue', this.activeData.multiple ? [] : '')\n      if (this.activeData.selectType === 'custom') this.$set(this.activeData.__config__, 'defaultCurrent', false)\n      this.activeData.ableIds = []\n      if (this.activeData.__config__.jnpfKey === 'userSelect') {\n        this.activeData.relationField = ''\n        if (this.activeData.selectType != 'all' && this.activeData.selectType != 'custom') this.$set(this.activeData.__config__, 'defaultValue', null)\n      }\n      this.activeData.__config__.renderKey = +new Date()\n      this.key = +new Date()\n    },\n    getLabel(key) {\n      if (key === 'organizeSelect') return '组织';\n      if (key === 'depSelect') return '部门';\n      if (key === 'posSelect') return '岗位';\n      if (key === 'roleSelect') return '角色';\n      if (key === 'groupSelect') return '分组';\n      return '用户';\n    },\n    isIncludesTable(data) {\n      if ((!data.__config__.layout || data.__config__.layout === 'rowFormItem') && data.__config__.jnpfKey !== 'table') return true\n      if (this.activeData.__config__.isSubTable) return this.activeData.__config__.parentVModel === data.__vModel__\n      return data.__config__.jnpfKey !== 'table'\n    },\n    multipleChange(val) {\n      this.$set(this.activeData.__config__, 'defaultValue', val ? [] : '')\n      this.activeData.__config__.renderKey = +new Date()\n      this.key = +new Date()\n    },\n    defaultCurrentChange(val, jnpfKey) {\n      if (val) {\n        if (jnpfKey === 'organizeSelect') {\n          this.$set(this.activeData.__config__, 'defaultValue', [])\n        } else {\n          this.$set(this.activeData.__config__, 'defaultValue', null)\n        }\n      }\n      this.key = +new Date()\n    }\n  }\n}\n",null]}