{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/onlineDev/dataReport/Preview.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/onlineDev/dataReport/Preview.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getToken } from '@/utils/auth'\nimport { getDataReportInfo } from '@/api/onlineDev/dataReport'\nexport default {\n  data() {\n    return {\n      url: ''\n    }\n  },\n  mounted() {\n    window.addEventListener('message', this.handleMessage)\n  },\n  methods: {\n    init(id) {\n      this.id = id || ''\n      this.$nextTick(() => {\n        const token = getToken()\n        let targetUrl = `${this.define.report}/preview.html?id=${id}&token=${token}&page=1`\n        getDataReportInfo(id).then(res => {\n          let item = {}\n          if (res.data?.searchForm?.components && Array.isArray(res.data.searchForm.components)) {\n            this.listQuery(res.data.searchForm.components, item)\n            for (let key in item) {\n              let item1 = '&' + key + '=' + item[key]\n              targetUrl += item1\n            }\n          }\n          this.url = targetUrl\n        })\n      })\n    },\n    listQuery(list, callback) {\n      for (let i = 0; i < list.length; i++) {\n        let item = list[i]\n        let arrayList = []\n        if (item.hasOwnProperty('cols') && Array.isArray(item.cols)) {\n          arrayList = arrayList.concat(item.cols)\n        }\n        if (item.hasOwnProperty('children') && Array.isArray(item.children)) {\n          arrayList = arrayList.concat(item.children)\n        }\n        if (item.bindParameter && item.defaultValue) {\n          callback[item.bindParameter] = item.defaultValue\n        }\n        this.listQuery(arrayList, callback)\n      }\n    },\n    async handleMessage(e) {\n      const data = e.data\n      if (data === 'closeDialog') {\n        this.url = ''\n        this.$emit('close')\n      }\n    }\n  }\n}\n",null]}