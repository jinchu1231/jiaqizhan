{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/components/Location/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/components/Location/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nrequire(\"core-js/modules/es6.regexp.split\");\nvar _slicedToArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/slicedToArray.js\"));\nrequire(\"regenerator-runtime/runtime\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/asyncToGenerator.js\"));\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _amapJsapiLoader = _interopRequireDefault(require(\"@amap/amap-jsapi-loader\"));\nvar _common = require(\"@/api/common\");\nvar _define = _interopRequireDefault(require(\"@/utils/define\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar defaultValue = {\n  lat: 25.416422,\n  lng: 118.990923,\n  name: '',\n  fullAddress: ''\n};\nwindow._AMapSecurityConfig = {\n  securityJsCode: _define.default.aMapSecurityJsCode // 安全密钥\n};\nvar _default2 = exports.default = {\n  name: 'JnpfLocation',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    autoLocation: {\n      type: Boolean,\n      default: false\n    },\n    enableLocationScope: {\n      type: Boolean,\n      default: false\n    },\n    adjustmentScope: {\n      type: [String, Number],\n      default: 500\n    },\n    enableDesktopLocation: {\n      type: Boolean,\n      default: false\n    },\n    locationScope: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    detailed: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      keyword: '',\n      location: {\n        lat: '',\n        lng: ''\n      },\n      currentLocation: {\n        lat: '',\n        lng: ''\n      },\n      AMap: '',\n      map: '',\n      list: [],\n      loading: false,\n      finish: false,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 50\n      },\n      selectValue: -1,\n      innerValue: '',\n      setCenterLoading: false,\n      dragLoading: false,\n      containerId: \"\"\n    };\n  },\n  watch: {\n    value: {\n      handler: function handler(val) {\n        this.innerValue = val ? JSON.parse(val) : defaultValue;\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    staticMapUrl: function staticMapUrl() {\n      if (!this.enableLocationScope) return ' ';\n      var location = this.innerValue.lng + ',' + this.innerValue.lat;\n      var url = \"\".concat(this.define.APIURl, \"/api/system/Location/staticmap?location=\").concat(location, \"&zoom=19&size=80*80&key=\").concat(this.define.aMapWebKey);\n      return url;\n    }\n  },\n  methods: {\n    handleClick: function handleClick() {\n      if (this.detailed) return this.openAMap();\n      if (this.disabled) return;\n      if (this.enableLocationScope) this.handleLocation();\n    },\n    openAMap: function openAMap() {\n      var position = this.innerValue.lng + ',' + this.innerValue.lat;\n      var url = \"http://uri.amap.com/marker?position=\".concat(position, \"&name=\").concat(this.innerValue.name, \"&coordinate=gaode&callnative=0\");\n      window.open(url, '_blank');\n    },\n    handleLocation: function handleLocation() {\n      var _this2 = this;\n      if (this.disabled) return;\n      this.visible = true;\n      this.selectValue = -1;\n      this.list = [];\n      this.keyword = '';\n      this.$nextTick(function () {\n        _this2.initMap();\n      });\n    },\n    initMap: function () {\n      var _initMap = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.containerId = 'container' + this.jnpf.idGenerator();\n              _amapJsapiLoader.default.reset();\n              _context.next = 4;\n              return _amapJsapiLoader.default.load({\n                key: this.define.aMapJsKey,\n                version: '2.0',\n                plugins: ['AMap.PlaceSearch', 'AMap.Geolocation']\n              }).then(function (AMap) {\n                _this3.AMap = AMap;\n                var query = {\n                  viewMode: '3D',\n                  resizeEnable: true,\n                  zoom: 16\n                };\n                if (_this3.innerValue && _this3.innerValue.lng && _this3.innerValue.lat) {\n                  _this3.location = {\n                    lat: _this3.innerValue.lat,\n                    lng: _this3.innerValue.lng\n                  };\n                  query.center = [_this3.location.lng, _this3.location.lat];\n                }\n                _this3.map = new AMap.Map(_this3.containerId, query);\n\n                //获取中心位置\n                _this3.handleGetCenter();\n                //查询附近地点\n                _this3.getList();\n                _this3.bindScroll();\n                //添加可选区域圆形\n                _this3.handelCircle();\n                //添加微调区域圆形\n                _this3.handleScopeCircle();\n                //地图事件\n                _this3.handleListener();\n                //添加定位按钮\n                _this3.map.addControl(new AMap.Geolocation());\n              });\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initMap() {\n        return _initMap.apply(this, arguments);\n      }\n      return initMap;\n    }(),\n    onSelectValueChange: function onSelectValueChange() {\n      var _this4 = this;\n      this.setCenterLoading = true;\n      this.$nextTick(function () {\n        var location = _this4.list[_this4.selectValue].location || '';\n        var _location$split = location.split(','),\n          _location$split2 = (0, _slicedToArray2.default)(_location$split, 2),\n          lng = _location$split2[0],\n          lat = _location$split2[1];\n        _this4.location = {\n          lat: lat,\n          lng: lng\n        };\n        _this4.map.setCenter([lng, lat]);\n        setTimeout(function () {\n          _this4.setCenterLoading = false;\n        }, 500);\n      });\n    },\n    handleCenter: function handleCenter(e) {\n      this.map.setCenter(e.lnglat);\n    },\n    handleListener: function handleListener() {\n      this.map.on('click', this.handleCenter);\n      this.map.on('moveend', this.handleMapChange);\n      this.map.on('movestart', this.handleSetLoading);\n    },\n    handleOffListener: function handleOffListener() {\n      this.map.off('click', this.handleCenter);\n      this.map.off('moveend', this.handleMapChange);\n      this.map.off('movestart', this.handleSetLoading);\n    },\n    handleMapChange: function handleMapChange() {\n      if (this.dragLoading) return this.dragLoading = false;\n      this.handleGetCenter();\n      this.selectValue = -1;\n      this.listQuery.currentPage = 1;\n      this.list = [];\n      if (this.enableLocationScope && this.adjustmentScope) {\n        var discount = this.getDiscount(this.currentLocation.lat, this.currentLocation.lng, this.location.lat, this.location.lng) || 0;\n        if (discount > this.adjustmentScope) return this.$message.warning('超出微调范围');\n      }\n      this.getList();\n    },\n    handleSetLoading: function handleSetLoading() {\n      if (this.setCenterLoading) this.dragLoading = true;\n    },\n    handleGetCenter: function handleGetCenter() {\n      var _this$map$getCenter = this.map.getCenter(),\n        lat = _this$map$getCenter.lat,\n        lng = _this$map$getCenter.lng;\n      this.location = {\n        lat: lat,\n        lng: lng\n      };\n    },\n    handleResult: function handleResult(res) {\n      if (res.pois.length < this.listQuery.pageSize) this.finish = true;\n      this.list = [].concat((0, _toConsumableArray2.default)(this.list), (0, _toConsumableArray2.default)(res.pois));\n      this.loading = false;\n    },\n    bindScroll: function bindScroll() {\n      var _this = this,\n        vBody = _this.$refs.bodyRef;\n      vBody.addEventListener(\"scroll\", function () {\n        if (vBody.scrollHeight - vBody.clientHeight - vBody.scrollTop <= 50 && !_this.loading && !_this.finish) {\n          _this.listQuery.currentPage += 1;\n          _this.keyword ? _this.handleSearch() : _this.getList();\n        }\n      });\n    },\n    getList: function getList() {\n      var _this5 = this;\n      this.loading = true;\n      var query = {\n        key: this.define.aMapWebKey,\n        location: this.location.lng + ',' + this.location.lat,\n        radius: -1,\n        offset: this.listQuery.pageSize,\n        page: this.listQuery.currentPage\n      };\n      (0, _common.getAroundList)(query).then(function (res) {\n        _this5.handleResult(res.data);\n      }).catch(function () {\n        _this5.loading = false;\n      });\n    },\n    handelCircle: function handelCircle() {\n      if (!this.enableDesktopLocation || !this.locationScope.length) return;\n      for (var i = 0; i < this.locationScope.length; i++) {\n        var o = this.locationScope[i];\n        if (!o.lng || !o.lat || !o.radius) continue;\n        this.addCircle(_objectSpread(_objectSpread({}, o), {}, {\n          fillColor: '#7ad98f'\n        }));\n      }\n    },\n    handleScopeCircle: function handleScopeCircle() {\n      if (!this.enableLocationScope || !this.adjustmentScope) return;\n      this.currentLocation = this.location;\n      this.addCircle(_objectSpread(_objectSpread({}, this.location), {}, {\n        radius: this.adjustmentScope,\n        fillColor: '#1791fc'\n      }));\n    },\n    addCircle: function addCircle(o) {\n      var circle = new this.AMap.Circle({\n        center: [o.lng, o.lat],\n        radius: o.radius,\n        strokeOpacity: 0.2,\n        fillOpacity: 0.4,\n        fillColor: o.fillColor,\n        bubble: false\n      });\n      circle.on('click', this.handleCenter);\n      this.map.add(circle);\n    },\n    handleSearch: function handleSearch() {\n      var _this6 = this;\n      this.loading = true;\n      var query = {\n        key: this.define.aMapWebKey,\n        keywords: this.keyword,\n        radius: this.enableLocationScope && this.adjustmentScope ? this.adjustmentScope : -1,\n        offset: this.listQuery.pageSize,\n        page: this.listQuery.currentPage\n      };\n      (0, _common.getTextList)(query).then(function (res) {\n        _this6.handleResult(res.data);\n      });\n    },\n    onSearch: function onSearch() {\n      this.selectValue = -1;\n      this.listQuery.currentPage = 1;\n      this.list = [];\n      this.keyword ? this.handleSearch() : this.getList();\n    },\n    getDiscount: function getDiscount(lat1, lng1, lat2, lng2) {\n      var p1 = new this.AMap.LngLat(lng1, lat1);\n      var p2 = new this.AMap.LngLat(lng2, lat2);\n      return p1.distance(p2) || 0;\n    },\n    handleAutoLocation: function handleAutoLocation() {\n      var _this7 = this;\n      if (!this.autoLocation || this.innerValue.fullAddress) return;\n      _amapJsapiLoader.default.load({\n        key: this.define.aMapJsKey,\n        version: '2.0',\n        plugins: ['AMap.Geolocation', 'AMap.Geocoder']\n      }).then(function (AMap) {\n        _this7.AMap = AMap;\n        var geolocation = new AMap.Geolocation({\n          enableHighAccuracy: true,\n          timeout: 1500\n        });\n        var that = _this7;\n        var getAddress = function getAddress(position) {\n          var geocoder = new AMap.Geocoder();\n          geocoder.getAddress(position, function (status, res) {\n            if (status === 'complete' && res.info === 'OK') {\n              var data = res.regeocode.addressComponent;\n              that.innerValue = {\n                pName: data.province,\n                cName: data.city,\n                adName: data.district,\n                address: data.street + data.streetNumber,\n                name: '',\n                lng: position[0],\n                lat: position[1],\n                fullAddress: res.regeocode.formattedAddress\n              };\n              that.$emit('input', JSON.stringify(that.innerValue));\n              that.$emit('change', JSON.stringify(that.innerValue));\n            }\n          });\n        };\n        geolocation.getCityInfo(function (_status, res) {\n          if (res.status == 0) {\n            if (_this7.enableDesktopLocation && _this7.locationScope.length) {\n              var list = [];\n              for (var i = 0; i < _this7.locationScope.length; i++) {\n                var o = _this7.locationScope[i];\n                var discount = _this7.getDiscount(o.lat, o.lng, res.position[1], res.position[0]) || 0;\n                list.push(discount > o.radius);\n              }\n              if (list.every(function (o) {\n                return o === true;\n              })) return;\n            }\n            getAddress(res.position);\n          } else {\n            console.error('定位失败');\n          }\n        });\n      });\n    },\n    handleSubmit: function handleSubmit() {\n      if (!this.selectValue && this.selectValue != 0 || this.selectValue == -1) return this.$message.error('请选择地址');\n      var data = this.list[this.selectValue];\n      var _data$location$split = data.location.split(','),\n        _data$location$split2 = (0, _slicedToArray2.default)(_data$location$split, 2),\n        lng = _data$location$split2[0],\n        lat = _data$location$split2[1];\n      //判断微调范围\n      if (this.enableLocationScope) {\n        var discount = this.getDiscount(this.currentLocation.lat, this.currentLocation.lng, lat, lng) || 0;\n        if (discount > (this.adjustmentScope || 500)) return this.$message.warning('超出微调范围');\n      }\n      //判断可选范围\n      if (this.enableDesktopLocation && this.locationScope.length) {\n        var list = [];\n        for (var i = 0; i < this.locationScope.length; i++) {\n          var o = this.locationScope[i];\n          var _discount = this.getDiscount(o.lat, o.lng, lat, lng) || 0;\n          list.push(_discount > o.radius);\n        }\n        if (list.every(function (o) {\n          return o === true;\n        })) return this.$message.warning('超出规定范围');\n      }\n      var address = data.address && data.address.length ? data.address : '';\n      //台湾、北京、上海、重庆、深圳地址特殊处理\n      var fullAddress = data.pname + data.cityname + data.adname + address + data.name;\n      if (data.pname == data.cityname) fullAddress = data.pname + data.adname + address + data.name;\n      if (data.pname == data.cityname && data.pname == data.adname) fullAddress = data.pname + address + data.name;\n      this.innerValue = {\n        pName: data.pname,\n        cName: data.cityname,\n        adName: data.adname,\n        address: address,\n        name: data.name,\n        lng: lng,\n        lat: lat,\n        fullAddress: fullAddress\n      };\n      this.$emit('input', JSON.stringify(this.innerValue));\n      this.$emit('change', JSON.stringify(this.innerValue));\n      this.handleCancel();\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n      this.destroyMap();\n    },\n    destroyMap: function destroyMap() {\n      var _this8 = this;\n      this.handleOffListener();\n      this.$nextTick(function () {\n        _this8.map && _this8.map.destroy();\n      });\n    },\n    handleClear: function handleClear() {\n      this.innerValue = defaultValue;\n      this.$emit('input', '');\n      this.$emit('change', '');\n    }\n  }\n};",null]}