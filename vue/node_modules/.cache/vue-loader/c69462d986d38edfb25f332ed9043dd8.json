{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Jnpf/Upload/UploadFile.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Jnpf/Upload/UploadFile.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getDownloadUrl, getPackDownloadUrl } from '@/api/common'\nimport Preview from './Preview'\nimport FileUploader from './vue-simple-uploader/fileUploader'\nimport emitter from 'element-ui/src/mixins/emitter'\nlet { methods: { dispatch } } = emitter\nexport default {\n  name: 'UploadFile',\n  components: { Preview, FileUploader },\n  props: {\n    value: {\n      type: Array,\n      default: () => []\n    },\n    type: {\n      type: String,\n      default: 'annex'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    simple: {\n      type: Boolean,\n      default: false\n    },\n    showIcon: {\n      type: Boolean,\n      default: true\n    },\n    showTip: {\n      type: Boolean,\n      default: false\n    },\n    detailed: {\n      type: Boolean,\n      default: false\n    },\n    limit: {\n      type: Number,\n      default: 0\n    },\n    accept: {\n      type: String,\n      default: '*'\n    },\n    buttonText: {\n      type: String,\n      default: '选择文件'\n    },\n    sizeUnit: {\n      type: String,\n      default: 'MB'\n    },\n    pathType: {\n      type: String,\n      default: 'defaultPath'\n    },\n    isAccount: {\n      type: Number,\n      default: 0\n    },\n    folder: {\n      type: String,\n      default: ''\n    },\n    fileSize: {\n      default: 10\n    },\n    tipText: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      fileList: [],\n      previewVisible: false,\n      activeFile: {},\n    }\n  },\n  computed: {\n    acceptText() {\n      let txt = ''\n      if (this.accept.includes('image/*')) {\n        txt += '、图片'\n      }\n      if (this.accept.includes('video/*')) {\n        txt += '、视频'\n      }\n      if (this.accept.includes('audio/*')) {\n        txt += '、音频'\n      }\n      if (this.accept.includes('.xls,.xlsx')) {\n        txt += '、excel'\n      }\n      if (this.accept.includes('.doc,.docx')) {\n        txt += '、word'\n      }\n      if (this.accept.includes('.pdf')) {\n        txt += '、pdf'\n      }\n      if (this.accept.includes('.txt')) {\n        txt += '、txt'\n      }\n      return txt.slice(1)\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler(val) {\n        this.fileList = Array.isArray(val) ? val : []\n      }\n    }\n  },\n  methods: {\n    handleRemove(index) {\n      this.fileList.splice(index, 1)\n      this.$emit(\"input\", this.fileList)\n      this.$emit('change', this.fileList)\n      dispatch.call(this, 'ElFormItem', 'el.form.change', this.fileList)\n    },\n    handleClick(file) {\n      // 点击下载文件\n      if (!file.fileId) return\n      getDownloadUrl(this.type, file.fileId).then(res => {\n        this.jnpf.downloadFile(res.data.url, file.name)\n      })\n    },\n    handlePreview(file) {\n      this.activeFile = file\n      this.previewVisible = true\n    },\n    uploadFile() {\n      const isTopLimit = this.limit ? this.value.length >= this.limit : false\n      if (isTopLimit) {\n        this.$message.error(`当前限制最多可以上传${this.limit}个文件`)\n        return false\n      }\n      this.$refs.fileUploader && this.$refs.fileUploader.openUploader()\n    },\n    fileSuccess(data) {\n      const isTopLimit = this.limit ? this.value.length >= this.limit : false\n      if (isTopLimit) {\n        this.$message.error(`当前限制最多可以上传${this.limit}个文件`)\n        return false\n      }\n      this.fileList.push(data)\n      this.$emit('input', this.fileList)\n      this.$emit('change', this.fileList)\n      dispatch.call(this, 'ElFormItem', 'el.form.change', this.fileList)\n    },\n    downloadAll() { //下载全部（打包下载）\n      if (!this.fileList.length) return this.$message.error('未发现文件')\n      let fileInfo = [];\n      for (let i = 0, len = this.fileList.length; i < len; i++) {\n        fileInfo.push({ fileId: this.fileList[i].fileId, fileName: this.fileList[i].name })\n      }\n      getPackDownloadUrl(this.type, fileInfo).then(res => {\n        this.jnpf.downloadFile(res.data.downloadVo.url, res.data.downloadName)\n      })\n    }\n  }\n}\n",null]}