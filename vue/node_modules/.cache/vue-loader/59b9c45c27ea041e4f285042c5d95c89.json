{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/menu/components/dataAuthorize/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/menu/components/dataAuthorize/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getInfo } from \"@/api/system/authorize\";\nimport {\n  getDataAuthorizeSchemeList,\n  getDataAuthorizeList,\n  delDataScheme,\n  delDataAuthorize,\n  createDataScheme\n} from \"@/api/system/dataAuthorize\";\nimport { getFieldNameList } from \"@/api/system/menu\";\nimport { getDataSourceListAll } from \"@/api/systemData/dataSource\";\nimport DataSchemeForm from \"./DataSchemeForm\";\nimport DataAuthorizeForm from \"./DataAuthorizeForm\";\nimport DataConnectForm from \"../connectForm\";\nexport default {\n  components: {\n    DataSchemeForm,\n    DataAuthorizeForm,\n    DataConnectForm\n  },\n  data() {\n    return {\n      tabActiveName: \"dataAuthorizeScheme\",\n      dataAuthorizeListDrawer: false,\n      dialogTitle: \"\",\n      moduleId: \"\",\n      loading: false,\n      btnLoading: false,\n      listLoading: false,\n      dataListLoading: false,\n      dataAuthorizeSchemeList: [],\n      dataAuthorizeList: [],\n      dataSchemeFormVisible: false,\n      dataAuthorizeFormVisible: false,\n      dataConnectFormVisible: false,\n      menuType: 2,\n      dbOptions: [],\n      dbList: [],\n      tableName: \"\",\n      dataType: \"\",\n      dataList: []\n    };\n  },\n  methods: {\n    init(moduleId, fullName, type, dataType) {\n      this.menuType = type;\n      this.dataType = dataType\n      this.dataAuthorizeListDrawer = true;\n      this.moduleId = moduleId;\n      this.tabActiveName = \"dataAuthorizeScheme\";\n      this.dialogTitle = `数据权限 - ${fullName}`;\n      this.dbList = [];\n      this.dbOptions = [];\n      this.$nextTick(() => {\n        if (this.$refs[\"DataConnectForm\"]) {\n          this.$refs[\"DataConnectForm\"].dataForm.dataSelect = \"\";\n        }\n        this.listLoading = true;\n        this.dataListLoading = true;\n        this.getAuthorizeSchemeList();\n      });\n      if (this.menuType === 3) {\n        // getFieldNameList(this.moduleId, \"DataAuthorize\").then(res => {\n        //   this.dbList = res.data || [];\n        // });\n      }\n    },\n    getConnectList(tableName) {\n      this.tableName = tableName || \"\";\n      this.getInfo()\n    },\n    getAuthorizeSchemeList() {\n      // 获取方案管理列表\n      getDataAuthorizeSchemeList(this.moduleId)\n        .then(res => {\n          this.dataAuthorizeSchemeList = res.data.list;\n          this.listLoading = false;\n          this.btnLoading = false;\n        })\n        .catch(() => {\n          this.listLoading = false;\n          this.btnLoading = false;\n        });\n    },\n    getAuthorizeList() {\n      // 获取字段列表\n      getDataAuthorizeList(this.moduleId)\n        .then(res => {\n          this.dataAuthorizeList = res.data.list;\n          this.dataListLoading = false;\n          this.btnLoading = false;\n        })\n        .catch(() => {\n          this.dataListLoading = false;\n          this.btnLoading = false;\n        });\n    },\n    handleClick() {\n      this.btnLoading = false;\n      const activeTab = this.tabActiveName;\n      if (activeTab === \"dataAuthorizeScheme\") {\n        this.getAuthorizeSchemeList();\n      } else {\n        this.getAuthorizeList();\n        if (this.menuType === 2) {\n          this.getDataSourceListAll();\n          this.getInfo()\n        }\n      }\n    },\n    handleReLoad() {\n      this.btnLoading = true;\n      const activeTab = this.tabActiveName;\n      if (activeTab === \"dataAuthorizeScheme\") {\n        this.getAuthorizeSchemeList();\n      } else {\n        this.getAuthorizeList();\n      }\n    },\n    getInfo() {\n      getInfo(this.moduleId, this.dataType).then(res => {\n        this.dataList = res.data || {}\n        this.tableName = this.dataList.linkTables || ''\n      })\n    },\n    getDataSourceListAll() {\n      getDataSourceListAll().then(res => {\n        const list = res.data.list || []\n        this.dbOptions = list.filter(o => o.children && o.children.length);\n      })\n    },\n    //数据连接\n    addDataConnect() {\n      this.dataConnectFormVisible = true;\n      this.$nextTick(() => {\n        this.$refs.DataConnectForm.init(this.dataList, this.moduleId, this.dbOptions, this.dataType);\n      });\n    },\n    //新增,编辑\n    addOrUpdateHandle(id) {\n      const activeTab = this.tabActiveName;\n      if (activeTab === \"dataAuthorizeScheme\") {\n        this.dataSchemeFormVisible = true;\n        this.$nextTick(() => {\n          this.$refs.DataSchemeForm.init(this.moduleId, id);\n        });\n      } else {\n        this.dataAuthorizeFormVisible = true;\n        this.$nextTick(() => {\n          this.$refs.DataAuthorizeForm.init(\n            this.moduleId,\n            id,\n            this.menuType,\n            this.dataType\n          );\n        });\n      }\n    },\n    addHandle() {\n      let isAllData = this.dataAuthorizeSchemeList.filter(\n        o => o.enCode === \"jnpf_alldata\"\n      );\n      if (!!isAllData.length)\n        return this.$message({\n          message: \"该方案已新增，不可重复添加\",\n          type: \"error\",\n          duration: 1500\n        });\n      if (this.tabActiveName === \"dataAuthorizeScheme\") {\n        let data = {\n          moduleId: this.moduleId,\n          enCode: \"jnpf_alldata\",\n          fullName: \"全部数据\",\n          allData: 1\n        };\n        createDataScheme(data)\n          .then(res => {\n            this.$message({\n              message: res.msg,\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.btnLoading = false;\n              }\n            });\n            this.getAuthorizeSchemeList();\n          })\n          .catch(() => {\n            this.btnLoading = false;\n          });\n      }\n    },\n    handleDel(id) {\n      this.$confirm(this.$t(\"common.delTip\"), this.$t(\"common.tipTitle\"), {\n        type: \"warning\"\n      })\n        .then(() => {\n          const delMethod =\n            this.tabActiveName === \"dataAuthorizeScheme\"\n              ? delDataScheme\n              : delDataAuthorize;\n          delMethod(id).then(res => {\n            this.$message({\n              type: \"success\",\n              message: res.msg,\n              duration: 1500,\n              onClose: () => {\n                this.handleReLoad();\n              }\n            });\n          });\n        })\n        .catch(() => { });\n    }\n  }\n};\n",null]}