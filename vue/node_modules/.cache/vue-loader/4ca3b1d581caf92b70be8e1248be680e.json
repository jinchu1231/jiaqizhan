{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/authorize/AuthorizePortal.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/authorize/AuthorizePortal.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getPortalSelector,\n  savePortal\n} from '@/api/permission/authorize'\nexport default {\n  data() {\n    return {\n      visible: false,\n      treeLoading: false,\n      btnLoading: false,\n      checkStrictly: true,\n      objectId: '',\n      dataForm: {\n        ids: [],\n      },\n      portalData: [],\n      title: '',\n      active: 0,\n      list: [],\n      defaultProps: { // 配置项（必选）\n        value: 'id',\n        label: 'fullName',\n        children: 'children'\n      }\n    }\n  },\n  methods: {\n    init(id, fullName) {\n      Object.assign(this.$data, this.$options.data())\n      this.treeLoading = true\n      this.visible = true\n      this.objectId = id\n      this.title = fullName\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        this.getPortalSelector()\n      })\n    },\n    getPortalSelector() {\n      this.list = []\n      getPortalSelector(this.objectId).then(res => {\n        this.list = res.data.list\n        this.portalData = res.data.all\n        this.dataForm.ids = [...res.data.ids]\n        this.dataForm.ids = [...new Set(this.dataForm.ids)]\n        this.moduleIdsTemp = this.dataForm.ids\n        this.ids = this.moduleIdsTemp\n        this.$refs.authorizeTree.setCheckedKeys(this.dataForm.ids)\n        this.checkStrictly = false\n        this.treeLoading = false\n      }).catch(() => {\n        this.treeLoading = false\n      })\n    },\n    goBack() {\n      this.$emit('close')\n    },\n    // 全选/全不选\n    handleCheck(val) {\n      if (val === 'checkAll') {\n        this.$refs.authorizeTree.setCheckedKeys(this.portalData)\n      }\n      if (val === 'cancelCheckAll') {\n        this.$refs.authorizeTree.setCheckedKeys([])\n      }\n    },\n    // 折叠 展开\n    setAllExpand(state) {\n      let result\n      if (state === 'open') {\n        result = true\n      }\n      if (state === 'close') {\n        result = false\n      }\n      const nodes = this.$refs.authorizeTree.store.nodesMap\n      for (let i in nodes) {\n        nodes[i].expanded = result\n      }\n    },\n    // 设置数据\n    selectTreeNodeClick() {\n      const parentIds = this.$refs.authorizeTree.getHalfCheckedKeys()\n      const childrenIds = this.$refs.authorizeTree.getCheckedKeys()\n      const newIds = [...parentIds, ...childrenIds]\n      const dataIds = [...new Set(newIds)]\n      this.dataForm.ids = dataIds\n    },\n    handleConfirm() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          savePortal(this.objectId, this.dataForm).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$emit('close', true)\n              }\n            })\n          }).catch(() => {\n            this.btnLoading = false\n          })\n        }\n      })\n    }\n  }\n}\n",null]}