{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/HSchedule/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/HSchedule/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.split\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _CardHeader = _interopRequireDefault(require(\"../CardHeader\"));\nvar _vue = _interopRequireDefault(require(\"@fullcalendar/vue\"));\nvar _daygrid = _interopRequireDefault(require(\"@fullcalendar/daygrid\"));\nvar _timegrid = _interopRequireDefault(require(\"@fullcalendar/timegrid\"));\nvar _interaction = _interopRequireDefault(require(\"@fullcalendar/interaction\"));\nvar _schedule = require(\"@/api/onlineDev/schedule\");\nvar _Form = _interopRequireDefault(require(\"./Form\"));\nvar _vuex = require(\"vuex\");\nvar _ScheduleView = _interopRequireDefault(require(\"@/components/ScheduleView\"));\nvar _calendar = require(\"./calendar\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import listPlugin from '@fullcalendar/list'\nvar _default2 = exports.default = {\n  components: {\n    CardHeader: _CardHeader.default,\n    FullCalendar: _vue.default,\n    Form: _Form.default,\n    ScheduleView: _ScheduleView.default\n  },\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    option: {\n      type: Object,\n      default: function _default() {}\n    },\n    card: {\n      type: Object,\n      default: function _default() {}\n    },\n    activeData: {\n      type: Object,\n      default: function _default() {}\n    },\n    jnpfKey: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      calendarOptions: {},\n      creatorUserId: '',\n      calendarApi: '',\n      formVisible: false,\n      scheduleVisible: false\n    };\n  },\n  computed: _objectSpread({}, (0, _vuex.mapGetters)(['userInfo'])),\n  created: function created() {\n    this.init();\n    this.creatorUserId = this.userInfo.userId;\n  },\n  watch: {\n    'activeData.firstDay': function activeDataFirstDay(val) {\n      this.calendarOptions.firstDay = this.activeData.firstDay;\n    },\n    'activeData.showLunarCalendar': function activeDataShowLunarCalendar(val) {\n      this.init();\n    },\n    'activeData.defaultView': function activeDataDefaultView(val) {\n      this.init();\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.$eventBus.$on('eChart' + this.activeData.i, function () {\n      _this.$refs.calendar && _this.$refs.calendar.calendar.updateSize();\n    });\n    this.$nextTick(function () {\n      _this.$refs.calendar && _this.$refs.calendar.calendar.updateSize();\n    });\n  },\n  methods: {\n    init: function init() {\n      var that = this;\n      this.calendarOptions = {\n        // 引入的插件，比如fullcalendar/daygrid，fullcalendar/timegrid引入后才可显示月，周，日\n        plugins: [_daygrid.default, _interaction.default, _timegrid.default],\n        initialView: this.activeData.defaultView,\n        // 默认为那个视图（月：dayGridMonth，周：timeGridWeek，日：timeGridDay）\n        firstDay: this.activeData.firstDay,\n        // 设置一周中显示的第一天是哪天，周日是0，周一是1，类推\n        locale: 'zh-cn',\n        // 切换语言，当前为中文\n        eventColor: '#3BB2E3',\n        // 全部日历日程背景色\n        themeSystem: 'bootstrap',\n        // 主题色(本地测试未能生效)\n        // initialDate: moment().format('YYYY-MM-DD'), // 自定义设置背景颜色时一定要初始化日期时间\n        aspectRatio: 1.65,\n        // 设置日历单元格宽度与高度的比例。\n        // displayEventTime: false, // 是否显示时间\n        // allDaySlot: false, // 周，日视图时，all-day 不显示\n        allDayText: '全天',\n        //设置all-day 标题\n        // eventLimit: true, // 设置月日程，与all-day slot的最大显示数量，超过的通过弹窗显示\n        headerToolbar: {\n          // 日历头部按钮位置\n          left: 'prev next today',\n          center: 'title',\n          right: 'timeGridDay,timeGridWeek,dayGridMonth'\n        },\n        buttonText: {\n          today: '今天',\n          month: '月',\n          week: '周',\n          day: '日'\n        },\n        slotLabelFormat: {\n          hour: '2-digit',\n          minute: '2-digit',\n          meridiem: false,\n          hour12: false // 设置时间为24小时\n        },\n        // eventLimitNum: { // 事件显示数量限制(本地测试未能生效)\n        //   dayGrid: {\n        //     eventLimit: 5\n        //   },\n        //   timeGrid: {\n        //     eventLimit: 2 // adjust to 6 only for timeGridWeek/timeGridDay\n        //   }\n        // },\n        // 事件\n        dateClick: this.handleEventClick,\n        // 点击日历日程事件\n        eventClick: this.eventClick,\n        // 点击日历日程事件\n        events: [],\n        // eventDblClick: this.eventDblClick, // 双击日历日程事件 (这部分是在源码中添加的)\n        // eventClickDelete: this.eventClickDelete, // 点击删除标签事件 (这部分是在源码中添加的)\n        // eventDrop: this.eventDrop, // 拖动日历日程事件\n        // eventResize: this.eventResize, // 修改日历日程大小事件\n        // select: this.handleEventClick, // 选中日历格事件\n        // eventDidMount: this.eventDidMount, // 安装提示事件\n        // loading: this.loadingEvent, // 视图数据加载中、加载完成触发（用于配合显示/隐藏加载指示器。）\n        // selectAllow: this.selectAllow, //编程控制用户可以选择的地方，返回true则表示可选择，false表示不可选择\n        // eventMouseEnter: this.eventMouseEnter, // 鼠标滑过\n        // allowContextMenu: false,\n        editable: false,\n        // 是否可以进行（拖动、缩放）修改\n        eventStartEditable: false,\n        // Event日程开始时间可以改变，默认true，如果是false其实就是指日程块不能随意拖动，只能上下拉伸改变他的endTime\n        eventDurationEditable: false,\n        // Event日程的开始结束时间距离是否可以改变，默认true，如果是false则表示开始结束时间范围不能拉伸，只能拖拽\n        selectable: false,\n        // 是否可以选中日历格\n        selectMirror: false,\n        selectMinDistance: 0,\n        // 选中日历格的最小距离\n        dayMaxEvents: false,\n        weekends: true,\n        navLinks: false,\n        // 天链接\n        // selectHelper: false,\n        datesSet: this.datesRender,\n        slotEventOverlap: false,\n        // 相同时间段的多个日程视觉上是否允许重叠，默认true允许\n        views: {\n          //对应月视图\n          dayGridMonth: {\n            displayEventTime: false,\n            //是否显示时间\n            dayMaxEventRows: 3,\n            // eventMaxStack: 30,\n            // moreLinkContent: \"更多\",\n            moreLinkClick: \"popover\",\n            dayCellContent: function dayCellContent(item) {\n              var date = new Date(item.date); // 参数需要毫秒数，所以这里将秒数乘于 1000\n              var Y = date.getFullYear() + '-';\n              var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n              var D = date.getDate();\n              var date_ = Y + M + D;\n              var _date = date_.split('-');\n              var _dateF = _calendar.calendar.solar2lunar(_date[0], _date[1], _date[2]);\n              var myClass = '';\n              if (_dateF.isToday) myClass = 'today-month';\n              if (that.activeData.showLunarCalendar) {\n                var IDayCn = _dateF.IDayCn;\n                if (IDayCn == '初一') IDayCn = _dateF.IMonthCn;\n                return {\n                  html: \"<p class='calendar-right'><label class='\".concat(myClass, \"'>\").concat(_dateF.cDay, \"</label><span>\").concat(IDayCn, \"</span></p>\")\n                };\n              }\n              return {\n                html: \"<p class='calendar-right'><label class='\".concat(myClass, \"'>\").concat(_dateF.cDay, \"</label></p>\")\n              };\n            }\n          },\n          //对应周视图调整\n          timeGridWeek: {\n            // slotMinTime: \"09:00\",//周视图开始时间\n            // slotMaxTime: \"20:00\",//周视图结束时间\n            displayEventTime: false,\n            //是否显示时间\n            dayHeaderContent: function dayHeaderContent(item) {\n              var date = new Date(item.date); // 参数需要毫秒数，所以这里将秒数乘于 1000\n              var Y = date.getFullYear() + '-';\n              var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n              var D = date.getDate();\n              var date_ = Y + M + D;\n              var _date = date_.split('-');\n              var _dateF = _calendar.calendar.solar2lunar(_date[0], _date[1], _date[2]);\n              var myClass = 'calender-week';\n              if (_dateF.isToday) myClass = 'calender-week today-week';\n              if (that.activeData.showLunarCalendar) {\n                var htmlVal = \"<div class='\".concat(myClass, \"'>\").concat(_dateF.cDay, \"</div><div class=\\\"list-week\\\"><div>\\u5468\").concat(_dateF.ncWeek.slice(2), \"</div><div class='list-calendar'>\").concat(_dateF.IDayCn, \"</div></div></div>\");\n                return {\n                  html: htmlVal\n                };\n              }\n              return {\n                html: \"<div class='\".concat(myClass, \"'>\").concat(_dateF.cDay, \"</div><div class='list-week'><div >\\u5468\").concat(_dateF.ncWeek.slice(2), \"</div></div></div>\")\n              };\n            }\n          },\n          timeGridDay: {\n            // slotMinTime: \"09:00\",//周视图开始时间\n            // slotMaxTime: \"20:00\",//周视图结束时间\n            displayEventTime: false,\n            //是否显示时间\n            dayHeaderContent: function dayHeaderContent(item) {\n              var date = new Date(item.date); // 参数需要毫秒数，所以这里将秒数乘于 1000\n              var Y = date.getFullYear() + '-';\n              var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n              var D = date.getDate();\n              var date_ = Y + M + D;\n              var _date = date_.split('-');\n              var _dateF = _calendar.calendar.solar2lunar(_date[0], _date[1], _date[2]);\n              var myClass = 'calender-week';\n              if (_dateF.isToday) myClass = 'calender-week today-week';\n              if (that.activeData.showLunarCalendar) {\n                return {\n                  html: \"<div class='\".concat(myClass, \"'>\").concat(_dateF.cDay, \"</div><div class='list-week'><div>\\u5468\").concat(_dateF.ncWeek.slice(2), \"</div><div class='list-calendar'>\").concat(_dateF.IDayCn, \"</div></div></div>\")\n                };\n              }\n              return {\n                html: \"<div class='\".concat(myClass, \"'>\").concat(_dateF.cDay, \"</div><div class='list-week'><div >\\u5468\").concat(_dateF.ncWeek.slice(2), \"</div></div></div>\")\n              };\n            }\n          }\n        }\n      };\n    },\n    datesRender: function datesRender(calendar) {\n      var view = calendar.view;\n      this.startTime = this.jnpf.toDate(view.activeStart, \"yyyy-MM-dd HH:mm\");\n      this.endTime = this.jnpf.toDate(view.activeEnd, \"yyyy-MM-dd HH:mm\");\n      this.initData();\n    },\n    handleEventClick: function handleEventClick(arg) {\n      var startTime = this.jnpf.toDate(arg.date, \"yyyy-MM-dd HH:00\"),\n        clickTime = this.jnpf.toDate(arg.date, \"yyyyMMdd\"),\n        currTime = this.jnpf.toDate(new Date(), \"yyyyMMdd\");\n      if (clickTime == currTime) {\n        var thisDate = new Date();\n        thisDate.setHours(thisDate.getHours() + 1);\n        startTime = this.jnpf.toDate(thisDate, \"yyyy-MM-dd HH:00\");\n      }\n      this.addOrUpdateHandle('', startTime);\n      this.addOrUpdateHandle('', new Date(startTime).getTime());\n    },\n    eventClick: function eventClick(data) {\n      this.addOrUpdateHandle(data.event.id, '', data.event.extendedProps.creatorUserId);\n    },\n    initData: function initData() {\n      var _this2 = this;\n      var query = {\n        startTime: this.startTime,\n        endTime: this.endTime\n      };\n      (0, _schedule.List)(query).then(function (res) {\n        _this2.calendarOptions.events = res.data.list.map(function (o) {\n          return {\n            id: o.id,\n            title: o.title,\n            start: o.startDay,\n            end: o.endDay,\n            color: o.color,\n            editable: false,\n            allDay: o.allDay,\n            creatorUserId: o.creatorUserId\n          };\n        });\n      });\n    },\n    // 新增 / 修改\n    addOrUpdateHandle: function addOrUpdateHandle(id, startTime, creatorUserId) {\n      var _this3 = this;\n      if (id && creatorUserId != this.creatorUserId) {\n        this.scheduleVisible = true;\n        this.$nextTick(function () {\n          _this3.$refs.schedule.init(id, 1, '');\n        });\n        return;\n      }\n      this.formVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs.Form.init(id, startTime, _this3.activeData.duration);\n      });\n    },\n    refreshDataList: function refreshDataList() {\n      this.formVisible = false;\n      this.scheduleVisible = false;\n      this.initData();\n    }\n  }\n};",null]}