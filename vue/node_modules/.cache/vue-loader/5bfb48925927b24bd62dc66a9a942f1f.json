{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/layout/functional/menu/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/layout/functional/menu/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapState } from 'vuex'\nimport SidebarItem from './SidebarItem'\nimport variables from '@/styles/variables.scss'\nimport elementResizeDetectorMaker from 'element-resize-detector'\n\nexport default {\n  components: { SidebarItem },\n  computed: {\n    ...mapGetters([\n      'permission_routes',\n      'sidebar',\n      'menuList'\n    ]),\n    ...mapState({\n      slideClass: state => state.settings.slideClass,\n    }),\n    classObj() {\n      return {\n        // [this.slideClass]: true\n      };\n    },\n    activeMenu() {\n      const route = this.$route\n      const { meta, path } = route\n      // if (meta.activeMenu) {\n      //   return meta.activeMenu\n      // }\n      return path\n    },\n    showLogo() {\n      return this.$store.state.settings.sidebarLogo\n    },\n    variables() {\n      return variables\n    },\n    isCollapse() {\n      return !this.sidebar.opened\n    }\n  },\n  data() {\n    return {\n      list: []\n    }\n  },\n  created() {\n    let _this = this\n    this.$nextTick(() => {\n      // 监听页面宽度变化\n      let erd = elementResizeDetectorMaker({ strategy: \"scroll\" })\n      erd.listenTo(document.getElementById('topMenu'), function (element) {\n        let width = element.offsetWidth\n        let newList = []\n        let moreItem = {\n          path: \"/menuMore\",\n          children: [],\n          fullName: '更多 ...',\n          vueName: 'moreMenu',\n          icon: ''\n        }\n        let number = Math.floor(width / 116)\n        let length = _this.menuList.length\n        if (number >= length) return _this.list = _this.menuList\n        for (let i = 0; i < length; i++) {\n          const item = _this.menuList[i];\n          if (i < number - 1) {\n            newList.push(item)\n          } else {\n            moreItem.children.push(item)\n          }\n        }\n        if (moreItem.children.length) newList.push(moreItem)\n        _this.list = newList\n      });\n    })\n  }\n}\n",null]}