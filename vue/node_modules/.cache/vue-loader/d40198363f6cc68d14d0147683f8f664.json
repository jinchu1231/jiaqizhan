{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Process/OrgTransfer/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Process/OrgTransfer/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport JNPFTransfer from '@/components/JNPF-transfer'\nimport userTransfer from '@/components/JNPF-userTransfer'\nimport usersTransfer from '@/components/JNPF-usersTransfer'\nimport roleTransfer from './roleTransfer'\nimport orgUsersSelect from '../OrgUsersSelect'\nimport orgTransfer from './orgTransfer'\nimport positionTransfer from './positionTransfer'\nexport default {\n  name: 'org-transfer',\n  components: { JNPFTransfer, usersTransfer, roleTransfer, orgTransfer, positionTransfer, orgUsersSelect, userTransfer },\n  props: {\n    value: {\n      type: Array,\n      default: () => []\n    },\n    dynamicList: {\n      type: Array,\n      default: () => []\n    },\n    type: {\n      type: String,\n      default: 'user'\n    },\n    inlet: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: '组织机构'\n    },\n    dynamicParameter: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      treeData: [],\n      selectedData: []\n    }\n  },\n  methods: {\n    onOpen() {\n      this.dataInit()\n    },\n    closeTransfer() {\n\n      this.$emit('update:visible', false)\n    },\n    confirm() {\n      this.$emit('confirm', this.selectedData)\n      this.closeTransfer()\n    },\n    dataInit() {\n      this.loading = true\n      this.selectedData = []\n      this.treeData = []\n      this.$nextTick(async () => {\n        if (this.type === 'user') {\n          this.selectedData = JSON.parse(JSON.stringify(this.value))\n          this.$nextTick(() => {\n            this.$refs.userTransfer && this.$refs.userTransfer.init()\n          })\n        } else if (this.type === 'users') {\n          this.selectedData = JSON.parse(JSON.stringify(this.value))\n          this.$nextTick(() => {\n            this.$refs.usersTransfer && this.$refs.usersTransfer.init()\n          })\n        } else if (this.type === 'role') {\n          this.selectedData = JSON.parse(JSON.stringify(this.value))\n          this.$nextTick(() => {\n            this.$refs.roleTransfer && this.$refs.roleTransfer.init()\n          })\n        } else {\n          let res = []\n          if (this.type === 'department' || this.type === 'organize') {\n            res = await this.$store.dispatch('generator/getDepTree')\n          }\n          if (this.type === 'group') {\n            res = await this.$store.dispatch('generator/getGroupTree')\n          }\n          if (this.type === 'position') {\n            res = await this.$store.dispatch('base/getPositionTree')\n            this.$nextTick(() => {\n              this.$refs.positionTransfer && this.$refs.positionTransfer.init(this.selectedData)\n            })\n          }\n          this.$refs.JNPFTransfer && (this.$refs.JNPFTransfer.filterText = '')\n          this.treeData = res\n          this.selectedData = this.value\n        }\n        this.loading = false\n      })\n    }\n  }\n}\n",null]}