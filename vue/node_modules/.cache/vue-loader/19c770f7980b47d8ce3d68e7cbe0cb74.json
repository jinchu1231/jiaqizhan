{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/JNPF-iconBox/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/JNPF-iconBox/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport elementIconsJson from 'static/json/element-icons.json'\nimport ymIconsJson from 'static/json/ymIcon.json'\nimport ymCustomJson from 'static/json/ymCustom.json'\nconst ymIcons = ymIconsJson.glyphs.map(o => `icon-ym-${o.font_class}`)\nconst ymCustom = ymCustomJson.glyphs.map(o => `ym-custom-${o.font_class}`)\nconst elementIcons = elementIconsJson.map(name => `el-icon-${name}`)\n\nexport default {\n  props: ['current'],\n  data() {\n    return {\n      elementIcons,\n      ymIcons,\n      ymCustom,\n      active: null,\n      keyword: '',\n      ymIconsList: [],\n      ymCustomList: [],\n      elementIconsList: [],\n      activeName: ''\n    }\n  },\n  watch: {\n    keyword(val) {\n      this.search()\n    },\n    activeName(val) {\n      if (this.keyword) {\n        this.keyword = ''\n      } else {\n        this.search()\n      }\n    }\n  },\n  methods: {\n    search() {\n      let key = ''\n      if (this.activeName == '0') {\n        key = 'ymIcons'\n      } else if (this.activeName == '1') {\n        key = 'elementIcons'\n      } else if (this.activeName == '2') {\n        key = 'ymCustom'\n      }\n      if (this.keyword) {\n        this[key + 'List'] = this[key].filter(o => o.indexOf(this.keyword) > -1)\n      } else {\n        this[key + 'List'] = this[key]\n      }\n    },\n    onOpen() {\n      this.active = this.current\n      this.keyword = ''\n    },\n    onClose() { },\n    closeDialog() {\n      this.$emit('update:visible', false)\n    },\n    choiceIcon() {\n      if (!this.active) return\n      this.$emit('choiceIcon', this.active)\n      this.$emit('update:visible', false)\n    },\n    generateYmIconCode(symbol) {\n      return `icon-ym ${symbol}`\n    },\n    generateYmCustomCode(symbol) {\n      return `ym-custom ${symbol}`\n    },\n    iconActiveHandle(item) {\n      this.active = item\n    }\n  }\n}\n",null]}