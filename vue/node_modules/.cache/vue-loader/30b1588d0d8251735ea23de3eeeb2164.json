{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/components/MaskConfigDialog/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/components/MaskConfigDialog/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { useTextMask, defaultMaskOptions } from '@/components/Generator/utils/useTextMask';\nconst fillerOptions = [\n  { id: '*', fullName: '*' },\n  { id: '●', fullName: '●' },\n  { id: '-', fullName: '-' },\n  { id: '.', fullName: '.' },\n  { id: '#', fullName: '#' },\n]\nconst maskTypeOptions = [\n  { id: 1, fullName: '全掩盖' },\n  { id: 2, fullName: '姓名-显示前1个字，后1个字' },\n  { id: 3, fullName: '手机号-显示前3位，后4位' },\n  { id: 4, fullName: '邮箱-显示前3个字，@和之后的字' },\n  { id: 5, fullName: '身份证-显示前6位，后3位，虚拟为4位' },\n  { id: 6, fullName: 'IP地址-显示第1段IP' },\n  { id: 7, fullName: '车牌号-显示前1个字，后2位' },\n  { id: 8, fullName: '银行卡号-显示前6位，后4位' },\n  { id: 0, fullName: '自定义规则' },\n];\nconst prefixTypeOptions = [\n  { id: 1, fullName: '不显示' },\n  { id: 2, fullName: '指定字数' },\n  { id: 3, fullName: '指定字符之前的字' },\n  { id: 4, fullName: '指定字符和之前的字' },\n];\nconst suffixTypeOptions = [\n  { id: 1, fullName: '不显示' },\n  { id: 2, fullName: '指定字数' },\n  { id: 3, fullName: '指定字符之后的字' },\n  { id: 4, fullName: '指定字符和之后的字' },\n];\nexport default {\n  props: ['type'],\n  components: {},\n  data() {\n    return {\n      visible: false,\n      fillerOptions,\n      maskTypeOptions,\n      prefixTypeOptions,\n      suffixTypeOptions,\n      formData: defaultMaskOptions,\n      rules: {\n        fullName: [{ required: true, message: '请输入选项名' }],\n        id: [{ required: true, message: '请输入选项值' }],\n      },\n      testText: '',\n      originTestText: '',\n      isMask: false,\n      props: {\n        label: \"fullName\",\n        value: \"id\"\n      }\n    }\n  },\n  methods: {\n    openModal(data) {\n      this.visible = true;\n      this.isMask = false;\n      this.formData = JSON.parse(JSON.stringify(data));\n      this.testText = ''\n      this.$nextTick(() => {\n        this.$refs.formRef.clearValidate();\n      })\n    },\n    handleCancel() {\n      this.visible = false;\n    },\n    async handleSubmit() {\n      try {\n        this.visible = false;\n        this.$emit('confirm', this.formData);\n      } catch (_) { }\n    },\n    handleMask() {\n      if (!this.testText) return;\n      this.originTestText = this.testText;\n      this.isMask = true;\n      const { getMaskedText } = useTextMask(this.formData);\n      this.testText = getMaskedText(this.testText);\n    },\n    handleRevert() {\n      this.testText = this.originTestText;\n      this.originTestText = '';\n      this.isMask = false;\n    },\n    onNumberChange(val, key) {\n      if (val) return;\n      if (key === 'unrealMaskLength') return this.$nextTick(() => { (this.formData[key] = 1) })\n      this.$nextTick(() => { (this.formData[key] = 0) })\n    },\n    onMaskTypeChange(val) {\n      this.testText = ''\n      this.originTestText = ''\n      this.isMask = false\n      this.formData = {\n        ...defaultMaskOptions,\n        maskType: val\n      }\n    }\n  }\n}\n",null]}