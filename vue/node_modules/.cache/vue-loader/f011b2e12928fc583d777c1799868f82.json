{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/area/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/area/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getProvinceList,\n  updateProvinceState,\n  delProvince\n} from '@/api/system/province'\nimport Form from './Form'\n\nexport default {\n  name: 'system-area',\n  components: { Form },\n  data() {\n    return {\n      treeList: [],\n      btnLoading: false,\n      listLoading: true,\n      listQuery: {\n        keyword: ''\n      },\n      nodeId: -1,\n      refreshTable: true,\n      formVisible: false\n    }\n  },\n  created() {\n    this.initData()\n  },\n  methods: {\n    reset() {\n      this.listQuery.keyword = ''\n      this.initData()\n    },\n    initData() {\n      this.listLoading = true\n      this.treeList = []\n      getProvinceList(this.nodeId, this.listQuery).then(res => {\n        this.refreshTable = false\n        this.treeList = res.data.list\n        this.listLoading = false\n        this.btnLoading = false\n        this.$nextTick(() => {\n          this.refreshTable = true\n        })\n      }).catch(() => {\n        this.listLoading = false\n        this.btnLoading = false\n        this.refreshTable = true\n      })\n    },\n    loadExpandData(tree, treeNode, resolve) {\n      getProvinceList(tree.id).then(res => {\n        resolve(res.data.list)\n      })\n    },\n    addOrUpdateHandle(id) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.Form.init(id)\n      })\n    },\n    handleUpdateState(row) {\n      const txt = row.enabledMark ? '禁用' : '开启'\n      this.$confirm(`您确定要${txt}当前区域吗, 是否继续?`, '提示', {\n        type: 'warning'\n      }).then(() => {\n        updateProvinceState(row.id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              row.enabledMark = row.enabledMark ? 0 : 1\n            }\n          })\n        })\n      }).catch(() => { })\n    },\n    handleDel(id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        delProvince(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: () => {\n              this.initData()\n            }\n          })\n        })\n      }).catch(() => { })\n    }\n  }\n}\n",null]}