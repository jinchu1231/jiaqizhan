{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/area/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/area/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getProvinceInfo,\n  getProvinceSelector,\n  createProvince,\n  updateProvince\n} from '@/api/system/province'\n\nexport default {\n  data() {\n    return {\n      visible: false,\n      formLoading: false,\n      treeLoading: false,\n      btnLoading: false,\n      singleSelectTreeVal: \"\", //单选树默认label值\n      singleSelectTreeKey: \"\", //单选树默认key值\n      treeData: [], //单选树的值\n      props: {\n        children: \"children\",\n        label: \"fullName\",\n        isLeaf: 'isLeaf'\n      },\n      dataForm: {\n        parentId: '',\n        fullName: '',\n        enCode: '',\n        enabledMark: 1,\n        sortCode: 0,\n        description: ''\n      },\n      nodeId: '0',\n      dataRule: {\n        parentId: [\n          { required: true, message: '请选择区域上级', trigger: 'blur' },\n        ],\n        fullName: [\n          { required: true, message: '请输入区域名称', trigger: 'blur' },\n          { validator: this.formValidate('fullName', '区域名称不能含有特殊符号'), trigger: 'blur' },\n          { max: 50, message: '区域名称最多为50个字符！', trigger: 'blur' }\n        ],\n        enCode: [\n          { required: true, message: '请输入区域编码', trigger: 'blur' },\n          { validator: this.formValidate('userCode', '区域编码只能是数字'), trigger: 'blur' },\n          { max: 50, message: '区域编码最多为50个字符！', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    init(id) {\n      this.dataForm.id = id || 0\n      this.visible = true\n      this.formLoading = true\n      this.$nextTick(() => {\n        this.selectTreeClearHandle()\n        this.$refs['dataForm'].resetFields()\n        this.treeLoading = true\n        getProvinceSelector('-1', this.dataForm.id || 0).then(res => {\n          let topItem = { fullName: \"顶级节点\", id: \"-1\", isLeaf: true }\n          this.treeData = [topItem, ...res.data.list]\n          this.treeLoading = false\n        })\n        if (this.dataForm.id) {\n          getProvinceInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            if (res.data.parentName) {\n              this.singleSelectTreeKey = res.data.parentId\n              this.singleSelectTreeVal = res.data.parentName\n            } else {\n              this.singleSelectTreeVal = '顶级节点'\n              this.singleSelectTreeKey = '-1'\n            }\n          })\n        }\n        this.formLoading = false\n      })\n    },\n    getChildrenNode(node, resolve) {\n      this.nodeId = node.data.id\n      getProvinceSelector(this.nodeId, this.dataForm.id || 0).then(res => {\n        this.childrenList = res.data.list\n        resolve(this.childrenList)\n      })\n    },\n    loadNode(node, resolve) {\n      if (node.level === 0) {\n        this.nodeId = '-1'\n        return resolve(this.treeData)\n      }\n      if (node.level > 0) {\n        this.getChildrenNode(node, resolve)\n      }\n    },\n    selectTreeNodeClick(data) {\n      this.singleSelectTreeVal = data.fullName\n      this.singleSelectTreeKey = data.id\n      this.dataForm.parentId = data.id\n      this.$refs.singleTree.blur()\n    },\n    selectTreeClearHandle() {\n      this.singleSelectTreeVal = ''\n      this.singleSelectTreeKey = ''\n      this.dataForm.parentId = ''\n      this.$refs.singleSelectTree.setCurrentKey('')\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          const formMethod = this.dataForm.id ? updateProvince : createProvince\n          formMethod(this.dataForm).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$emit('refreshDataList')\n              }\n            })\n          }).catch(() => {\n            this.btnLoading = false\n          })\n        }\n      })\n    }\n  }\n}\n",null]}