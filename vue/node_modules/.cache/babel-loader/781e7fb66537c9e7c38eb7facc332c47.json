{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/main.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/main.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.string.fixed\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _typeof2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/typeof.js\"));\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es7.array.includes\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _printDev = require(\"@/api/system/printDev\");\nvar _FlowCondition = _interopRequireDefault(require(\"./FlowCondition\"));\nvar _sortablejs = _interopRequireDefault(require(\"sortablejs\"));\nvar _vuedraggable = _interopRequireDefault(require(\"vuedraggable\"));\nvar _FormScript = _interopRequireDefault(require(\"./FormScript\"));\nvar _CustomBtn = _interopRequireDefault(require(\"./CustomBtn\"));\nvar _uploadBox = _interopRequireDefault(require(\"./uploadBox\"));\nvar _InterfaceDialog = _interopRequireDefault(require(\"@/components/Process/PropPanel/InterfaceDialog\"));\nvar _db = require(\"@/components/Generator/utils/db\");\nvar _comConfig = require(\"@/components/Generator/generator/comConfig\");\nvar _dictionary = require(\"@/api/systemData/dictionary\");\nvar _ComplexHeader = _interopRequireDefault(require(\"@/components/Generator/components/ComplexHeader\"));\nvar _DefaultSortConfigModal = _interopRequireDefault(require(\"./DefaultSortConfigModal.vue\"));\nvar _ExtraConfigModal = _interopRequireDefault(require(\"./ExtraConfigModal.vue\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar excludeList = [].concat((0, _toConsumableArray2.default)(_comConfig.noVModelList), (0, _toConsumableArray2.default)(_comConfig.noGroupList), ['colorPicker', 'popupTableSelect', 'relationForm', 'popupSelect', 'calculate', 'groupTitle']);\nvar getSearchMultiple = function getSearchMultiple(item) {\n  var jnpfKey = item.__config__.jnpfKey;\n  var searchMultipleList = ['select', 'depSelect', 'roleSelect', 'userSelect', 'usersSelect', 'organizeSelect', 'posSelect', 'groupSelect'];\n  if (searchMultipleList.includes(jnpfKey)) return true;\n  return false;\n};\nvar getDefaultValue = function getDefaultValue(item) {\n  var jnpfKey = item.__config__.jnpfKey;\n  var list = ['areaSelect', 'datePicker', 'inputNumber', 'organizeSelect', 'calculate'];\n  return list.includes(jnpfKey) || item.multiple ? [] : undefined;\n};\nvar getSearchType = function getSearchType(item) {\n  var jnpfKey = item.__config__.jnpfKey;\n  // 等于-1  模糊-2  范围-3\n  var fuzzyList = [].concat((0, _toConsumableArray2.default)(_comConfig.useInputList), ['location']);\n  var RangeList = [].concat((0, _toConsumableArray2.default)(_comConfig.useDateList), ['timePicker', 'datePicker', 'inputNumber', 'calculate', 'rate', 'slider']);\n  if (RangeList.includes(jnpfKey)) return 3;\n  if (fuzzyList.includes(jnpfKey)) return 2;\n  return 1;\n};\nvar defaultFunc = '({ data, index, refresh, onlineUtils }) => {\\r\\n   \\r\\n}';\nvar defaultFuncs = '({ data, tableRef, onlineUtils }) => {\\r\\n   \\r\\n}';\nvar rowStyleDefaultFunc = '({row,rowIndex}) => {\\r\\n   \\r\\n}';\nvar cellStyleDefaultFunc = '({row, column, rowIndex, columnIndex}) => {\\r\\n   \\r\\n}';\nvar defaultRule = {\n  matchLogic: 'and',\n  conditionList: []\n};\nvar defaultColumnData = {\n  printIds: [],\n  ruleList: defaultRule,\n  // 过滤规则\n  complexHeaderList: [],\n  //复杂表头\n  searchList: [],\n  // 查询字段\n  hasSuperQuery: true,\n  // 高级查询\n  showOverflow: true,\n  // 溢出省略\n  childTableStyle: 1,\n  // 子表样式\n  showSummary: false,\n  // 合计配置\n  summaryField: [],\n  // 合计字段\n  thousands: false,\n  //千位分割\n  thousandsField: [],\n  //千位字段\n  columnList: [],\n  // 字段列表\n  columnOptions: [],\n  // 字段列表\n  defaultColumnList: [],\n  // 所有可选择字段列表\n  type: 1,\n  //列表类型\n  defaultSortConfig: [],\n  // 默认排序配置\n  hasPage: true,\n  // 列表分页\n  pageSize: 20,\n  // 分页条数\n  hasTreeQuery: false,\n  //左侧树查询\n  treeTitle: '左侧标题',\n  // 树形标题\n  treeDataSource: 'dictionary',\n  // 树形数据来源\n  treeDictionary: '',\n  //数据字典\n  treeRelation: '',\n  // 关联字段\n  treeSynType: 0,\n  //数据加载 同步、异步\n  treeInterfaceId: '',\n  treeInterfaceName: '',\n  treeTemplateJson: [],\n  treePropsUrl: '',\n  // 数据选择\n  treePropsName: '',\n  // 数据名称\n  treePropsValue: 'id',\n  // 主键字段\n  treePropsChildren: 'children',\n  // 子级字段\n  treePropsLabel: 'fullName',\n  // 显示字段\n  groupField: '',\n  // 分组字段\n  parentField: '',\n  // 父级字段\n  useColumnPermission: false,\n  useFormPermission: false,\n  useBtnPermission: false,\n  useDataPermission: false,\n  customBtnsList: [],\n  btnsList: [{\n    value: 'add',\n    icon: 'icon-ym icon-ym-btn-add',\n    label: '新增'\n  }],\n  // 按钮\n  columnBtnsList: [{\n    value: 'edit',\n    icon: 'icon-ym icon-ym-btn-edit',\n    label: '编辑'\n  }, {\n    value: 'remove',\n    icon: 'icon-ym icon-ym-btn-clearn',\n    label: '删除'\n  }, {\n    value: 'detail',\n    icon: 'icon-ym icon-ym-generator-menu',\n    label: '详情'\n  }],\n  // 列按钮\n  funcs: {\n    afterOnload: \"\",\n    rowStyle: \"\",\n    cellStyle: \"\"\n  },\n  uploaderTemplateJson: {}\n};\nvar defaultFuncsData = {\n  afterOnload: \"\",\n  rowStyle: \"\",\n  cellStyle: \"\"\n};\nvar defaultBtnsOption = [{\n  value: 'add',\n  icon: 'icon-ym icon-ym-btn-add',\n  label: '新增'\n}, {\n  value: 'download',\n  icon: 'icon-ym icon-ym-btn-download',\n  label: '导出'\n}, {\n  value: 'upload',\n  icon: 'icon-ym icon-ym-btn-upload',\n  label: '导入'\n}, {\n  value: 'batchRemove',\n  icon: 'icon-ym icon-ym-btn-clearn',\n  label: '批量删除'\n}, {\n  value: 'batchPrint',\n  icon: 'icon-ym icon-ym-report-icon-preview-printPreview',\n  label: '批量打印'\n}];\nvar _default2 = exports.default = {\n  name: 'columnDesign',\n  props: {\n    conf: {\n      type: Object,\n      default: function _default() {}\n    },\n    webType: '',\n    modelType: '',\n    interfaceId: '',\n    templateJson: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    viewFields: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  components: {\n    draggable: _vuedraggable.default,\n    FormScript: _FormScript.default,\n    uploadBox: _uploadBox.default,\n    CustomBtn: _CustomBtn.default,\n    InterfaceDialog: _InterfaceDialog.default,\n    Condition: _FlowCondition.default,\n    ComplexHeader: _ComplexHeader.default,\n    DefaultSortConfigModal: _DefaultSortConfigModal.default,\n    ExtraConfigModal: _ExtraConfigModal.default\n  },\n  data: function data() {\n    return {\n      activeSearchRowIndex: 0,\n      key: +new Date(),\n      fieldJsonList: [],\n      hasPage: false,\n      currentTab: 'column',\n      alignOptions: ['left', 'center', 'right'],\n      fixedOptions: ['none', 'left', 'right'],\n      textBoxList: ['input', 'billRule'],\n      canSetKeyword: ['input', 'textarea', 'autoComplete'],\n      selectionBoxList: _comConfig.useSelectList,\n      list: [],\n      searchList: [],\n      columnList: [],\n      columnData: JSON.parse(JSON.stringify(defaultColumnData)),\n      btnsOption: defaultBtnsOption,\n      columnBtnsOption: [{\n        value: 'edit',\n        icon: 'icon-ym icon-ym-btn-edit',\n        label: '编辑'\n      }, {\n        value: 'remove',\n        icon: 'icon-ym icon-ym-btn-clearn',\n        label: '删除'\n      }, {\n        value: 'detail',\n        icon: 'icon-ym icon-ym-generator-menu',\n        label: '详情'\n      }],\n      columnOptions: [],\n      printTplList: [],\n      searchOptions: [],\n      groupFieldOptions: [],\n      thousandsOptions: [],\n      treeFieldOptions: [],\n      btnsList: [],\n      columnBtnsList: [],\n      typeList: [{\n        url: require('@/assets/images/generator/columnType1.png'),\n        value: 1,\n        name: '普通表格'\n      }, {\n        url: require('@/assets/images/generator/columnType2.png'),\n        value: 2,\n        name: '左侧树+普通表格'\n      }, {\n        url: require('@/assets/images/generator/columnType4.png'),\n        value: 4,\n        name: '编辑表格'\n      }, {\n        url: require('@/assets/images/generator/columnType3.png'),\n        value: 3,\n        name: '分组表格'\n      }, {\n        url: require('@/assets/images/generator/columnType5.png'),\n        value: 5,\n        name: '树形表格'\n      }],\n      dataInterfaceSelector: [],\n      formScriptVisible: false,\n      customBtnVisible: false,\n      dataFilterVisible: false,\n      activeItem: {},\n      funcName: '',\n      scriptKey: '',\n      uploadBoxVisible: false,\n      complexHeaderVisible: false,\n      searchConfigVisible: false,\n      ExtraConfigModalVisible: false,\n      viewJnpfKeyOptions: [{\n        id: 'input',\n        fullName: '单行输入'\n      }, {\n        id: 'inputNumber',\n        fullName: '数字输入'\n      }, {\n        id: 'select',\n        fullName: '下拉选择'\n      }, {\n        id: 'datePicker',\n        fullName: '日期选择'\n      }, {\n        id: 'timePicker',\n        fullName: '时间选择'\n      }, {\n        id: 'organizeSelect',\n        fullName: '组织选择'\n      }, {\n        id: 'depSelect',\n        fullName: '部门选择'\n      }, {\n        id: 'roleSelect',\n        fullName: '角色选择'\n      }, {\n        id: 'posSelect',\n        fullName: '岗位选择'\n      }, {\n        id: 'groupSelect',\n        fullName: '分组选择'\n      }, {\n        id: 'userSelect',\n        fullName: '用户选择'\n      }],\n      noGroupList: _comConfig.noGroupList\n    };\n  },\n  filters: {\n    btnText: function btnText(key) {\n      var text = '';\n      switch (key) {\n        case 'download':\n          text = '导出';\n          break;\n        case 'batchRemove':\n          text = '批量删除';\n          break;\n        case 'batchPrint':\n          text = '批量打印';\n          break;\n        case 'edit':\n          text = '编辑';\n          break;\n        case 'remove':\n          text = '删除';\n          break;\n        case 'detail':\n          text = '详情';\n          break;\n        case 'upload':\n          text = '导入';\n          break;\n        default:\n          text = '新增';\n          break;\n      }\n      return text;\n    }\n  },\n  watch: {\n    'columnData.type': {\n      handler: function handler(val) {\n        if (val == 5) this.columnData.printIds = [];\n      },\n      deep: true,\n      immediate: true\n    },\n    'columnData.ruleList': {\n      handler: function handler() {\n        if (Array.isArray(this.columnData.ruleList) && this.columnData.ruleList.length == 0) return this.columnData.ruleList = defaultRule;\n        var ruleData = this.$store.getters.ruleData;\n        if (ruleData && ruleData.conditionList && ruleData.conditionList.length > 0 && this.columnData.ruleList.conditionList.length == 0) {\n          this.columnData.ruleList.conditionList = ruleData.conditionList;\n          this.columnData.ruleList.matchLogic = ruleData.matchLogic;\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    btnsList: function btnsList(val) {\n      var list = [];\n      outer: for (var i = 0; i < this.btnsOption.length; i++) {\n        inter: for (var ii = 0; ii < val.length; ii++) {\n          if (val[ii] === this.btnsOption[i].value) {\n            list.push(this.btnsOption[i]);\n            break inter;\n          }\n        }\n      }\n      this.columnData.btnsList = list;\n    },\n    columnBtnsList: function columnBtnsList(val) {\n      var list = [];\n      outer: for (var i = 0; i < this.columnBtnsOption.length; i++) {\n        inter: for (var ii = 0; ii < val.length; ii++) {\n          if (val[ii] === this.columnBtnsOption[i].value) {\n            list.push(this.columnBtnsOption[i]);\n            break inter;\n          }\n        }\n      }\n      this.columnData.columnBtnsList = list;\n    }\n  },\n  created: function created() {\n    var _this = this;\n    this.getDataInterfaceSelector();\n    if ((0, _typeof2.default)(this.conf) === 'object' && this.conf !== null) {\n      this.columnData = Object.assign({}, defaultColumnData, this.conf);\n      this.columnData.funcs = Object.assign({}, defaultFuncsData, this.columnData.funcs);\n    }\n    if ([1, 2, 4].includes(this.columnData.type)) {\n      if (this.columnData.complexHeaderList.length) {\n        var childColumns = [];\n        for (var i = 0; i < this.columnData.complexHeaderList.length; i++) {\n          var e = this.columnData.complexHeaderList[i];\n          for (var j = 0; j < e.childColumns.length; j++) {\n            var element = e.childColumns[j];\n            childColumns.push(element);\n          }\n        }\n        if (childColumns.length) {\n          this.$store.commit(\"generator/SET_HEADER_DATA\", JSON.parse(JSON.stringify(this.columnData.complexHeaderList)));\n          this.columnData.complexHeaderList = this.$store.getters.complexHeaderData;\n        }\n      }\n    }\n    if (this.webType != 4) {\n      if (this.columnData.type == 5) this.updateBtnsList(5);\n      var list = [];\n      var loop = function loop(data, parent) {\n        if (!data) return;\n        if (data.__config__ && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data);\n        }\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d, parent);\n        });\n        if (data.__config__ && data.__config__.jnpfKey) {\n          var visibility = !data.__config__.visibility || Array.isArray(data.__config__.visibility) && data.__config__.visibility.includes('pc');\n          if (data.__config__.layout === 'colFormItem' && data.__vModel__ && visibility) {\n            var isTableChild = parent && parent.__config__ && parent.__config__.jnpfKey === 'table';\n            list.push(_objectSpread({\n              id: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n              fullName: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label\n            }, data));\n          }\n        }\n      };\n      loop((0, _db.getDrawingList)());\n      this.list = list;\n      var columnOptions = list.filter(function (o) {\n        return _comConfig.noColumnShowList.indexOf(o.__config__.jnpfKey) < 0 || o.isStorage == 1;\n      });\n      var searchOptions = list.filter(function (o) {\n        return _comConfig.noSearchList.indexOf(o.__config__.jnpfKey) < 0;\n      });\n      this.groupFieldOptions = list.filter(function (o) {\n        return o.id.indexOf('-') < 0 && ![].concat((0, _toConsumableArray2.default)(_comConfig.noGroupList), ['editor']).includes(o.__config__.jnpfKey);\n      });\n      this.treeFieldOptions = list.filter(function (o) {\n        return o.id.indexOf('-') < 0 && o.__config__.jnpfKey == 'treeSelect';\n      });\n      this.columnOptions = columnOptions.map(function (o) {\n        return _objectSpread({\n          label: o.fullName,\n          prop: o.id,\n          fixed: 'none',\n          align: 'left',\n          jnpfKey: o.__config__.jnpfKey,\n          sortable: false,\n          width: null\n        }, o);\n      });\n      this.searchOptions = searchOptions.map(function (o) {\n        return _objectSpread({\n          label: o.fullName,\n          prop: o.id,\n          jnpfKey: o.__config__.jnpfKey,\n          value: getDefaultValue(o),\n          searchType: getSearchType(o),\n          searchMultiple: getSearchMultiple(o),\n          isKeyword: false\n        }, o);\n      });\n      this.searchList = this.searchOptions;\n      this.columnData.columnOptions = columnOptions;\n      if (!this.columnOptions.length) this.columnData.columnList = [];\n      if (!this.searchOptions.length) this.columnData.searchList = [];\n      this.setBtnValue(this.columnData.btnsList, this.btnsOption);\n      this.setBtnValue(this.columnData.columnBtnsList, this.columnBtnsOption);\n      this.btnsList = this.columnData.btnsList.map(function (o) {\n        return o.value;\n      });\n    }\n    if (this.webType == 4) {\n      this.btnsOption = [{\n        value: 'download',\n        icon: 'icon-ym icon-ym-btn-download',\n        label: '导出'\n      }];\n      this.columnBtnsOption = [];\n      this.typeList = this.typeList.filter(function (ele) {\n        return ele.value == 1 || ele.value == 3;\n      });\n      if (!this.interfaceId) return;\n      var fieldsList = this.viewFields;\n      this.columnOptions = fieldsList.map(function (o) {\n        return {\n          label: o.field,\n          prop: o.defaultValue,\n          fixed: 'none',\n          align: 'left',\n          jnpfKey: 'input',\n          sortable: false,\n          width: null,\n          __vModel__: o.defaultValue,\n          id: o.defaultValue,\n          fullName: o.field,\n          __config__: {\n            jnpfKey: 'input'\n          }\n        };\n      });\n      var interfaceParam = (this.templateJson || []).filter(function (o) {\n        return o.useSearch;\n      }).map(function (o) {\n        var jnpfKey = 'input';\n        if (o.dataType === 'int' || o.dataType === 'decimal') jnpfKey = 'inputNumber';\n        if (o.dataType === 'datetime') jnpfKey = 'datePicker';\n        return {\n          id: o.field,\n          fullName: o.fieldName,\n          label: o.fieldName,\n          prop: o.field,\n          jnpfKey: jnpfKey,\n          __vModel__: o.field,\n          __config__: {\n            isFromParam: true,\n            jnpfKey: jnpfKey\n          }\n        };\n      });\n      this.searchOptions = fieldsList.map(function (o) {\n        return _objectSpread({\n          label: o.field,\n          prop: o.defaultValue,\n          jnpfKey: 'input',\n          value: '',\n          searchType: 1,\n          __vModel__: o.defaultValue,\n          id: o.defaultValue,\n          fullName: o.field,\n          searchMultiple: false,\n          __config__: {\n            label: o.field,\n            jnpfKey: 'input'\n          }\n        }, o);\n      });\n      var _searchOptions = this.searchOptions.filter(function (o) {\n        return !interfaceParam.some(function (e) {\n          return e.id === o.id;\n        });\n      });\n      this.searchOptions = [].concat((0, _toConsumableArray2.default)(interfaceParam), (0, _toConsumableArray2.default)(_searchOptions));\n      this.groupFieldOptions = fieldsList.map(function (o) {\n        return {\n          label: o.field,\n          prop: o.defaultValue,\n          jnpfKey: 'input',\n          __vModel__: o.defaultValue,\n          id: o.defaultValue,\n          fullName: o.field,\n          __config__: {\n            label: o.field,\n            jnpfKey: 'input'\n          }\n        };\n      });\n      if (!this.columnOptions.length) this.columnData.columnList = [];\n      if (!this.searchOptions.length) this.columnData.searchList = [];\n      this.$nextTick(function () {\n        _this.columnData.columnList = _this.setListValue(_this.columnData.columnList, JSON.parse(JSON.stringify(_this.columnOptions)), 'column');\n        _this.columnData.searchList = _this.setListValue(_this.columnData.searchList, JSON.parse(JSON.stringify(_this.searchOptions)), \"search\");\n      });\n    }\n    this.columnBtnsList = this.columnData.columnBtnsList.map(function (o) {\n      return o.value;\n    });\n    this.setBtnValue(this.columnData.btnsList, this.btnsOption);\n    this.btnsList = this.columnData.btnsList.map(function (o) {\n      return o.value;\n    });\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    this.getDataInterfaceInfo('', '', 1);\n    this.setSort();\n    this.$nextTick(function () {\n      _this2.columnData.columnList = _this2.setListValue(_this2.columnData.columnList, JSON.parse(JSON.stringify(_this2.columnOptions)), 'column');\n      _this2.columnData.searchList = _this2.setListValue(_this2.columnData.searchList, JSON.parse(JSON.stringify(_this2.searchOptions)), \"search\");\n      _this2.getPrintTplList();\n      if (_this2.btnsList.indexOf('upload') != -1) _this2.setDefaultUpLoadData();\n      _this2.buildOptions(_this2.columnData.searchList);\n    });\n  },\n  computed: {\n    getSearchOptions: function getSearchOptions() {\n      var _this3 = this;\n      if (this.columnData.type == 2 && this.columnData.treeRelation) return this.searchOptions.filter(function (o) {\n        return o.id !== _this3.columnData.treeRelation;\n      });\n      return this.searchOptions;\n    },\n    getIsKeywordDisabled: function getIsKeywordDisabled() {\n      return this.columnData.searchList.filter(function (o) {\n        return o.isKeyword;\n      }).length >= 3;\n    }\n  },\n  methods: {\n    getDataInterfaceInfo: function getDataInterfaceInfo(val, item, type) {\n      var _this4 = this;\n      if (type != 1) this.columnData.treePropsName = item.fullName;\n      if (!this.columnData.treePropsUrl) return;\n      (0, _dataInterface.getDataInterfaceInfo)(this.columnData.treePropsUrl).then(function (res) {\n        _this4.fieldJsonList = res.data && res.data.fieldJson && (JSON.parse(res.data.fieldJson) || []) || [];\n        _this4.hasPage = res.data.hasPage == 1 ? true : false;\n      });\n    },\n    querySearch: function querySearch(queryString, cb) {\n      var restaurants = this.fieldJsonList || [];\n      var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createStateFilter: function createStateFilter(queryString) {\n      return function (state) {\n        return state.defaultValue.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleSelect: function handleSelect(item) {\n      this.columnData.treePropsLabel = item.defaultValue;\n    },\n    onTreeRelationChange: function onTreeRelationChange(val) {\n      var _this5 = this;\n      if (!val) return;\n      var searchList = this.columnData.searchList;\n      var list = JSON.parse(JSON.stringify(this.searchList));\n      this.searchOptions = this.columnData.type == 2 ? list.filter(function (o) {\n        return o.id !== val;\n      }) : list;\n      this.$nextTick(function () {\n        _this5.columnData.searchList = _this5.setListValue(searchList, JSON.parse(JSON.stringify(_this5.searchOptions)), 'search');\n      });\n    },\n    buildOptions: function buildOptions(componentList) {\n      if (this.webType == 4) return;\n      componentList.forEach(function (cur) {\n        var config = cur.__config__;\n        if (_comConfig.dyOptionsList.includes(config.jnpfKey)) {\n          if (config.dataType === 'dictionary' && config.dictionaryType) {\n            cur.options = [];\n            (0, _dictionary.getDictionaryDataSelector)(config.dictionaryType).then(function (res) {\n              cur.options = res.data.list;\n            });\n          }\n          if (config.dataType === 'dynamic' && config.propsUrl) {\n            cur.options = [];\n            var query = {\n              paramList: config.templateJson || []\n            };\n            (0, _dataInterface.getDataInterfaceRes)(config.propsUrl, query).then(function (res) {\n              cur.options = Array.isArray(res.data) ? res.data : [];\n            });\n          }\n        }\n      });\n    },\n    onSearchMultipleChange: function onSearchMultipleChange(record, index) {\n      this.columnData.searchList[index].value = getDefaultValue(record);\n      this.columnData.searchList[index].__config__.renderKey = +new Date();\n    },\n    updateDefaultSortConfig: function updateDefaultSortConfig(data) {\n      this.columnData.defaultSortConfig = data;\n    },\n    closeForm: function closeForm(val) {\n      if (val) this.columnData.complexHeaderList = val;\n      this.complexHeaderVisible = false;\n    },\n    addComplexHeader: function addComplexHeader() {\n      var _this6 = this;\n      this.complexHeaderVisible = true;\n      var list = JSON.parse(JSON.stringify(this.columnOptions));\n      var columnOptions = list.filter(function (o) {\n        return o.fixed === 'none' && o.id.indexOf('-') < 0;\n      });\n      this.$nextTick(function () {\n        _this6.$refs.ComplexHeader.init(_this6.columnData.complexHeaderList, columnOptions);\n      });\n    },\n    editDefaultSortConfig: function editDefaultSortConfig() {\n      var _this7 = this;\n      this.searchConfigVisible = true;\n      this.$nextTick(function () {\n        _this7.$refs.SearchConfig.init({\n          list: _this7.columnData.defaultSortConfig,\n          columnOptions: _this7.groupFieldOptions.filter(function (o) {\n            return o.id.indexOf('_jnpf_') < 0;\n          })\n        });\n      });\n    },\n    refreshPrintOptions: function refreshPrintOptions() {\n      var _this8 = this;\n      (0, _printDev.getPrintDevSelector)(2).then(function (res) {\n        var data = res.data.list;\n        var list = data.filter(function (o) {\n          return o.children && o.children.length;\n        });\n        _this8.printTplList = list.map(function (o) {\n          return _objectSpread(_objectSpread({}, o), {}, {\n            hasChildren: true\n          });\n        });\n      }).catch(function (error) {\n        reject(error);\n      });\n    },\n    open: function open(url) {\n      window.open(url, \"_blank\");\n    },\n    updateSearchRow: function updateSearchRow(data) {\n      this.ExtraConfigModalVisible = false;\n      this.columnData.searchList[this.activeSearchRowIndex] = data;\n    },\n    openPrint: function openPrint() {\n      var routeUrl = this.$router.resolve({\n        path: '/system/printDev?open=true'\n      });\n      this.open(routeUrl.href);\n    },\n    getPrintTplList: function getPrintTplList() {\n      var _this9 = this;\n      this.$store.dispatch('base/getPrintFormTree').then(function (res) {\n        var list = res.filter(function (o) {\n          return o.children && o.children.length;\n        });\n        _this9.printTplList = list.map(function (o) {\n          return _objectSpread(_objectSpread({}, o), {}, {\n            hasChildren: true\n          });\n        });\n      });\n    },\n    filterPanelShow: function filterPanelShow() {\n      this.$refs.conditionpane.show(this.columnData.ruleList);\n    },\n    ruleConfig: function ruleConfig(data) {\n      this.columnData.ruleList = data;\n    },\n    setBtnValue: function setBtnValue(replacedData, data, key) {\n      key = key ? key : 'value';\n      outer: for (var i = 0; i < replacedData.length; i++) {\n        inter: for (var ii = 0; ii < data.length; ii++) {\n          if (replacedData[i][key] === data[ii][key]) {\n            data[ii] = replacedData[i];\n            break inter;\n          }\n        }\n      }\n    },\n    setListValue: function setListValue(data, defaultData, type) {\n      var _this10 = this;\n      data = data.filter(function (o) {\n        return defaultData.some(function (e) {\n          return o.prop == e.prop;\n        });\n      });\n      if (type == 'search') data = data.filter(function (o) {\n        return o.id !== _this10.columnData.treeRelation;\n      });\n      outer: for (var i = 0; i < data.length; i++) {\n        inter: for (var ii = 0; ii < defaultData.length; ii++) {\n          if (data[i].prop === defaultData[ii].prop) {\n            if (type === 'column') {\n              defaultData[ii].fixed = data[i].fixed;\n              defaultData[ii].align = data[i].align;\n              defaultData[ii].width = data[i].width;\n              defaultData[ii].sortable = data[i].sortable;\n              if (this.webType == 4) defaultData[ii].label = data[i].label;\n            }\n            if (type === 'search') {\n              if (data[i].jnpfKey === defaultData[ii].jnpfKey) {\n                defaultData[ii].searchType = data[i].searchType;\n                defaultData[ii].searchMultiple = data[i].searchMultiple;\n                defaultData[ii].value = data[i].value;\n              }\n              defaultData[ii].label = data[i].label;\n              defaultData[ii].isKeyword = data[i].isKeyword;\n              if (this.webType == 4) defaultData[ii] = data[i];\n            }\n            data[i] = defaultData[ii];\n            break inter;\n          }\n        }\n      }\n      for (var _i = 0; _i < data.length; _i++) {\n        for (var _ii = 0; _ii < this[type + 'Options'].length; _ii++) {\n          if (data[_i].prop === this[type + 'Options'][_ii].prop) {\n            this.$refs[type + 'Table'].toggleRowSelection(this[type + 'Options'][_ii], true);\n          }\n        }\n      }\n      return data;\n    },\n    updateListValue: function updateListValue(selectedRows, type) {\n      var _this11 = this;\n      if (!selectedRows.length) return this.columnData[type + 'List'] = [];\n      var selectedRowKeys = selectedRows.map(function (o) {\n        return o.prop;\n      });\n      this.columnData[type + 'List'] = this.columnData[type + 'List'].filter(function (o) {\n        return selectedRowKeys.some(function (e) {\n          return o.prop == e;\n        });\n      });\n      var _loop = function _loop(i) {\n        if (!_this11.columnData[type + 'List'].some(function (o) {\n          return o.prop === selectedRows[i].prop;\n        })) {\n          _this11.columnData[type + 'List'].push(JSON.parse(JSON.stringify(selectedRows[i])));\n          if (type == 'search') _this11.buildOptions([selectedRows[i]]);\n        }\n      };\n      for (var i = 0; i < selectedRows.length; i++) {\n        _loop(i);\n      }\n    },\n    openExtraConfig: function openExtraConfig(record, index) {\n      var _this12 = this;\n      this.ExtraConfigModalVisible = true;\n      this.activeSearchRowIndex = index;\n      this.$nextTick(function () {\n        _this12.$refs.ExtraConfigModal.init(record, index);\n      });\n    },\n    onJnpfKeyChange: function onJnpfKeyChange(val, record, i) {\n      record.__config__.jnpfKey = val;\n      var defaultItem = {\n        id: record.id,\n        fullName: record.fullName,\n        label: record.label,\n        prop: record.prop,\n        jnpfKey: val,\n        value: getDefaultValue(record),\n        searchType: getSearchType(record),\n        __vModel__: record.__vModel__,\n        searchMultiple: getSearchMultiple(record),\n        isKeyword: false,\n        __config__: {\n          label: record.label,\n          jnpfKey: val\n        }\n      };\n      if (val === 'datePicker') defaultItem.format = 'yyyy-MM-dd';\n      if (val === 'timePicker') defaultItem.format = 'HH:mm:ss';\n      if (val === 'select') {\n        defaultItem.options = [];\n        defaultItem.props = {\n          label: 'fullName',\n          value: 'id'\n        };\n        defaultItem.__config__ = _objectSpread(_objectSpread({}, defaultItem.__config__), {}, {\n          dataType: 'static',\n          propsUrl: '',\n          propsName: '',\n          templateJson: [],\n          dictionaryType: ''\n        });\n      }\n      if (['organizeSelect', 'depSelect', 'userSelect'].includes(val)) {\n        defaultItem.isIncludeSubordinate = false;\n      }\n      this.columnData.searchList[i] = JSON.parse(JSON.stringify(defaultItem));\n      this.key = +new Date();\n    },\n    setDefaultUpLoadData: function setDefaultUpLoadData() {\n      var _this13 = this;\n      var selectKey = this.columnData.uploaderTemplateJson.selectKey;\n      var newList = [];\n      var _loop2 = function _loop2() {\n        var element = selectKey[i];\n        if (_this13.list.some(function (item) {\n          return item.id == element;\n        })) newList.push(element);\n      };\n      for (var i = 0; i < selectKey.length; i++) {\n        _loop2();\n      }\n      for (var _i2 = 0; _i2 < this.list.length; _i2++) {\n        var element = this.list[_i2];\n        var required = element.__config__.required;\n        var jnpfKey = element.__config__.jnpfKey;\n        if (!excludeList.includes(jnpfKey)) {\n          if (required || _comConfig.systemComponentsList.includes(jnpfKey)) {\n            if (!selectKey.includes(element.id)) {\n              newList.push(element.id);\n            }\n          }\n        }\n      }\n      this.columnData.uploaderTemplateJson.selectKey = newList;\n    },\n    /**\n      * 供父组件使用 获取列表JSON\n    */\n    getData: function getData() {\n      var _this14 = this;\n      if (this.btnsList.includes('batchPrint') && this.columnData.printIds.length === 0) {\n        return this.$message.warning('请选择打印模板');\n      }\n      if (!this.columnData.printIds) return this.$message.warning('请选择打印模板');\n      if (!this.columnData.columnList.length) return this.$message.warning('列表字段不允许为空');\n      if (!this.columnData.uploaderTemplateJson.selectKey && this.btnsList.indexOf('upload') != -1) return this.$message.warning('请设置导入模板');\n      if (this.columnData.type == 2) {\n        if (this.columnData.treeDataSource === 'dictionary' && !this.columnData.treeDictionary) return this.$message.warning('请选择数据字典');\n        if (this.columnData.treeDataSource === 'api') {\n          if (!this.columnData.treePropsValue) return this.$message.warning('请输入主键字段');\n          if (!this.columnData.treePropsLabel) return this.$message.warning('请输入显示字段');\n          if (!this.columnData.treePropsChildren) return this.$message.warning('请输入子级字段');\n        }\n        if (!this.columnData.treeRelation) return this.$message.warning('请选择关联字段');\n        if (!this.columnData.treeInterfaceId && this.columnData.treeSynType == 1) return this.$message.warning('请选择异步数据接口');\n      }\n      if (this.columnData.type == 3) {\n        if (!this.columnData.groupField) return this.$message.warning('请选择分组字段');\n      }\n      if (this.columnData.type == 5) {\n        if (!this.columnData.parentField) return this.$message.warning('请选择父级字段');\n      }\n      this.columnData.defaultColumnList = this.columnOptions.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          checked: _this14.columnData.columnList.some(function (i) {\n            return i.prop === o.prop;\n          })\n        });\n      });\n      return this.columnData;\n    },\n    setSort: function setSort() {\n      var _this15 = this;\n      var el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0];\n      this.sortable = _sortablejs.default.create(el, {\n        ghostClass: 'sortable-ghost',\n        // Class name for the drop placeholder,\n        setData: function setData(dataTransfer) {\n          dataTransfer.setData('Text', '');\n        },\n        onEnd: function onEnd(evt) {\n          var targetRow = _this15.columnData.columnList.splice(evt.oldIndex, 1)[0];\n          _this15.columnData.columnList.splice(evt.newIndex, 0, targetRow);\n        },\n        handle: '.drag-handler'\n      });\n      var el2 = this.$refs.dragTableSearch.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0];\n      _sortablejs.default.create(el2, {\n        ghostClass: 'sortable-ghost',\n        // Class name for the drop placeholder,\n        setData: function setData(dataTransfer) {\n          dataTransfer.setData('Text', '');\n        },\n        onEnd: function onEnd(evt) {\n          var targetRow = _this15.columnData.searchList.splice(evt.oldIndex, 1)[0];\n          _this15.columnData.searchList.splice(evt.newIndex, 0, targetRow);\n        },\n        handle: '.drag-handler'\n      });\n    },\n    searchSelectionChange: function searchSelectionChange(val) {\n      this.updateListValue(val, 'search');\n    },\n    columnSelectionChange: function columnSelectionChange(val) {\n      var _this16 = this;\n      this.updateListValue(val, 'column');\n      this.$nextTick(function () {\n        _this16.updateComplexHeader();\n      });\n    },\n    onFixedChange: function onFixedChange() {\n      this.updateComplexHeader();\n    },\n    updateComplexHeader: function updateComplexHeader() {\n      if (!this.columnData.complexHeaderList.length) return;\n      var columnOptions = this.columnData.columnList.filter(function (o) {\n        return o.fixed === 'none' && o.id.indexOf('-') < 0;\n      });\n      for (var i = 0; i < this.columnData.complexHeaderList.length; i++) {\n        var e = this.columnData.complexHeaderList[i];\n        e.childColumns = e.childColumns.filter(function (o) {\n          return columnOptions.some(function (item) {\n            return item.id == o;\n          });\n        });\n      }\n    },\n    getDataInterfaceSelector: function getDataInterfaceSelector() {\n      var _this17 = this;\n      (0, _dataInterface.getDataInterfaceSelector)().then(function (res) {\n        _this17.dataInterfaceSelector = res.data;\n      });\n    },\n    dataTypeChange: function dataTypeChange() {\n      this.columnData.treePropsValue = 'id';\n      this.columnData.treePropsChildren = 'children';\n      this.columnData.treePropsLabel = 'fullName';\n    },\n    addCustomBtn: function addCustomBtn() {\n      var id = this.jnpf.idGenerator();\n      this.columnData.customBtnsList.push({\n        value: 'btn_' + id,\n        label: '按钮' + id,\n        event: ''\n      });\n    },\n    editFunc: function editFunc(item) {\n      var _this18 = this;\n      if (!item.event.func) item.event = defaultFunc;\n      this.activeItem = item;\n      this.customBtnVisible = true;\n      this.$nextTick(function () {\n        _this18.$refs.customBtn.init('pc', item.event, _this18.webType, _this18.columnOptions);\n      });\n    },\n    updateScript: function updateScript(data) {\n      this.columnData.funcs[this.funcName] = data;\n    },\n    updateCustomBtn: function updateCustomBtn(val) {\n      var _this19 = this;\n      this.columnData.customBtnsList.forEach(function (ele, index) {\n        if (ele.value == _this19.activeItem.value) _this19.$set(_this19.columnData.customBtnsList[index], 'event', val);\n      });\n    },\n    addFunc: function addFunc(item, type) {\n      var _this20 = this;\n      if (!item && type == 'afterOnload') item = defaultFuncs;\n      if (!item && type == 'rowStyle') item = rowStyleDefaultFunc;\n      if (!item && type == 'cellStyle') item = cellStyleDefaultFunc;\n      this.activeItem = item;\n      this.funcName = type;\n      this.formScriptVisible = true;\n      this.$nextTick(function () {\n        _this20.$refs.formScript.init();\n      });\n    },\n    setUploaderTemplateJson: function setUploaderTemplateJson() {\n      var _this21 = this;\n      this.uploadBoxVisible = true;\n      this.$nextTick(function () {\n        var selectData = _this21.columnData.uploaderTemplateJson.selectKey ? _this21.columnData.uploaderTemplateJson.selectKey : [];\n        var dataType = _this21.columnData.uploaderTemplateJson.dataType ? _this21.columnData.uploaderTemplateJson.dataType : '';\n        var list = _this21.list.filter(function (o) {\n          return o.__config__.jnpfKey != 'location';\n        });\n        _this21.$refs.uploadRef.init(list, selectData, dataType);\n      });\n    },\n    onConfirm: function onConfirm(data) {\n      this.columnData.uploaderTemplateJson = data;\n    },\n    onInterfaceChange: function onInterfaceChange(id, row) {\n      if (!id) {\n        this.columnData.treeInterfaceId = '';\n        this.columnData.treeInterfaceName = '';\n        this.columnData.treeTemplateJson = [];\n        return;\n      }\n      if (this.columnData.treeInterfaceId === id) return;\n      this.columnData.treeInterfaceId = id;\n      this.columnData.treeInterfaceName = row.fullName;\n      this.columnData.treeTemplateJson = row.templateJson ? row.templateJson.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          relationField: ''\n        });\n      }) : [];\n    },\n    goDataInterface: function goDataInterface() {\n      var src = window.location.protocol + \"//\" + window.location.host + \"/systemData/dataInterface\";\n      window.open(src, \"_blank\");\n    },\n    toggleType: function toggleType(val) {\n      if (this.columnData.type == val) return;\n      this.columnData.type = val;\n      this.onTreeRelationChange(this.columnData.treeRelation);\n      this.columnData.childTableStyle = 1;\n      this.updateBtnsList(val);\n    },\n    updateBtnsList: function updateBtnsList(val) {\n      if (this.webType == '4') return;\n      if (val == 5) {\n        this.btnsOption = [defaultBtnsOption[0]];\n        this.btnsList = this.btnsList.filter(function (o) {\n          return o === 'add';\n        });\n      } else {\n        this.btnsOption = defaultBtnsOption;\n      }\n    }\n  }\n};",null]}