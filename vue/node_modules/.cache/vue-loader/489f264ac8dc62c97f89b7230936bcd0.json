{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/common/Table.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/VisualPortal/PortalDesign/RightComponents/common/Table.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport JSONArea from '../../components/JSONArea'\nimport ColumnData from './ColumnData'\nimport { alignList } from '../../components/config'\nimport InterfaceDialog from '@/components/Process/PropPanel/InterfaceDialog'\nimport Refresh from '../common/Refresh'\nexport default {\n  components: { JSONArea, InterfaceDialog, ColumnData, Refresh },\n  props: ['activeData', 'showType'],\n  data() {\n    return {\n      areaVisible: false,\n      alignList,\n      columnVisible: false,\n      styleTypeOptions: [{ label: '表格', value: 1 },\n      { label: '列表（横向）', value: 2 },\n      { label: '列表（纵向）', value: 3 },],\n    }\n  },\n  watch: {\n  },\n  methods: {\n    showColumnData(option, type) {\n      this.columnVisible = true\n      this.$nextTick(() => {\n        this.$refs.columnData.init(option, type, this.activeData.propsApi)\n      })\n    },\n    showData(option) {\n      this.areaVisible = true\n      this.$nextTick(() => {\n        this.$refs.JSONArea.init(option)\n      })\n    },\n    renderKeyChange() {\n      this.activeData.renderKey = +new Date()\n    },\n    updateOption(data) {\n      this.activeData.option.defaultValue = data ? JSON.parse(data) : []\n      this.renderKeyChange()\n    },\n    columnList(data) {\n      if (!data) return\n      if (this.showType === 'app') {\n        this.activeData.option.appColumnList = data\n      } else {\n        if (this.activeData.option.styleType == 1) {\n          this.activeData.option.columnData = data\n        } else {\n          this.activeData.option.rowData = data\n        }\n      }\n      this.renderKeyChange()\n    },\n    dataTypeChange() {\n      this.activeData.propsApi = ''\n      this.activeData.propsName = ''\n      this.activeData.option.defaultValue = []\n      this.renderKeyChange()\n    },\n    propsApiChange(val, item) {\n      if (val) {\n        this.activeData.propsApi = val\n        this.activeData.propsName = item.fullName\n        this.activeData.refresh.autoRefresh = false\n      } else {\n        this.activeData.propsApi = ''\n        this.activeData.propsName = ''\n      }\n      this.renderKeyChange()\n    },\n\n  }\n}\n",null]}