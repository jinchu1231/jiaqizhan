{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/src/api/workFlow/FlowBefore.js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/api/workFlow/FlowBefore.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Assign = Assign;\nexports.Audit = Audit;\nexports.BatchCandidate = BatchCandidate;\nexports.BatchOperation = BatchOperation;\nexports.Cancel = Cancel;\nexports.CandidateUser = CandidateUser;\nexports.Candidates = Candidates;\nexports.FlowBeforeInfo = FlowBeforeInfo;\nexports.FlowBeforeList = FlowBeforeList;\nexports.FreeApprover = FreeApprover;\nexports.Recall = Recall;\nexports.Reject = Reject;\nexports.RejectList = RejectList;\nexports.Resurgence = Resurgence;\nexports.ResurgenceList = ResurgenceList;\nexports.SaveAudit = SaveAudit;\nexports.Transfer = Transfer;\nexports.checkInfo = checkInfo;\nexports.eventLog = eventLog;\nexports.getBatchFlowJsonList = getBatchFlowJsonList;\nexports.getBatchFlowSelector = getBatchFlowSelector;\nexports.getNodeSelector = getNodeSelector;\nexports.getRecordList = getRecordList;\nexports.restore = restore;\nexports.subFlowInfo = subFlowInfo;\nexports.suspend = suspend;\nexports.suspendType = suspendType;\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\n// 获取待我审核\nfunction FlowBeforeList(category, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/List/\".concat(category),\n    method: 'get',\n    data: data\n  });\n}\n// 获取待我审批信息\nfunction FlowBeforeInfo(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/\".concat(id),\n    method: 'get',\n    data: data\n  });\n}\n// 待我审核审核\nfunction Audit(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Audit/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n// 待我审核保存草稿\nfunction SaveAudit(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/SaveAudit/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n// 待我审核退回\nfunction Reject(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Reject/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n// 撤回审核\nfunction Recall(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Recall/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n// 终止审核\nfunction Cancel(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Cancel/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n// 待我审核转审\nfunction Transfer(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Transfer/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n// 流程监控指派\nfunction Assign(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Assign/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n// 流程复活和变更节点下拉数据\nfunction ResurgenceList(id) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Selector/\".concat(id),\n    method: 'get'\n  });\n}\n// 流程复活和变更提交\nfunction Resurgence(data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Change\",\n    method: 'post',\n    data: data\n  });\n}\n// 审批汇总\nfunction getRecordList(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/RecordList/\".concat(id),\n    method: 'get',\n    data: data\n  });\n}\n// 判断是否有候选人\nfunction Candidates(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Candidates/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n// 获取候选人列表（分页）\nfunction CandidateUser(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/CandidateUser/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n// 批量通过、退回、转审  batchType 0-通过 1-退回 2-转审\nfunction BatchOperation(data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/BatchOperation\",\n    method: 'post',\n    data: data\n  });\n}\n// 获取批量审批流程\nfunction getBatchFlowSelector() {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/BatchFlowSelector\",\n    method: 'get'\n  });\n}\n// 获取批量审批流程（小id）\nfunction getBatchFlowJsonList(id) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/BatchFlowJsonList/\".concat(id),\n    method: 'get'\n  });\n}\n// 获取流程节点列表\nfunction getNodeSelector(id) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/NodeSelector/\".concat(id),\n    method: 'get'\n  });\n}\n// 获取批量审批候选人\nfunction BatchCandidate(data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/BatchCandidate\",\n    method: 'get',\n    data: data\n  });\n}\n// 判断是否有查看权限(消息通知用)\nfunction checkInfo(taskOperatorId) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/\".concat(taskOperatorId, \"/Info\"),\n    method: 'get'\n  });\n}\n\n//获取退回下拉接口\nfunction RejectList(id) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/RejectList/\".concat(id),\n    method: 'get'\n  });\n}\n\n// 加签\nfunction FreeApprover(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/freeApprover/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n\n//挂起类型\nfunction suspendType(id) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Suspend/\".concat(id),\n    method: 'get'\n  });\n}\n\n//挂起流程\nfunction suspend(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Suspend/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n//恢复流程\nfunction restore(id, data) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/Restore/\".concat(id),\n    method: 'post',\n    data: data\n  });\n}\n\n//查看子流程\nfunction subFlowInfo(taskNodeId) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowBefore/SubFlowInfo/\".concat(taskNodeId),\n    method: 'get'\n  });\n}\n\n//事件日志\nfunction eventLog(taskNodeId) {\n  return (0, _request.default)({\n    url: \"/api/workflow/Engine/FlowMonitor/\".concat(taskNodeId, \"/EventLog\"),\n    method: 'get'\n  });\n}",null]}