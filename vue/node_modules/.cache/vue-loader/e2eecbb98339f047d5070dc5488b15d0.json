{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/msgCenter/msgTemplate/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/msgCenter/msgTemplate/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getMsgTemplateList, delMsgTemplate, copyMsgTemplate } from '@/api/msgCenter/msgTemplate'\nimport Form from './Form'\nimport Detail from './Detail'\nexport default {\n  name: 'msgCenter-msgTemplate',\n  components: { Form, Detail },\n  data() {\n    return {\n      keyword: '',\n      templateType: \"\",\n      templateTypeList: [\n        { fullName: \"系统模板\", enCode: '1' },\n        { fullName: \"自定义模板\", enCode: '0' }\n      ],\n      enabledMark: \"\",\n      enabledMarkList: [\n        { fullName: \"启用\", enCode: '1' },\n        { fullName: \"禁用\", enCode: '0' },\n      ],\n      msgType: \"\",\n      msgTypeList: [],\n      messageSource: \"\",\n      messageSourceList: [],\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n      },\n      formVisible: false,\n      viewVisible: false,\n      showAll: false,\n      enabledMarkLabel: '状\\u3000态'\n    }\n  },\n  created() {\n    this.initData()\n    this.getMsgTypeList()\n  },\n  methods: {\n    initData() {\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        keyword: this.keyword\n      }\n      getMsgTemplateList(query).then(res => {\n        this.list = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      })\n    },\n    getMsgTypeList() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'msgSendType' }).then((res) => {\n        this.msgTypeList = res\n      })\n      this.$store.dispatch('base/getDictionaryData', { sort: 'msgSourceType' }).then((res) => {\n        this.messageSourceList = res\n      })\n    },\n    search() {\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        templateType: this.templateType,\n        messageType: this.msgType,\n        enabledMark: this.enabledMark,\n        messageSource: this.messageSource,\n      }\n      this.initData()\n    },\n    reset() {\n      this.keyword = ''\n      this.templateType = \"\"\n      this.messageSource = \"\"\n      this.msgType = \"\"\n      this.enabledMark = \"\"\n      this.search()\n    },\n    handleDel(index, id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        delMsgTemplate(id).then(res => {\n          this.list.splice(index, 1)\n          this.total--\n          this.$message({\n            type: 'success',\n            message: res.msg\n          })\n        })\n      }).catch(() => { });\n    },\n    handleCopy(id) {\n      this.$confirm('您确定要复制该数据, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        copyMsgTemplate(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    handleView(id) {\n      this.viewVisible = true\n      this.$nextTick(() => {\n        this.$refs.View.init(id, this.msgTypeList)\n      })\n    },\n    /**\n     * 新增/修改 打开弹窗\n     * @param {*} id  编辑id\n     */\n    addEditTemplate(id) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.Form.init(id)\n      })\n    },\n    closeForm(isRefresh) {\n      this.formVisible = false\n      if (isRefresh) this.initData()\n    },\n    closeViewForm() {\n      this.viewVisible = false\n    }\n  }\n}\n",null]}