{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/menu/components/connectForm/DataTable.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/menu/components/connectForm/DataTable.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"regenerator-runtime/runtime\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/asyncToGenerator.js\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _resizeEvent = require(\"element-ui/src/utils/resize-event\");\nvar _dataModel = require(\"@/api/systemData/dataModel\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'dataTable',\n  inject: {\n    elForm: {\n      default: ''\n    },\n    elFormItem: {\n      default: ''\n    }\n  },\n  props: {\n    dbLinkId: {\n      default: ''\n    },\n    value: {\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '请选择'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    collapseTags: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    size: String\n  },\n  data: function data() {\n    return (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({\n      treeData: [],\n      allList: [],\n      keyword: '',\n      innerValue: '',\n      visible: false,\n      loading: false,\n      props: {\n        children: 'children',\n        label: 'table',\n        isLeaf: 'isLeaf'\n      },\n      listLoading: true\n    }, \"keyword\", \"\"), \"list\", []), \"checked\", \"\"), \"checkedList\", []), \"selectedData\", []), \"tagsList\", []), \"inputHovering\", false), \"inputWidth\", 0), \"initialInputHeight\", 0);\n  },\n  computed: {\n    showClose: function showClose() {\n      var hasValue = this.multiple ? Array.isArray(this.value) && this.value.length > 0 : this.value !== undefined && this.value !== null && this.value !== '';\n      var criteria = this.clearable && !this.selectDisabled && this.inputHovering && hasValue;\n      return criteria;\n    },\n    currentPlaceholder: function currentPlaceholder() {\n      if (this.multiple && Array.isArray(this.value) && this.value.length) {\n        return '';\n      } else {\n        return this.placeholder;\n      }\n    },\n    selectDisabled: function selectDisabled() {\n      return this.disabled || (this.elForm || {}).disabled;\n    },\n    _elFormItemSize: function _elFormItemSize() {\n      return (this.elFormItem || {}).elFormItemSize;\n    },\n    selectSize: function selectSize() {\n      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n    },\n    collapseTagSize: function collapseTagSize() {\n      return ['small', 'mini'].indexOf(this.selectSize) > -1 ? 'mini' : 'small';\n    }\n  },\n  created: function created() {\n    this.getData();\n  },\n  mounted: function mounted() {\n    var _this = this;\n    (0, _resizeEvent.addResizeListener)(this.$el, this.handleResize);\n    var reference = this.$refs.reference;\n    if (reference && reference.$el) {\n      var sizeMap = {\n        medium: 36,\n        small: 32,\n        mini: 28\n      };\n      var input = reference.$el.querySelector('input');\n      this.initialInputHeight = input.getBoundingClientRect().height || sizeMap[this.selectSize];\n    }\n    if (this.multiple) {\n      this.resetInputHeight();\n    }\n    this.$nextTick(function () {\n      if (reference && reference.$el) {\n        _this.inputWidth = reference.$el.getBoundingClientRect().width;\n      }\n    });\n    this.setDefault();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$el && this.handleResize) (0, _resizeEvent.removeResizeListener)(this.$el, this.handleResize);\n  },\n  watch: {\n    value: function value(val) {\n      this.setDefault();\n    },\n    selectDisabled: function selectDisabled() {\n      var _this2 = this;\n      this.$nextTick(function () {\n        _this2.resetInputHeight();\n      });\n    }\n  },\n  methods: (0, _defineProperty2.default)((0, _defineProperty2.default)({\n    getData: function () {\n      var _getData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n        var dbLinkId;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              dbLinkId = this.dbLinkId || \"0\";\n              (0, _dataModel.DataModelList)(dbLinkId, {\n                keyword: this.keyword,\n                currentPage: 1,\n                pageSize: 1000000\n              }).then(function (res) {\n                _this3.allList = res.data.list;\n                _this3.setDefault();\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n      return getData;\n    }(),\n    echoTable: function echoTable(rows) {\n      var _this4 = this;\n      rows.forEach(function (row) {\n        _this4.$refs.multipleTable.$refs.JNPFTable.toggleRowSelection(row, true);\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.checked = \"\";\n      this.selectedData = [];\n      this.$emit(\"update:visible\", false);\n    },\n    onCloseVisible: function onCloseVisible() {\n      var _this5 = this;\n      if (this.allList.length && this.selectedData.length) {\n        this.$nextTick(function () {\n          var selData = [];\n          _this5.allList.forEach(function (i) {\n            // 循环嵌套\n            _this5.selectedData.forEach(function (item) {\n              if (i.table === item.table) {\n                // 判断哪些数据是需要回显的\n                selData.push(i); // 需要回显的数据整合起来               \n              }\n            });\n          });\n          _this5.echoTable(selData); // 调用回显方法\n        });\n      }\n      this.visible = false;\n    },\n    refresh: function refresh() {\n      this.keyword = \"\";\n      this.initData();\n    },\n    initData: function initData() {\n      var _this6 = this;\n      this.getData();\n      this.listLoading = true;\n      var dbLinkId = this.dbLinkId || \"0\";\n      (0, _dataModel.DataModelList)(dbLinkId, {\n        keyword: this.keyword,\n        currentPage: 1,\n        pageSize: 1000000\n      }).then(function (res) {\n        _this6.list = res.data.list;\n        _this6.listLoading = false;\n        if (_this6.list.length && _this6.selectedData.length) {\n          _this6.$nextTick(function () {\n            var selData = [];\n            _this6.list.forEach(function (i) {\n              // 循环嵌套\n              _this6.selectedData.forEach(function (item) {\n                if (i.table === item.table) {\n                  // 判断哪些数据是需要回显的\n                  selData.push(i); // 需要回显的数据整合起来               \n                }\n              });\n            });\n            _this6.echoTable(selData); // 调用回显方法\n          });\n        }\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      if (val.length > 0) {\n        this.selectedData = val;\n      }\n    },\n    onClose: function onClose() {},\n    openDialog: function openDialog() {\n      if (this.selectDisabled) return;\n      this.refresh();\n      this.setDefault();\n      this.visible = true;\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data[this.props.label].indexOf(value) !== -1;\n    },\n    removeAll: function removeAll() {\n      this.selectedData = [];\n    },\n    removeData: function removeData(index) {\n      this.selectedData.splice(index, 1);\n    },\n    confirm: function confirm() {\n      if (this.multiple) {\n        this.innerValue = '';\n        this.tagsList = JSON.parse(JSON.stringify(this.selectedData));\n        var selectedIds = this.selectedData.map(function (o) {\n          return o.table;\n        });\n        this.$emit('input', selectedIds);\n        this.$emit('change', selectedIds, this.selectedData);\n      }\n      this.visible = false;\n    },\n    setDefault: function setDefault() {\n      var _this7 = this;\n      if (!this.value || !this.value.length) {\n        this.innerValue = '';\n        this.selectedData = [];\n        this.tagsList = [];\n        return;\n      }\n      var arr = this.multiple ? this.value : [this.value];\n      var selectedData = [];\n      for (var i = 0; i < arr.length; i++) {\n        var item = arr[i];\n        inner: for (var j = 0; j < this.allList.length; j++) {\n          if (item === this.allList[j].table) {\n            selectedData.push(this.allList[j]);\n            break inner;\n          }\n        }\n      }\n      this.selectedData = selectedData;\n      if (this.multiple) {\n        this.innerValue = '';\n        this.tagsList = JSON.parse(JSON.stringify(this.selectedData));\n        this.$nextTick(function () {\n          _this7.resetInputHeight();\n        });\n      } else {\n        if (!this.selectedData.length) return this.innerValue = '';\n        this.innerValue = this.selectedData[0].table;\n      }\n    },\n    deleteTag: function deleteTag(event, index) {\n      this.selectedData.splice(index, 1);\n      this.confirm();\n      event.stopPropagation();\n    },\n    handleClearClick: function handleClearClick(event) {\n      this.selectedData = [];\n      this.confirm();\n      event.stopPropagation();\n    },\n    resetInputWidth: function resetInputWidth() {\n      this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;\n    },\n    handleResize: function handleResize() {\n      this.resetInputWidth();\n      if (this.multiple) this.resetInputHeight();\n    },\n    resetInputHeight: function resetInputHeight() {\n      var _this8 = this;\n      if (this.collapseTags) return;\n      this.$nextTick(function () {\n        if (!_this8.$refs.reference) return;\n        var inputChildNodes = _this8.$refs.reference.$el.childNodes;\n        var input = [].filter.call(inputChildNodes, function (item) {\n          return item.tagName === 'INPUT';\n        })[0];\n        var tags = _this8.$refs.tags;\n        var tagsHeight = tags ? Math.round(tags.getBoundingClientRect().height) : 0;\n        var sizeInMap = _this8.initialInputHeight || 40;\n        input.style.height = _this8.selectedData.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tagsHeight + (tagsHeight > sizeInMap ? 6 : 0) : 0, sizeInMap) + 'px';\n      });\n    }\n  }, \"resetInputWidth\", function resetInputWidth() {\n    this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;\n  }), \"handleResize\", function handleResize() {\n    this.resetInputWidth();\n    if (this.multiple) this.resetInputHeight();\n  })\n};",null]}