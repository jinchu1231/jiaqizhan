{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/components/Comment.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/components/Comment.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getCommentList, createComment, delComment } from '@/api/workFlow/FlowEngine'\nimport { getDownloadUrl } from '@/api/common'\nimport Preview from '@/components/Jnpf/Upload/Preview'\nimport FileUploader from './FileUploader'\n\nexport default {\n  name: 'comments',\n  components: { Preview, FileUploader },\n  props: {\n    id: { type: String, default: '' },\n  },\n  data() {\n    return {\n      list: [],\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      },\n      total: 0,\n      listLoading: false,\n      btnLoading: false,\n      dataRule: {},\n      dataForm: {\n        text: '',\n        file: [],\n        image: [],\n      },\n      dialogVisible: false,\n      finish: false,\n      uploadHeaders: { Authorization: this.$store.getters.token },\n      imgUploading: false,\n      previewVisible: false,\n      fileAccept: '.xls,.xlsx,.doc,.docx,.pdf,.txt,.ppt,.pptx',\n      activeFile: {}\n    }\n  },\n  methods: {\n    init() {\n      this.list = []\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      }\n      this.finish = false\n      this.initData()\n      this.$nextTick(() => {\n        this.bindScroll()\n      })\n    },\n    bindScroll() {\n      let _this = this,\n        vBody = _this.$refs.infiniteBody;\n      vBody.addEventListener(\"scroll\", function () {\n        if (vBody.scrollHeight - vBody.clientHeight - vBody.scrollTop <= 600 && !_this.listLoading && !_this.finish) {\n          _this.listQuery.currentPage += 1\n          _this.initData()\n        }\n      });\n    },\n    initData() {\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        taskId: this.id\n      }\n      getCommentList(query).then(res => {\n        let list = res.data.list.map(o => ({\n          ...o,\n          fileList: o.file ? JSON.parse(o.file) : [],\n          imageList: o.image ? JSON.parse(o.image) : [],\n        }))\n        if (res.data.list.length < this.listQuery.pageSize) {\n          this.finish = true\n        }\n        this.list = [...this.list, ...list]\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      }).catch(() => {\n        this.listLoading = false\n      })\n    },\n    showCommentDialog() {\n      this.dialogVisible = true\n      this.dataForm.image = []\n      this.dataForm.file = []\n      this.$nextTick(() => {\n        this.$refs.elUploadImg.uploadFiles = []\n        this.$refs['dataForm'].resetFields()\n      })\n    },\n    getImgList(list) {\n      const newList = list.map(o => this.define.comUrl + o.url)\n      return newList\n    },\n    addComment() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          let query = {\n            text: this.dataForm.text,\n            file: JSON.stringify(this.dataForm.file),\n            image: JSON.stringify(this.dataForm.image),\n            taskId: this.id\n          }\n          createComment(query).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.dialogVisible = false\n                this.btnLoading = false\n                this.init()\n              }\n            })\n          }).catch(() => { this.btnLoading = false })\n        }\n      })\n    },\n    delComment(id, index) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        delComment(id).then(res => {\n          this.list.splice(index, 1)\n          this.$message({\n            type: 'success',\n            message: res.msg\n          })\n        })\n      }).catch(() => { });\n    },\n    beforeImgUpload(file) {\n      let isRightSize = file.size < 50 * 1024 * 1024\n      if (!isRightSize) {\n        this.$message.error(`图片大小超过50MB`)\n        return isRightSize;\n      }\n      let isAccept = new RegExp('image/*').test(file.type)\n      if (!isAccept) {\n        this.$message.error(`请上传图片`)\n        return isAccept;\n      }\n      if (isRightSize && isAccept) this.imgUploading = true\n      return isRightSize && isAccept;\n    },\n    handleImgSuccess(res, file, fileList) {\n      if (res.code == 200) {\n        this.dataForm.image.push({\n          name: file.name,\n          fileId: res.data.name,\n          url: res.data.url,\n          thumbUrl: res.data.thumbUrl,\n        })\n      } else {\n        this.$refs.elUploadImg.uploadFiles.splice(fileList.length - 1, 1)\n        fileList.filter(o => o.uid != file.uid)\n        this.$message({ message: res.msg, type: 'error', duration: 1500 })\n      }\n      this.imgUploading = false\n    },\n    handleImgExceed(files, fileList) {\n      this.$message.warning(`当前限制最多可以上传9张图片`)\n    },\n    handleImgRemove(index) {\n      this.dataForm.image.splice(index, 1)\n      this.$refs.elUploadImg.uploadFiles.splice(index, 1)\n    },\n    uploadFile() {\n      const isTopLimit = this.dataForm.file.length >= 2\n      if (isTopLimit) {\n        this.$message.error(`当前限制最多可以上传2个文件`)\n        return false\n      }\n      this.$refs.fileUploader && this.$refs.fileUploader.openUploader()\n    },\n    fileSuccess(data) {\n      const isTopLimit = this.dataForm.file.length >= 2\n      if (isTopLimit) {\n        this.$message.error(`当前限制最多可以上传2个文件`)\n        return false\n      }\n      this.dataForm.file.push(data)\n    },\n    handleFileRemove(index) {\n      this.dataForm.file.splice(index, 1)\n    },\n    handleFileClick(file) {\n      if (!file.fileId) return\n      getDownloadUrl('annex', file.fileId).then(res => {\n        this.jnpf.downloadFile(res.data.url, file.name)\n      })\n    },\n    handleFilePreview(file) {\n      this.activeFile = file\n      this.previewVisible = true\n    }\n  }\n}\n",null]}