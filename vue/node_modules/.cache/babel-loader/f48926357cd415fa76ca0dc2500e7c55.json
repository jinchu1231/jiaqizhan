{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/ChangeField/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ChangeField/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = exports.default = {\n  props: {\n    type: {\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '请选择'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    collapseTags: {\n      type: Boolean,\n      default: false\n    },\n    selectedList: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    list: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    size: String\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  data: function data() {\n    return (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      },\n      treeData: [],\n      allList: [],\n      keyword: '',\n      innerValue: '',\n      visible: false,\n      loading: false,\n      props: {\n        children: 'children',\n        label: 'table',\n        isLeaf: 'isLeaf'\n      },\n      listLoading: false\n    }, \"keyword\", \"\"), \"checked\", \"\"), \"checkedList\", []), \"selectedData\", []), \"tagsList\", []), \"inputHovering\", false), \"inputWidth\", 0), \"initialInputHeight\", 0), \"total\", 0);\n  },\n  computed: {\n    showClose: function showClose() {\n      var hasValue = this.value !== undefined && this.value !== null && this.value !== '';\n      var criteria = this.clearable && !this.disabled && this.inputHovering && hasValue;\n      return criteria;\n    }\n  },\n  created: function created() {},\n  watch: {\n    selectDisabled: function selectDisabled() {\n      var _this = this;\n      this.$nextTick(function () {\n        _this.resetInputHeight();\n      });\n    }\n  },\n  methods: (0, _defineProperty2.default)((0, _defineProperty2.default)({\n    echoTable: function echoTable(rows) {\n      var _this2 = this;\n      rows.forEach(function (row) {\n        _this2.$refs.multipleTable.$refs.JNPFTable.toggleRowSelection(row, true);\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.checked = \"\";\n      this.selectedData = [];\n      this.$emit(\"update:visible\", false);\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.selectedData = val;\n    },\n    onClose: function onClose() {},\n    openDialog: function openDialog() {\n      var _this3 = this;\n      if (this.selectDisabled) return;\n      this.selectedData = this.selectedList;\n      if (!this.selectedData.length) this.selectedData = [];\n      this.visible = true;\n      this.$nextTick(function () {\n        if (_this3.list) {\n          _this3.list.forEach(function (i) {\n            _this3.$refs.multipleTable.$refs.JNPFTable.toggleRowSelection(i, false);\n          });\n        }\n        if (_this3.list.length && _this3.selectedList.length) {\n          var selData = [];\n          _this3.list.forEach(function (i) {\n            // 循环嵌套\n            _this3.selectedList.forEach(function (item) {\n              if (i.__vModel__ == item.__vModel__) {\n                // 判断哪些数据是需要回显的\n                selData.push(i);\n              }\n            });\n          });\n          _this3.echoTable(selData); // 调用回显方法\n        }\n      });\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data[this.props.label].indexOf(value) !== -1;\n    },\n    confirm: function confirm() {\n      if (this.multiple) {\n        this.innerValue = '';\n        this.tagsList = JSON.parse(JSON.stringify(this.selectedData));\n        var selectedIds = this.selectedData.map(function (o) {\n          return o.id;\n        });\n        this.$emit('input', selectedIds);\n        this.$emit('change', selectedIds, this.selectedData);\n        this.$emit('changeField', this.selectedData);\n      }\n      this.visible = false;\n    },\n    deleteTag: function deleteTag(event, index) {\n      this.selectedData.splice(index, 1);\n      this.confirm();\n      event.stopPropagation();\n    },\n    handleClearClick: function handleClearClick(event) {\n      this.selectedData = [];\n      this.confirm();\n      event.stopPropagation();\n    },\n    resetInputWidth: function resetInputWidth() {\n      this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;\n    },\n    handleResize: function handleResize() {\n      this.resetInputWidth();\n      if (this.multiple) this.resetInputHeight();\n    },\n    resetInputHeight: function resetInputHeight() {\n      var _this4 = this;\n      if (this.collapseTags) return;\n      this.$nextTick(function () {\n        if (!_this4.$refs.reference) return;\n        var inputChildNodes = _this4.$refs.reference.$el.childNodes;\n        var input = [].filter.call(inputChildNodes, function (item) {\n          return item.tagName === 'INPUT';\n        })[0];\n        var tags = _this4.$refs.tags;\n        var tagsHeight = tags ? Math.round(tags.getBoundingClientRect().height) : 0;\n        var sizeInMap = _this4.initialInputHeight || 40;\n        input.style.height = _this4.selectedData.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tagsHeight + (tagsHeight > sizeInMap ? 6 : 0) : 0, sizeInMap) + 'px';\n      });\n    }\n  }, \"resetInputWidth\", function resetInputWidth() {\n    this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;\n  }), \"handleResize\", function handleResize() {\n    this.resetInputWidth();\n    if (this.multiple) this.resetInputHeight();\n  })\n};",null]}