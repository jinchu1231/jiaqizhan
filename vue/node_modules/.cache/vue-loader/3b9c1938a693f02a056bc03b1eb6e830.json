{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/onlineDev/integrate/log/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/onlineDev/integrate/log/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getTaskList, retryTask, delTask } from '@/api/onlineDev/integrate'\n\nimport Detail from './Detail'\nexport default {\n  components: { Detail },\n  data() {\n    return {\n      integrateId: '',\n      title: '',\n      list: [],\n      total: 0,\n      listLoading: false,\n      listQuery: {\n        resultType: '',\n        startTime: '',\n        endTime: '',\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const start = new Date()\n            const end = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const start = new Date()\n            const end = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const start = new Date()\n            const end = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n            picker.$emit('pick', [start, end])\n          }\n        }]\n      },\n      pickerVal: [],\n      detailVisible: false\n    }\n  },\n  methods: {\n    goBack() {\n      this.$emit('close')\n    },\n    Detail(id) {\n      this.detailVisible = true\n      this.$nextTick(() => {\n        this.$refs.Detail.openDialog(id)\n      })\n    },\n    updateNodes() {\n      this.$emit('updateNodes', this.integrateId);\n      this.goBack()\n    },\n    handleDetail(id) {\n      this.$confirm('确定将本实例进行删除?', this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        delTask(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    handleRedo(id) {\n      this.$confirm('确定将本实例进行重试?', this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        retryTask(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    init(data) {\n      this.integrateId = data.id\n      this.title = data.fullName\n      this.initData()\n    },\n    initData() {\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        integrateId: this.integrateId\n      }\n      getTaskList(query).then(res => {\n        this.list = res.data.list\n        this.total = res.data.pagination.total\n      })\n      this.listLoading = false\n    },\n    search() {\n      if (this.pickerVal && this.pickerVal.length) {\n        this.listQuery.startTime = this.pickerVal[0]\n        this.listQuery.endTime = this.pickerVal[1]\n      } else {\n        this.listQuery.startTime = ''\n        this.listQuery.endTime = ''\n      }\n      this.listQuery.currentPage = 1\n      this.listQuery.pageSize = 20\n      this.listQuery.sort = 'desc'\n      this.initData()\n    },\n    reset() {\n      this.pickerVal = []\n      this.listQuery.resultType = ''\n      this.search()\n    },\n  }\n}\n",null]}