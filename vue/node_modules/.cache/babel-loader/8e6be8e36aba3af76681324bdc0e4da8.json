{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/components/CandidateForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/components/CandidateForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _CandidateUserSelect = _interopRequireDefault(require(\"./CandidateUserSelect\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    CandidateUserSelect: _CandidateUserSelect.default\n  },\n  props: ['candidateList', 'branchList', 'taskId', 'formData', 'isCustomCopy'],\n  data: function data() {\n    return {\n      candidateForm: {\n        copyIds: [],\n        branchList: [],\n        candidateList: []\n      },\n      btnLoading: false\n    };\n  },\n  methods: {\n    onOpen: function onOpen() {\n      var _this = this;\n      this.btnLoading = false;\n      this.candidateForm.candidateList = this.candidateList.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          isDefault: true,\n          label: '审批人',\n          value: [],\n          rules: [{\n            required: true,\n            message: \"\\u5BA1\\u6279\\u4EBA\\u4E0D\\u80FD\\u4E3A\\u7A7A\",\n            trigger: 'click'\n          }]\n        });\n      });\n      this.candidateForm.branchList = [];\n      this.$nextTick(function () {\n        _this.$refs['candidateForm'].resetFields();\n      });\n    },\n    onBranchChange: function onBranchChange(val) {\n      var defaultList = this.candidateForm.candidateList.filter(function (o) {\n        return o.isDefault;\n      });\n      if (!val.length) return this.candidateForm.candidateList = defaultList;\n      var list = [];\n      for (var i = 0; i < val.length; i++) {\n        inner: for (var j = 0; j < this.branchList.length; j++) {\n          var o = this.branchList[j];\n          if (val[i] === o.nodeId && o.isCandidates) {\n            list.push(_objectSpread(_objectSpread({}, o), {}, {\n              label: '审批人',\n              value: [],\n              rules: [{\n                required: true,\n                message: \"\\u5BA1\\u6279\\u4EBA\\u4E0D\\u80FD\\u4E3A\\u7A7A\",\n                trigger: 'click'\n              }]\n            }));\n            break inner;\n          }\n        }\n      }\n      this.candidateForm.candidateList = [].concat((0, _toConsumableArray2.default)(defaultList), list);\n    },\n    submitCandidate: function submitCandidate() {\n      var _this2 = this;\n      this.$refs['candidateForm'].validate(function (valid) {\n        if (valid) {\n          _this2.btnLoading = true;\n          var candidateList = {};\n          for (var i = 0; i < _this2.candidateForm.candidateList.length; i++) {\n            candidateList[_this2.candidateForm.candidateList[i].nodeId] = _this2.candidateForm.candidateList[i].value;\n          }\n          _this2.$emit('submitCandidate', {\n            candidateList: candidateList,\n            branchList: _this2.candidateForm.branchList,\n            copyIds: _this2.candidateForm.copyIds.join(',')\n          });\n        }\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.$emit('update:visible', false);\n    }\n  }\n};",null]}