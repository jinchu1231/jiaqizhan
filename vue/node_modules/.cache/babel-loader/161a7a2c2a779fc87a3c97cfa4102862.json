{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/extend/order/Detail.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/order/Detail.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.replace\");\nrequire(\"core-js/modules/es6.number.constructor\");\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _order = require(\"@/api/extend/order\");\nvar _workFlowForm = require(\"@/api/workFlow/workFlowForm\");\nvar _common = require(\"@/api/common\");\nvar _printStyle = _interopRequireDefault(require(\"../printData/printStyle\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      printId: 'myTable1',\n      activeName: 'goods',\n      dataForm: {\n        id: '',\n        customerName: '',\n        salesmanId: '',\n        orderDate: '',\n        orderCode: '',\n        paymentMode: '',\n        receivableMoney: 0,\n        earnestRate: 0,\n        prepayEarnest: 0,\n        transportMode: '',\n        deliveryDate: '',\n        deliveryAddress: '',\n        description: '',\n        customerId: '',\n        salesmanName: ''\n      },\n      dataRule: {},\n      list: [],\n      planList: [],\n      loading: true,\n      fileList: []\n    };\n  },\n  methods: {\n    print2: function print2() {\n      window.document.body.innerHTML = this.detiel.list2 + this.detiel.list + _printStyle.default;\n      window.print();\n      window.location.reload();\n    },\n    goBack: function goBack() {\n      this.$emit('close');\n    },\n    handleClick: function handleClick(tab, event) {\n      if (tab.index == '1') {\n        this.printId = 'myTable2';\n      } else {\n        this.printId = 'myTable1';\n      }\n    },\n    init: function init(id) {\n      var _this = this;\n      this.dataForm.id = id || '';\n      this.loading = true;\n      this.$nextTick(function () {\n        if (_this.dataForm.id) {\n          _this.$refs['dataForm'].resetFields();\n          (0, _workFlowForm.Info)('crmOrder', _this.dataForm.id).then(function (res) {\n            _this.dataForm = res.data;\n            _this.dataForm.orderDate = _this.jnpf.toDate(_this.dataForm.orderDate);\n            _this.dataForm.deliveryDate = _this.jnpf.toDate(_this.dataForm.deliveryDate, \"yyyy-MM-dd\");\n            _this.list = res.data.goodsList;\n            _this.planList = res.data.collectionPlanList;\n            _this.fileList = JSON.parse(_this.dataForm.fileJson);\n            for (var i = 0; i < _this.fileList.length; i++) {\n              _this.$set(_this.fileList[i], 'name', _this.fileList[i].fileName);\n            }\n            _this.loading = false;\n          });\n        }\n      });\n    },\n    prev: function prev() {\n      var _this2 = this;\n      this.loading = true;\n      (0, _order.PrevInfo)(this.dataForm.id).then(function (res) {\n        if (!res.data) {\n          _this2.loading = false;\n          _this2.$message({\n            message: '第一单了哦',\n            type: 'warning',\n            duration: 1500\n          });\n          return;\n        }\n        _this2.dataForm = res.data;\n        _this2.dataForm.orderDate = _this2.jnpf.toDate(_this2.dataForm.orderDate);\n        _this2.dataForm.deliveryDate = _this2.jnpf.toDate(_this2.dataForm.deliveryDate, \"yyyy-MM-dd\");\n        _this2.list = res.data.goodsList;\n        _this2.planList = res.data.collectionPlanList;\n        _this2.fileList = JSON.parse(_this2.dataForm.fileJson);\n        for (var i = 0; i < _this2.fileList.length; i++) {\n          _this2.$set(_this2.fileList[i], 'name', _this2.fileList[i].fileName);\n        }\n        _this2.loading = false;\n      });\n    },\n    next: function next() {\n      var _this3 = this;\n      this.loading = true;\n      (0, _order.NextInfo)(this.dataForm.id).then(function (res) {\n        if (!res.data) {\n          _this3.loading = false;\n          _this3.$message({\n            message: '最后一单了哦',\n            type: 'warning',\n            duration: 1500\n          });\n          return;\n        }\n        _this3.dataForm = res.data;\n        _this3.dataForm.orderDate = _this3.jnpf.toDate(_this3.dataForm.orderDate);\n        _this3.dataForm.deliveryDate = _this3.jnpf.toDate(_this3.dataForm.deliveryDate, \"yyyy-MM-dd\");\n        _this3.list = res.data.goodsList;\n        _this3.planList = res.data.collectionPlanList;\n        _this3.fileList = JSON.parse(_this3.dataForm.fileJson);\n        for (var i = 0; i < _this3.fileList.length; i++) {\n          _this3.$set(_this3.fileList[i], 'name', _this3.fileList[i].fileName);\n        }\n        _this3.loading = false;\n      });\n    },\n    getSummaries: function getSummaries(param) {\n      var columns = param.columns,\n        data = param.data;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '合计';\n          return;\n        }\n        if (index === 1) {\n          sums[index] = '';\n          return;\n        }\n        var values = data.map(function (item) {\n          return Number(item[column.property]);\n        });\n        if (!values.every(function (value) {\n          return isNaN(value);\n        })) {\n          sums[index] = values.reduce(function (prev, curr) {\n            var value = Number(curr);\n            if (!isNaN(value)) {\n              return prev + curr;\n            } else {\n              return prev;\n            }\n          }, 0);\n        } else {\n          sums[index] = '';\n        }\n      });\n      return sums;\n    },\n    exportExcel: function exportExcel() {\n      var _this4 = this;\n      (0, _order.ExportExcel)(this.dataForm.id).then(function (res) {\n        if (res.data && res.data.url) {\n          _this4.jnpf.downloadFile(res.data.url);\n        } else {\n          _this4.$message({\n            message: '导出失败',\n            type: 'error',\n            duration: 1500\n          });\n        }\n      });\n    },\n    // 打印\n    print: function print() {\n      var tabStyle = \"<style>\\n          table{width:100%;display:table-cell!important;box-sizing:border-box;}\\n          .el-table__header,.el-table__body,.el-table__footer{width:100%!important;border-collapse: collapse;text-align:center;}\\n          table, table tr td { border:1px solid #333;color:#606266;word-wrap:break-word}\\n          table tr th,table tr td{padding:4mm 0mm;word-wrap:break-word }\\n          table thead{border-bottom:0!important;display:none;}\\n          .el-table__body, tr td .cell{width:100%!important}\\n          .el-table th.gutter{display: none;}\\n          .el-table colgroup.gutter{display: none;}                \\n          </style><body>\";\n      // 表单数据\n      var printForm = this.$refs.print1.innerHTML;\n      var id = this.printId;\n      // 表格数据\n      var html = document.querySelector('#' + id).innerHTML;\n      // 新建一个 DOM\n      var div = document.createElement('div');\n      var printDOMID = 'printDOMElement';\n      div.id = printDOMID;\n      div.innerHTML = html;\n      // 提取第3个表格的内容\n      // const ths1 = div.querySelectorAll('.el-table__footer tbody tr td .cell')\n      // const ThsTextArry1 = []\n      // for (let i = 0, len = ths1.length; i < len; i++) {\n      //   if (ths1[i].innerText !== '') ThsTextArry1.push(ths1[i].innerText)\n      // }\n      // 提取第一个表格的内容 即表头\n      var ths = div.querySelectorAll('.el-table__header-wrapper th');\n      var ThsTextArry = [];\n      for (var i = 0, len = ths.length; i < len; i++) {\n        if (ths[i].innerText !== '') ThsTextArry.push(ths[i].innerText);\n      }\n      // 删除多余的表头\n      div.querySelector('.hidden-columns').remove();\n      div.querySelector('.has-gutter').remove();\n\n      //  删掉第一个表格的内容\n      div.querySelector('.el-table__header-wrapper').remove();\n      // 删除第三个表格的内容\n      div.querySelector('.el-table__footer-wrapper').remove();\n      //取出表头放到tr里面\n      var newHTML = '<tr>';\n      for (var _i = 0, _len = ThsTextArry.length; _i < _len; _i++) {\n        newHTML += '<td style=\"text-align: center; font-weight : bold;padding:10px;\">' + ThsTextArry[_i] + '</td>';\n      }\n      newHTML += '</tr>';\n      //合计取出表头放到tr里面\n      // let newHTML1 = '<tr>'\n      // for (let i = 0, len = ThsTextArry1.length; i < len; i++) {\n      //   newHTML1 += '<td style=\"text-align: center; font-weight: bold;padding:10px;\">' + ThsTextArry1[i] + '</td>'\n      // }\n      // newHTML1 += '</tr>'\n      var printStr = \"<html><head><meta http-equiv='Content-Type' content='text/html; charset=utf-8'></head>\";\n      var content = \"\";\n      var print = document.getElementById(id).innerHTML;\n      content = content + print;\n      var content1 = content.replace('<tbody>', '<tbody>' + newHTML);\n      // let content2 = content.replace('</tbody>', newHTML1 + '</tbody>')\n      var printPart1 = printStr + tabStyle + content1 + \"</body></html>\";\n      // 打印方法\n      var printPart = printForm + printPart1 + _printStyle.default;\n      var newTab = window.open('_blank');\n      newTab.document.body.innerHTML = printPart;\n      newTab.print();\n      newTab.close();\n    },\n    download: function download(id) {\n      var _this5 = this;\n      (0, _common.getDownloadUrl)('workFlow', id).then(function (res) {\n        _this5.jnpf.downloadFile(res.data.url);\n      });\n    }\n  }\n};",null]}