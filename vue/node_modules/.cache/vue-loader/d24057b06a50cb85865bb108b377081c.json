{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/onlineDev/visualPortal/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/onlineDev/visualPortal/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getPortalInfo, Update, Create } from '@/api/onlineDev/portal'\nimport PortalDesign from '@/components/VisualPortal/PortalDesign'\nimport { validURL } from '@/utils/validate'\nexport default {\n  components: { PortalDesign },\n  data() {\n    var validateUrl = (rule, value, callback) => {\n      if (this.dataForm.linkType == 1 && !validURL(value)) callback(new Error('请输入正确的链接地址'));\n      callback();\n    };\n    return {\n      visible: false,\n      loading: false,\n      btnLoading: false,\n      categoryList: [],\n      dataForm: {\n        id: '',\n        fullName: '',\n        enCode: '',\n        sortCode: 0,\n        type: 0,\n        linkType: 0,\n        customUrl: '',\n        category: '',\n        description: \"\",\n        enabledLock: 1,\n        appCustomUrl: '',\n        enabledMark: 1\n      },\n      designBtnLoading: false,\n      dataRule: {\n        fullName: [\n          { required: true, message: '门户名称不能为空', trigger: 'blur' },\n        ],\n        enCode: [\n          { required: true, message: '门户编码不能为空', trigger: 'blur' },\n          { validator: this.formValidate('enCode'), trigger: 'blur' },\n        ],\n        type: [\n          { required: true, message: '类型不能为空', trigger: 'change' },\n        ],\n        category: [\n          { required: true, message: '门户分类不能为空', trigger: 'change' },\n        ],\n        linkType: [\n          { required: true, message: '链接类型不能为空', trigger: 'change' },\n        ],\n        customUrl: [\n          { required: true, message: '链接地址不能为空', trigger: 'blur' },\n          { validator: validateUrl, trigger: 'blur' }\n        ],\n      }\n    }\n  },\n  methods: {\n    init(categoryList, id) {\n      this.categoryList = categoryList\n      this.dataForm.id = id || ''\n      this.visible = true\n      this.btnLoading = false\n      this.designBtnLoading = false\n      this.dataForm.formData = null\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        if (this.dataForm.id) {\n          this.loading = true\n          getPortalInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.loading = false\n          }).catch(() => {\n            this.loading = false\n            this.designBtnLoading = false\n          })\n        } else {\n          this.dataForm.customUrl = ''\n          this.dataForm.linkType = 0\n        }\n      })\n    },\n    changeType() {\n      this.dataForm.enabledLock = 1\n      this.dataForm.customUrl = ''\n    },\n    changeLinkType() {\n      this.dataForm.customUrl = ''\n    },\n    dataFormSubmit(type) {\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) return\n        if (type) {\n          this.designBtnLoading = true\n        } else {\n          this.btnLoading = true\n        }\n        const formMethod = this.dataForm.id ? Update : Create\n        formMethod(this.dataForm).then((res) => {\n          this.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: () => {\n              this.btnLoading = false\n              this.visible = false\n              this.$emit('close', true)\n              if (!this.dataForm.id) this.dataForm.id = res.data\n              if (type == 1) this.$emit('initPortalDesign', this.dataForm)\n            }\n          })\n        }).catch(() => {\n          this.btnLoading = false\n          this.designBtnLoading = false\n        })\n      })\n    }\n  }\n}\n",null]}