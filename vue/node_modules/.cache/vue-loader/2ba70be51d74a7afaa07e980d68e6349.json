{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RCheckbox.vue?vue&type=template&id=76eba4df&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RCheckbox.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-row\",\n    [\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"控件标题\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { placeholder: \"请输入控件标题\" },\n            model: {\n              value: _vm.activeData.__config__.label,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"label\", $$v)\n              },\n              expression: \"activeData.__config__.label\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"显示标题\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.__config__.showLabel,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"showLabel\", $$v)\n              },\n              expression: \"activeData.__config__.showLabel\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"标题提示\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { type: \"textarea\", rows: 2, placeholder: \"请输入标题提示\" },\n            model: {\n              value: _vm.activeData.__config__.tipLabel,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"tipLabel\", $$v)\n              },\n              expression: \"activeData.__config__.tipLabel\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"默认值\" } },\n        [\n          _c(\n            \"el-checkbox-group\",\n            {\n              attrs: { min: _vm.activeData.min, max: _vm.activeData.max },\n              model: {\n                value: _vm.activeData.__config__.defaultValue,\n                callback: function ($$v) {\n                  _vm.$set(_vm.activeData.__config__, \"defaultValue\", $$v)\n                },\n                expression: \"activeData.__config__.defaultValue\",\n              },\n            },\n            _vm._l(_vm.activeData.options, function (item, i) {\n              return _c(\n                \"el-checkbox\",\n                { key: i, attrs: { label: item[_vm.activeData.props.value] } },\n                [\n                  _vm._v(\n                    \"\\n        \" + _vm._s(item[_vm.activeData.props.label])\n                  ),\n                ]\n              )\n            }),\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"排列方式\" } },\n        [\n          _c(\n            \"el-radio-group\",\n            {\n              staticStyle: { \"text-align\": \"center\" },\n              attrs: { size: \"small\" },\n              model: {\n                value: _vm.activeData.direction,\n                callback: function ($$v) {\n                  _vm.$set(_vm.activeData, \"direction\", $$v)\n                },\n                expression: \"activeData.direction\",\n              },\n            },\n            [\n              _c(\"el-radio-button\", { attrs: { label: \"horizontal\" } }, [\n                _vm._v(\"水平排列\"),\n              ]),\n              _c(\"el-radio-button\", { attrs: { label: \"vertical\" } }, [\n                _vm._v(\"垂直排列\"),\n              ]),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\"el-divider\", [_vm._v(\"数据选项\")]),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"\", \"label-width\": \"40px\" } },\n        [\n          _c(\n            \"el-radio-group\",\n            {\n              staticStyle: { \"text-align\": \"center\" },\n              attrs: { size: \"small\" },\n              on: { change: _vm.dataTypeChange },\n              model: {\n                value: _vm.activeData.__config__.dataType,\n                callback: function ($$v) {\n                  _vm.$set(_vm.activeData.__config__, \"dataType\", $$v)\n                },\n                expression: \"activeData.__config__.dataType\",\n              },\n            },\n            [\n              _c(\"el-radio-button\", { attrs: { label: \"static\" } }, [\n                _vm._v(\"静态数据\"),\n              ]),\n              _c(\"el-radio-button\", { attrs: { label: \"dictionary\" } }, [\n                _vm._v(\"数据字典\"),\n              ]),\n              _c(\"el-radio-button\", { attrs: { label: \"dynamic\" } }, [\n                _vm._v(\"远端数据\"),\n              ]),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm.activeData.__config__.dataType === \"static\"\n        ? [\n            _c(\n              \"draggable\",\n              {\n                attrs: {\n                  list: _vm.activeData.options,\n                  animation: 340,\n                  group: \"selectItem\",\n                  handle: \".option-drag\",\n                },\n              },\n              _vm._l(_vm.activeData.options, function (item, index) {\n                return _c(\n                  \"div\",\n                  { key: index, staticClass: \"select-item\" },\n                  [\n                    _c(\"div\", { staticClass: \"select-line-icon option-drag\" }, [\n                      _c(\"i\", { staticClass: \"icon-ym icon-ym-darg\" }),\n                    ]),\n                    _c(\"el-input\", {\n                      attrs: { placeholder: \"选项名\", size: \"small\" },\n                      model: {\n                        value: item.fullName,\n                        callback: function ($$v) {\n                          _vm.$set(item, \"fullName\", $$v)\n                        },\n                        expression: \"item.fullName\",\n                      },\n                    }),\n                    _c(\"el-input\", {\n                      attrs: { placeholder: \"选项值\", size: \"small\" },\n                      model: {\n                        value: item.id,\n                        callback: function ($$v) {\n                          _vm.$set(item, \"id\", $$v)\n                        },\n                        expression: \"item.id\",\n                      },\n                    }),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"close-btn select-line-icon\",\n                        on: {\n                          click: function ($event) {\n                            return _vm.activeData.options.splice(index, 1)\n                          },\n                        },\n                      },\n                      [_c(\"i\", { staticClass: \"el-icon-remove-outline\" })]\n                    ),\n                  ],\n                  1\n                )\n              }),\n              0\n            ),\n            _c(\n              \"div\",\n              { staticStyle: { \"margin-left\": \"29px\" } },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    staticStyle: { \"padding-bottom\": \"0\" },\n                    attrs: {\n                      icon: \"el-icon-circle-plus-outline\",\n                      type: \"text\",\n                    },\n                    on: { click: _vm.addSelectItem },\n                  },\n                  [_vm._v(\"\\n        添加选项\\n      \")]\n                ),\n                _c(\"el-divider\", { attrs: { direction: \"vertical\" } }),\n                _c(\n                  \"el-button\",\n                  {\n                    staticStyle: { \"padding-bottom\": \"0\" },\n                    attrs: { type: \"text\" },\n                    on: { click: _vm.updateSelectItem },\n                  },\n                  [_vm._v(\"\\n        批量编辑\\n      \")]\n                ),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.activeData.__config__.dataType === \"dictionary\"\n        ? [\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"数据字典\" } },\n              [\n                _c(\n                  \"el-row\",\n                  { staticClass: \"jnpf-el-row\" },\n                  [\n                    _c(\n                      \"el-col\",\n                      { attrs: { span: 18 } },\n                      [\n                        _c(\"JnpfTreeSelect\", {\n                          attrs: {\n                            options: _vm.dicOptions,\n                            placeholder: \"请选择数据字典\",\n                            lastLevel: \"\",\n                            clearable: \"\",\n                          },\n                          on: {\n                            change: _vm.dictionaryTypeChange,\n                            selectChange: _vm.selectChange,\n                          },\n                          model: {\n                            value: _vm.activeData.__config__.dictionaryType,\n                            callback: function ($$v) {\n                              _vm.$set(\n                                _vm.activeData.__config__,\n                                \"dictionaryType\",\n                                $$v\n                              )\n                            },\n                            expression: \"activeData.__config__.dictionaryType\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-col\",\n                      { attrs: { span: 6 } },\n                      [\n                        _c(\n                          \"el-button\",\n                          {\n                            staticStyle: { float: \"right\" },\n                            on: {\n                              click: function ($event) {\n                                return _vm.goDictionary()\n                              },\n                            },\n                          },\n                          [_vm._v(\"\\n            添加\")]\n                        ),\n                      ],\n                      1\n                    ),\n                  ],\n                  1\n                ),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"存储字段\" } },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"请选择存储字段\" },\n                    model: {\n                      value: _vm.activeData.props.value,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData.props, \"value\", $$v)\n                      },\n                      expression: \"activeData.props.value\",\n                    },\n                  },\n                  [\n                    _c(\"el-option\", { attrs: { label: \"id\", value: \"id\" } }),\n                    _c(\"el-option\", {\n                      attrs: { label: \"enCode\", value: \"enCode\" },\n                    }),\n                  ],\n                  1\n                ),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.activeData.__config__.dataType === \"dynamic\"\n        ? [\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"远端数据\" } },\n              [\n                _c(\"interface-dialog\", {\n                  attrs: {\n                    value: _vm.activeData.__config__.propsUrl,\n                    title: _vm.activeData.__config__.propsName,\n                    popupTitle: \"远端数据\",\n                  },\n                  on: { change: _vm.propsUrlChange },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"存储字段\" } },\n              [\n                _c(\"el-autocomplete\", {\n                  staticClass: \"inline-input\",\n                  staticStyle: { width: \"100%\" },\n                  attrs: {\n                    \"fetch-suggestions\": _vm.querySearch,\n                    placeholder: \"请输入内容\",\n                  },\n                  on: {\n                    select: function ($event) {\n                      return _vm.handleSelect($event, \"value\")\n                    },\n                  },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function (ref) {\n                          var item = ref.item\n                          return [\n                            _c(\n                              \"div\",\n                              { staticClass: \"sale-order-popper-item\" },\n                              [_c(\"span\", [_vm._v(_vm._s(item.defaultValue))])]\n                            ),\n                          ]\n                        },\n                      },\n                    ],\n                    null,\n                    false,\n                    582861419\n                  ),\n                  model: {\n                    value: _vm.activeData.props.value,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.props, \"value\", $$v)\n                    },\n                    expression: \"activeData.props.value\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"显示字段\" } },\n              [\n                _c(\"el-autocomplete\", {\n                  staticClass: \"inline-input\",\n                  staticStyle: { width: \"100%\" },\n                  attrs: {\n                    \"fetch-suggestions\": _vm.querySearch,\n                    placeholder: \"请输入内容\",\n                  },\n                  on: {\n                    select: function ($event) {\n                      return _vm.handleSelect($event, \"label\")\n                    },\n                  },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"default\",\n                        fn: function (ref) {\n                          var item = ref.item\n                          return [\n                            _c(\n                              \"div\",\n                              { staticClass: \"sale-order-popper-item\" },\n                              [_c(\"span\", [_vm._v(_vm._s(item.defaultValue))])]\n                            ),\n                          ]\n                        },\n                      },\n                    ],\n                    null,\n                    false,\n                    582861419\n                  ),\n                  model: {\n                    value: _vm.activeData.props.label,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.props, \"label\", $$v)\n                    },\n                    expression: \"activeData.props.label\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _vm.activeData.__config__.templateJson &&\n            _vm.activeData.__config__.templateJson.length\n              ? _c(\n                  \"el-table\",\n                  { attrs: { data: _vm.activeData.__config__.templateJson } },\n                  [\n                    _c(\"el-table-column\", {\n                      attrs: {\n                        type: \"index\",\n                        width: \"50\",\n                        label: \"序号\",\n                        align: \"center\",\n                      },\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { prop: \"field\", label: \"参数名称\" },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function (scope) {\n                              return [\n                                _c(\"span\", { staticClass: \"required-sign\" }, [\n                                  _vm._v(_vm._s(scope.row.required ? \"*\" : \"\")),\n                                ]),\n                                _vm._v(\n                                  \"\\n          \" +\n                                    _vm._s(\n                                      scope.row.fieldName\n                                        ? scope.row.field +\n                                            \"(\" +\n                                            scope.row.fieldName +\n                                            \")\"\n                                        : scope.row.field\n                                    ) +\n                                    \"\\n        \"\n                                ),\n                              ]\n                            },\n                          },\n                        ],\n                        null,\n                        false,\n                        284133495\n                      ),\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { prop: \"value\", label: \"表单字段\" },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function (scope) {\n                              return [\n                                _c(\n                                  \"el-select\",\n                                  {\n                                    attrs: {\n                                      placeholder: \"请选择表单字段\",\n                                      clearable: \"\",\n                                      filterable: \"\",\n                                    },\n                                    on: {\n                                      change: function ($event) {\n                                        return _vm.onRelationFieldChange(\n                                          $event,\n                                          scope.row\n                                        )\n                                      },\n                                    },\n                                    model: {\n                                      value: scope.row.relationField,\n                                      callback: function ($$v) {\n                                        _vm.$set(\n                                          scope.row,\n                                          \"relationField\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"scope.row.relationField\",\n                                    },\n                                  },\n                                  _vm._l(\n                                    _vm.formFieldsOptions,\n                                    function (item) {\n                                      return _c(\"el-option\", {\n                                        key: item.realVModel,\n                                        attrs: {\n                                          label: item.realLabel,\n                                          value: item.realVModel,\n                                        },\n                                      })\n                                    }\n                                  ),\n                                  1\n                                ),\n                              ]\n                            },\n                          },\n                        ],\n                        null,\n                        false,\n                        3708884993\n                      ),\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n          ]\n        : _vm._e(),\n      _c(\"el-divider\"),\n      _vm.showType === \"pc\"\n        ? [\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"选项样式\" } },\n              [\n                _c(\n                  \"el-radio-group\",\n                  {\n                    model: {\n                      value: _vm.activeData.optionType,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.activeData, \"optionType\", $$v)\n                      },\n                      expression: \"activeData.optionType\",\n                    },\n                  },\n                  [\n                    _c(\"el-radio-button\", { attrs: { label: \"default\" } }, [\n                      _vm._v(\"默认\"),\n                    ]),\n                    _c(\"el-radio-button\", { attrs: { label: \"button\" } }, [\n                      _vm._v(\"按钮\"),\n                    ]),\n                  ],\n                  1\n                ),\n              ],\n              1\n            ),\n            _vm.activeData.optionType === \"default\"\n              ? _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"是否边框\" } },\n                  [\n                    _c(\"el-switch\", {\n                      model: {\n                        value: _vm.activeData.border,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.activeData, \"border\", $$v)\n                        },\n                        expression: \"activeData.border\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm.activeData.optionType === \"button\" || _vm.activeData.border\n              ? _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"组件尺寸\" } },\n                  [\n                    _c(\n                      \"el-radio-group\",\n                      {\n                        model: {\n                          value: _vm.activeData.size,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.activeData, \"size\", $$v)\n                          },\n                          expression: \"activeData.size\",\n                        },\n                      },\n                      [\n                        _c(\"el-radio-button\", { attrs: { label: \"medium\" } }, [\n                          _vm._v(\"中等\"),\n                        ]),\n                        _c(\"el-radio-button\", { attrs: { label: \"small\" } }, [\n                          _vm._v(\"较小\"),\n                        ]),\n                        _c(\"el-radio-button\", { attrs: { label: \"mini\" } }, [\n                          _vm._v(\"迷你\"),\n                        ]),\n                      ],\n                      1\n                    ),\n                  ],\n                  1\n                )\n              : _vm._e(),\n          ]\n        : _vm._e(),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"是否禁用\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.disabled,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData, \"disabled\", $$v)\n              },\n              expression: \"activeData.disabled\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"是否隐藏\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.__config__.noShow,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"noShow\", $$v)\n              },\n              expression: \"activeData.__config__.noShow\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"是否必填\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.__config__.required,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"required\", $$v)\n              },\n              expression: \"activeData.__config__.required\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        [\n          _c(\n            \"el-dialog\",\n            {\n              staticClass:\n                \"JNPF-dialog JNPF-dialog_center JNPF-dialog-tree-select\",\n              attrs: {\n                visible: _vm.dicVisible,\n                \"append-to-body\": \"\",\n                \"lock-scroll\": \"\",\n                width: \"80%\",\n              },\n              on: {\n                \"update:visible\": function ($event) {\n                  _vm.dicVisible = $event\n                },\n                close: _vm.defaultValueChange,\n              },\n            },\n            [_c(\"dicIndex\", { ref: \"dicIndex\" })],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm.updateVisible\n        ? _c(\"BatchEditing\", {\n            ref: \"batchEditing\",\n            on: { change: _vm.handleSure },\n          })\n        : _vm._e(),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}