{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/onlineDev/integrate/log/Detail.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/onlineDev/integrate/log/Detail.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getTaskInfo, nodeRetryTask } from '@/api/onlineDev/integrate'\nexport default {\n  name: 'LogDetail',\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  data() {\n    return {\n      list: [],\n      activeKey: 1,\n      activeItem: {},\n      visible: false,\n      msgInfo: '',\n      id: '',\n      listLoading: false,\n      redoNodesLoading: false,\n      activeIndex: 0\n    }\n  },\n  computed: {\n    getTextareaValue() {\n      return this.activeKey === 1 ? this.msgInfo : this.activeItem.errorMsg\n    }\n  },\n  methods: {\n    openDialog(id) {\n      this.visible = true\n      this.id = id || ''\n      this.isInit = false\n      this.activeKey = 1\n      this.initData(true)\n    },\n    handleClick(item, index) {\n      this.activeItem = item;\n      this.activeIndex = index;\n      this.activeKey = 1;\n    },\n    handleUpdateNodes() {\n      this.$emit('updateNodes')\n    },\n    handleRedoNodes() {\n      this.$confirm('确定将本节点进行重试?', this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        const query = {\n          id: this.id,\n          nodeId: this.activeItem.id,\n        };\n        this.redoNodesLoading = true;\n        nodeRetryTask(query).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n              this.redoNodesLoading = false;\n            }\n          });\n        })\n      }).catch(() => {\n        this.redoNodesLoading = false;\n      });\n    },\n    initData(isInit) {\n      this.listLoading = true\n      getTaskInfo(this.id).then(res => {\n        this.msgInfo = res.data.data\n        this.list = res.data.list || []\n        if (this.list.length) this.activeItem = this.list[isInit ? 0 : this.activeIndex]\n        this.listLoading = false\n      }).catch()\n    }\n  }\n}\n",null]}