{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/formDesign/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/formDesign/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Form from './Form'\nimport preview from './Preview'\nimport previewDialog from '@/components/PreviewDialog'\nimport { getFormList, release, del, copyForm, exportData } from '@/api/workFlow/FormDesign'\nexport default {\n  name: 'formDesign',\n  components: { Form, preview, previewDialog },\n  data() {\n    return {\n      query: { keyword: '', formType: '', isRelease: '' },\n      downloadFormVisible: false,\n      sort: 'flowForm',\n      dialogVisible: false,\n      previewVisible: false,\n      previewDialogVisible: false,\n      list: [],\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      },\n      previewType: 0,\n      total: 0,\n      listLoading: false,\n      formVisible: false,\n      addVisible: false,\n      currRow: {},\n      categoryList: [],\n      options: [\n        { fullName: '系统表单', id: 1 },\n        { fullName: '自定义表单', id: 2 },\n      ]\n    }\n  },\n  created() {\n    this.initData()\n  },\n  methods: {\n    search() {\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      }\n      this.initData()\n    },\n    reset() {\n      this.query.keyword = ''\n      this.query.isRelease = ''\n      this.query.formType = ''\n      this.search()\n    },\n    initData() {\n      this.listLoading = true\n      let query = {\n        ...this.listQuery,\n        ...this.query\n      }\n      getFormList(query).then(res => {\n        this.list = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      })\n    },\n    handleDel(id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        del(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    copy(id) {\n      this.$confirm('您确定要复制该功能表单, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        copyForm(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    exportModel(id) {\n      this.$confirm('您确定要导出该功能表单, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        exportData(id).then(res => {\n          this.jnpf.downloadFile(res.data.url)\n        })\n      }).catch(() => { });\n    },\n    handleAdd(webType) {\n      this.addOrUpdateHandle('', webType)\n    },\n    closeForm(isRefresh) {\n      this.formVisible = false\n      if (isRefresh) {\n        this.initData()\n      }\n    },\n    addForm(flowType, formType) {\n      this.dialogVisible = false\n      this.addOrUpdateHandle('', flowType, formType)\n    },\n    // 新增 / 修改\n    addOrUpdateHandle(id, flowType, formType) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.Form.init(id, flowType, formType)\n      })\n    },\n    preview(row, dataSource, type) {\n      this.previewType = type\n      this.currRow = row\n      this.currRow.dataSource = dataSource\n      this.$nextTick(() => {\n        this.previewDialogVisible = true\n      })\n    },\n    previewPc() {\n      let data = {\n        enCode: this.currRow.enCode,\n        fullName: this.currRow.fullName,\n        formType: this.currRow.formType,\n        formId: this.currRow.id,\n        dataSource: this.currRow.dataSource,\n      }\n      this.previewVisible = true\n      this.$nextTick(() => {\n        this.$refs.preview.init(data)\n      })\n    },\n    enabledMark(id, enabledMark) {\n      let str = enabledMark === 1 ? \"表单停用\" : \"表单启用\"\n      this.$confirm(str + '?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        EnabledMark(id).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    releaseForm(id) {\n      this.$confirm('发布表单会覆盖当前线上版本，是否继续？', '发布确认', {\n        type: 'warning'\n      }).then(() => {\n        release(id, 1).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    },\n    rollBackForm(id) {\n      this.$confirm('此操作将当前编辑的表单内容回滚为已经发布的表单内容，是否继续？', '提示', {\n        type: 'warning'\n      }).then(() => {\n        release(id, 0).then(res => {\n          this.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: () => {\n              this.initData()\n            }\n          });\n        })\n      }).catch(() => { });\n    }\n  }\n}\n",null]}