{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Jnpf/Upload/UploadImg.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Jnpf/Upload/UploadImg.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/es6.regexp.constructor\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _emitter = _interopRequireDefault(require(\"element-ui/src/mixins/emitter\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar dispatch = _emitter.default.methods.dispatch;\nvar units = {\n  KB: 1024,\n  MB: 1024 * 1024,\n  GB: 1024 * 1024 * 1024\n};\nvar _default2 = exports.default = {\n  name: 'UploadImg',\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    type: {\n      type: String,\n      default: 'annexpic'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    simple: {\n      type: Boolean,\n      default: false\n    },\n    detailed: {\n      type: Boolean,\n      default: false\n    },\n    showTip: {\n      type: Boolean,\n      default: false\n    },\n    limit: {\n      type: Number,\n      default: 0\n    },\n    accept: {\n      type: String,\n      default: 'image/*'\n    },\n    sizeUnit: {\n      type: String,\n      default: 'MB'\n    },\n    pathType: {\n      type: String,\n      default: 'defaultPath'\n    },\n    isAccount: {\n      type: Number,\n      default: 0\n    },\n    folder: {\n      type: String,\n      default: ''\n    },\n    fileSize: {\n      default: 10\n    },\n    tipText: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      fileList: [],\n      uploadHeaders: {\n        Authorization: this.$store.getters.token\n      }\n    };\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler(val) {\n        this.fileList = Array.isArray(val) ? val : [];\n      }\n    }\n  },\n  computed: {\n    params: function params() {\n      return {\n        pathType: this.pathType,\n        isAccount: this.isAccount,\n        folder: this.folder\n      };\n    }\n  },\n  methods: {\n    beforeUpload: function beforeUpload(file) {\n      if (this.fileList.length >= this.limit) {\n        this.handleExceed();\n        return false;\n      }\n      var unitNum = units[this.sizeUnit];\n      if (!this.fileSize) return true;\n      var isRightSize = file.size / unitNum < this.fileSize;\n      if (!isRightSize) {\n        this.$message.error(\"\\u56FE\\u7247\\u5927\\u5C0F\\u8D85\\u8FC7\".concat(this.fileSize).concat(this.sizeUnit));\n        return isRightSize;\n      }\n      var isAccept = new RegExp('image/*').test(file.type);\n      if (!isAccept) {\n        this.$message.error(\"\\u8BF7\\u4E0A\\u4F20\\u56FE\\u7247\");\n        return isAccept;\n      }\n      return isRightSize && isAccept;\n    },\n    handleSuccess: function handleSuccess(res, file, fileList) {\n      if (this.fileList.length >= this.limit) return this.handleExceed();\n      if (res.code == 200) {\n        this.fileList.push({\n          name: file.name,\n          fileId: res.data.name,\n          url: res.data.url,\n          thumbUrl: res.data.thumbUrl\n        });\n        this.$emit('input', this.fileList);\n        this.$emit('change', this.fileList);\n        dispatch.call(this, 'ElFormItem', 'el.form.change', this.fileList);\n      } else {\n        this.$refs.elUpload.uploadFiles.splice(fileList.length - 1, 1);\n        fileList.filter(function (o) {\n          return o.uid != file.uid;\n        });\n        this.$emit('input', this.fileList);\n        this.$emit('change', this.fileList);\n        dispatch.call(this, 'ElFormItem', 'el.form.change', this.fileList);\n        this.$message({\n          message: res.msg,\n          type: 'error',\n          duration: 1500\n        });\n      }\n    },\n    handleExceed: function handleExceed(files, fileList) {\n      this.$message.warning(\"\\u5F53\\u524D\\u9650\\u5236\\u6700\\u591A\\u53EF\\u4EE5\\u4E0A\\u4F20\".concat(this.limit, \"\\u5F20\\u56FE\\u7247\"));\n    },\n    handlePictureCardPreview: function handlePictureCardPreview(index) {\n      this.$refs['image' + index][0].clickHandler();\n    },\n    handleRemove: function handleRemove(index) {\n      this.fileList.splice(index, 1);\n      this.$refs.elUpload.uploadFiles.splice(index, 1);\n      this.$emit(\"input\", this.fileList);\n      this.$emit('change', this.fileList);\n      dispatch.call(this, 'ElFormItem', 'el.form.change', this.fileList);\n    },\n    getImgList: function getImgList(list) {\n      var _this = this;\n      var newList = list.map(function (o) {\n        return _this.define.comUrl + o.url;\n      });\n      return newList;\n    }\n  }\n};",null]}