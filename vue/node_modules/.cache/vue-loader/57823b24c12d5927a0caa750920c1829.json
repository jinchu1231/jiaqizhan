{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/components/FlowBox.vue?vue&type=template&id=604664ac&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/components/FlowBox.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"JNPF-preview-main flow-form-main\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"JNPF-common-page-header\" },\n        [\n          _vm.setting.fromForm\n            ? _c(\"div\", [_vm._v(_vm._s(_vm.title))])\n            : _c(\n                \"el-page-header\",\n                { on: { back: _vm.goBack } },\n                [\n                  _c(\"template\", { slot: \"content\" }, [\n                    _c(\"div\", { staticClass: \"JNPF-page-header-content\" }, [\n                      _vm._v(_vm._s(_vm.title)),\n                    ]),\n                  ]),\n                ],\n                2\n              ),\n          !_vm.loading || _vm.title\n            ? [\n                _c(\n                  \"el-dropdown\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.setting.opType == \"-1\",\n                        expression: \"setting.opType=='-1'\",\n                      },\n                    ],\n                    attrs: { placement: \"bottom\", trigger: \"click\" },\n                    on: { command: _vm.handleFlowUrgent },\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"flow-urgent-value\",\n                        staticStyle: { cursor: \"pointer\" },\n                      },\n                      [\n                        _c(\"span\", {\n                          staticClass: \"color-box\",\n                          style: {\n                            \"background-color\":\n                              _vm.flowUrgentList[_vm.selectState].color,\n                          },\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            style: {\n                              color: _vm.flowUrgentList[_vm.selectState].color,\n                            },\n                          },\n                          [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(_vm.flowUrgentList[_vm.selectState].name)\n                            ),\n                          ]\n                        ),\n                      ]\n                    ),\n                    _c(\n                      \"el-dropdown-menu\",\n                      { attrs: { slot: \"dropdown\" }, slot: \"dropdown\" },\n                      _vm._l(_vm.flowUrgentList, function (item, index) {\n                        return _c(\n                          \"el-dropdown-item\",\n                          { key: index, attrs: { command: item.state } },\n                          [\n                            _c(\"span\", {\n                              staticClass: \"color-box\",\n                              style: { \"background-color\": item.color },\n                            }),\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(item.name) +\n                                \"\\n          \"\n                            ),\n                          ]\n                        )\n                      }),\n                      1\n                    ),\n                  ],\n                  1\n                ),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.setting.opType !== \"-1\",\n                        expression: \"setting.opType!=='-1'\",\n                      },\n                    ],\n                    staticClass: \"flow-urgent-value\",\n                  },\n                  [\n                    _c(\"span\", {\n                      staticClass: \"color-box\",\n                      style: {\n                        \"background-color\":\n                          _vm.flowUrgentList[_vm.selectState].color,\n                      },\n                    }),\n                    _c(\n                      \"span\",\n                      {\n                        style: {\n                          color: _vm.flowUrgentList[_vm.selectState].color,\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.flowUrgentList[_vm.selectState].name))]\n                    ),\n                  ]\n                ),\n              ]\n            : _vm._e(),\n          !_vm.subFlowVisible\n            ? _c(\n                \"div\",\n                { staticClass: \"options\" },\n                [\n                  _vm.moreBtnList.length\n                    ? _c(\n                        \"el-dropdown\",\n                        {\n                          staticClass: \"dropdown\",\n                          attrs: { placement: \"bottom\" },\n                          on: { command: _vm.handleMore },\n                        },\n                        [\n                          _c(\n                            \"el-button\",\n                            {\n                              staticStyle: { width: \"70px\" },\n                              attrs: { disabled: _vm.allBtnDisabled },\n                            },\n                            [\n                              _vm._v(\"\\n          更 多\"),\n                              _c(\"i\", {\n                                staticClass:\n                                  \"el-icon-arrow-down el-icon--right\",\n                              }),\n                            ]\n                          ),\n                          _c(\n                            \"el-dropdown-menu\",\n                            { attrs: { slot: \"dropdown\" }, slot: \"dropdown\" },\n                            _vm._l(_vm.moreBtnList, function (item, index) {\n                              return _c(\n                                \"el-dropdown-item\",\n                                {\n                                  key: index,\n                                  staticClass: \"dropdown-item\",\n                                  attrs: { command: item.key },\n                                },\n                                [_vm._v(_vm._s(item.label))]\n                              )\n                            }),\n                            1\n                          ),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _vm.setting.opType == \"-1\"\n                    ? _c(\n                        \"el-button\",\n                        {\n                          attrs: {\n                            type: \"primary\",\n                            loading: _vm.candidateLoading,\n                            disabled: _vm.allBtnDisabled,\n                          },\n                          on: {\n                            click: function ($event) {\n                              return _vm.eventLauncher(\"submit\")\n                            },\n                          },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n        \" +\n                              _vm._s(_vm.properties.submitBtnText || \"提 交\")\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm.setting.opType == 1 && _vm.properties.hasAuditBtn\n                    ? _c(\n                        \"el-button\",\n                        {\n                          attrs: {\n                            type: \"primary\",\n                            loading: _vm.candidateLoading,\n                          },\n                          on: {\n                            click: function ($event) {\n                              return _vm.eventLauncher(\"audit\")\n                            },\n                          },\n                        },\n                        [\n                          _vm._v(\n                            _vm._s(_vm.properties.auditBtnText || \"通 过\") +\n                              \"\\n      \"\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm.setting.opType == 0 &&\n                  _vm.setting.status == 1 &&\n                  (_vm.properties.hasPressBtn ||\n                    _vm.properties.hasPressBtn === undefined)\n                    ? _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"primary\" },\n                          on: {\n                            click: function ($event) {\n                              return _vm.press()\n                            },\n                          },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n        \" +\n                              _vm._s(_vm.properties.pressBtnText || \"催 办\")\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm.setting.opType == 2 && _vm.properties.hasRevokeBtn\n                    ? _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"danger\" },\n                          on: {\n                            click: function ($event) {\n                              return _vm.actionLauncher(\"recall\")\n                            },\n                          },\n                        },\n                        [\n                          _vm._v(\n                            _vm._s(_vm.properties.revokeBtnText || \"撤 回\")\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm.setting.opType == 4 &&\n                  _vm.setting.status == 1 &&\n                  !_vm.noOperateAuth\n                    ? _c(\n                        \"el-button\",\n                        {\n                          attrs: { type: \"danger\" },\n                          on: {\n                            click: function ($event) {\n                              return _vm.actionLauncher(\"cancel\")\n                            },\n                          },\n                        },\n                        [_vm._v(\"\\n        终 止\")]\n                      )\n                    : _vm._e(),\n                  !_vm.setting.hideCancelBtn\n                    ? _c(\n                        \"el-button\",\n                        {\n                          attrs: { disabled: _vm.allBtnDisabled },\n                          on: {\n                            click: function ($event) {\n                              return _vm.goBack()\n                            },\n                          },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n        \" +\n                              _vm._s(_vm.$t(\"common.cancelButton\")) +\n                              \"\\n      \"\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                ],\n                1\n              )\n            : _vm._e(),\n        ],\n        2\n      ),\n      (_vm.setting.opType == 0 || _vm.setting.opType == 4) &&\n      _vm.activeTab === \"0\" &&\n      !_vm.subFlowVisible\n        ? _c(\"div\", { staticClass: \"approve-result\" }, [\n            _c(\"div\", {\n              staticClass: \"approve-result-img\",\n              class: _vm._f(\"flowStatus\")(_vm.flowTaskInfo.status),\n            }),\n          ])\n        : _vm._e(),\n      _c(\n        \"el-tabs\",\n        {\n          staticClass: \"JNPF-el_tabs\",\n          model: {\n            value: _vm.activeTab,\n            callback: function ($$v) {\n              _vm.activeTab = $$v\n            },\n            expression: \"activeTab\",\n          },\n        },\n        [\n          _vm.setting.opType != \"4\" && !_vm.subFlowVisible\n            ? _c(\n                \"el-tab-pane\",\n                {\n                  directives: [\n                    {\n                      name: \"loading\",\n                      rawName: \"v-loading\",\n                      value: _vm.loading,\n                      expression: \"loading\",\n                    },\n                  ],\n                  attrs: { label: \"表单信息\" },\n                },\n                [\n                  _c(_vm.currentView, {\n                    ref: \"form\",\n                    tag: \"component\",\n                    attrs: { config: _vm.setting },\n                    on: {\n                      close: _vm.goBack,\n                      eventReceiver: _vm.eventReceiver,\n                      setLoad: _vm.setLoad,\n                      setCandidateLoad: _vm.setCandidateLoad,\n                      setPageLoad: _vm.setPageLoad,\n                    },\n                  }),\n                ],\n                1\n              )\n            : _vm._e(),\n          _c(\n            \"el-tab-pane\",\n            {\n              directives: [\n                {\n                  name: \"loading\",\n                  rawName: \"v-loading\",\n                  value: _vm.loading,\n                  expression: \"loading\",\n                },\n              ],\n              attrs: { label: \"流程信息\" },\n            },\n            [\n              !_vm.subFlowVisible\n                ? [\n                    _vm.flowTemplateJson.nodeId\n                      ? _c(\"Process\", {\n                          key: _vm.processKey,\n                          attrs: { conf: _vm.flowTemplateJson, id: \"Process\" },\n                          on: { subFlow: _vm.subFlow },\n                        })\n                      : _vm._e(),\n                  ]\n                : [\n                    _c(\n                      \"el-tabs\",\n                      {\n                        attrs: { type: \"card\" },\n                        on: { \"tab-click\": _vm.activeClick },\n                        model: {\n                          value: _vm.subFlowTab,\n                          callback: function ($$v) {\n                            _vm.subFlowTab = $$v\n                          },\n                          expression: \"subFlowTab\",\n                        },\n                      },\n                      _vm._l(_vm.subFlowInfoList, function (item, index) {\n                        return _c(\n                          \"el-tab-pane\",\n                          {\n                            key: index,\n                            attrs: {\n                              label: item.flowTaskInfo.fullName,\n                              name: item.flowTaskInfo.id,\n                            },\n                          },\n                          [\n                            _c(\"Process\", {\n                              key: _vm.processKey,\n                              attrs: {\n                                conf: item.flowTemplateInfo.flowTemplateJson,\n                              },\n                            }),\n                          ],\n                          1\n                        )\n                      }),\n                      1\n                    ),\n                  ],\n            ],\n            2\n          ),\n          _vm.setting.opType != \"-1\" ||\n          (_vm.setting.opType == \"-1\" && _vm.setting.status == 7)\n            ? _c(\n                \"el-tab-pane\",\n                {\n                  directives: [\n                    {\n                      name: \"loading\",\n                      rawName: \"v-loading\",\n                      value: _vm.loading,\n                      expression: \"loading\",\n                    },\n                  ],\n                  attrs: { label: \"流转记录\" },\n                },\n                [\n                  _c(\"recordList\", {\n                    attrs: {\n                      list: _vm.flowTaskOperatorRecordList,\n                      endTime: _vm.endTime,\n                      flowId: _vm.setting.flowId,\n                      opType: _vm.setting.opType,\n                    },\n                    on: { handelNodeLog: _vm.handelNodeLog },\n                  }),\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm.setting.opType != \"-1\" && _vm.isSummary\n            ? _c(\n                \"el-tab-pane\",\n                {\n                  directives: [\n                    {\n                      name: \"loading\",\n                      rawName: \"v-loading\",\n                      value: _vm.loading,\n                      expression: \"loading\",\n                    },\n                  ],\n                  attrs: { label: \"审批汇总\", name: \"recordSummary\" },\n                },\n                [\n                  _c(\"RecordSummary\", {\n                    ref: \"recordSummary\",\n                    attrs: { id: _vm.setting.id, summaryType: _vm.summaryType },\n                  }),\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm.setting.opType != \"-1\" && _vm.isComment\n            ? _c(\n                \"el-tab-pane\",\n                {\n                  directives: [\n                    {\n                      name: \"loading\",\n                      rawName: \"v-loading\",\n                      value: _vm.loading,\n                      expression: \"loading\",\n                    },\n                  ],\n                  attrs: { label: \"流程评论\", name: \"comment\" },\n                },\n                [\n                  _c(\"Comment\", {\n                    ref: \"comment\",\n                    attrs: { id: _vm.setting.id },\n                  }),\n                ],\n                1\n              )\n            : _vm._e(),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"JNPF-dialog JNPF-dialog_center\",\n          attrs: {\n            title: _vm.eventType === \"audit\" ? \"审批通过\" : \"审批退回\",\n            \"close-on-click-modal\": false,\n            visible: _vm.visible,\n            \"lock-scroll\": \"\",\n            \"append-to-body\": \"\",\n            \"before-close\": _vm.beforeClose,\n            width: \"600px\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.visible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"candidateForm\",\n              attrs: {\n                model: _vm.candidateForm,\n                \"label-width\":\n                  _vm.candidateForm.candidateList.length ||\n                  _vm.branchList.length\n                    ? \"130px\"\n                    : \"80px\",\n              },\n            },\n            [\n              _vm.eventType === \"audit\"\n                ? [\n                    _vm.branchList.length\n                      ? _c(\n                          \"el-form-item\",\n                          {\n                            attrs: {\n                              label: \"分支选择\",\n                              prop: \"branchList\",\n                              rules: [\n                                {\n                                  required: true,\n                                  message: \"分支不能为空\",\n                                  trigger: \"change\",\n                                },\n                              ],\n                            },\n                          },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                attrs: {\n                                  multiple: \"\",\n                                  placeholder: \"请选择审批分支\",\n                                  clearable: \"\",\n                                },\n                                on: { change: _vm.onBranchChange },\n                                model: {\n                                  value: _vm.candidateForm.branchList,\n                                  callback: function ($$v) {\n                                    _vm.$set(\n                                      _vm.candidateForm,\n                                      \"branchList\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"candidateForm.branchList\",\n                                },\n                              },\n                              _vm._l(_vm.branchList, function (item) {\n                                return _c(\"el-option\", {\n                                  key: item.nodeId,\n                                  attrs: {\n                                    label: item.nodeName,\n                                    value: item.nodeId,\n                                  },\n                                })\n                              }),\n                              1\n                            ),\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm._l(_vm.candidateForm.candidateList, function (item, i) {\n                      return _c(\n                        \"el-form-item\",\n                        {\n                          key: i,\n                          attrs: {\n                            label: item.nodeName + item.label,\n                            prop: \"candidateList.\" + i + \".value\",\n                            rules: item.rules,\n                          },\n                        },\n                        [\n                          item.hasCandidates\n                            ? _c(\"candidate-user-select\", {\n                                attrs: {\n                                  multiple: \"\",\n                                  placeholder: \"请选择\" + item.label,\n                                  taskId: _vm.setting.taskId,\n                                  formData: _vm.formData,\n                                  nodeId: item.nodeId,\n                                },\n                                model: {\n                                  value: item.value,\n                                  callback: function ($$v) {\n                                    _vm.$set(item, \"value\", $$v)\n                                  },\n                                  expression: \"item.value\",\n                                },\n                              })\n                            : _c(\"JnpfUserSelect\", {\n                                attrs: {\n                                  multiple: \"\",\n                                  placeholder: \"请选择\" + item.label,\n                                  title: \"候选人员\",\n                                },\n                                model: {\n                                  value: item.value,\n                                  callback: function ($$v) {\n                                    _vm.$set(item, \"value\", $$v)\n                                  },\n                                  expression: \"item.value\",\n                                },\n                              }),\n                        ],\n                        1\n                      )\n                    }),\n                  ]\n                : _vm._e(),\n              _vm.properties.rejectType &&\n              _vm.eventType !== \"audit\" &&\n              _vm.showReject\n                ? [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"退回节点\", prop: \"rejectStep\" } },\n                      [\n                        _c(\n                          \"el-select\",\n                          {\n                            attrs: {\n                              placeholder: \"请选择退回节点\",\n                              disabled: _vm.properties.rejectStep !== \"2\",\n                            },\n                            model: {\n                              value: _vm.candidateForm.rejectStep,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.candidateForm, \"rejectStep\", $$v)\n                              },\n                              expression: \"candidateForm.rejectStep\",\n                            },\n                          },\n                          _vm._l(_vm.rejectList, function (item) {\n                            return _c(\"el-option\", {\n                              key: item.nodeCode,\n                              attrs: {\n                                label: item.nodeName,\n                                value: item.nodeCode,\n                              },\n                            })\n                          }),\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                    _vm.properties.rejectType == 3\n                      ? [\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { prop: \"rejectRadio\" } },\n                            [\n                              _c(\n                                \"el-radio-group\",\n                                {\n                                  staticClass: \"form-item-content\",\n                                  model: {\n                                    value: _vm.candidateForm.rejectType,\n                                    callback: function ($$v) {\n                                      _vm.$set(\n                                        _vm.candidateForm,\n                                        \"rejectType\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"candidateForm.rejectType\",\n                                  },\n                                },\n                                [\n                                  _c(\n                                    \"el-radio\",\n                                    { attrs: { label: 1 } },\n                                    [\n                                      _vm._v(\"重新审批\\n                \"),\n                                      _c(\n                                        \"el-tooltip\",\n                                        {\n                                          attrs: {\n                                            content:\n                                              \"若流程为A->B->C,C退回至A，则C->A->B->C\",\n                                            placement: \"top\",\n                                          },\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass:\n                                              \"el-icon-question tooltip-question\",\n                                          }),\n                                        ]\n                                      ),\n                                    ],\n                                    1\n                                  ),\n                                  _c(\n                                    \"el-radio\",\n                                    { attrs: { label: 2 } },\n                                    [\n                                      _vm._v(\"直接提交给我\\n                \"),\n                                      _c(\n                                        \"el-tooltip\",\n                                        {\n                                          attrs: {\n                                            content:\n                                              \"若流程为A->B->C,C退回至A，则C->A->C\",\n                                            placement: \"top\",\n                                          },\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass:\n                                              \"el-icon-question tooltip-question\",\n                                          }),\n                                        ]\n                                      ),\n                                    ],\n                                    1\n                                  ),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                        ]\n                      : _vm._e(),\n                  ]\n                : _vm._e(),\n              _vm.properties.hasOpinion\n                ? [\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"审批意见\", prop: \"handleOpinion\" } },\n                      [\n                        _c(\"el-input\", {\n                          attrs: {\n                            placeholder: \"请输入审批意见\",\n                            type: \"textarea\",\n                            rows: 4,\n                          },\n                          model: {\n                            value: _vm.candidateForm.handleOpinion,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.candidateForm, \"handleOpinion\", $$v)\n                            },\n                            expression: \"candidateForm.handleOpinion\",\n                          },\n                        }),\n                        _c(\"CommonWordsDialog\", {\n                          ref: \"commonWordsDialog\",\n                          on: { change: _vm.common },\n                        }),\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-form-item\",\n                      { attrs: { label: \"审批附件\", prop: \"fileList\" } },\n                      [\n                        _c(\"JnpfUploadFile\", {\n                          attrs: { limit: 3 },\n                          model: {\n                            value: _vm.candidateForm.fileList,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.candidateForm, \"fileList\", $$v)\n                            },\n                            expression: \"candidateForm.fileList\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]\n                : _vm._e(),\n              _vm.properties.hasSign\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"手写签名\", required: \"\" } },\n                    [\n                      _c(\"div\", { staticClass: \"sign-main\" }, [\n                        _vm.signImg\n                          ? _c(\"img\", {\n                              staticClass: \"sign-img\",\n                              attrs: { src: _vm.signImg, alt: \"\" },\n                            })\n                          : _vm._e(),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"sign-style\",\n                            on: { click: _vm.addSign },\n                          },\n                          [\n                            _c(\"i\", {\n                              staticClass: \"icon-ym icon-ym-signature add-sign\",\n                            }),\n                            !_vm.signImg\n                              ? _c(\"span\", { staticClass: \"sign-title\" }, [\n                                  _vm._v(\"手写签名\"),\n                                ])\n                              : _vm._e(),\n                          ]\n                        ),\n                      ]),\n                    ]\n                  )\n                : _vm._e(),\n              _vm.properties.isCustomCopy\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"抄送人员\" } },\n                    [\n                      _c(\"JnpfUserSelect\", {\n                        attrs: { placeholder: \"请选择\", multiple: \"\" },\n                        model: {\n                          value: _vm.copyIds,\n                          callback: function ($$v) {\n                            _vm.copyIds = $$v\n                          },\n                          expression: \"copyIds\",\n                        },\n                      }),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n            ],\n            2\n          ),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.visible = false\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.approvalBtnLoading },\n                  on: {\n                    click: function ($event) {\n                      return _vm.handleApproval()\n                    },\n                  },\n                },\n                [\n                  _vm._v(\n                    \"\\n        \" +\n                      _vm._s(_vm.$t(\"common.confirmButton\")) +\n                      \"\\n      \"\n                  ),\n                ]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"JNPF-dialog JNPF-dialog_center\",\n          attrs: {\n            title: _vm.flowTaskInfo.completion == 100 ? \"复活\" : \"变更\",\n            \"close-on-click-modal\": false,\n            visible: _vm.resurgenceVisible,\n            \"lock-scroll\": \"\",\n            \"append-to-body\": \"\",\n            width: \"600px\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.resurgenceVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"resurgenceForm\",\n              attrs: {\n                \"label-width\": \"80px\",\n                model: _vm.resurgenceForm,\n                rules: _vm.resurgenceRules,\n              },\n            },\n            [\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label:\n                      _vm.flowTaskInfo.completion == 100\n                        ? \"复活节点\"\n                        : \"变更节点\",\n                    prop: \"taskNodeId\",\n                  },\n                },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      attrs: {\n                        placeholder:\n                          _vm.flowTaskInfo.completion == 100\n                            ? \"请选择复活节点\"\n                            : \"请选择变更节点\",\n                      },\n                      model: {\n                        value: _vm.resurgenceForm.taskNodeId,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.resurgenceForm, \"taskNodeId\", $$v)\n                        },\n                        expression: \"resurgenceForm.taskNodeId\",\n                      },\n                    },\n                    _vm._l(_vm.resurgenceNodeList, function (item) {\n                      return _c(\"el-option\", {\n                        key: item.id,\n                        attrs: { label: item.nodeName, value: item.id },\n                      })\n                    }),\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label:\n                      _vm.flowTaskInfo.completion == 100\n                        ? \"复活意见\"\n                        : \"变更意见\",\n                    prop: \"handleOpinion\",\n                  },\n                },\n                [\n                  _c(\n                    \"el-row\",\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 24 } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: {\n                              type: \"textarea\",\n                              placeholder: \"请填写意见\",\n                              rows: 4,\n                            },\n                            model: {\n                              value: _vm.resurgenceForm.handleOpinion,\n                              callback: function ($$v) {\n                                _vm.$set(\n                                  _vm.resurgenceForm,\n                                  \"handleOpinion\",\n                                  $$v\n                                )\n                              },\n                              expression: \"resurgenceForm.handleOpinion\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label:\n                      _vm.flowTaskInfo.completion == 100\n                        ? \"复活附件\"\n                        : \"变更附件\",\n                    prop: \"fileList\",\n                  },\n                },\n                [\n                  _c(\"JnpfUploadFile\", {\n                    attrs: { limit: 3 },\n                    model: {\n                      value: _vm.resurgenceForm.fileList,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.resurgenceForm, \"fileList\", $$v)\n                      },\n                      expression: \"resurgenceForm.fileList\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"span\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      _vm.resurgenceVisible = false\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.cancelButton\")))]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.resurgenceBtnLoading },\n                  on: {\n                    click: function ($event) {\n                      return _vm.handleResurgence()\n                    },\n                  },\n                },\n                [\n                  _vm._v(\n                    \"\\n        \" +\n                      _vm._s(_vm.$t(\"common.confirmButton\")) +\n                      \"\\n      \"\n                  ),\n                ]\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\"print-browse\", {\n        attrs: {\n          visible: _vm.printBrowseVisible,\n          id: _vm.printTemplateId,\n          formId: _vm.setting.id,\n          fullName: _vm.setting.fullName,\n        },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.printBrowseVisible = $event\n          },\n        },\n      }),\n      _c(\"candidate-form\", {\n        ref: \"candidateForm\",\n        attrs: {\n          visible: _vm.candidateVisible,\n          candidateList: _vm.candidateList,\n          branchList: _vm.branchList,\n          taskId: _vm.setting.taskId,\n          formData: _vm.formData,\n          isCustomCopy: _vm.properties.isCustomCopy,\n        },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.candidateVisible = $event\n          },\n          submitCandidate: _vm.submitCandidate,\n        },\n      }),\n      _c(\"error-form\", {\n        attrs: { visible: _vm.errorVisible, nodeList: _vm.errorNodeList },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.errorVisible = $event\n          },\n          submit: _vm.handleError,\n        },\n      }),\n      _vm.actionVisible\n        ? _c(\"actionDialog\", {\n            ref: \"actionDialog\",\n            attrs: { assignNodeList: _vm.assignNodeList },\n            on: { submit: _vm.actionReceiver },\n          })\n        : _vm._e(),\n      _vm.suspendVisible\n        ? _c(\"SuspendDialog\", {\n            ref: \"suspendDialog\",\n            on: { submit: _vm.suspendReceiver },\n          })\n        : _vm._e(),\n      _c(\"HasFreeApprover\", {\n        attrs: {\n          visible: _vm.hasFreeApproverVisible,\n          taskId: _vm.setting.taskId,\n          formData: _vm.formData,\n          properties: _vm.properties,\n        },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.hasFreeApproverVisible = $event\n          },\n          close: _vm.approverDialog,\n        },\n      }),\n      _vm.signVisible\n        ? _c(\"SignImgDialog\", {\n            ref: \"SignImg\",\n            attrs: { lineWidth: 3, userInfo: _vm.userInfo, isDefault: 1 },\n            on: { close: _vm.signDialog },\n          })\n        : _vm._e(),\n      _vm.flowBoxVisible\n        ? _c(\"FlowBox\", {\n            ref: \"FlowBox\",\n            on: {\n              close: function ($event) {\n                _vm.flowBoxVisible = false\n              },\n            },\n          })\n        : _vm._e(),\n      _vm.printDialogVisible\n        ? _c(\"PrintDialog\", {\n            ref: \"printDialog\",\n            on: { change: _vm.printBrowseHandle },\n          })\n        : _vm._e(),\n      _vm.logVisible\n        ? _c(\"EventLog\", {\n            ref: \"EventLog\",\n            on: {\n              close: function ($event) {\n                _vm.logVisible = false\n              },\n            },\n          })\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}