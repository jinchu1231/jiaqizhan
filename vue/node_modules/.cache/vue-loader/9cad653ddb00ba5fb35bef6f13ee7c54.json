{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/ComRight.vue?vue&type=template&id=04fa0cfe&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/ComRight.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-row\",\n    [\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"控件标题\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { placeholder: \"请输入控件标题\" },\n            model: {\n              value: _vm.activeData.__config__.label,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"label\", $$v)\n              },\n              expression: \"activeData.__config__.label\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"显示标题\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.__config__.showLabel,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"showLabel\", $$v)\n              },\n              expression: \"activeData.__config__.showLabel\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"标题提示\" } },\n        [\n          _c(\"el-input\", {\n            attrs: { type: \"textarea\", rows: 2, placeholder: \"请输入标题提示\" },\n            model: {\n              value: _vm.activeData.__config__.tipLabel,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"tipLabel\", $$v)\n              },\n              expression: \"activeData.__config__.tipLabel\",\n            },\n          }),\n        ],\n        1\n      ),\n      _vm.activeData.__config__.jnpfKey !== \"editor\"\n        ? _c(\n            \"el-form-item\",\n            { attrs: { label: \"占位提示\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"请输入占位提示\" },\n                model: {\n                  value: _vm.activeData.placeholder,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData, \"placeholder\", $$v)\n                  },\n                  expression: \"activeData.placeholder\",\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      [\n        \"depSelect\",\n        \"posSelect\",\n        \"usersSelect\",\n        \"organizeSelect\",\n        \"roleSelect\",\n        \"groupSelect\",\n      ].includes(_vm.activeData.__config__.jnpfKey)\n        ? _c(\n            \"el-form-item\",\n            { attrs: { label: \"可选范围\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: { placeholder: \"请选择\", filterable: \"\" },\n                  on: { change: _vm.onTypeChange },\n                  model: {\n                    value: _vm.activeData.selectType,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData, \"selectType\", $$v)\n                    },\n                    expression: \"activeData.selectType\",\n                  },\n                },\n                _vm._l(_vm.selectTypeOptions, function (item) {\n                  return _c(\"el-option\", {\n                    key: item.value,\n                    attrs: { label: item.label, value: item.value },\n                  })\n                }),\n                1\n              ),\n              _vm.activeData.selectType === \"custom\"\n                ? [\n                    _vm.activeData.__config__.jnpfKey === \"depSelect\"\n                      ? [\n                          _c(\"org-Select\", {\n                            staticClass: \"mt-10\",\n                            attrs: { title: \"添加部门\", type: \"department\" },\n                            model: {\n                              value: _vm.activeData.ableIds,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.activeData, \"ableIds\", $$v)\n                              },\n                              expression: \"activeData.ableIds\",\n                            },\n                          }),\n                        ]\n                      : _vm._e(),\n                    _vm.activeData.__config__.jnpfKey === \"organizeSelect\"\n                      ? [\n                          _c(\"org-Select\", {\n                            staticClass: \"mt-10\",\n                            attrs: { title: \"添加组织\", type: \"organize\" },\n                            model: {\n                              value: _vm.activeData.ableIds,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.activeData, \"ableIds\", $$v)\n                              },\n                              expression: \"activeData.ableIds\",\n                            },\n                          }),\n                        ]\n                      : _vm._e(),\n                    _vm.activeData.__config__.jnpfKey === \"roleSelect\"\n                      ? [\n                          _c(\"org-Select\", {\n                            staticClass: \"mt-10\",\n                            attrs: { title: \"添加角色\", type: \"role\" },\n                            model: {\n                              value: _vm.activeData.ableIds,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.activeData, \"ableIds\", $$v)\n                              },\n                              expression: \"activeData.ableIds\",\n                            },\n                          }),\n                        ]\n                      : _vm._e(),\n                    _vm.activeData.__config__.jnpfKey === \"groupSelect\"\n                      ? [\n                          _c(\"org-Select\", {\n                            staticClass: \"mt-10\",\n                            attrs: { title: \"添加分组\", type: \"group\" },\n                            model: {\n                              value: _vm.activeData.ableIds,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.activeData, \"ableIds\", $$v)\n                              },\n                              expression: \"activeData.ableIds\",\n                            },\n                          }),\n                        ]\n                      : _vm._e(),\n                    _vm.activeData.__config__.jnpfKey === \"posSelect\"\n                      ? [\n                          _c(\"org-Select\", {\n                            staticClass: \"mt-10\",\n                            attrs: { title: \"添加岗位\", type: \"position\" },\n                            model: {\n                              value: _vm.activeData.ableIds,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.activeData, \"ableIds\", $$v)\n                              },\n                              expression: \"activeData.ableIds\",\n                            },\n                          }),\n                        ]\n                      : _vm._e(),\n                    _vm.activeData.__config__.jnpfKey === \"usersSelect\"\n                      ? [\n                          _c(\"org-Select\", {\n                            staticClass: \"mt-10\",\n                            attrs: {\n                              title: \"添加用户\",\n                              type: \"users\",\n                              dynamicParameter: true,\n                            },\n                            model: {\n                              value: _vm.activeData.ableIds,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.activeData, \"ableIds\", $$v)\n                              },\n                              expression: \"activeData.ableIds\",\n                            },\n                          }),\n                        ]\n                      : _vm._e(),\n                  ]\n                : _vm._e(),\n            ],\n            2\n          )\n        : _vm._e(),\n      _vm.activeData.__config__.jnpfKey === \"userSelect\"\n        ? _c(\n            \"el-form-item\",\n            { attrs: { label: \"可选范围\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: { placeholder: \"请选择\", filterable: \"\" },\n                  on: { change: _vm.onTypeChange },\n                  model: {\n                    value: _vm.activeData.selectType,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData, \"selectType\", $$v)\n                    },\n                    expression: \"activeData.selectType\",\n                  },\n                },\n                _vm._l(_vm.userSelectTypeOptions, function (item) {\n                  return _c(\"el-option\", {\n                    key: item.value,\n                    attrs: { label: item.label, value: item.value },\n                  })\n                }),\n                1\n              ),\n              _vm.activeData.selectType === \"custom\"\n                ? [\n                    _c(\"org-Select\", {\n                      staticClass: \"mt-10\",\n                      attrs: {\n                        title: \"添加用户\",\n                        type: \"users\",\n                        dynamicParameter: true,\n                      },\n                      model: {\n                        value: _vm.activeData.ableIds,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.activeData, \"ableIds\", $$v)\n                        },\n                        expression: \"activeData.ableIds\",\n                      },\n                    }),\n                  ]\n                : _vm._e(),\n              [\"dep\", \"pos\", \"role\", \"group\"].includes(\n                _vm.activeData.selectType\n              )\n                ? [\n                    _c(\n                      \"el-radio-group\",\n                      {\n                        staticClass: \"relation-radio\",\n                        model: {\n                          value: _vm.activeData.relationField,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.activeData, \"relationField\", $$v)\n                          },\n                          expression: \"activeData.relationField\",\n                        },\n                      },\n                      _vm._l(_vm.formFieldsOptions, function (item, i) {\n                        return _c(\n                          \"el-radio\",\n                          { key: i, attrs: { label: item.realVModel } },\n                          [_vm._v(\"\\n          \" + _vm._s(item.realLabel))]\n                        )\n                      }),\n                      1\n                    ),\n                  ]\n                : _vm._e(),\n            ],\n            2\n          )\n        : _vm._e(),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"默认值\" } },\n        [\n          _vm.activeData.__config__.jnpfKey === \"organizeSelect\"\n            ? _c(\"JnpfOrganizeSelect\", {\n                key: _vm.key,\n                attrs: {\n                  placeholder: \"选择默认值\",\n                  clearable: \"\",\n                  multiple: _vm.activeData.multiple,\n                  selectType: _vm.activeData.selectType,\n                  disabled: _vm.activeData.__config__.defaultCurrent,\n                  ableIds: _vm.activeData.ableIds,\n                },\n                model: {\n                  value: _vm.activeData.__config__.defaultValue,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData.__config__, \"defaultValue\", $$v)\n                  },\n                  expression: \"activeData.__config__.defaultValue\",\n                },\n              })\n            : _vm._e(),\n          _vm.activeData.__config__.jnpfKey === \"depSelect\"\n            ? _c(\"JnpfDepSelect\", {\n                key: _vm.key,\n                attrs: {\n                  placeholder: \"选择默认值\",\n                  clearable: \"\",\n                  multiple: _vm.activeData.multiple,\n                  selectType: _vm.activeData.selectType,\n                  ableIds: _vm.activeData.ableIds,\n                  disabled: _vm.activeData.__config__.defaultCurrent,\n                },\n                model: {\n                  value: _vm.activeData.__config__.defaultValue,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData.__config__, \"defaultValue\", $$v)\n                  },\n                  expression: \"activeData.__config__.defaultValue\",\n                },\n              })\n            : _vm._e(),\n          _vm.activeData.__config__.jnpfKey === \"posSelect\"\n            ? _c(\"JnpfPosSelect\", {\n                key: _vm.key,\n                attrs: {\n                  placeholder: \"选择默认值\",\n                  clearable: \"\",\n                  multiple: _vm.activeData.multiple,\n                  selectType: _vm.activeData.selectType,\n                  ableIds: _vm.activeData.ableIds,\n                  disabled: _vm.activeData.__config__.defaultCurrent,\n                },\n                model: {\n                  value: _vm.activeData.__config__.defaultValue,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData.__config__, \"defaultValue\", $$v)\n                  },\n                  expression: \"activeData.__config__.defaultValue\",\n                },\n              })\n            : _vm._e(),\n          _vm.activeData.__config__.jnpfKey === \"userSelect\"\n            ? _c(\"JnpfUserSelect\", {\n                key: _vm.key,\n                attrs: {\n                  placeholder: \"选择默认值\",\n                  clearable: \"\",\n                  multiple: _vm.activeData.multiple,\n                  selectType: _vm.activeData.selectType,\n                  ableIds: _vm.activeData.ableIds,\n                  disabled: _vm.activeData.__config__.defaultCurrent,\n                },\n                model: {\n                  value: _vm.activeData.__config__.defaultValue,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData.__config__, \"defaultValue\", $$v)\n                  },\n                  expression: \"activeData.__config__.defaultValue\",\n                },\n              })\n            : _vm._e(),\n          _vm.activeData.__config__.jnpfKey === \"usersSelect\"\n            ? _c(\"JnpfUsersSelect\", {\n                key: _vm.key,\n                attrs: {\n                  placeholder: \"选择默认值\",\n                  clearable: \"\",\n                  multiple: _vm.activeData.multiple,\n                  selectType: _vm.activeData.selectType,\n                  ableIds: _vm.activeData.ableIds,\n                  disabled: _vm.activeData.__config__.defaultCurrent,\n                },\n                model: {\n                  value: _vm.activeData.__config__.defaultValue,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData.__config__, \"defaultValue\", $$v)\n                  },\n                  expression: \"activeData.__config__.defaultValue\",\n                },\n              })\n            : _vm._e(),\n          _vm.activeData.__config__.jnpfKey === \"groupSelect\"\n            ? _c(\"JnpfGroupSelect\", {\n                attrs: {\n                  placeholder: \"选择默认值\",\n                  clearable: \"\",\n                  multiple: _vm.activeData.multiple,\n                  ableIds: _vm.activeData.ableIds,\n                  selectType: _vm.activeData.selectType,\n                  disabled: _vm.activeData.__config__.defaultCurrent,\n                },\n                model: {\n                  value: _vm.activeData.__config__.defaultValue,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData.__config__, \"defaultValue\", $$v)\n                  },\n                  expression: \"activeData.__config__.defaultValue\",\n                },\n              })\n            : _vm._e(),\n          _vm.activeData.__config__.jnpfKey === \"roleSelect\"\n            ? _c(\"JnpfRoleSelect\", {\n                key: _vm.key,\n                attrs: {\n                  placeholder: \"选择默认值\",\n                  clearable: \"\",\n                  multiple: _vm.activeData.multiple,\n                  selectType: _vm.activeData.selectType,\n                  ableIds: _vm.activeData.ableIds,\n                  disabled: _vm.activeData.__config__.defaultCurrent,\n                },\n                model: {\n                  value: _vm.activeData.__config__.defaultValue,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData.__config__, \"defaultValue\", $$v)\n                  },\n                  expression: \"activeData.__config__.defaultValue\",\n                },\n              })\n            : _vm._e(),\n          _vm.activeData.__config__.jnpfKey === \"editor\"\n            ? _c(\"el-input\", {\n                attrs: {\n                  value: _vm.setDefaultValue(\n                    _vm.activeData.__config__.defaultValue\n                  ),\n                  placeholder: \"请输入默认值\",\n                },\n                on: { input: _vm.onDefaultValueInput },\n              })\n            : _vm._e(),\n        ],\n        1\n      ),\n      _vm.activeData.__config__.jnpfKey !== \"editor\"\n        ? _c(\n            \"el-form-item\",\n            [\n              _c(\n                \"el-checkbox\",\n                {\n                  key: _vm.key,\n                  staticClass: \"currentCheckbox\",\n                  attrs: {\n                    label: \" true\",\n                    disabled: _vm.activeData.selectType === \"custom\",\n                  },\n                  on: {\n                    change: function ($event) {\n                      return _vm.defaultCurrentChange(\n                        _vm.activeData.__config__.defaultCurrent,\n                        _vm.activeData.__config__.jnpfKey\n                      )\n                    },\n                  },\n                  model: {\n                    value: _vm.activeData.__config__.defaultCurrent,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.activeData.__config__, \"defaultCurrent\", $$v)\n                    },\n                    expression: \"activeData.__config__.defaultCurrent\",\n                  },\n                },\n                [\n                  _c(\"span\", [\n                    _vm._v(\n                      \"\\n        默认为当前登录\" +\n                        _vm._s(\n                          _vm.getLabel(_vm.activeData.__config__.jnpfKey)\n                        ) +\n                        \"\\n      \"\n                    ),\n                  ]),\n                ]\n              ),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.activeData.__config__.jnpfKey !== \"editor\"\n        ? _c(\n            \"el-form-item\",\n            { attrs: { label: \"能否清空\" } },\n            [\n              _c(\"el-switch\", {\n                model: {\n                  value: _vm.activeData.clearable,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData, \"clearable\", $$v)\n                  },\n                  expression: \"activeData.clearable\",\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.activeData.__config__.jnpfKey !== \"editor\"\n        ? _c(\n            \"el-form-item\",\n            { attrs: { label: \"能否多选\" } },\n            [\n              _c(\"el-switch\", {\n                on: { change: _vm.multipleChange },\n                model: {\n                  value: _vm.activeData.multiple,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.activeData, \"multiple\", $$v)\n                  },\n                  expression: \"activeData.multiple\",\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"是否禁用\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.disabled,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData, \"disabled\", $$v)\n              },\n              expression: \"activeData.disabled\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"是否隐藏\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.__config__.noShow,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"noShow\", $$v)\n              },\n              expression: \"activeData.__config__.noShow\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"是否必填\" } },\n        [\n          _c(\"el-switch\", {\n            model: {\n              value: _vm.activeData.__config__.required,\n              callback: function ($$v) {\n                _vm.$set(_vm.activeData.__config__, \"required\", $$v)\n              },\n              expression: \"activeData.__config__.required\",\n            },\n          }),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}