{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/onlineDev/visualPortal/IndexPreview.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/onlineDev/visualPortal/IndexPreview.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getPortalInfo } from '@/api/onlineDev/portal'\nimport PortalLayout from '@/components/VisualPortal/Layout'\nimport { getDataInterfaceRes } from '@/api/systemData/dataInterface'\nexport default {\n  props: ['id'],\n  components: { PortalLayout },\n  data() {\n    return {\n      layout: [],\n      type: null,\n      linkType: null,\n      currentView: null,\n      url: '',\n      loading: false,\n      timerList: []\n    }\n  },\n  methods: {\n    onOpen() {\n      this.loading = true\n      this.layout = []\n      getPortalInfo(this.id).then(res => {\n        this.type = res.data.type || 0\n        this.linkType = res.data.linkType || 0\n        this.url = res.data.customUrl\n        this.refresh = res.data.refresh || {}\n        if (!res.data) return this.loading = false\n        if (res.data.type === 1) {\n          if (!res.data.customUrl && this.linkType === 1) return\n          this.currentView = (resolve) => require([`@/views/${res.data.customUrl}`], resolve)\n        } else {\n          if (!res.data.formData) return this.loading = false\n          let formData = JSON.parse(res.data.formData)\n          this.layout = this.filterList(JSON.parse(JSON.stringify(formData.layout)) || [])\n        }\n        this.loading = false\n      })\n    },\n    filterList(layout) {\n      const loop = list => {\n        for (let i = 0; i < list.length; i++) {\n          const item = list[i];\n          if (!(Array.isArray(item.visibility) && item.visibility.includes('pc')) && item.jnpfKey) {\n            list.splice(i, 1)\n            i--\n          }\n          if (item.children && item.children.length) loop(item.children)\n        }\n      }\n      loop(layout)\n      return layout\n    },\n    closeDialog() {\n      this.$emit('update:visible', false)\n      if (this.timerList.length) {\n        this.timerList.forEach((ele) => {\n          if (ele) clearInterval(ele)\n        })\n      }\n    }\n  }\n}\n",null]}