{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/printDev/log.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/printDev/log.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport request from \"@/utils/request\";\nexport default {\n  components: {},\n  props: {},\n  data() {\n    return {\n      pickerOptions: {\n        shortcuts: [\n          {\n            text: \"最近一周\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n              picker.$emit(\"pick\", [start, end]);\n            }\n          },\n          {\n            text: \"最近一个月\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n              picker.$emit(\"pick\", [start, end]);\n            }\n          },\n          {\n            text: \"最近三个月\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n              picker.$emit(\"pick\", [start, end]);\n            }\n          }\n        ]\n      },\n      list: [],\n      pagination: {\n        total: 0,\n        currentPage: 1,\n        pageSize: 20\n      },\n      loading: false,\n      listLoading: true,\n      title: \"\",\n      printTimeRange: [],\n      query: {\n        keyword: \"\",\n        printId: \"\",\n        startTime: undefined,\n        endTime: undefined,\n        currentPage: 0,\n        pageSize: 20\n      }\n    };\n  },\n  methods: {\n    show(row) {\n      this.title = row.fullName;\n      this.rowId = row.id;\n      this.initData();\n      this.loading = false;\n    },\n    initData() {\n      this.listLoading = true;\n      if (this.printTimeRange && this.printTimeRange.length > 0) {\n        this.query.startTime = +this.printTimeRange[0];\n        this.query.endTime = +this.printTimeRange[1];\n      } else {\n        this.query.startTime = ''\n        this.query.endTime = ''\n      }\n      let url = `/api/system/printLog/${this.rowId}`;\n      request({\n        url,\n        method: \"get\",\n        data: this.query\n      }).then(res => {\n        this.list = res.data.list;\n        this.pagination = res.data.pagination;\n        this.listLoading = false;\n      });\n    },\n    reset() {\n      this.query.keyword = \"\";\n      this.printTimeRange = [];\n      this.query.startTime = undefined;\n      this.query.endTime = undefined;\n      this.initData();\n    },\n    goBack() {\n      this.$emit(\"goBack\");\n    }\n  },\n  computed: {},\n  created() { },\n  mounted() { }\n};\n",null]}