{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Jnpf/TimePicker/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Jnpf/TimePicker/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.split\");\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'JnpfTimePicker',\n  components: {},\n  props: {\n    activeData: {\n      default: undefined\n    },\n    value: {\n      default: undefined\n    },\n    placeholder: {\n      type: String,\n      default: '请选择'\n    },\n    format: {\n      default: undefined\n    },\n    startTime: {\n      type: String,\n      default: undefined\n    },\n    endTime: {\n      type: String,\n      default: undefined\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      innerValue: this.value\n    };\n  },\n  watch: {\n    value: {\n      handler: function handler(val) {\n        this.innerValue = val;\n      },\n      immediate: true\n    },\n    readonly: function readonly(val) {\n      this.readOnly = val;\n    }\n  },\n  computed: {\n    valueFormat: function valueFormat() {\n      return this.format || 'HH:mm:ss';\n    },\n    realStartTime: function realStartTime() {\n      if (!this.startTime) return null;\n      if (this.startTime.split(':').length == 3) {\n        return this.startTime;\n      } else {\n        return this.startTime + ':00';\n      }\n    },\n    realEndTime: function realEndTime() {\n      if (!this.endTime) return null;\n      if (this.endTime.split(':').length == 3) {\n        return this.endTime;\n      } else {\n        return this.endTime + ':00';\n      }\n    },\n    pickerOptions: function pickerOptions() {\n      return {\n        selectableRange: [\"\".concat(this.realStartTime || '00:00:00', \" - \").concat(this.realEndTime || '23:59:59')]\n      };\n    },\n    readOnly: function readOnly() {\n      if (this.readonly) return true;\n      if (this.startTime && this.endTime && this.startTime > this.endTime) return true;\n      return false;\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {},\n  methods: {\n    change: function change() {\n      this.$emit('input', this.innerValue);\n      this.$emit('change', this.innerValue);\n    },\n    onblur: function onblur(event) {\n      this.$emit('blur', event);\n    }\n  }\n};",null]}