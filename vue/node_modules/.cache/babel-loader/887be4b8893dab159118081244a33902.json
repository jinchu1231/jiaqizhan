{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Screenfull/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Screenfull/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _screenfull = _interopRequireDefault(require(\"screenfull\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  props: {\n    isContainer: {\n      type: Boolean,\n      default: true\n    }\n  },\n  name: 'Screenfull',\n  data: function data() {\n    return {\n      refEle: '',\n      isFullscreen: false\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n    this.refEle = this.$options.parent.$el;\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.destroy();\n  },\n  methods: {\n    click: function click() {\n      if (!_screenfull.default.enabled) {\n        this.$message({\n          message: '不支持全屏',\n          type: 'warning'\n        });\n        return false;\n      }\n      if (this.isContainer) {\n        _screenfull.default.toggle(this.refEle);\n      } else {\n        _screenfull.default.toggle();\n      }\n    },\n    change: function change() {\n      this.isFullscreen = _screenfull.default.isFullscreen;\n    },\n    init: function init() {\n      if (_screenfull.default.enabled) {\n        _screenfull.default.on('change', this.change);\n      }\n    },\n    destroy: function destroy() {\n      if (_screenfull.default.enabled) {\n        _screenfull.default.off('change', this.change);\n      }\n    }\n  }\n};",null]}