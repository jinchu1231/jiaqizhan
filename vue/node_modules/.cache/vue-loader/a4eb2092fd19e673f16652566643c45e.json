{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/menu/components/NameSelect.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/menu/components/NameSelect.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getVisualTables, getTableInfoByTableName } from \"@/api/system/authorize\"\nexport default {\n\n  props: {\n\n    bindTable: {\n      default: ''\n    },\n    dataType: {\n      default: ''\n    },\n    menuType: {\n      default: ''\n    },\n    value: {\n      default: ''\n    },\n    title: {\n      default: ''\n    },\n    moduleId: {\n      type: String,\n      default: ''\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    treeData: {\n      type: Array,\n      default: () => []\n    },\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  data() {\n    return {\n      list: [],\n      innerValue: '',\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n      },\n      keyword: '',\n      total: 0,\n      checked: '',\n      checkedRow: {},\n      listLoading: false,\n      defaultProps: {\n        children: 'children',\n        label: 'tableName'\n      },\n      query: {\n        categoryId: '',\n        keyword: '',\n        dataType: null,\n      },\n      treeLoading: false,\n      inputHovering: false,\n      visible: false,\n      tableName: '',\n      linkId: '',\n    }\n  },\n  computed: {\n    showClose() {\n      let hasValue = this.value !== undefined && this.value !== null && this.value !== '';\n      let criteria = this.clearable &&\n        !this.disabled &&\n        this.inputHovering &&\n        hasValue;\n      return criteria;\n    }\n  },\n  methods: {\n    initData() {\n      this.listLoading = true\n      this.list = []\n      let query = {\n        keyword: this.keyword,\n        ...this.listQuery,\n      }\n      getTableInfoByTableName(this.linkId, this.tableName, this.menuType, this.dataType, query).then(res => {\n        this.list = res.data.list\n        this.total = res.data.pagination.total\n        this.listLoading = false\n      }).catch(() => { this.listLoading = false })\n    },\n    handleNodeClick(data) {\n      this.tableName = ''\n      this.linkId = ''\n      this.tableName = data.tableName\n      this.linkId = data.dbLink\n      this.reset()\n    },\n    reset() {\n      this.keyword = ''\n      this.search()\n    },\n    search() {\n      this.listQuery.currentPage = 1\n      this.listQuery.pageSize = 20\n      this.listQuery.sort = 'desc'\n      this.initData()\n    },\n    openDialog() {\n      if (!this.treeData.length) return this.$message.error(`请先进行数据连接！`)\n      this.visible = true\n      this.checked = ''\n      this.treeLoading = true\n      this.tableName = this.bindTable\n      this.$nextTick(() => {\n        this.tableName = this.treeData[0].tableName\n        this.linkId = this.treeData[0].dbLink\n        this.$refs.treeBox.setCurrentKey(this.tableName)\n        this.treeLoading = false\n        this.reset()\n      })\n    },\n    clear() {\n      this.checked = ''\n      this.checkedRow = {}\n      this.$emit('closeForm', this.checked, this.checkedRow)\n    },\n    select() {\n      if (!this.checked) return this.$message.warning(`请选择一条数据！`)\n      this.visible = false\n      this.$emit('closeForm', this.checked, this.checkedRow)\n    },\n    rowClick(row) {\n      this.checked = row.field\n      this.checkedRow = row\n      this.checkedRow.tableName = this.tableName\n    }\n  }\n}\n",null]}