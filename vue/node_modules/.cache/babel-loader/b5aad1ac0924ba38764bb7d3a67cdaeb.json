{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Jnpf/OrganizeSelect/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Jnpf/OrganizeSelect/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es6.regexp.split\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nrequire(\"regenerator-runtime/runtime\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/asyncToGenerator.js\"));\nvar _resizeEvent = require(\"element-ui/src/utils/resize-event\");\nvar _department = require(\"@/api/permission/department\");\nvar _organize = require(\"@/api/permission/organize\");\nvar _emitter = _interopRequireDefault(require(\"element-ui/src/mixins/emitter\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar dispatch = _emitter.default.methods.dispatch;\nvar _default2 = exports.default = {\n  name: 'JnpfOrganizeSelect',\n  inject: {\n    elForm: {\n      default: ''\n    },\n    elFormItem: {\n      default: ''\n    }\n  },\n  props: {\n    value: {\n      default: function _default() {\n        return [];\n      }\n    },\n    placeholder: {\n      type: String,\n      default: '请选择'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    collapseTags: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    auth: {\n      type: Boolean,\n      default: false\n    },\n    isOnlyOrg: {\n      type: Boolean,\n      default: false\n    },\n    size: String,\n    currOrgId: {\n      default: '0'\n    },\n    parentId: {\n      default: ''\n    },\n    selectType: {\n      type: String,\n      default: 'all'\n    },\n    ableIds: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      treeData: [],\n      allList: [],\n      keyword: '',\n      innerValue: '',\n      visible: false,\n      loading: false,\n      props: {\n        children: 'children',\n        label: 'fullName',\n        isLeaf: 'isLeaf'\n      },\n      selectedData: [],\n      selectedIds: [],\n      tagsList: [],\n      inputHovering: false,\n      inputWidth: 0,\n      initialInputHeight: 0\n    };\n  },\n  computed: {\n    showClose: function showClose() {\n      var hasValue = Array.isArray(this.value) && this.value.length > 0;\n      var criteria = this.clearable && !this.selectDisabled && this.inputHovering && hasValue;\n      return criteria;\n    },\n    currentPlaceholder: function currentPlaceholder() {\n      if (this.multiple && Array.isArray(this.value) && this.value.length) {\n        return '';\n      } else {\n        return this.placeholder;\n      }\n    },\n    selectDisabled: function selectDisabled() {\n      return this.disabled || (this.elForm || {}).disabled;\n    },\n    _elFormItemSize: function _elFormItemSize() {\n      return (this.elFormItem || {}).elFormItemSize;\n    },\n    selectSize: function selectSize() {\n      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n    },\n    collapseTagSize: function collapseTagSize() {\n      return ['small', 'mini'].indexOf(this.selectSize) > -1 ? 'mini' : 'small';\n    }\n  },\n  created: function created() {\n    this.getData();\n  },\n  mounted: function mounted() {\n    var _this = this;\n    (0, _resizeEvent.addResizeListener)(this.$el, this.handleResize);\n    var reference = this.$refs.reference;\n    if (reference && reference.$el) {\n      var sizeMap = {\n        medium: 36,\n        small: 32,\n        mini: 28\n      };\n      var input = reference.$el.querySelector('input');\n      this.initialInputHeight = input.getBoundingClientRect().height || sizeMap[this.selectSize];\n    }\n    if (this.multiple) {\n      this.resetInputHeight();\n    }\n    this.$nextTick(function () {\n      if (reference && reference.$el) {\n        _this.inputWidth = reference.$el.getBoundingClientRect().width;\n      }\n    });\n    this.setDefault();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$el && this.handleResize) (0, _resizeEvent.removeResizeListener)(this.$el, this.handleResize);\n  },\n  watch: {\n    value: function value(val) {\n      this.setDefault();\n    },\n    selectDisabled: function selectDisabled() {\n      var _this2 = this;\n      this.$nextTick(function () {\n        _this2.resetInputHeight();\n      });\n    },\n    allList: {\n      handler: function handler(val) {\n        this.setDefault();\n      },\n      deep: true\n    }\n  },\n  methods: (0, _defineProperty2.default)((0, _defineProperty2.default)({\n    getData: function () {\n      var _getData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n        var treeData, topItem, method, departIds, query;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.$store.dispatch('generator/getDepTree');\n            case 2:\n              treeData = _context.sent;\n              topItem = {\n                fullName: \"顶级节点\",\n                hasChildren: true,\n                id: \"-1\",\n                icon: \"icon-ym icon-ym-tree-organization3\",\n                organize: '顶级节点',\n                organizeIds: ['-1']\n              };\n              this.allList = [].concat((0, _toConsumableArray2.default)(this.$store.getters.departmentList), [topItem]);\n              if (!(this.selectType === 'all')) {\n                _context.next = 17;\n                break;\n              }\n              if (!this.auth) {\n                _context.next = 14;\n                break;\n              }\n              if (!(this.isOnlyOrg && this.parentId === '-1')) {\n                _context.next = 10;\n                break;\n              }\n              this.treeData = [topItem];\n              return _context.abrupt(\"return\");\n            case 10:\n              method = this.isOnlyOrg ? _organize.getOrganizeSelectorByAuth : _department.getDepartmentSelectorByAuth;\n              method(this.currOrgId).then(function (res) {\n                _this3.treeData = res.data.list;\n              });\n              _context.next = 15;\n              break;\n            case 14:\n              this.treeData = treeData;\n            case 15:\n              _context.next = 23;\n              break;\n            case 17:\n              if (this.ableIds.length) {\n                _context.next = 20;\n                break;\n              }\n              this.treeData = [];\n              return _context.abrupt(\"return\");\n            case 20:\n              departIds = this.ableIds ? this.ableIds.map(function (o) {\n                return o[o.length - 1];\n              }) : [];\n              query = {\n                departIds: departIds\n              };\n              (0, _organize.getOrgByOrganizeCondition)(query).then(function (res) {\n                _this3.treeData = res.data.list;\n              });\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n      return getData;\n    }(),\n    onClose: function onClose() {},\n    clear: function clear() {\n      if (this.selectDisabled) return;\n      this.innerValue = '';\n      this.selectedData = [];\n      this.selectedIds = [];\n      this.tagsList = [];\n      this.$emit('input', []);\n      this.$emit('change', [], []);\n      dispatch.call(this, 'ElFormItem', 'el.form.change', []);\n    },\n    openDialog: function openDialog() {\n      if (this.selectDisabled) return;\n      this.keyword = '';\n      this.treeData = [];\n      this.getData();\n      this.setDefault();\n      this.visible = true;\n    },\n    search: function search() {\n      this.$refs.tree && this.$refs.tree.filter(this.keyword);\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data[this.props.label].indexOf(value) !== -1;\n    },\n    getNodePath: function getNodePath(node) {\n      var fullPath = [];\n      var loop = function loop(node) {\n        if (node.level) fullPath.unshift(node.data);\n        if (node.parent) loop(node.parent);\n      };\n      loop(node);\n      return fullPath;\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      if (data.disabled) return;\n      var currId = data.organizeIds;\n      var currData = data.organize;\n      if (this.multiple) {\n        var boo = this.selectedIds.some(function (o) {\n          return o.join('/') === currId.join('/');\n        });\n        if (boo) return;\n        this.selectedIds.push(currId);\n        this.selectedData.push(currData);\n      } else {\n        this.selectedIds = [currId];\n        this.selectedData = [currData];\n      }\n    },\n    removeAll: function removeAll() {\n      this.selectedData = [];\n      this.selectedIds = [];\n    },\n    removeData: function removeData(index) {\n      this.selectedData.splice(index, 1);\n      this.selectedIds.splice(index, 1);\n    },\n    confirm: function confirm() {\n      var selectedData = [];\n      for (var i = 0; i < this.selectedIds.length; i++) {\n        var item = [];\n        var selectedNames = this.selectedData[i].split('/');\n        for (var j = 0; j < this.selectedIds[i].length; j++) {\n          item.push({\n            id: this.selectedIds[i][j],\n            fullName: selectedNames[j]\n          });\n        }\n        selectedData.push(item);\n      }\n      if (this.multiple) {\n        this.innerValue = '';\n        this.tagsList = JSON.parse(JSON.stringify(this.selectedData));\n        this.$emit('input', this.selectedIds);\n        this.$emit('change', this.selectedIds, selectedData);\n        dispatch.call(this, 'ElFormItem', 'el.form.change', this.selectedIds);\n      } else {\n        this.innerValue = this.selectedData.join(',');\n        this.$emit('input', this.selectedIds[0] || []);\n        this.$emit('change', this.selectedIds[0] || [], selectedData[0] || []);\n        dispatch.call(this, 'ElFormItem', 'el.form.change', this.selectedIds[0] || []);\n      }\n      this.visible = false;\n    },\n    setDefault: function setDefault() {\n      var _this4 = this;\n      if (!this.value || !this.value.length) {\n        this.innerValue = '';\n        this.selectedIds = [];\n        this.selectedData = [];\n        this.tagsList = [];\n        this.$nextTick(function () {\n          _this4.resetInputHeight();\n        });\n        return;\n      }\n      var selectedIds = this.multiple ? this.value : [this.value];\n      this.selectedIds = JSON.parse(JSON.stringify(selectedIds));\n      var textList = [];\n      for (var i = 0; i < selectedIds.length; i++) {\n        var item = selectedIds[i];\n        var textItem = JSON.parse(JSON.stringify(item));\n        for (var j = 0; j < item.length; j++) {\n          inner: for (var ii = 0; ii < this.allList.length; ii++) {\n            if (item[j] === this.allList[ii].id) {\n              textItem[j] = this.allList[ii].fullName;\n              break inner;\n            }\n          }\n        }\n        textList.push(textItem);\n      }\n      this.selectedData = textList.map(function (o) {\n        return o.join('/');\n      });\n      if (this.multiple) {\n        this.innerValue = '';\n        this.tagsList = JSON.parse(JSON.stringify(this.selectedData));\n        this.$nextTick(function () {\n          _this4.resetInputHeight();\n        });\n      } else {\n        this.innerValue = this.selectedData.join(',');\n      }\n    },\n    deleteTag: function deleteTag(event, index) {\n      this.selectedData.splice(index, 1);\n      this.selectedIds.splice(index, 1);\n      this.confirm();\n      event.stopPropagation();\n    },\n    handleClearClick: function handleClearClick(event) {\n      this.selectedData = [];\n      this.selectedIds = [];\n      this.confirm();\n      event.stopPropagation();\n    },\n    resetInputWidth: function resetInputWidth() {\n      this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;\n    },\n    handleResize: function handleResize() {\n      this.resetInputWidth();\n      if (this.multiple) this.resetInputHeight();\n    },\n    resetInputHeight: function resetInputHeight() {\n      var _this5 = this;\n      if (this.collapseTags) return;\n      this.$nextTick(function () {\n        if (!_this5.$refs.reference) return;\n        var inputChildNodes = _this5.$refs.reference.$el.childNodes;\n        var input = [].filter.call(inputChildNodes, function (item) {\n          return item.tagName === 'INPUT';\n        })[0];\n        var tags = _this5.$refs.tags;\n        var tagsHeight = tags ? Math.round(tags.getBoundingClientRect().height) : 0;\n        var sizeInMap = _this5.initialInputHeight || 40;\n        input.style.height = _this5.selectedData.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tagsHeight + (tagsHeight > sizeInMap ? 6 : 0) : 0, sizeInMap) + 'px';\n      });\n    }\n  }, \"resetInputWidth\", function resetInputWidth() {\n    this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;\n  }), \"handleResize\", function handleResize() {\n    this.resetInputWidth();\n    if (this.multiple) this.resetInputHeight();\n  })\n};",null]}