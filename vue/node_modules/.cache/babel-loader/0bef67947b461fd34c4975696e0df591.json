{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/integrationProcess/PropPanel/GetDataNode.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/integrationProcess/PropPanel/GetDataNode.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _condition = _interopRequireDefault(require(\"@/components/ColumnDesign/condition\"));\nvar _FormListModal = _interopRequireDefault(require(\"./FormListModal\"));\nvar _InterfaceDialog = _interopRequireDefault(require(\"@/components/Process/PropPanel/InterfaceDialog\"));\nvar _visualDev = require(\"@/api/onlineDev/visualDev\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar interfaceSourceTypeOptions = [{\n  id: 2,\n  fullName: '自定义'\n}, {\n  id: 3,\n  fullName: '为空'\n}];\nvar emptyChildItem = {\n  field: '',\n  symbol: '==',\n  fieldValueType: 1,\n  fieldValue: undefined,\n  jnpfKey: '',\n  fieldValueJnpfKey: '',\n  cellKey: +new Date()\n};\nvar emptyItem = {\n  logic: 'and',\n  groups: [emptyChildItem]\n};\nvar _default2 = exports.default = {\n  name: 'addDataNode',\n  components: {\n    Condition: _condition.default,\n    FlowFormModal: _FormListModal.default,\n    InterfaceDialog: _InterfaceDialog.default\n  },\n  props: {\n    formConf: {\n      type: Object,\n      default: function _default() {}\n    },\n    integrateType: {\n      type: Number,\n      default: 1\n    },\n    formFieldsOptions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    usedFormItems: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      dataForm: JSON.parse(JSON.stringify(this.formConf)),\n      interfaceSourceTypeOptions: interfaceSourceTypeOptions\n    };\n  },\n  methods: {\n    getItem: function getItem() {\n      var item = this.$refs.base && this.$refs.base.getData() || '';\n      this.dataForm.ruleList = item ? item.conditionList : [];\n      if (!this.validData()) {\n        return '';\n      }\n      return this.dataForm;\n    },\n    onFormTypeChange: function onFormTypeChange() {\n      this.handleNull();\n    },\n    handleNull: function handleNull() {\n      this.dataForm.formName = '';\n      this.dataForm.formId = '';\n      this.dataForm.formFieldList = [];\n      this.dataForm.ruleList = [];\n      this.dataForm.interfaceTemplateJson = [];\n    },\n    validData: function validData() {\n      var isOk = true;\n      for (var i = 0; i < this.dataForm.ruleList.length; i++) {\n        var e = this.dataForm.ruleList[i];\n        for (var j = 0; j < e.groups.length; j++) {\n          var child = e.groups[j];\n          if (!child.field) {\n            this.$message.warning('条件字段不能为空');\n            isOk = false;\n            return;\n          }\n          if (!child.symbol) {\n            this.$message.warning('条件符号不能为空');\n            isOk = false;\n            return;\n          }\n          if (!['null', 'notNull'].includes(child.symbol) && (!child.fieldValue || this.jnpf.isEmpty(child.fieldValue)) && (!['inputNumber', 'calculate'].includes(child.jnpfKey) || ['inputNumber', 'calculate'].includes(child.jnpfKey) && child.fieldValue !== 0)) {\n            this.$message.warning('数据值不能为空');\n            isOk = false;\n            return;\n          }\n        }\n      }\n      return isOk;\n    },\n    onInterfaceChange: function onInterfaceChange(id, item) {\n      if (!id) return this.handleNull();\n      if (this.dataForm.formId === id) return;\n      this.dataForm.formName = item.fullName;\n      this.dataForm.formId = id;\n      this.dataForm.ruleList = [];\n      var formFieldList = item.fieldJson ? JSON.parse(item.fieldJson) : [];\n      this.dataForm.formFieldList = formFieldList.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          id: o.defaultValue,\n          fullName: o.field,\n          label: o.field ? o.defaultValue + '(' + o.field + ')' : o.defaultValue\n        });\n      });\n      this.dataForm.interfaceTemplateJson = (item.templateJson || []).map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          sourceType: 2,\n          relationField: ''\n        });\n      });\n    },\n    onFormIdChange: function onFormIdChange(id, item) {\n      if (!id) return this.handleNull();\n      this.dataForm.formName = item.fullName;\n      this.dataForm.formId = id;\n      this.dataForm.ruleList = [];\n      this.getFormFieldList(id);\n    },\n    getFormFieldList: function getFormFieldList(id) {\n      var _this = this;\n      (0, _visualDev.getConfigData)(id).then(function (res) {\n        var _res$data = res.data,\n          formData = _res$data.formData,\n          enableFlow = _res$data.enableFlow,\n          flowId = _res$data.flowId;\n        var formJson = {},\n          fieldList = [];\n        if (formData) formJson = JSON.parse(formData);\n        fieldList = formJson.fields || [];\n        var list = _this.transformFieldList(fieldList);\n        _this.dataForm.formFieldList = list.map(function (o) {\n          return _objectSpread(_objectSpread({}, o), {}, {\n            label: o.fullName ? o.id + '(' + o.fullName + ')' : o.id\n          });\n        });\n      });\n    },\n    transformFormJson: function transformFormJson(list) {\n      var fieldList = list.map(function (o) {\n        return {\n          __config__: {\n            label: o.filedName,\n            jnpfKey: o.jnpfKey || '',\n            required: o.required || false\n          },\n          __vModel__: o.filedId,\n          multiple: o.multiple || false\n        };\n      });\n      return fieldList;\n    },\n    transformFieldList: function transformFieldList(formFieldList) {\n      var list = [];\n      var loop = function loop(data, parent) {\n        if (!data) return;\n        if (data.__vModel__ && data.__config__.jnpfKey !== 'table') {\n          var isTableChild = parent && parent.__config__ && parent.__config__.jnpfKey === 'table';\n          list.push(_objectSpread({\n            id: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n            fullName: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label\n          }, data));\n        }\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d, parent);\n        });\n        if (data.__config__ && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data);\n        }\n      };\n      loop(formFieldList);\n      return list;\n    }\n  }\n};",null]}