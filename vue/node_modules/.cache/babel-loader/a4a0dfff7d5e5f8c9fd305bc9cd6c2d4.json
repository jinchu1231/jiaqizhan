{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/parser/Parser.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/parser/Parser.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.to-string\");\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es6.object.keys\");\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _babelHelperVueJsxMergeProps = _interopRequireDefault(require(\"@vue/babel-helper-vue-jsx-merge-props\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nvar _utils = require(\"@/utils\");\nvar _index = require(\"@/components/Generator/utils/index.js\");\nvar _jnpf = _interopRequireDefault(require(\"@/utils/jnpf\"));\nvar _render = _interopRequireDefault(require(\"@/components/Generator/render/render.js\"));\nvar _comConfig = require(\"@/components/Generator/generator/comConfig\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _vuex = require(\"vuex\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar formClass = 'form-' + _jnpf.default.idGenerator();\nvar layouts = {\n  colFormItem: function colFormItem(h, scheme) {\n    var _this = this;\n    var config = scheme.__config__;\n    var listeners = buildListeners.call(this, scheme);\n    var labelWidth = config.labelWidth ? \"\".concat(config.labelWidth, \"px\") : null;\n    var label = config.label ? config.label + (this.formConf.labelSuffix || '') : '';\n    if (config.showLabel === false) labelWidth = '0';\n    var Item = config.jnpfKey === 'cascader' ? h(\"JnpfCascader\", (0, _babelHelperVueJsxMergeProps.default)([{}, {\n      \"props\": {\n        props: scheme.props\n      }\n    }, {\n      \"attrs\": {\n        \"placeholder\": scheme.placeholder,\n        \"options\": scheme.options,\n        \"disabled\": scheme.disabled,\n        \"show-all-levels\": scheme.showAllLevels,\n        \"separator\": scheme.separator,\n        \"clearable\": scheme.clearable,\n        \"filterable\": scheme.filterable,\n        \"multiple\": scheme.multiple\n      },\n      \"style\": scheme.style,\n      \"on\": {\n        \"change\": function change(val) {\n          return _this.onCascaderChange(val, scheme.on);\n        },\n        \"blur\": function blur(val) {\n          return _this.onCascaderBlur(val, scheme.on);\n        }\n      },\n      \"key\": scheme.__config__.renderKey,\n      \"model\": {\n        value: _this[_this.formConf.formModel][scheme.__vModel__],\n        callback: function callback($$v) {\n          _this.$set(_this[_this.formConf.formModel], scheme.__vModel__, $$v);\n        }\n      }\n    }])) : h(_render.default, {\n      \"attrs\": {\n        \"formData\": this[this.formConf.formModel],\n        \"conf\": scheme,\n        \"relations\": config.jnpfKey === 'table' ? this.relations : undefined\n      },\n      \"on\": _objectSpread({}, listeners),\n      \"ref\": config.jnpfKey === 'table' ? scheme.__vModel__ : undefined,\n      \"key\": scheme.__config__.renderKey\n    });\n    var visibility = !config.visibility || Array.isArray(config.visibility) && config.visibility.includes('pc');\n    if (visibility && !config.noShow) {\n      var toolTip = h(\"el-col\", {\n        \"attrs\": {\n          \"span\": config.span\n        },\n        \"class\": config.className\n      }, [h(\"jnpf-form-tip-item\", {\n        \"attrs\": {\n          \"label-width\": labelWidth,\n          \"prop\": scheme.__vModel__,\n          \"tip-label\": config.label && config.showLabel ? config.tipLabel : \"\",\n          \"label\": config.showLabel ? label : ''\n        },\n        \"key\": config.renderKey\n      }, [Item])]);\n      if (config.jnpfKey === 'alert') {\n        toolTip = h(\"el-col\", {\n          \"attrs\": {\n            \"span\": config.span\n          },\n          \"class\": config.className\n        }, [h(\"jnpf-form-tip-item\", {\n          \"attrs\": {\n            \"label-width\": labelWidth,\n            \"prop\": scheme.__vModel__,\n            \"tip-label\": config.label && config.showLabel ? config.tipLabel : \"\",\n            \"label\": config.showLabel ? config.label : ''\n          },\n          \"key\": config.renderKey\n        }, [h(\"div\", {\n          \"style\": \"word-break: break-all\"\n        }, [Item])])]);\n      }\n      if (config.jnpfKey === 'table') {\n        toolTip = h(\"el-col\", {\n          \"attrs\": {\n            \"span\": config.span\n          },\n          \"class\": config.className\n        }, [h(\"el-form-item\", {\n          \"attrs\": {\n            \"label-width\": labelWidth,\n            \"prop\": scheme.__vModel__,\n            \"label\": config.showLabel ? config.label : ''\n          },\n          \"key\": config.renderKey\n        }, [Item])]);\n      }\n      return toolTip;\n    }\n  },\n  rowFormItem: function rowFormItem(h, scheme) {\n    var _this2 = this;\n    var listeners = buildListeners.call(this, scheme);\n    var config = scheme.__config__;\n    var visibility = !config.visibility || Array.isArray(config.visibility) && config.visibility.includes('pc');\n    if (!visibility || config.noShow) return;\n    if (scheme.__config__.jnpfKey === 'tab') {\n      return h(\"el-col\", {\n        \"attrs\": {\n          \"span\": scheme.__config__.span\n        },\n        \"class\": \"mb-10\"\n      }, [h(\"el-tabs\", {\n        \"attrs\": {\n          \"type\": scheme.type,\n          \"tab-position\": scheme.tabPosition\n        },\n        \"on\": _objectSpread({}, listeners),\n        \"model\": {\n          value: scheme.__config__.active,\n          callback: function callback($$v) {\n            _this2.$set(scheme.__config__, \"active\", $$v);\n          }\n        }\n      }, [scheme.__config__.children.map(function (item, i) {\n        var child = renderChildren.call(_this2, h, item);\n        return h(\"el-tab-pane\", {\n          \"attrs\": {\n            \"name\": item.name,\n            \"label\": item.title\n          }\n        }, [h(\"el-row\", [child])]);\n      })])]);\n    }\n    if (scheme.__config__.jnpfKey === 'collapse') {\n      return h(\"el-col\", {\n        \"attrs\": {\n          \"span\": scheme.__config__.span\n        },\n        \"class\": \"mb-20\"\n      }, [h(\"el-collapse\", {\n        \"attrs\": {\n          \"accordion\": scheme.accordion\n        },\n        \"on\": _objectSpread({}, listeners),\n        \"model\": {\n          value: scheme.__config__.active,\n          callback: function callback($$v) {\n            _this2.$set(scheme.__config__, \"active\", $$v);\n          }\n        }\n      }, [scheme.__config__.children.map(function (item, i) {\n        var child = renderChildren.call(_this2, h, item);\n        return h(\"el-collapse-item\", {\n          \"key\": item.name,\n          \"attrs\": {\n            \"title\": item.title,\n            \"name\": item.name\n          }\n        }, [h(\"el-row\", [child])]);\n      })])]);\n    }\n    if (scheme.__config__.jnpfKey === 'tableGrid') {\n      return h(\"el-col\", {\n        \"attrs\": {\n          \"span\": scheme.__config__.span\n        }\n      }, [h(\"el-row\", {\n        \"attrs\": {\n          \"gutter\": scheme.__config__.gutter\n        }\n      }, [h(\"table\", {\n        \"class\": \"table-grid-box\",\n        \"style\": {\n          '--borderType': scheme.__config__.borderType,\n          '--borderColor': scheme.__config__.borderColor,\n          '--borderWidth': scheme.__config__.borderWidth + 'px'\n        }\n      }, [h(\"tbody\", [scheme.__config__.children.map(function (item) {\n        return h(\"tr\", [item.__config__.children.map(function (it, colIndex) {\n          var child = renderChildren.call(_this2, h, it);\n          return !it.__config__.merged ? h(\"td\", {\n            \"attrs\": {\n              \"colspan\": it.__config__.colspan || 1,\n              \"rowspan\": it.__config__.rowspan || 1\n            },\n            \"style\": {\n              '--backgroundColor': it.__config__.backgroundColor\n            }\n          }, [h(\"el-col\", [h(\"el-row\", {\n            \"attrs\": {\n              \"gutter\": scheme.__config__.gutter\n            }\n          }, [child])])]) : '';\n        })]);\n      })])])])]);\n    }\n    var child = renderChildren.apply(this, arguments);\n    if (scheme.__config__.jnpfKey === 'table') {\n      if (!scheme.__config__.noShow) this.tableRefs[scheme.__vModel__] = scheme;\n      var param = _objectSpread(_objectSpread({}, scheme), {}, {\n        config: scheme\n      });\n      return layouts.colFormItem.call(this, h, param);\n    }\n    if (scheme.__config__.jnpfKey === 'card') {\n      var toolTip = scheme.header;\n      if (scheme.__config__.tipLabel) {\n        toolTip = h(\"span\", {\n          \"slot\": \"label\"\n        }, [scheme.header, h(\"el-tooltip\", {\n          \"attrs\": {\n            \"placement\": \"top\",\n            \"content\": scheme.__config__.tipLabel\n          }\n        }, [h(\"a\", {\n          \"class\": 'el-icon-question tooltip-question',\n          \"style\": 'margin-left:4px'\n        })])]);\n      }\n      var header = '';\n      if (scheme.header) {\n        header = h(\"div\", {\n          \"slot\": \"header\"\n        }, [h(\"span\", [toolTip])]);\n      }\n      return h(\"el-col\", {\n        \"attrs\": {\n          \"span\": scheme.__config__.span\n        },\n        \"class\": \"item-card\"\n      }, [h(\"el-card\", {\n        \"attrs\": {\n          \"shadow\": scheme.shadow,\n          \"header\": scheme.header\n        },\n        \"class\": \"mb-20\"\n      }, [header, child])]);\n    }\n    if (scheme.__config__.jnpfKey === 'row') {\n      if (scheme.type === 'flex') {\n        child = h(\"el-row\", {\n          \"attrs\": {\n            \"type\": scheme.type,\n            \"justify\": scheme.justify,\n            \"align\": scheme.align\n          }\n        }, [child]);\n      }\n      return h(\"el-col\", {\n        \"attrs\": {\n          \"span\": scheme.__config__.span\n        }\n      }, [h(\"el-row\", {\n        \"attrs\": {\n          \"gutter\": scheme.gutter\n        }\n      }, [child])]);\n    }\n  }\n};\nfunction renderFrom(h) {\n  var formConfCopy = this.formConfCopy;\n  var classStyle = [formClass];\n  if (formConfCopy.formStyle) classStyle.push(formConfCopy.formStyle);\n  if (formConfCopy.className) classStyle = [].concat((0, _toConsumableArray2.default)(classStyle), (0, _toConsumableArray2.default)(formConfCopy.className));\n  return h(\"el-row\", {\n    \"attrs\": {\n      \"gutter\": formConfCopy.gutter\n    },\n    \"class\": classStyle\n  }, [h(\"el-form\", (0, _babelHelperVueJsxMergeProps.default)([{\n    \"attrs\": {\n      \"size\": formConfCopy.size,\n      \"label-position\": formConfCopy.labelPosition,\n      \"disabled\": formConfCopy.disabled,\n      \"label-width\": \"\".concat(formConfCopy.labelWidth, \"px\")\n    },\n    \"ref\": formConfCopy.formRef\n  }, {\n    \"props\": {\n      model: this[formConfCopy.formModel]\n    }\n  }, {\n    \"attrs\": {\n      \"rules\": this[formConfCopy.formRules]\n    },\n    \"nativeOn\": {\n      \"submit\": function submit(event) {\n        event.preventDefault();\n      }\n    }\n  }]), [renderFormItem.call(this, h, formConfCopy.fields)])]);\n}\nfunction formBtns(h) {\n  return h(\"el-col\", [h(\"el-form-item\", {\n    \"attrs\": {\n      \"size\": \"large\"\n    }\n  }, [h(\"el-button\", {\n    \"attrs\": {\n      \"type\": \"primary\"\n    },\n    \"on\": {\n      \"click\": this.submitForm\n    }\n  }, [\"\\u63D0\\u4EA4\"]), h(\"el-button\", {\n    \"on\": {\n      \"click\": this.resetForm\n    }\n  }, [\"\\u91CD\\u7F6E\"])])]);\n}\nfunction renderFormItem(h, elementList) {\n  var _this3 = this;\n  return elementList.map(function (scheme) {\n    var config = scheme.__config__;\n    var layout = layouts[config.layout];\n    if (layout) {\n      return layout.call(_this3, h, scheme);\n    }\n    throw new Error(\"\\u6CA1\\u6709\\u4E0E\".concat(config.layout, \"\\u5339\\u914D\\u7684layout\"));\n  });\n}\nfunction renderChildren(h, scheme) {\n  var config = scheme.__config__;\n  if (!Array.isArray(config.children)) return null;\n  return renderFormItem.call(this, h, config.children);\n}\nfunction setValue(event, config, scheme) {\n  this.$set(config, 'defaultValue', event);\n  this.$set(this[this.formConf.formModel], scheme.__vModel__, event);\n}\nfunction buildListeners(scheme) {\n  var _this4 = this;\n  var config = scheme.__config__;\n  var listeners = {};\n  if (scheme.on) {\n    // 响应 组件事件\n    Object.keys(scheme.on).forEach(function (key) {\n      var str = scheme.on[key];\n      var func = _this4.jnpf.getScriptFunc.call(_this4, str);\n      if (!func) return;\n      listeners[key] = function (params) {\n        if (key === 'change') {\n          var data = '';\n          if (['select', 'radio', 'checkbox'].includes(config.jnpfKey)) {\n            var options = scheme.options;\n            if (scheme.multiple || config.jnpfKey === 'checkbox') {\n              var _data = [];\n              outer: for (var i = 0; i < params[0].length; i++) {\n                inner: for (var j = 0; j < options.length; j++) {\n                  if (params[0][i] === options[j][scheme.props.value]) {\n                    _data.push(options[j]);\n                    break inner;\n                  }\n                }\n              }\n              data = _data;\n            } else {\n              var _data2 = {};\n              for (var _i = 0; _i < options.length; _i++) {\n                if (params[0] === options[_i][scheme.props.value]) {\n                  _data2 = options[_i];\n                  break;\n                }\n              }\n              data = _data2;\n            }\n          } else if (config.jnpfKey === 'inputNumber') {\n            data = params[0];\n          } else {\n            data = params.length > 1 ? params[1] : params[0];\n          }\n          if (config.jnpfKey === 'popupSelect' || config.jnpfKey === 'relationForm') _this4.setTransferFormData(data, config, config.jnpfKey);\n          func.call(_this4, _objectSpread({\n            data: data\n          }, _this4.parameter));\n          _this4.handleRelation(scheme.__vModel__);\n        } else {\n          func.call(_this4, _objectSpread({\n            data: params[0]\n          }, _this4.parameter));\n        }\n      };\n    });\n  }\n  // 响应 render.js 中的 vModel $emit('input', val)\n  listeners.input = function (event) {\n    return setValue.call(_this4, event, config, scheme);\n  };\n  return listeners;\n}\nvar _default = exports.default = {\n  components: {\n    render: _render.default\n  },\n  props: {\n    formConf: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    var _this5 = this;\n    var data = (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({\n      formConfCopy: (0, _utils.deepClone)(this.formConf)\n    }, this.formConf.formModel, {}), this.formConf.formRules, {}), \"options\", {}), \"tableRefs\", {}), \"relations\", {}), \"isTableValid\", false);\n    this.initCss(data.formConfCopy);\n    this.initFormData(data.formConfCopy.fields, data[this.formConf.formModel]);\n    this.initRelationForm(data.formConfCopy.fields);\n    this.buildRules(data.formConfCopy.fields, data[this.formConf.formRules]);\n    this.buildOptions(data.formConfCopy.fields, data.options, data[this.formConf.formModel]);\n    this.buildRelations(data.formConfCopy.fields, data.relations);\n    this.$nextTick(function () {\n      _this5.onLoad(data.formConfCopy);\n    });\n    return data;\n  },\n  provide: function provide() {\n    return {\n      parameter: this.parameter\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, (0, _vuex.mapGetters)(['userInfo'])), {}, {\n    formDataConf: function formDataConf() {\n      var name = this.formConf.formModel;\n      return this[name];\n    },\n    parameter: function parameter() {\n      var oldFormData = this.formConfCopy.formData ? this.formConfCopy.formData : {};\n      this[this.formConf.formModel].id = oldFormData.id || '';\n      this[this.formConf.formModel].flowId = oldFormData.flowId || '';\n      return {\n        formData: this[this.formConf.formModel],\n        setFormData: this.setFormData,\n        setShowOrHide: this.setShowOrHide,\n        setRequired: this.setRequired,\n        setDisabled: this.setDisabled,\n        onlineUtils: this.jnpf.onlineUtils\n      };\n    }\n  }),\n  mounted: function mounted() {\n    var _this6 = this;\n    this.initRelationData();\n    this.$nextTick(function () {\n      _this6.$refs[_this6.formConf.formRef].clearValidate();\n    });\n  },\n  methods: {\n    setTransferFormData: function setTransferFormData(data, config, jnpfKey) {\n      if (!config.transferList || !config.transferList.length) return;\n      for (var index = 0; index < config.transferList.length; index++) {\n        var element = config.transferList[index];\n        this.setFormData(element.sourceValue, data[element.targetField]);\n      }\n    },\n    initRelationData: function initRelationData() {\n      var _this7 = this;\n      var handleRelationFun = function handleRelationFun(list) {\n        list.forEach(function (cur) {\n          _this7.handleDefaultRelation(cur.__vModel__);\n          if (cur.__config__.children) handleRelationFun(cur.__config__.children);\n        });\n      };\n      handleRelationFun(this.formConfCopy.fields);\n    },\n    initCss: function initCss(formCopy) {\n      if (document.getElementById('styleId')) {\n        document.getElementById('styleId').remove();\n      }\n      var head = document.getElementsByTagName('head')[0];\n      var style = document.createElement('style');\n      style.type = 'text/css';\n      style.id = 'styleId';\n      style.innerText = this.buildCSS(formCopy.classJson);\n      head.appendChild(style);\n    },\n    buildCSS: function buildCSS(str) {\n      str = str.trim();\n      var newStr = '';\n      var cut = str.split('}');\n      cut.forEach(function (item) {\n        if (item) {\n          item = '.' + formClass + ' ' + item + '}';\n          newStr += item;\n        }\n      });\n      return newStr;\n    },\n    initFormData: function initFormData(componentList, formData) {\n      var _this8 = this;\n      this.$store.commit('generator/UPDATE_RELATION_DATA', {});\n      componentList.forEach(function (cur) {\n        var config = cur.__config__;\n        if (cur.__vModel__) formData[cur.__vModel__] = config.defaultValue;\n        if (cur.__config__.jnpfKey == 'table') return;\n        if (config.children) _this8.initFormData(config.children, formData);\n      });\n    },\n    buildRelations: function buildRelations(componentList, relations) {\n      var _this9 = this;\n      componentList.forEach(function (cur) {\n        var config = cur.__config__;\n        if (_comConfig.dyOptionsList.indexOf(config.jnpfKey) > -1) {\n          if (config.dataType === 'dynamic') {\n            if (config.templateJson && config.templateJson.length) {\n              for (var i = 0; i < config.templateJson.length; i++) {\n                var e = config.templateJson[i];\n                if (e.relationField) {\n                  var item = _objectSpread(_objectSpread({}, cur), {}, {\n                    realVModel: cur.__config__.isSubTable ? cur.__config__.parentVModel + '-' + cur.__vModel__ : cur.__vModel__,\n                    opType: 'setOptions'\n                  });\n                  if (relations.hasOwnProperty(e.relationField)) {\n                    var boo = relations[e.relationField].some(function (o) {\n                      return o.realVModel === cur.realVModel;\n                    });\n                    if (!boo) {\n                      relations[e.relationField].push(item);\n                    }\n                  } else {\n                    relations[e.relationField] = [item];\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (config.jnpfKey === 'userSelect' && ['dep', 'pos', 'role', 'group'].includes(cur.selectType)) {\n          if (cur.relationField) {\n            var _item = _objectSpread(_objectSpread({}, cur), {}, {\n              realVModel: cur.__config__.isSubTable ? cur.__config__.parentVModel + '-' + cur.__vModel__ : cur.__vModel__,\n              opType: 'setUserOptions'\n            });\n            if (relations.hasOwnProperty(cur.relationField)) {\n              var _boo = relations[cur.relationField].some(function (o) {\n                return o.realVModel === cur.realVModel;\n              });\n              if (!_boo) {\n                relations[cur.relationField].push(_item);\n              }\n            } else {\n              relations[cur.relationField] = [_item];\n            }\n          }\n        }\n        if (config.jnpfKey === 'areaSelect' && ['address', 'cities'].includes(cur.selectType)) {\n          if (cur.relationField) {\n            var _item2 = _objectSpread(_objectSpread({}, cur), {}, {\n              realVModel: cur.__config__.isSubTable ? cur.__config__.parentVModel + '-' + cur.__vModel__ : cur.__vModel__,\n              opType: 'setAddressOptions'\n            });\n            if (relations.hasOwnProperty(cur.relationField)) {\n              var _boo2 = relations[cur.relationField].some(function (o) {\n                return o.realVModel === cur.realVModel;\n              });\n              if (!_boo2) {\n                relations[cur.relationField].push(_item2);\n              }\n            } else {\n              relations[cur.relationField] = [_item2];\n            }\n          }\n        }\n        if (config.jnpfKey === 'popupSelect') {\n          if (cur.templateJson && cur.templateJson.length) {\n            for (var _i2 = 0; _i2 < cur.templateJson.length; _i2++) {\n              var _e = cur.templateJson[_i2];\n              if (_e.relationField) {\n                var _item3 = _objectSpread(_objectSpread({}, cur), {}, {\n                  realVModel: cur.__config__.isSubTable ? cur.__config__.parentVModel + '-' + cur.__vModel__ : cur.__vModel__,\n                  opType: 'setPopupOptions'\n                });\n                if (relations.hasOwnProperty(_e.relationField)) {\n                  var _boo3 = relations[_e.relationField].some(function (o) {\n                    return o.realVModel === cur.realVModel;\n                  });\n                  if (!_boo3) {\n                    relations[_e.relationField].push(_item3);\n                  }\n                } else {\n                  relations[_e.relationField] = [_item3];\n                }\n              }\n            }\n          }\n        }\n        if (config.jnpfKey === 'datePicker') {\n          if (config.startTimeRule) {\n            if (config.startTimeType == 1) {\n              cur.startTime = config.startTimeValue;\n            } else if (config.startTimeType == 3) {\n              cur.startTime = new Date().getTime();\n            } else if (config.startTimeType == 4) {\n              var previousDate = '';\n              if (config.startTimeTarget == 1 || config.startTimeTarget == 2) {\n                previousDate = (0, _index.getDateDay)(config.startTimeTarget, config.startTimeType, config.startTimeValue);\n                cur.startTime = new Date(previousDate).getTime();\n              } else if (config.startTimeTarget == 3) {\n                previousDate = (0, _index.getBeforeData)(config.startTimeValue);\n                cur.startTime = new Date(previousDate).getTime();\n              } else {\n                cur.startTime = (0, _index.getBeforeTime)(config.startTimeTarget, config.startTimeValue).getTime();\n              }\n            } else if (config.startTimeType == 5) {\n              var _previousDate = '';\n              if (config.startTimeTarget == 1 || config.startTimeTarget == 2) {\n                _previousDate = (0, _index.getDateDay)(config.startTimeTarget, config.startTimeType, config.startTimeValue);\n                cur.startTime = new Date(_previousDate).getTime();\n              } else if (config.startTimeTarget == 3) {\n                _previousDate = (0, _index.getLaterData)(config.startTimeValue);\n                cur.startTime = new Date(_previousDate).getTime();\n              } else {\n                cur.startTime = (0, _index.getLaterTime)(config.startTimeTarget, config.startTimeValue).getTime();\n              }\n            }\n          }\n          if (config.endTimeRule) {\n            if (config.endTimeType == 1) {\n              cur.endTime = config.endTimeValue;\n            } else if (config.endTimeType == 3) {\n              cur.endTime = new Date().getTime();\n            } else if (config.endTimeType == 4) {\n              var _previousDate2 = '';\n              if (config.endTimeTarget == 1 || config.endTimeTarget == 2) {\n                _previousDate2 = (0, _index.getDateDay)(config.endTimeTarget, config.endTimeType, config.endTimeValue);\n                cur.endTime = new Date(_previousDate2).getTime();\n              } else if (config.endTimeTarget == 3) {\n                _previousDate2 = (0, _index.getBeforeData)(config.endTimeValue);\n                cur.endTime = new Date(_previousDate2).getTime();\n              } else {\n                cur.endTime = (0, _index.getBeforeTime)(config.endTimeTarget, config.endTimeValue).getTime();\n              }\n            } else if (config.endTimeType == 5) {\n              var _previousDate3 = '';\n              if (config.endTimeTarget == 1 || config.endTimeTarget == 2) {\n                _previousDate3 = (0, _index.getDateDay)(config.endTimeTarget, config.endTimeType, config.endTimeValue);\n                cur.endTime = new Date(_previousDate3).getTime();\n              } else if (config.endTimeTarget == 3) {\n                _previousDate3 = (0, _index.getLaterData)(config.endTimeValue);\n                cur.endTime = new Date(_previousDate3).getTime();\n              } else {\n                cur.endTime = (0, _index.getLaterTime)(config.endTimeTarget, config.endTimeValue).getTime();\n              }\n            }\n          }\n          if (cur.__config__.startRelationField) {\n            var _item4 = _objectSpread(_objectSpread({}, cur), {}, {\n              realVModel: cur.__config__.isSubTable ? cur.__config__.parentVModel + '-' + cur.__vModel__ : cur.__vModel__,\n              opType: 'setDate'\n            });\n            if (relations.hasOwnProperty(cur.__config__.startRelationField)) {\n              var _boo4 = relations[cur.__config__.startRelationField].some(function (o) {\n                return o.realVModel === cur.realVModel;\n              });\n              if (!_boo4) {\n                relations[cur.__config__.startRelationField].push(_item4);\n              }\n            } else {\n              relations[cur.__config__.startRelationField] = [_item4];\n            }\n          }\n          if (cur.__config__.endRelationField) {\n            var _item5 = _objectSpread(_objectSpread({}, cur), {}, {\n              realVModel: cur.__config__.isSubTable ? cur.__config__.parentVModel + '-' + cur.__vModel__ : cur.__vModel__,\n              opType: 'setDate'\n            });\n            if (relations.hasOwnProperty(cur.__config__.endRelationField)) {\n              var _boo5 = relations[cur.__config__.endRelationField].some(function (o) {\n                return o.realVModel === cur.realVModel;\n              });\n              if (!_boo5) {\n                relations[cur.__config__.endRelationField].push(_item5);\n              }\n            } else {\n              relations[cur.__config__.endRelationField] = [_item5];\n            }\n          }\n        }\n        if (config.jnpfKey === 'timePicker') {\n          var format = cur.format === 'HH:mm' ? 'HH:mm:00' : cur.format;\n          if (config.startTimeRule) {\n            if (config.startTimeType == 1) {\n              cur.startTime = config.startTimeValue || '00:00:00';\n              if (cur.startTime.split(':').length == 3) {\n                cur.startTime = cur.startTime;\n              } else {\n                cur.startTime = cur.startTime + ':00';\n              }\n            } else if (config.startTimeType == 3) {\n              cur.startTime = _this9.jnpf.toDate(new Date(), format);\n            } else if (config.startTimeType == 4) {\n              var _previousDate4 = '';\n              _previousDate4 = (0, _index.getBeforeTime)(config.startTimeTarget, config.startTimeValue);\n              cur.startTime = _this9.jnpf.toDate(_previousDate4, format);\n            } else if (config.startTimeType == 5) {\n              var _previousDate5 = '';\n              _previousDate5 = (0, _index.getLaterTime)(config.startTimeTarget, config.startTimeValue);\n              cur.startTime = _this9.jnpf.toDate(_previousDate5, format);\n            }\n          }\n          if (config.endTimeRule) {\n            if (config.endTimeType == 1) {\n              cur.endTime = config.endTimeValue || '23:59:59';\n              if (cur.endTime.split(':').length == 3) {\n                cur.endTime = cur.endTime;\n              } else {\n                cur.endTime = cur.endTime + ':00';\n              }\n            } else if (config.endTimeType == 3) {\n              cur.endTime = _this9.jnpf.toDate(new Date(), format);\n            } else if (config.endTimeType == 4) {\n              var _previousDate6 = '';\n              _previousDate6 = (0, _index.getBeforeTime)(config.endTimeTarget, config.endTimeValue);\n              cur.endTime = _this9.jnpf.toDate(_previousDate6, format);\n            } else if (config.endTimeType == 5) {\n              var _previousDate7 = '';\n              _previousDate7 = (0, _index.getLaterTime)(config.endTimeTarget, config.endTimeValue);\n              cur.endTime = _this9.jnpf.toDate(_previousDate7, format);\n            }\n          }\n          if (cur.__config__.startRelationField) {\n            var _item6 = _objectSpread(_objectSpread({}, cur), {}, {\n              realVModel: cur.__config__.isSubTable ? cur.__config__.parentVModel + '-' + cur.__vModel__ : cur.__vModel__,\n              opType: 'setTime'\n            });\n            if (relations.hasOwnProperty(cur.__config__.startRelationField)) {\n              var _boo6 = relations[cur.__config__.startRelationField].some(function (o) {\n                return o.realVModel === cur.realVModel;\n              });\n              if (!_boo6) {\n                relations[cur.__config__.startRelationField].push(_item6);\n              }\n            } else {\n              relations[cur.__config__.startRelationField] = [_item6];\n            }\n          }\n          if (cur.__config__.endRelationField) {\n            var _item7 = _objectSpread(_objectSpread({}, cur), {}, {\n              realVModel: cur.__config__.isSubTable ? cur.__config__.parentVModel + '-' + cur.__vModel__ : cur.__vModel__,\n              opType: 'setTime'\n            });\n            if (relations.hasOwnProperty(cur.__config__.endRelationField)) {\n              var _boo7 = relations[cur.__config__.endRelationField].some(function (o) {\n                return o.realVModel === cur.realVModel;\n              });\n              if (!_boo7) {\n                relations[cur.__config__.endRelationField].push(_item7);\n              }\n            } else {\n              relations[cur.__config__.endRelationField] = [_item7];\n            }\n          }\n        }\n        if (config.children) _this9.buildRelations(config.children, relations);\n      });\n    },\n    handleRelation: function handleRelation(field) {\n      var _this10 = this;\n      if (!field) return;\n      var currRelations = this.relations;\n      for (var key in currRelations) {\n        if (key === field) {\n          var _loop = function _loop() {\n            var e = currRelations[key][i];\n            var vModel = e.realVModel || e.__vModel__;\n            var config = e.__config__;\n            var jnpfKey = config.jnpfKey;\n            var defaultValue = '';\n            if (['checkbox', 'cascader'].includes(jnpfKey) || ['select', 'treeSelect', 'popupSelect', 'popupTableSelect', 'userSelect'].includes(jnpfKey) && e.multiple) {\n              defaultValue = [];\n            }\n            if (vModel.includes('-')) {\n              // 子表字段\n              var tableVModel = vModel.split('-')[0];\n              _this10.$refs[tableVModel] && _this10.$refs[tableVModel].$children[0] && _this10.$refs[tableVModel].$children[0].handleRelationForParent(e, defaultValue);\n            } else {\n              _this10.setFormData(e.__vModel__, defaultValue);\n              if (e.opType === 'setOptions') {\n                var query = {\n                  paramList: _this10.getParamList(config.templateJson, _this10[_this10.formConf.formModel])\n                };\n                (0, _dataInterface.getDataInterfaceRes)(config.propsUrl, query).then(function (res) {\n                  var data = res.data;\n                  _this10.setFieldOptions(e.__vModel__, data);\n                });\n              }\n              if (e.opType === 'setUserOptions') {\n                var value = _this10[_this10.formConf.formModel][e.relationField] || [];\n                _this10.comSet('ableRelationIds', e.__vModel__, Array.isArray(value) ? value : [value]);\n              }\n              if (e.opType === 'setAddressOptions') {\n                var _value = _this10[_this10.formConf.formModel][e.relationField] || [];\n                _this10.comSet('ableAddressIds', e.__vModel__, Array.isArray(_value) ? _value : [_value]);\n              }\n              if (e.opType === 'setPopupOptions') {}\n              if (e.opType === 'setDate') {\n                var startTime = '';\n                var endTime = '';\n                if (e.__config__.startTimeType == 2) {\n                  startTime = _this10[_this10.formConf.formModel][e.__config__.startRelationField] || 0;\n                } else {\n                  startTime = e.startTime;\n                }\n                if (e.__config__.endTimeType == 2) {\n                  endTime = _this10[_this10.formConf.formModel][e.__config__.endRelationField] || 0;\n                } else {\n                  endTime = e.endTime;\n                }\n                _this10.comSet('startTime', e.__vModel__, startTime);\n                _this10.comSet('endTime', e.__vModel__, endTime);\n              }\n              if (e.opType === 'setTime') {\n                var _startTime = '';\n                var _endTime = '';\n                if (e.__config__.startTimeType == 2) {\n                  _startTime = _this10[_this10.formConf.formModel][e.__config__.startRelationField] || '00:00:00';\n                  if (_startTime && _startTime.split(':').length == 3) {\n                    _startTime = _startTime;\n                  } else {\n                    _startTime = _startTime + ':00';\n                  }\n                } else {\n                  _startTime = e.startTime;\n                }\n                if (e.__config__.endTimeType == 2) {\n                  _endTime = _this10[_this10.formConf.formModel][e.__config__.endRelationField] || '23:59:59';\n                  if (_endTime && _endTime.split(':').length == 3) {\n                    _endTime = _endTime;\n                  } else {\n                    _endTime = _endTime + ':00';\n                  }\n                } else {\n                  _endTime = e.endTime;\n                }\n                _this10.comSet('startTime', e.__vModel__, _startTime);\n                _this10.comSet('endTime', e.__vModel__, _endTime);\n              }\n            }\n          };\n          for (var i = 0; i < currRelations[key].length; i++) {\n            _loop();\n          }\n        }\n      }\n    },\n    handleDefaultRelation: function handleDefaultRelation(field) {\n      if (!field) return;\n      var currRelations = this.relations;\n      for (var key in currRelations) {\n        if (key === field) {\n          for (var i = 0; i < currRelations[key].length; i++) {\n            var e = currRelations[key][i];\n            var vModel = e.realVModel || e.__vModel__;\n            var config = e.__config__;\n            if (vModel.includes('-')) {\n              var tableVModel = vModel.split('-')[0];\n              this.$refs[tableVModel] && this.$refs[tableVModel].$children[0] && this.$refs[tableVModel].$children[0].handleRelationForParent(e, '', true);\n            } else {\n              if (e.opType === 'setUserOptions') {\n                var value = this[this.formConf.formModel][e.relationField] || [];\n                this.comSet('ableRelationIds', e.__vModel__, Array.isArray(value) ? value : [value]);\n              }\n              if (e.opType === 'setAddressOptions') {\n                var _value2 = this[this.formConf.formModel][e.relationField] || [];\n                this.comSet('ableAddressIds', e.__vModel__, Array.isArray(_value2) ? _value2 : [_value2]);\n              }\n              if (e.opType === 'setDate') {\n                var startTime = '';\n                var endTime = '';\n                if (e.__config__.startTimeType == 2) {\n                  startTime = this[this.formConf.formModel][e.__config__.startRelationField] || 0;\n                } else {\n                  startTime = e.startTime;\n                }\n                if (e.__config__.endTimeType == 2) {\n                  endTime = this[this.formConf.formModel][e.__config__.endRelationField] || 0;\n                } else {\n                  endTime = e.endTime;\n                }\n                this.comSet('startTime', e.__vModel__, startTime);\n                this.comSet('endTime', e.__vModel__, endTime);\n              }\n              if (e.opType === 'setTime') {\n                var _startTime2 = '';\n                var _endTime2 = '';\n                if (e.__config__.startTimeType == 2) {\n                  _startTime2 = this[this.formConf.formModel][e.__config__.startRelationField] || '00:00:00';\n                } else {\n                  _startTime2 = e.startTime;\n                }\n                if (e.__config__.endTimeType == 2) {\n                  _endTime2 = this[this.formConf.formModel][e.__config__.endRelationField] || '23:59:59';\n                  if (_endTime2 && _endTime2.split(':').length == 3) {\n                    _endTime2 = _endTime2;\n                  } else {\n                    _endTime2 = _endTime2 + ':00';\n                  }\n                } else {\n                  _endTime2 = e.endTime;\n                }\n                if (_startTime2) {\n                  if (_startTime2.split(':').length == 3) {\n                    _startTime2 = _startTime2;\n                  } else {\n                    _startTime2 = _startTime2 + ':00';\n                  }\n                }\n                if (_endTime2) {\n                  if (_endTime2.split(':').length == 3) {\n                    _endTime2 = _endTime2;\n                  } else {\n                    _endTime2 = _endTime2 + ':00';\n                  }\n                }\n                this.comSet('startTime', e.__vModel__, _startTime2);\n                this.comSet('endTime', e.__vModel__, _endTime2);\n              }\n            }\n          }\n        }\n      }\n    },\n    getParamList: function getParamList(templateJson, formData) {\n      for (var i = 0; i < templateJson.length; i++) {\n        if (templateJson[i].relationField) {\n          templateJson[i].defaultValue = formData[templateJson[i].relationField] || '';\n        }\n      }\n      return templateJson;\n    },\n    initRelationForm: function initRelationForm(componentList) {\n      var _this11 = this;\n      componentList.forEach(function (cur) {\n        var config = cur.__config__;\n        if (config.jnpfKey == 'relationFormAttr' || config.jnpfKey == 'popupAttr') {\n          var relationKey = cur.relationField.split(\"_jnpfTable_\")[0];\n          componentList.forEach(function (item) {\n            var noVisibility = Array.isArray(item.__config__.visibility) && !item.__config__.visibility.includes('pc');\n            if (relationKey == item.__vModel__ && (noVisibility || !!item.__config__.noShow) && !cur.__vModel__) {\n              cur.__config__.noShow = true;\n            }\n          });\n        }\n        if (cur.__config__.children && cur.__config__.children.length) _this11.initRelationForm(cur.__config__.children);\n      });\n    },\n    buildOptions: function buildOptions(componentList, data, formData) {\n      var _this12 = this;\n      componentList.forEach(function (cur) {\n        var config = cur.__config__;\n        if (_comConfig.dyOptionsList.indexOf(config.jnpfKey) > -1) {\n          if (config.dataType === 'dictionary' && config.dictionaryType) {\n            cur.options = [];\n            _this12.$store.dispatch('base/getDicDataSelector', config.dictionaryType).then(function (res) {\n              cur.options = res;\n              data[cur.__vModel__ + 'Options'] = cur.options;\n            });\n          } else if (config.dataType === 'dynamic' && config.propsUrl) {\n            cur.options = [];\n            var query = {\n              paramList: config.templateJson ? _this12.getParamList(config.templateJson, formData) : []\n            };\n            (0, _dataInterface.getDataInterfaceRes)(config.propsUrl, query).then(function (res) {\n              cur.options = Array.isArray(res.data) ? res.data : [];\n              data[cur.__vModel__ + 'Options'] = cur.options;\n            });\n          } else {\n            data[cur.__vModel__ + 'Options'] = cur.options;\n          }\n        }\n        if (config.children && config.jnpfKey !== 'table') _this12.buildOptions(config.children, data, formData);\n      });\n    },\n    buildRules: function buildRules(componentList, rules) {\n      var _this13 = this;\n      componentList.forEach(function (cur) {\n        var config = JSON.parse(JSON.stringify(cur.__config__));\n        if (!Array.isArray(config.regList)) config.regList = [];\n        if (config.required) {\n          var required = {\n            required: config.required,\n            message: cur.placeholder\n          };\n          if (Array.isArray(config.defaultValue)) {\n            required.type = 'array';\n            required.message = \"\\u8BF7\\u81F3\\u5C11\\u9009\\u62E9\\u4E00\\u4E2A\".concat(config.label);\n          }\n          required.message === undefined && (required.message = \"\".concat(config.label, \"\\u4E0D\\u80FD\\u4E3A\\u7A7A\"));\n          config.regList.push(required);\n        }\n        rules[cur.__vModel__] = config.regList.map(function (item) {\n          item.pattern && _this13.isRegExp(item.pattern) && (item.pattern = eval(item.pattern));\n          item.trigger = config.trigger || 'blur';\n          return item;\n        });\n        if (config.children && config.jnpfKey !== 'table') _this13.buildRules(config.children, rules);\n      });\n    },\n    isRegExp: function isRegExp(val) {\n      try {\n        return Object.prototype.toString.call(eval(val)) === '[object RegExp]';\n      } catch (_unused) {\n        return false;\n      }\n    },\n    onLoad: function onLoad(formConfCopy) {\n      if (!formConfCopy || !formConfCopy.funcs || !formConfCopy.funcs.onLoad) return;\n      var onLoadFunc = this.jnpf.getScriptFunc.call(this, formConfCopy.funcs.onLoad);\n      if (!onLoadFunc) return;\n      onLoadFunc(this.parameter);\n    },\n    resetForm: function resetForm() {\n      var _this14 = this;\n      this.$store.commit('generator/UPDATE_RELATION_DATA', {});\n      this.formConfCopy = (0, _utils.deepClone)(this.formConf);\n      this.$refs[this.formConf.formRef].resetFields();\n      Object.keys(this.tableRefs).forEach(function (vModel) {\n        _this14.$refs[vModel] && _this14.$refs[vModel].$children && _this14.$refs[vModel].$children[0].resetTable();\n      });\n    },\n    checkTableData: function checkTableData() {\n      var _this15 = this;\n      var valid = true;\n      Object.keys(this.tableRefs).forEach(function (vModel) {\n        if (_this15.$refs[vModel] && _this15.$refs[vModel].$children) {\n          var res = _this15.$refs[vModel].$children[0].submit(); // 返回false或表单数据\n          res ? _this15[_this15.formConf.formModel][vModel] = res : valid = false;\n        }\n      });\n      return valid;\n    },\n    getFieldOptions: function getFieldOptions(prop) {\n      if (!prop) return [];\n      var isChildTable = prop.indexOf('.') > -1;\n      if (isChildTable) {\n        var list = prop.split('.');\n        if (this.$refs[list[0]] && this.$refs[list[0]].$children[0]) {\n          var res = this.$refs[list[0]].$children[0].getTableFieldOptions(list[1]);\n          return res;\n        } else {\n          return [];\n        }\n      } else {\n        return this.options[prop + 'Options'] || [];\n      }\n    },\n    setFormData: function setFormData(prop, value) {\n      if (!prop || this[this.formConf.formModel][prop] === value) return;\n      var isChildTable = prop.indexOf('.') > -1;\n      if (isChildTable) {\n        var list = prop.split('.');\n        if (this.$refs[list[0]] && this.$refs[list[0]].$children[0]) {\n          this.$refs[list[0]].$children[0].setTableFormData(list[1], value);\n        }\n      } else {\n        this.comSet('defaultValue', prop, value);\n        this[this.formConf.formModel][prop] = value;\n      }\n      this.handleRelation(prop);\n    },\n    setShowOrHide: function setShowOrHide(prop, value) {\n      var newVal = !!value;\n      var isChildTable = prop.indexOf('.') > -1;\n      if (!isChildTable) {\n        this.comSet('noShow', prop, !newVal);\n      } else {\n        var list = prop.split('.');\n        if (this.$refs[list[0]] && this.$refs[list[0]].$children[0]) {\n          this.$refs[list[0]].$children[0].setTableShowOrHide(list[1], !newVal);\n        }\n      }\n    },\n    setRequired: function setRequired(prop, value) {\n      var newVal = !!value;\n      var isChildTable = prop.indexOf('.') > -1;\n      if (!isChildTable) {\n        this.comSet('required', prop, newVal);\n        this.buildRules(this.formConfCopy.fields, this[this.formConf.formRules]);\n      }\n    },\n    setDisabled: function setDisabled(prop, value) {\n      var newVal = !!value;\n      var isChildTable = prop.indexOf('.') > -1;\n      if (!isChildTable) {\n        this.comSet('disabled', prop, newVal);\n      }\n    },\n    setFieldOptions: function setFieldOptions(prop, value) {\n      var newVal = Array.isArray(value) ? value : [];\n      var isChildTable = prop.indexOf('.') > -1;\n      if (!isChildTable) {\n        this.comSet('options', prop, newVal);\n      }\n    },\n    comSet: function comSet(field, prop, value) {\n      var _this16 = this;\n      if (!prop) return;\n      var loop = function loop(list) {\n        for (var i = 0; i < list.length; i++) {\n          var item = list[i];\n          if (item.__vModel__ && item.__vModel__ === prop) {\n            switch (field) {\n              case 'disabled':\n                _this16.$set(item, field, value);\n                break;\n              case 'ableRelationIds':\n                _this16.$set(item, field, value);\n                break;\n              case 'ableAddressIds':\n                _this16.$set(item, field, value);\n                break;\n              case 'startTime':\n                _this16.$set(item, field, value);\n                break;\n              case 'endTime':\n                _this16.$set(item, field, value);\n                break;\n              case 'options':\n                if (_comConfig.dyOptionsList.indexOf(item.__config__.jnpfKey) > -1) {\n                  item.options = value;\n                }\n                break;\n              default:\n                _this16.$set(item.__config__, field, value);\n                break;\n            }\n            item.__config__.renderKey = +new Date() + item.__vModel__;\n            break;\n          }\n          if (item.__config__ && item.__config__.jnpfKey !== 'table' && item.__config__.children && Array.isArray(item.__config__.children)) {\n            loop(item.__config__.children);\n          }\n        }\n      };\n      loop(this.formConfCopy.fields);\n    },\n    beforeSubmit: function beforeSubmit() {\n      if (!this.formConfCopy || !this.formConfCopy.funcs || !this.formConfCopy.funcs.beforeSubmit) return Promise.resolve();\n      var func = this.jnpf.getScriptFunc.call(this, this.formConfCopy.funcs.beforeSubmit);\n      if (!func) return Promise.resolve();\n      return func(this.parameter);\n    },\n    afterSubmit: function afterSubmit() {\n      if (!this.formConfCopy || !this.formConfCopy.funcs || !this.formConfCopy.funcs.afterSubmit) return;\n      var func = this.jnpf.getScriptFunc.call(this, this.formConfCopy.funcs.afterSubmit);\n      if (!func) return;\n      func(this.parameter);\n    },\n    submitForm: function submitForm(type) {\n      var _this17 = this;\n      this.isTableValid = this.checkTableData();\n      try {\n        this.beforeSubmit().then(function () {\n          _this17.submit(type);\n        });\n      } catch (e) {\n        this.submit(type);\n      }\n    },\n    submit: function submit(type) {\n      var _this18 = this;\n      this.$refs[this.formConf.formRef].validate(function (valid) {\n        if (!valid) return false;\n        if (!_this18.isTableValid) return false;\n        // 触发submit事件\n        _this18.$emit('submit', _this18[_this18.formConf.formModel], _this18.afterSubmit, type);\n        return true;\n      });\n    },\n    onCascaderChange: function onCascaderChange(data, on) {\n      if (!on || !on.change) return;\n      var func = this.jnpf.getScriptFunc.call(this, on.change);\n      if (!func) return;\n      func.call(this, _objectSpread({\n        data: data\n      }, this.parameter));\n    },\n    onCascaderBlur: function onCascaderBlur(data, on) {\n      if (!on || !on.blur) return;\n      var func = this.jnpf.getScriptFunc.call(this, on.blur);\n      if (!func) return;\n      func.call(this, _objectSpread({\n        data: data\n      }, this.parameter));\n    }\n  },\n  render: function render(h) {\n    return renderFrom.call(this, h);\n  }\n};",null]}