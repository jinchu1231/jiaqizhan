{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RAutoComplete.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Generator/index/RightComponents/RAutoComplete.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport comMixin from './mixin';\nimport handelFlidMixin from './handelFlidMixin';\nimport draggable from 'vuedraggable'\nimport InterfaceDialog from '@/components/Process/PropPanel/InterfaceDialog'\nimport { noAllowRelationList } from '@/components/Generator/generator/comConfig'\nimport { getDrawingList } from '@/components/Generator/utils/db'\nexport default {\n  props: ['activeData'],\n  mixins: [comMixin, handelFlidMixin],\n  components: { draggable, InterfaceDialog },\n  data() {\n    return {\n    }\n  },\n  computed: {\n    formFieldsOptions() {\n      let list = []\n      list.push({ realVModel: '@keyword', realLabel: '@keyword', jnpfKey: '' })\n      const loop = (data, parent) => {\n        if (!data) return\n        if (data.__config__ && this.isIncludesTable(data) && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data)\n        }\n        if (Array.isArray(data)) data.forEach(d => loop(d, parent))\n        if (data.__vModel__ && !noAllowRelationList.includes(data.__config__.jnpfKey) && data.__vModel__ !== this.activeData.__vModel__) {\n          const isTableChild = parent && parent.__config__ && parent.__config__.jnpfKey === 'table'\n          list.push({\n            realVModel: isTableChild ? parent.__vModel__ + '-' + data.__vModel__ : data.__vModel__,\n            realLabel: isTableChild ? parent.__config__.label + '-' + data.__config__.label : data.__config__.label,\n            ...data\n          })\n        }\n      }\n      loop(getDrawingList())\n      return list\n    }\n  },\n  mounted() {\n    this.getDataInterfaceInfo()\n  },\n  methods: {\n    isIncludesTable(data) {\n      if ((!data.__config__.layout || data.__config__.layout === 'rowFormItem') && data.__config__.jnpfKey !== 'table') return true\n      if (this.activeData.__config__.isSubTable) return this.activeData.__config__.parentVModel === data.__vModel__\n      return data.__config__.jnpfKey !== 'table'\n    },\n    onRelationFieldChange(val, row) {\n      if (!val) return row.jnpfKey = ''\n      if (val === '@keyword') return row.jnpfKey = ''\n      let list = this.formFieldsOptions.filter(o => o.realVModel === val)\n      if (!list.length) return row.jnpfKey = ''\n      let item = list[0]\n      row.jnpfKey = item.__config__.jnpfKey\n    },\n  }\n}\n",null]}