{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/systemData/dataModel/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/systemData/dataModel/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _sortablejs = _interopRequireDefault(require(\"sortablejs\"));\nvar _dataModel = require(\"@/api/systemData/dataModel\");\nvar _commonFields = require(\"@/api/systemData/commonFields\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      dataForm: {\n        table: '',\n        tableName: '',\n        newTable: ''\n      },\n      dataRule: {\n        newTable: [{\n          required: true,\n          message: '表名称不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /(^_([A-Za-z0-9]_?)*$)|(^[A-Za-z](_?[A-Za-z0-9])*_?$)/,\n          message: '请输入正确的表名称',\n          trigger: ['blur']\n        }],\n        tableName: [{\n          required: true,\n          message: '表说明不能为空',\n          trigger: 'blur'\n        }]\n      },\n      list: [],\n      fieldList: [],\n      listLoading: false,\n      btnLoading: false,\n      refreshTable: true,\n      sortable: null,\n      dataBase: '',\n      options: [{\n        label: '字符串',\n        value: 'varchar'\n      }, {\n        label: '整型',\n        value: 'int'\n      }, {\n        label: '日期时间',\n        value: 'datetime'\n      }, {\n        label: '浮点',\n        value: 'decimal'\n      }, {\n        label: '长整型',\n        value: 'bigint'\n      }, {\n        label: '文本',\n        value: 'text'\n      }],\n      dbType: 'mysql'\n    };\n  },\n  computed: {\n    isIdentity: function isIdentity() {\n      return ['Oracle', 'PostgreSQL', 'KingbaseES'].includes(this.dbType);\n    }\n  },\n  methods: {\n    goBack: function goBack() {\n      this.$emit('close');\n    },\n    getFieldList: function getFieldList() {\n      var _this = this;\n      (0, _commonFields.getList)().then(function (res) {\n        _this.fieldList = res.data.list;\n      });\n    },\n    init: function init(dataBase, table, type) {\n      var _this2 = this;\n      this.$refs['dataForm'].resetFields();\n      this.dataForm.table = table || '';\n      this.dbType = type;\n      this.dataBase = dataBase;\n      this.listLoading = true;\n      this.getFieldList();\n      this.$nextTick(function () {\n        if (_this2.dataForm.table) {\n          (0, _dataModel.DataModelInfo)(dataBase, _this2.dataForm.table).then(function (res) {\n            _this2.dataForm = res.data.tableInfo;\n            var hasTableData = res.data.hasTableData || false;\n            _this2.$set(_this2.dataForm, 'newTable', _this2.dataForm.table);\n            _this2.list = res.data.tableFieldList.map(function (o, i) {\n              return _objectSpread(_objectSpread({}, o), {}, {\n                index: _this2.jnpf.idGenerator()\n              });\n            });\n            for (var index = 0; index < _this2.list.length; index++) {\n              var element = _this2.list[index];\n              if (hasTableData) element.disabled = true;\n            }\n            _this2.listLoading = false;\n            _this2.$nextTick(function () {\n              if (!hasTableData) _this2.setSort();\n            });\n          });\n        } else {\n          _this2.dataForm.newTable = table || '';\n          _this2.listLoading = false;\n          _this2.list = [];\n          _this2.setSort();\n        }\n      });\n    },\n    setSort: function setSort() {\n      var _this3 = this;\n      var el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0];\n      this.sortable = _sortablejs.default.create(el, {\n        ghostClass: 'sortable-ghost',\n        // Class name for the drop placeholder,\n        setData: function setData(dataTransfer) {\n          // to avoid Firefox bug\n          // Detail see : https://github.com/RubaXa/Sortable/issues/1012\n          dataTransfer.setData('Text', '');\n        },\n        onEnd: function onEnd(evt) {\n          var targetRow = _this3.list.splice(evt.oldIndex, 1)[0];\n          _this3.list.splice(evt.newIndex, 0, targetRow);\n        },\n        handle: '.drag-handler'\n      });\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this4 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          if (!_this4.list.length) {\n            _this4.$message({\n              message: '请至少添加一个字段',\n              type: 'error',\n              duration: 1000\n            });\n            return;\n          }\n          if (!_this4.exist()) return;\n          var boo = _this4.list.some(function (o) {\n            return o.primaryKey === 1;\n          });\n          if (!boo) {\n            _this4.$message({\n              message: '请选择一个字段作为主键',\n              type: 'error',\n              duration: 1000\n            });\n            return;\n          }\n          _this4.btnLoading = true;\n          var tableFieldList = _this4.list.filter(function (o) {\n            return !o.disabled;\n          });\n          if (tableFieldList.length && tableFieldList.length != _this4.list.length) {\n            var _query = {\n              tableFieldList: tableFieldList.map(function (o) {\n                return _objectSpread(_objectSpread({}, o), {}, {\n                  primaryKey: o.primaryKey ? 1 : 0,\n                  allowNull: o.allowNull ? 1 : 0,\n                  identity: o.identity && o.primaryKey ? 1 : 0\n                });\n              }),\n              tableInfo: _this4.dataForm\n            };\n            (0, _dataModel.addTableFields)(_this4.dataBase, _query).then(function (res) {\n              _this4.$message({\n                message: res.msg,\n                type: 'success',\n                duration: 1500,\n                onClose: function onClose() {\n                  _this4.visible = false;\n                  _this4.btnLoading = false;\n                  _this4.$emit('close', true);\n                }\n              });\n            }).catch(function () {\n              _this4.btnLoading = false;\n            });\n            return;\n          }\n          var query = {\n            tableFieldList: _this4.list,\n            tableInfo: _this4.dataForm\n          };\n          var formMethod = _this4.dataForm.table ? _dataModel.DataModelUpdate : _dataModel.DataModelCreate;\n          formMethod(_this4.dataBase, query).then(function (res) {\n            _this4.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: function onClose() {\n                _this4.visible = false;\n                _this4.btnLoading = false;\n                _this4.$emit('close', true);\n              }\n            });\n          }).catch(function () {\n            _this4.btnLoading = false;\n          });\n        }\n      });\n    },\n    exist: function exist() {\n      var _this5 = this;\n      var isOk = true;\n      //  遍历数组，判断非空\n      var _loop = function _loop() {\n          var e = _this5.list[i];\n          if (!e.field) {\n            _this5.$message({\n              showClose: true,\n              message: \"\\u7B2C\".concat(i + 1, \"\\u884C\\u5217\\u540D\\u4E0D\\u80FD\\u4E3A\\u7A7A\"),\n              type: 'error',\n              duration: 1000\n            });\n            isOk = false;\n            return 0; // break\n          }\n          var reg = /(^_([a-zA-Z0-9]_?)*$)|(^[a-zA-Z](_?[a-zA-Z0-9])*_?$)/;\n          if (!reg.test(e.field)) {\n            _this5.$message({\n              showClose: true,\n              message: \"\\u7B2C\".concat(i + 1, \"\\u884C\\u5217\\u540D\\u683C\\u5F0F\\u9519\\u8BEF\\uFF0C\\u8BF7\\u91CD\\u65B0\\u8F93\\u5165\"),\n              type: 'error',\n              duration: 1000\n            });\n            isOk = false;\n            return 0; // break\n          }\n          var num = _this5.list.filter(function (o) {\n            return o.field == e.field;\n          });\n          if (num.length > 1) {\n            _this5.$message({\n              showClose: true,\n              message: \"\\u7B2C\".concat(i + 1, \"\\u884C\\u5217\\u540D'\").concat(e.field, \"'\\u5DF2\\u91CD\\u590D\"),\n              type: 'error',\n              duration: 1000\n            });\n            isOk = false;\n            return 0; // break\n          }\n          if (!e.fieldName) {\n            _this5.$message({\n              showClose: true,\n              message: \"\\u7B2C\".concat(i + 1, \"\\u884C\\u8BF4\\u660E\\u4E0D\\u80FD\\u4E3A\\u7A7A\"),\n              type: 'error',\n              duration: 1000\n            });\n            isOk = false;\n            return 0; // break\n          }\n        },\n        _ret;\n      for (var i = 0; i < this.list.length; i++) {\n        _ret = _loop();\n        if (_ret === 0) break;\n      }\n      return isOk;\n    },\n    changeKey: function changeKey(val, row) {\n      row.allowNull = 0;\n      if (!val) return;\n      for (var i = 0; i < this.list.length; i++) {\n        if (row.field != this.list[i].field) {\n          this.$set(this.list[i], 'primaryKey', 0);\n          this.$set(this.list[i], 'identity', 0);\n        }\n      }\n    },\n    handleDel: function handleDel(index, row) {\n      this.list.splice(index, 1);\n    },\n    addHandle: function addHandle(row) {\n      var item = {};\n      if (!row) {\n        item = {\n          field: \"\",\n          dataType: \"varchar\",\n          dataLength: 50,\n          allowNull: 1,\n          identity: 0,\n          primaryKey: 0,\n          fieldName: \"\",\n          index: this.jnpf.idGenerator()\n        };\n      } else {\n        item = {\n          field: row.field,\n          dataType: row.dataType,\n          dataLength: row.dataLength,\n          allowNull: row.allowNull,\n          fieldName: row.fieldName,\n          identity: row.identity,\n          index: this.jnpf.idGenerator(),\n          primaryKey: 0\n        };\n      }\n      this.list.push(item);\n    }\n  }\n};",null]}