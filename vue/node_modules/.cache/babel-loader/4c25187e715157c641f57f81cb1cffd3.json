{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/workFlow/formDesign/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/workFlow/formDesign/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es6.regexp.search\");\nvar _Form = _interopRequireDefault(require(\"./Form\"));\nvar _Preview = _interopRequireDefault(require(\"./Preview\"));\nvar _PreviewDialog = _interopRequireDefault(require(\"@/components/PreviewDialog\"));\nvar _FormDesign = require(\"@/api/workFlow/FormDesign\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'formDesign',\n  components: {\n    Form: _Form.default,\n    preview: _Preview.default,\n    previewDialog: _PreviewDialog.default\n  },\n  data: function data() {\n    return {\n      query: {\n        keyword: '',\n        formType: '',\n        isRelease: ''\n      },\n      downloadFormVisible: false,\n      sort: 'flowForm',\n      dialogVisible: false,\n      previewVisible: false,\n      previewDialogVisible: false,\n      list: [],\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      },\n      previewType: 0,\n      total: 0,\n      listLoading: false,\n      formVisible: false,\n      addVisible: false,\n      currRow: {},\n      categoryList: [],\n      options: [{\n        fullName: '系统表单',\n        id: 1\n      }, {\n        fullName: '自定义表单',\n        id: 2\n      }]\n    };\n  },\n  created: function created() {\n    this.initData();\n  },\n  methods: {\n    search: function search() {\n      this.listQuery = {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      };\n      this.initData();\n    },\n    reset: function reset() {\n      this.query.keyword = '';\n      this.query.isRelease = '';\n      this.query.formType = '';\n      this.search();\n    },\n    initData: function initData() {\n      var _this = this;\n      this.listLoading = true;\n      var query = _objectSpread(_objectSpread({}, this.listQuery), this.query);\n      (0, _FormDesign.getFormList)(query).then(function (res) {\n        _this.list = res.data.list;\n        _this.total = res.data.pagination.total;\n        _this.listLoading = false;\n      });\n    },\n    handleDel: function handleDel(id) {\n      var _this2 = this;\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(function () {\n        (0, _FormDesign.del)(id).then(function (res) {\n          _this2.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: function onClose() {\n              _this2.initData();\n            }\n          });\n        });\n      }).catch(function () {});\n    },\n    copy: function copy(id) {\n      var _this3 = this;\n      this.$confirm('您确定要复制该功能表单, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        (0, _FormDesign.copyForm)(id).then(function (res) {\n          _this3.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: function onClose() {\n              _this3.initData();\n            }\n          });\n        });\n      }).catch(function () {});\n    },\n    exportModel: function exportModel(id) {\n      var _this4 = this;\n      this.$confirm('您确定要导出该功能表单, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        (0, _FormDesign.exportData)(id).then(function (res) {\n          _this4.jnpf.downloadFile(res.data.url);\n        });\n      }).catch(function () {});\n    },\n    handleAdd: function handleAdd(webType) {\n      this.addOrUpdateHandle('', webType);\n    },\n    closeForm: function closeForm(isRefresh) {\n      this.formVisible = false;\n      if (isRefresh) {\n        this.initData();\n      }\n    },\n    addForm: function addForm(flowType, formType) {\n      this.dialogVisible = false;\n      this.addOrUpdateHandle('', flowType, formType);\n    },\n    // 新增 / 修改\n    addOrUpdateHandle: function addOrUpdateHandle(id, flowType, formType) {\n      var _this5 = this;\n      this.formVisible = true;\n      this.$nextTick(function () {\n        _this5.$refs.Form.init(id, flowType, formType);\n      });\n    },\n    preview: function preview(row, dataSource, type) {\n      var _this6 = this;\n      this.previewType = type;\n      this.currRow = row;\n      this.currRow.dataSource = dataSource;\n      this.$nextTick(function () {\n        _this6.previewDialogVisible = true;\n      });\n    },\n    previewPc: function previewPc() {\n      var _this7 = this;\n      var data = {\n        enCode: this.currRow.enCode,\n        fullName: this.currRow.fullName,\n        formType: this.currRow.formType,\n        formId: this.currRow.id,\n        dataSource: this.currRow.dataSource\n      };\n      this.previewVisible = true;\n      this.$nextTick(function () {\n        _this7.$refs.preview.init(data);\n      });\n    },\n    enabledMark: function enabledMark(id, _enabledMark) {\n      var _this8 = this;\n      var str = _enabledMark === 1 ? \"表单停用\" : \"表单启用\";\n      this.$confirm(str + '?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        EnabledMark(id).then(function (res) {\n          _this8.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: function onClose() {\n              _this8.initData();\n            }\n          });\n        });\n      }).catch(function () {});\n    },\n    releaseForm: function releaseForm(id) {\n      var _this9 = this;\n      this.$confirm('发布表单会覆盖当前线上版本，是否继续？', '发布确认', {\n        type: 'warning'\n      }).then(function () {\n        (0, _FormDesign.release)(id, 1).then(function (res) {\n          _this9.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: function onClose() {\n              _this9.initData();\n            }\n          });\n        });\n      }).catch(function () {});\n    },\n    rollBackForm: function rollBackForm(id) {\n      var _this10 = this;\n      this.$confirm('此操作将当前编辑的表单内容回滚为已经发布的表单内容，是否继续？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        (0, _FormDesign.release)(id, 0).then(function (res) {\n          _this10.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: function onClose() {\n              _this10.initData();\n            }\n          });\n        });\n      }).catch(function () {});\n    }\n  }\n};",null]}