{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/extend/tableDemo/groupingTable/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/tableDemo/groupingTable/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { TableExampleListAll, TableExampleDelete } from '@/api/extend/tableExample'\nimport JNPFForm from '../commonForm'\nexport default {\n  name: 'extend-tableDemo-groupingTable',\n  components: {\n    JNPFForm\n  },\n  data() {\n    return {\n      keyword: '',\n      list: [],\n      listLoading: true,\n      formVisible: false,\n      expands: true,\n      refreshTable: true,\n      industryTypeList: []\n    }\n  },\n  created() {\n    this.getDictionaryData()\n  },\n  filters: {\n    getTypeText(id, industryTypeList) {\n      let item = industryTypeList.filter(o => o.id == id)[0]\n      return item && item.fullName ? item.fullName : ''\n    }\n  },\n  methods: {\n    getDictionaryData() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'IndustryType' }).then((res) => {\n        this.industryTypeList = res\n        this.initData()\n      })\n    },\n    refresh() {\n      this.keyword = ''\n      this.initData()\n    },\n    toggleExpand() {\n      this.refreshTable = false;\n      this.expands = !this.expands;\n      this.$nextTick(() => {\n        this.refreshTable = true;\n      });\n    },\n    initData() {\n      this.listLoading = true\n      TableExampleListAll({ keyword: this.keyword }).then(res => {\n        this.list = JSON.parse(JSON.stringify(this.industryTypeList))\n        for (let i = 0; i < this.list.length; i++) {\n          let e = this.list[i];\n          e.children = []\n          e.id = e.id\n          for (let j = 0; j < res.data.list.length; j++) {\n            if (e.id == res.data.list[j].projectType) {\n              e.children.push(res.data.list[j])\n            }\n          }\n        }\n        this.list = this.list.filter(o => o.children.length)\n        this.listLoading = false\n      })\n    },\n    handleDel(index, id) {\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(() => {\n        TableExampleDelete(id).then(res => {\n          this.initData()\n          this.$message({\n            type: 'success',\n            message: res.msg\n          });\n        })\n      }).catch(() => { });\n    },\n    // 新增 / 修改\n    addOrUpdateHandle(id) {\n      this.formVisible = true\n      this.$nextTick(() => {\n        this.$refs.JNPFForm.init(this.industryTypeList, id)\n      })\n    }\n  }\n}\n",null]}