{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/basic/profile/components/UserInfo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/basic/profile/components/UserInfo.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UpdateUser, getSign, deleteSign, updateDefault } from '@/api/permission/userSetting'\nimport { mapGetters } from \"vuex\";\nimport SignImgDialog from '@/components/SignImgDialog'\nexport default {\n  components: { SignImgDialog },\n  props: {\n    user: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  data() {\n    return {\n      form: {},\n      form2: {\n        realName: '',\n        signature: '',\n        gender: 1,\n        nation: '',\n        nativePlace: '',\n        certificatesType: '',\n        certificatesNumber: '',\n        education: '',\n        birthday: null,\n        telePhone: '',\n        landline: '',\n        mobilePhone: '',\n        email: '',\n        urgentContacts: '',\n        urgentTelePhone: '',\n        postalAddress: '',\n\n      },\n      form2Rule: {\n        realName: [\n          { required: true, message: '姓名不能为空', trigger: 'blur' }\n        ]\n      },\n      certificatesTypeOptions: [],\n      educationOptions: [],\n      genderOptions: [],\n      nationOptions: [],\n      signVisible: false,\n      signImg: '',\n      signList: []\n    }\n  },\n  computed: {\n    creatorTime() {\n      return this.jnpf.toDate(this.form.creatorTime)\n    },\n    entryDate() {\n      return this.jnpf.toDate(this.form.entryDate)\n    },\n    prevLogTime() {\n      return this.jnpf.toDate(this.form.prevLogTime)\n    },\n    ...mapGetters(['userInfo'])\n  },\n  created() {\n    this.getOptions()\n    this.getInfo()\n    this.getSign()\n  },\n  methods: {\n    closeDialog() {\n      this.signVisible = false\n      this.getSign()\n    },\n    getSign() {\n      getSign().then(res => {\n        this.signList = res.data || []\n      })\n    },\n    deleteSign(id) {\n      deleteSign(id).then(res => {\n        this.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500\n        })\n        this.getSign()\n      })\n    },\n    updateDefault(id, signImg) {\n      updateDefault(id).then(res => {\n        this.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500\n        })\n        this.$store.commit('user/SET_USERINFO_SIGNIMG', signImg)\n        this.getSign()\n      }).catch(err => {\n        this.getSign()\n      })\n    },\n    addSign() {\n      this.signVisible = true\n      this.$nextTick(() => {\n        this.$refs.SignImg.init()\n      })\n    },\n    getOptions() {\n      this.$store.dispatch('base/getDictionaryData', { sort: 'Education' }).then((res) => {\n        this.educationOptions = JSON.parse(JSON.stringify(res))\n        this.$store.dispatch('base/getDictionaryData', { sort: 'certificateType' }).then((res) => {\n          this.certificatesTypeOptions = JSON.parse(JSON.stringify(res))\n        })\n        this.$store.dispatch('base/getDictionaryData', { sort: 'sex' }).then(res => {\n          this.genderOptions = JSON.parse(JSON.stringify(res))\n        })\n        this.$store.dispatch('base/getDictionaryData', { sort: 'Nation' }).then(res => {\n          this.nationOptions = JSON.parse(JSON.stringify(res))\n        })\n      })\n    },\n    getInfo() {\n      this.form = this.user\n      for (let key of Object.keys(this.form2)) {\n        this.form2[key] = this.form[key]\n      }\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) return\n        UpdateUser(this.form2).then(res => {\n          this.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500\n          })\n          this.$emit('updateInfo')\n          this.$store.commit('user/SET_USERINFO_USERNAME', this.form2.realName)\n        })\n      })\n    }\n  }\n}\n",null]}