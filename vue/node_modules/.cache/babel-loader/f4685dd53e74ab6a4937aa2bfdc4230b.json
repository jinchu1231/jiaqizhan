{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/DefaultSortConfigModal.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/DefaultSortConfigModal.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _sortablejs = _interopRequireDefault(require(\"sortablejs\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      visible: false,\n      options: [],\n      list: [],\n      data: {},\n      sortTypeOptions: [{\n        id: 'asc',\n        fullName: '升序'\n      }, {\n        id: 'desc',\n        fullName: '降序'\n      }]\n    };\n  },\n  methods: {\n    init: function init(option) {\n      var _this = this;\n      this.data = option ? JSON.parse(JSON.stringify(option)) : {};\n      this.list = this.data.list;\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.setSort();\n      });\n    },\n    setSort: function setSort() {\n      var _this2 = this;\n      var el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0];\n      this.sortable = _sortablejs.default.create(el, {\n        ghostClass: 'sortable-ghost',\n        // Class name for the drop placeholder,\n        setData: function setData(dataTransfer) {\n          dataTransfer.setData('Text', '');\n        },\n        onEnd: function onEnd(evt) {\n          var targetRow = _this2.list.splice(evt.oldIndex, 1)[0];\n          _this2.list.splice(evt.newIndex, 0, targetRow);\n        },\n        handle: '.drag-handler'\n      });\n    },\n    getOptions: function getOptions(index) {\n      var _this3 = this;\n      var options = this.data.columnOptions.filter(function (o) {\n        return !['editor'].includes(o.__config__.jnpfKey);\n      });\n      ;\n      var _loop = function _loop() {\n        var e = _this3.list[i];\n        if (e.field && index !== i) options = options.filter(function (o) {\n          return o.id !== e.field;\n        });\n      };\n      for (var i = 0; i < this.list.length; i++) {\n        _loop();\n      }\n      return options;\n    },\n    closeDialog: function closeDialog() {\n      var isOk = true;\n      for (var i = 0; i < this.list.length; i++) {\n        if (!this.list[i].field) {\n          this.$message({\n            message: '字段不能为空',\n            type: 'warning'\n          });\n          isOk = false;\n          break;\n        }\n      }\n      if (!isOk) return;\n      this.$emit('confirm', this.list);\n      this.visible = false;\n    },\n    handleDel: function handleDel(index) {\n      this.list.splice(index, 1);\n    },\n    addHandle: function addHandle() {\n      var id = 'sort' + this.jnpf.idGenerator();\n      var item = {\n        field: \"\",\n        sort: 'desc',\n        id: id\n      };\n      this.list.push(item);\n    }\n  }\n};",null]}