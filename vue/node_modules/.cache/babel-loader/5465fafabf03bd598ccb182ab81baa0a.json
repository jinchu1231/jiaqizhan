{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/JNPFImport/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/JNPFImport/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.function.name\");\nvar _SelectFlowDialog = _interopRequireDefault(require(\"@/components/SelectFlowDialog\"));\nvar _common = require(\"@/api/common\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  components: {\n    SelectFlow: _SelectFlowDialog.default\n  },\n  data: function data() {\n    return {\n      visible: false,\n      btnLoading: false,\n      listLoading: false,\n      fileName: '',\n      fileList: [],\n      active: 1,\n      list: [],\n      headerList: [],\n      resultHeaderList: [],\n      resultList: [],\n      result: {\n        resultType: 0,\n        snum: 0,\n        fnum: 0\n      },\n      modelId: \"\",\n      url: '',\n      actionUrl: '',\n      mergeList: [],\n      enableFlow: 0,\n      flowList: [],\n      flowListVisible: false\n    };\n  },\n  methods: {\n    init: function init(modelId, url, enableFlow, flowList) {\n      this.active = 1;\n      this.fileList = [];\n      this.fileName = '';\n      this.enableFlow = enableFlow || 0;\n      this.flowList = flowList || [];\n      this.flowListVisible = false;\n      this.visible = true;\n      this.modelId = modelId || '';\n      this.actionUrl = \"\".concat(this.define.comUrl, \"/api/\").concat(url ? url : 'visualdev/OnlineDev', \"/Uploader\");\n      this.url = url ? url : \"visualdev/OnlineDev/\".concat(this.modelId);\n    },\n    beforeUpload: function beforeUpload(file) {\n      var isRightSize = file.size / 1024 < 500;\n      if (!isRightSize) this.$message.error(\"\\u6587\\u4EF6\\u5927\\u5C0F\\u4E0D\\u80FD\\u8D85\\u8FC7500KB\");\n      return isRightSize;\n    },\n    handleRemove: function handleRemove(file, fileList) {\n      this.fileList = [];\n    },\n    beforeRemove: function beforeRemove(file, fileList) {\n      return this.$confirm(\"\\u786E\\u5B9A\\u79FB\\u9664 \".concat(file.name, \"\\uFF1F\")).then(function () {});\n    },\n    handleChange: function handleChange(file, fileList) {\n      this.fileList = fileList.slice(-1);\n    },\n    handleSuccess: function handleSuccess(res, file, fileList) {\n      if (res.code == 200) {\n        this.fileList = fileList.slice(-1);\n        this.fileName = res.data.name;\n      } else {\n        this.fileList = fileList.filter(function (o) {\n          return o.uid != file.uid;\n        });\n        this.$message({\n          message: res.msg,\n          type: 'error',\n          duration: 1000\n        });\n      }\n    },\n    templateDownload: function templateDownload() {\n      var _this = this;\n      (0, _common.getTemplateDownload)(this.modelId, this.url).then(function (res) {\n        _this.jnpf.downloadFile(res.data.url);\n      });\n    },\n    prev: function prev() {\n      if (this.active == 1) return;\n      this.active--;\n    },\n    next: function next() {\n      var _this2 = this;\n      if (this.active == 2) {\n        if (!this.list.length) return this.$message({\n          message: '导入数据为空',\n          type: 'warning'\n        });\n        if (this.enableFlow === 1) {\n          if (!this.flowList.length) return this.$message.error('流程不存在');\n          if (this.flowList.length === 1) return this.selectFlow(this.flowList[0]);\n          this.flowListVisible = true;\n          this.$nextTick(function () {\n            _this2.$refs.selectFlow.init(_this2.flowList);\n          });\n          return;\n        }\n        this.handleSubmit();\n      }\n      if (this.active == 1) {\n        if (!this.fileList.length || !this.fileName) return this.$message({\n          message: '请先上传文件',\n          type: 'warning'\n        });\n        this.btnLoading = true;\n        (0, _common.getImportPreview)(this.modelId, {\n          fileName: this.fileName\n        }, this.url).then(function (res) {\n          _this2.list = res.data.dataRow;\n          _this2.resultHeaderList = JSON.parse(JSON.stringify(res.data.headerRow));\n          for (var index = 0; index < res.data.headerRow.length; index++) {\n            var item = res.data.headerRow[index];\n            if (item.children && item.children.length && item.jnpfKey == 'table') {\n              item.children.push({\n                fullName: \"操作\",\n                id: 'delete'\n              });\n            }\n          }\n          _this2.headerList = JSON.parse(JSON.stringify(res.data.headerRow));\n          _this2.btnLoading = false;\n          _this2.active++;\n          _this2.getMergeList(_this2.headerList);\n        }).catch(function () {\n          _this2.btnLoading = false;\n        });\n      }\n    },\n    selectFlow: function selectFlow(item) {\n      this.handleSubmit(item.id);\n      this.flowListVisible = false;\n    },\n    handleSubmit: function handleSubmit(flowId) {\n      var _this3 = this;\n      this.btnLoading = true;\n      var query = {\n        list: this.list\n      };\n      if (flowId) query.flowId = flowId;\n      (0, _common.importData)(this.modelId, query, this.url).then(function (res) {\n        _this3.result = res.data;\n        _this3.resultList = res.data.failResult;\n        _this3.btnLoading = false;\n        _this3.active++;\n        _this3.getMergeList(_this3.resultHeaderList);\n      }).catch(function () {\n        _this3.btnLoading = false;\n      });\n    },\n    getMergeList: function getMergeList(list) {\n      var _this4 = this;\n      this.mergeList = [];\n      list.forEach(function (item) {\n        if (item.children && item.children.length > 0) {\n          item.children.forEach(function (child, index) {\n            if (index == 0) {\n              _this4.mergeList.push({\n                prop: item.id + '-' + child.id,\n                rowspan: 1,\n                colspan: item.children.length\n              });\n            } else {\n              _this4.mergeList.push({\n                prop: item.id + '-' + child.id,\n                rowspan: 0,\n                colspan: 0\n              });\n            }\n          });\n        } else {\n          _this4.mergeList.push({\n            prop: item.id,\n            rowspan: 1,\n            colspan: 1\n          });\n        }\n      });\n    },\n    arraySpanMethod: function arraySpanMethod(_ref) {\n      var row = _ref.row,\n        column = _ref.column,\n        rowIndex = _ref.rowIndex,\n        columnIndex = _ref.columnIndex;\n      for (var i = 0; i < this.mergeList.length; i++) {\n        if (column.property == this.mergeList[i].prop) {\n          return [this.mergeList[i].rowspan, this.mergeList[i].colspan];\n        }\n      }\n    },\n    handleDel: function handleDel(index) {\n      this.list.splice(index, 1);\n    },\n    handleTableDel: function handleTableDel(index, i, item) {\n      this.list[index] && this.list[index][item.id] && this.list[index][item.id].splice(i, 1);\n    },\n    cancel: function cancel(isRefresh) {\n      this.visible = false;\n      if (isRefresh) this.$emit('refresh');\n    },\n    exportExceptionData: function exportExceptionData() {\n      var _this5 = this;\n      (0, _common.getImportExceptionData)(this.modelId, {\n        list: this.resultList\n      }, this.url).then(function (res) {\n        _this5.jnpf.downloadFile(res.data.url);\n      });\n    }\n  }\n};",null]}