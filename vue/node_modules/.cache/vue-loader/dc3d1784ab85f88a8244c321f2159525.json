{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/user/WorkHandoverForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/user/WorkHandoverForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getWorkHandover,\n  getWorkByUser\n} from '@/api/permission/user'\nimport { mapGetters } from \"vuex\"\nexport default {\n  data() {\n    return {\n      key: +new Date(),\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      activeName: 'flow',\n      treeData: [],\n      props: {\n        children: 'children',\n        label: 'fullName',\n        isLeaf: 'isLeaf',\n        icon: 'icon',\n        value: 'id',\n        disabled: 'disabled'\n      },\n      workHandoverPersonnelData: {},\n      fromId: '',\n      dataForm: {\n        id: '',\n        account: '',\n        managerId: '',\n        waitList: [],\n        flowList: [],\n        permissionList: []\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['userInfo'])\n  },\n  methods: {\n    changeUser(id, item) {\n      if (this.workHandoverPersonnelData.id === id || item.isAdministrator == 1) {\n        this.$message.warning(this.workHandoverPersonnelData.id === id ? '工作交接无法转交给本人' : '工作交接无法转交给管理员')\n        this.dataForm.managerId = \"\";\n        this.key = +new Date();\n      }\n    },\n    init(data) {\n      this.workHandoverPersonnelData = data\n      this.dataForm.account = data.realName + '/' + data.account\n      this.visible = true\n      this.activeName = 'flow'\n      this.dataForm.managerId = ''\n      this.dataForm.waitList = []\n      this.dataForm.flowList = []\n      this.dataForm.permissionList = []\n      this.fromId = data.id\n      getWorkByUser(this.fromId).then(res => {\n        this.treeData = res.data || []\n      })\n    },\n    handleCheckChange(type) {\n      const dataName = type == 1 ? 'flowList' : type == 2 ? 'waitList' : 'permissionList'\n      const treeRef = this.$refs['handoverContentTree' + type];\n      const parentIds = treeRef.getHalfCheckedKeys();\n      const childrenIds = treeRef.getCheckedKeys();\n      const dataIds = [...new Set([...parentIds, ...childrenIds])];\n      this.dataForm[dataName] = dataIds\n    },\n    dataFormSubmit() {\n      // 检查是否是自己交接给自己\n      if (this.workHandoverPersonnelData.id === this.dataForm.managerId) {\n        this.dataForm.managerId = \"\";\n        this.$message.warning(\"工作交接无法转交给本人\");\n        this.key = +new Date();\n        return;\n      }\n      // 检查是否选择了交接人\n      if (!this.dataForm.managerId) {\n        return this.$message.warning(\"请先选择工作交接人\");\n      }\n      // 检查是否选择了交接内容\n      if (\n        !this.dataForm.waitList.length &&\n        !this.dataForm.flowList.length &&\n        !this.dataForm.permissionList.length\n      ) {\n        return this.$message.warning(\"请先选择交接内容\");\n      }\n      this.btnLoading = true;\n      const query = {\n        waitList: this.dataForm.waitList,\n        flowList: this.dataForm.flowList,\n        permissionList: this.dataForm.permissionList,\n        toId: this.dataForm.managerId,\n        fromId: this.fromId\n      };\n      getWorkHandover(query)\n        .then(() => {\n          this.$message.success(\"工作交接成功\");\n          setTimeout(() => {\n            this.visible = false;\n            this.btnLoading = false;\n            this.$emit(\"complete\");\n          }, 1000);\n        })\n        .catch(() => {\n          this.btnLoading = false;\n        });\n    }\n  }\n}\n",null]}