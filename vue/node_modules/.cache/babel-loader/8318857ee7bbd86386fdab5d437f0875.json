{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/basic/dynamicModel/view/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/basic/dynamicModel/view/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.search\");\nrequire(\"core-js/modules/es6.regexp.replace\");\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es6.string.fixed\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nrequire(\"core-js/modules/es6.number.constructor\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.array.sort\");\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"regenerator-runtime/runtime\");\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/asyncToGenerator.js\"));\nvar _visualDev = require(\"@/api/onlineDev/visualDev\");\nvar _workFlowForm = require(\"@/api/workFlow/workFlowForm\");\nvar _dictionary = require(\"@/api/systemData/dictionary\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _common = require(\"@/api/common\");\nvar _FlowBefore = require(\"@/api/workFlow/FlowBefore\");\nvar _Search = _interopRequireDefault(require(\"../list/Search\"));\nvar _ExportBox = _interopRequireDefault(require(\"@/components/ExportBox\"));\nvar _JNPFCustom = _interopRequireDefault(require(\"@/components/JNPFCustom\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'dynamicModel',\n  props: ['config', 'modelId', 'isPreview'],\n  components: {\n    Search: _Search.default,\n    ExportBox: _ExportBox.default,\n    CustomBox: _JNPFCustom.default\n  },\n  data: function data() {\n    return {\n      keyword: '',\n      treeProps: {\n        children: 'children',\n        label: 'fullName',\n        value: 'id',\n        isLeaf: 'isLeaf'\n      },\n      list: [],\n      cacheList: [],\n      total: 0,\n      listLoading: false,\n      listQuery: {\n        currentPage: 1,\n        pageSize: 20,\n        sort: 'desc',\n        sidx: '',\n        menuId: '',\n        queryJson: '',\n        superQueryJson: ''\n      },\n      defaultListQuery: {\n        pageSize: 20,\n        sort: 'desc',\n        sidx: ''\n      },\n      treeData: [],\n      expandsTree: true,\n      treeActiveId: '',\n      columnData: {\n        columnBtnsList: []\n      },\n      formData: {},\n      columnList: [],\n      childColumnList: [],\n      columnOptions: [],\n      exportList: [],\n      columnBtnsList: [],\n      customBtnsList: [],\n      hasBatchBtn: false,\n      refreshTable: false,\n      expandsTable: true,\n      multipleSelection: [],\n      settingsColumnList: [],\n      mergeList: [],\n      expandObj: {},\n      flowTemplateJson: {},\n      isCustomCopy: false,\n      candidateVisible: false,\n      candidateType: 1,\n      branchList: [],\n      candidateList: [],\n      currRow: {},\n      workFlowFormData: {},\n      rowStyle: null,\n      cellStyle: null,\n      refreshTree: true,\n      exportBoxVisible: false,\n      customBoxVisible: false\n    };\n  },\n  watch: {\n    keyword: function keyword(val) {\n      if (this.columnData.treeMethod == 1) this.$refs.treeBox.filter(val);\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function () {\n      var _init = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.listLoading = true;\n              this.listQuery.menuId = this.$route.meta.modelId;\n              this.refreshTable = false;\n              if (this.config.columnData) {\n                _context.next = 5;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 5:\n              this.columnData = JSON.parse(this.config.columnData);\n              this.columnData.searchList = this.columnData.searchList.map(function (o) {\n                return _objectSpread({\n                  value: undefined\n                }, o);\n              });\n              if (this.columnData.type === 3) {\n                this.columnData.columnList = this.columnData.columnList.filter(function (o) {\n                  return o.prop != _this.columnData.groupField;\n                });\n              }\n              if (this.config.enableFlow == 1) {\n                this.flowTemplateJson = this.config.flowTemplateJson ? JSON.parse(this.config.flowTemplateJson) : {};\n                this.isCustomCopy = this.flowTemplateJson.properties && this.flowTemplateJson.properties.isCustomCopy;\n              }\n              this.customBtnsList = this.columnData.customBtnsList || [];\n              this.columnBtnsList = this.columnData.columnBtnsList || [];\n              this.listLoading = true;\n              if (this.isPreview) this.listQuery.menuId = \"270579315303777093\";\n              _context.next = 15;\n              return (0, _common.getColumnsByModuleId)(this.listQuery.menuId);\n            case 15:\n              res = _context.sent;\n              this.settingsColumnList = res.data || [];\n              this.rowStyle = this.jnpf.getScriptFunc.call(this, this.columnData.funcs && this.columnData.funcs.rowStyle);\n              this.cellStyle = this.jnpf.getScriptFunc.call(this, this.columnData.funcs && this.columnData.funcs.cellStyle);\n              this.getColumnList();\n              this.$nextTick(function () {\n                _this.refreshTable = true;\n              });\n              if (!this.isPreview) {\n                _context.next = 23;\n                break;\n              }\n              return _context.abrupt(\"return\", this.listLoading = false);\n            case 23:\n              this.listQuery.pageSize = this.columnData.pageSize;\n              this.listQuery.sort = this.columnData.sort;\n              this.listQuery.sidx = this.columnData.defaultSidx;\n              this.defaultListQuery.pageSize = this.columnData.pageSize;\n              this.defaultListQuery.sort = this.columnData.sort;\n              this.defaultListQuery.sidx = this.columnData.defaultSidx;\n              if (this.columnData.type === 3 || !this.columnData.hasPage) this.listQuery.pageSize = 10000;\n              this.initData();\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }(),\n    initData: function initData() {\n      var _this2 = this;\n      if (this.isPreview) return;\n      this.listLoading = true;\n      (0, _visualDev.getModelList)(this.modelId, this.listQuery).then(function (res) {\n        if (_this2.columnData.type === 4) {\n          _this2.list = res.data.list.map(function (o) {\n            return _objectSpread(_objectSpread(_objectSpread({}, o), _this2.expandObj), {}, {\n              rowEdit: false\n            });\n          });\n          _this2.cacheList = JSON.parse(JSON.stringify(_this2.list));\n        } else {\n          _this2.list = res.data.list.map(function (o) {\n            return _objectSpread(_objectSpread(_objectSpread({}, o), _this2.expandObj), {}, {\n              hasChildren: true\n            });\n          });\n        }\n        if (_this2.columnData.type !== 3 && _this2.columnData.hasPage) _this2.total = res.data.pagination.total;\n        _this2.listLoading = false;\n        _this2.$nextTick(function () {\n          if (_this2.columnData.funcs && _this2.columnData.funcs.afterOnload) _this2.setTableLoadFunc();\n        });\n      }).catch(function () {\n        _this2.listLoading = false;\n      });\n    },\n    getTreeView: function getTreeView() {\n      var _this3 = this;\n      if (this.columnData.treeDataSource === \"dictionary\") {\n        if (!this.columnData.treeDictionary) return;\n        (0, _dictionary.getDictionaryDataSelector)(this.columnData.treeDictionary).then(function (res) {\n          _this3.treeData = res.data.list;\n          _this3.initData();\n        });\n      }\n      if (this.columnData.treeDataSource === \"organize\") {\n        this.$store.dispatch('generator/getDepTree').then(function (res) {\n          _this3.treeData = res;\n          _this3.initData();\n        });\n      }\n      if (this.columnData.treeDataSource === \"department\") {\n        this.$store.dispatch('generator/getDepTree').then(function (res) {\n          _this3.treeData = res;\n          _this3.initData();\n        });\n      }\n      if (this.columnData.treeDataSource === \"api\") {\n        if (!this.columnData.treePropsUrl) return;\n        (0, _dataInterface.getDataInterfaceRes)(this.columnData.treePropsUrl).then(function (res) {\n          var data = res.data;\n          if (Array.isArray(data)) {\n            _this3.treeData = data;\n          } else {\n            _this3.treeData = [];\n          }\n          _this3.initData();\n        });\n      }\n    },\n    /**\n    * 对表格进行合计\n    */\n    getTableSummaries: function getTableSummaries(param) {\n      var _this4 = this;\n      var columns = param.columns,\n        data = param.data;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '合计';\n          return;\n        } else if (_this4.columnData.summaryField.includes(column.property)) {\n          var values = data.map(function (item) {\n            return Number(item[column.property]);\n          });\n          if (!values.every(function (value) {\n            return isNaN(value);\n          })) {\n            sums[index] = values.reduce(function (prev, curr) {\n              var value = Number(curr);\n              if (!isNaN(value)) {\n                return prev + curr;\n              } else {\n                return prev;\n              }\n            }, 0).toFixed(2);\n          } else {\n            sums[index] = '';\n          }\n        }\n      });\n      return sums;\n    },\n    getColumnList: function getColumnList() {\n      if (this.isPreview) {\n        var columnList = this.columnData.columnList;\n        this.columnList = this.transformColumnList(columnList);\n        return;\n      }\n      var columnPermissionList = [];\n      if (!this.columnData.useColumnPermission) {\n        columnPermissionList = this.columnData.columnList;\n      } else {\n        var permissionList = this.$store.getters.permissionList;\n        var modelId = this.$route.meta.modelId;\n        var list = permissionList.filter(function (o) {\n          return o.modelId === modelId;\n        });\n        var _columnList = list[0] && list[0].column ? list[0].column : [];\n        for (var i = 0; i < this.columnData.columnList.length; i++) {\n          inner: for (var j = 0; j < _columnList.length; j++) {\n            if (this.columnData.columnList[i].prop === _columnList[j].enCode) {\n              columnPermissionList.push(this.columnData.columnList[i]);\n              break inner;\n            }\n          }\n        }\n      }\n      if (![3, 5].includes(this.columnData.type)) columnPermissionList = this.getComplexColumns(columnPermissionList);\n      this.columnList = this.transformColumnList(columnPermissionList);\n    },\n    getComplexColumns: function getComplexColumns(columns) {\n      var complexHeaderList = this.columnData.complexHeaderList || [];\n      if (!complexHeaderList.length) return columns;\n      var childColumns = [];\n      for (var i = 0; i < complexHeaderList.length; i++) {\n        var e = complexHeaderList[i];\n        e.label = e.fullName;\n        e.align = e.align;\n        e.dataIndex = e.id;\n        e.prop = e.id;\n        e.children = [];\n        e.jnpfKey = 'complexHeader';\n        e.sortable = false;\n        if (e.childColumns && e.childColumns.length) {\n          childColumns.push.apply(childColumns, (0, _toConsumableArray2.default)(e.childColumns));\n          for (var j = 0; j < columns.length; j++) {\n            var o = columns[j];\n            if (e.childColumns.includes(o.id) && o.fixed !== 'left' && o.fixed !== 'right') e.children.push(_objectSpread({}, o));\n          }\n        }\n      }\n      complexHeaderList = complexHeaderList.filter(function (o) {\n        return o.children.length;\n      });\n      for (var _i = 0; _i < columns.length; _i++) {\n        var item = columns[_i];\n        if (!childColumns.includes(item.id)) complexHeaderList.push(item);\n      }\n      return complexHeaderList;\n    },\n    transformColumnList: function transformColumnList(columnList) {\n      var _this5 = this;\n      var list = [];\n      var _loop = function _loop() {\n        var e = columnList[i];\n        if (!e.prop.includes('-')) {\n          list.push(e);\n        } else {\n          var prop = e.prop.split('-')[0];\n          var vModel = e.prop.split('-')[1];\n          var label = e.label.split('-')[0];\n          var childLabel = e.label.replace(label + '-', '');\n          var newItem = {\n            align: \"center\",\n            jnpfKey: \"table\",\n            prop: prop,\n            label: label,\n            children: []\n          };\n          e.vModel = vModel;\n          e.childLabel = childLabel;\n          if (!_this5.expandObj.hasOwnProperty(\"\".concat(prop, \"Expand\"))) _this5.$set(_this5.expandObj, \"\".concat(prop, \"Expand\"), false);\n          if (!list.some(function (o) {\n            return o.prop === prop;\n          })) list.push(newItem);\n          for (var _i2 = 0; _i2 < list.length; _i2++) {\n            if (list[_i2].prop === prop) {\n              list[_i2].children.push(e);\n              break;\n            }\n          }\n        }\n      };\n      for (var i = 0; i < columnList.length; i++) {\n        _loop();\n      }\n      this.getMergeList(list);\n      this.getExportList(list);\n      this.childColumnList = list.filter(function (o) {\n        return o.jnpfKey === 'table';\n      });\n      return list;\n    },\n    getExportList: function getExportList(list) {\n      var exportList = [];\n      for (var i = 0; i < list.length; i++) {\n        if (list[i].jnpfKey === 'table') {\n          if (this.columnData.type != 4) exportList.push.apply(exportList, (0, _toConsumableArray2.default)(list[i].children));\n        } else if (list[i].jnpfKey === 'complexHeader') {\n          exportList.push.apply(exportList, (0, _toConsumableArray2.default)(list[i].children));\n        } else {\n          exportList.push(list[i]);\n        }\n      }\n      this.exportList = exportList;\n    },\n    getMergeList: function getMergeList(list) {\n      var _this6 = this;\n      list.forEach(function (item) {\n        if (item.children && item.children.length > 0 && item.jnpfKey == 'table') {\n          item.children.forEach(function (child, index) {\n            if (index == 0) {\n              _this6.mergeList.push({\n                prop: child.prop,\n                rowspan: 1,\n                colspan: item.children.length\n              });\n            } else {\n              _this6.mergeList.push({\n                prop: child.prop,\n                rowspan: 0,\n                colspan: 0\n              });\n            }\n          });\n        } else {\n          _this6.mergeList.push({\n            prop: item.prop,\n            rowspan: 1,\n            colspan: 1\n          });\n        }\n      });\n    },\n    arraySpanMethod: function arraySpanMethod(_ref) {\n      var column = _ref.column;\n      for (var i = 0; i < this.mergeList.length; i++) {\n        if (column.property == this.mergeList[i].prop) {\n          return [this.mergeList[i].rowspan, this.mergeList[i].colspan];\n        }\n      }\n    },\n    toggleExpand: function toggleExpand(row, field) {\n      row[field] = !row[field];\n    },\n    getNodePath: function getNodePath(node) {\n      var fullPath = [];\n      var loop = function loop(node) {\n        if (node.level) fullPath.unshift(node.data);\n        if (node.parent) loop(node.parent);\n      };\n      loop(node);\n      return fullPath;\n    },\n    handleNodeClick: function handleNodeClick(data, node) {\n      var _this7 = this;\n      if (this.treeActiveId == data[this.treeProps.value]) return;\n      this.treeActiveId = data[this.treeProps.value];\n      this.$refs.Search.treeReset();\n      var queryJson = {};\n      if (this.columnData.treeDataSource === \"organize\") {\n        var nodePath = this.getNodePath(node);\n        var currValue = nodePath.map(function (o) {\n          return o[_this7.treeProps.value];\n        });\n        queryJson = (0, _defineProperty2.default)({}, this.columnData.treeRelation, currValue);\n        this.treeActiveId = currValue;\n      } else {\n        queryJson = (0, _defineProperty2.default)({}, this.columnData.treeRelation, data[this.treeProps.value]);\n      }\n      this.search(JSON.stringify(queryJson));\n    },\n    handleDel: function handleDel(id, index) {\n      var _this8 = this;\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(function () {\n        if (id) {\n          (0, _visualDev.deleteModel)(_this8.modelId, id).then(function (res) {\n            _this8.$message({\n              type: 'success',\n              message: res.msg,\n              duration: 1000,\n              onClose: function onClose() {\n                _this8.initData();\n              }\n            });\n          });\n        } else {\n          _this8.list.splice(index, 1);\n        }\n      }).catch(function () {});\n    },\n    saveForRowEdit: function saveForRowEdit(row, status, candidateData) {\n      var _this9 = this;\n      if (this.isPreview) return this.$message({\n        message: '功能预览不支持数据保存',\n        type: 'warning'\n      });\n      if (this.config.enableFlow == 1) {\n        var query = {\n          id: row.id,\n          status: status || \"1\",\n          candidateType: this.candidateType,\n          formData: row,\n          flowId: this.config.flowId,\n          flowUrgent: 1\n        };\n        if (candidateData) query = _objectSpread(_objectSpread({}, query), candidateData);\n        var formMethod = query.id ? _workFlowForm.Update : _workFlowForm.Create;\n        formMethod(query).then(function (res) {\n          _this9.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: function onClose() {\n              _this9.candidateVisible = false;\n              _this9.initData();\n            }\n          });\n        });\n      } else {\n        var _query = {\n          id: row.id,\n          data: JSON.stringify(row)\n        };\n        var _formMethod = _query.id ? _visualDev.updateModel : _visualDev.createModel;\n        _formMethod(this.modelId, _query).then(function (res) {\n          _this9.$message({\n            message: res.msg,\n            type: 'success',\n            duration: 1500,\n            onClose: function onClose() {\n              _this9.candidateVisible = false;\n              _this9.initData();\n            }\n          });\n        });\n      }\n    },\n    submitForRowEdit: function submitForRowEdit(row) {\n      var _this10 = this;\n      this.currRow = row;\n      if (this.isPreview) return this.$message({\n        message: '功能预览不支持数据保存',\n        type: 'warning'\n      });\n      this.workFlowFormData = {\n        id: row.id,\n        formData: row,\n        flowId: this.config.flowId\n      };\n      (0, _FlowBefore.Candidates)(0, this.workFlowFormData).then(function (res) {\n        var data = res.data;\n        _this10.candidateType = data.type;\n        if (data.type == 1) {\n          _this10.branchList = res.data.list.filter(function (o) {\n            return o.isBranchFlow;\n          });\n          _this10.candidateList = res.data.list.filter(function (o) {\n            return !o.isBranchFlow && o.isCandidates;\n          });\n          _this10.candidateVisible = true;\n        } else if (data.type == 2) {\n          _this10.branchList = [];\n          _this10.candidateList = res.data.list.filter(function (o) {\n            return o.isCandidates;\n          });\n          _this10.candidateVisible = true;\n        } else {\n          if (_this10.isCustomCopy) {\n            _this10.branchList = [];\n            _this10.candidateList = [];\n            _this10.candidateVisible = true;\n            return;\n          }\n          _this10.$confirm('您确定要提交当前流程吗, 是否继续?', '提示', {\n            type: 'warning'\n          }).then(function () {\n            _this10.saveForRowEdit(row, '0');\n          }).catch(function () {});\n        }\n      }).catch(function () {});\n    },\n    submitCandidate: function submitCandidate(data) {\n      this.saveForRowEdit(this.currRow, '0', data);\n    },\n    cancelRowEdit: function cancelRowEdit(row, index) {\n      if (!row.id) return this.list.splice(index, 1);\n      row.rowEdit = false;\n      var item = JSON.parse(JSON.stringify(this.cacheList[index]));\n      this.$set(this.list, index, item);\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      var res = val.map(function (item) {\n        return item.id;\n      });\n      this.multipleSelection = res;\n    },\n    sortChange: function sortChange(_ref2) {\n      var column = _ref2.column,\n        prop = _ref2.prop,\n        order = _ref2.order;\n      this.listQuery.sort = order == 'ascending' ? 'asc' : 'desc';\n      this.listQuery.sidx = !order ? '' : prop;\n      this.initData();\n    },\n    reset: function reset() {\n      this.listQuery.sort = this.defaultListQuery.sort;\n      this.listQuery.sidx = this.defaultListQuery.sidx;\n      if (this.columnData.type === 2) {\n        var obj = (0, _defineProperty2.default)({}, this.columnData.treeRelation, this.treeActiveId);\n        var queryJson = this.treeActiveId ? JSON.stringify(obj) : '';\n        this.search(queryJson);\n      } else {\n        this.search('');\n      }\n    },\n    searchData: function searchData(queryJson) {\n      if (this.columnData.type === 2 && this.treeActiveId) {\n        queryJson = JSON.parse(queryJson);\n        queryJson = _objectSpread((0, _defineProperty2.default)({}, this.columnData.treeRelation, this.treeActiveId), queryJson);\n        queryJson = JSON.stringify(queryJson);\n      }\n      this.search(queryJson);\n    },\n    search: function search(queryJson) {\n      if (this.isPreview) return;\n      if (!queryJson) this.$refs.treeBox && this.$refs.treeBox.setCurrentKey(null);\n      this.listQuery.queryJson = queryJson;\n      this.listQuery.currentPage = 1;\n      this.initData();\n    },\n    superQuery: function superQuery(queryJson) {\n      if (this.isPreview) return;\n      this.listQuery.superQueryJson = queryJson;\n      this.listQuery.currentPage = 1;\n      this.initData();\n    },\n    customBtnsHandel: function customBtnsHandel(item, row, index) {\n      if (item.event.btnType == 1) this.handlePopup(item.event, row, index);\n      if (item.event.btnType == 2) this.handleScriptFunc(item.event, row, index);\n      if (item.event.btnType == 3) this.handleInterface(item.event, row, index);\n    },\n    handlePopup: function handlePopup(item, row, index) {\n      var _this11 = this;\n      this.customBoxVisible = true;\n      this.$nextTick(function () {\n        _this11.$refs.CustomBox.init(item, _this11.modelId, '', _this11.isPreview, row);\n      });\n    },\n    handleScriptFunc: function handleScriptFunc(item, row, index) {\n      var parameter = {\n        data: row,\n        index: index,\n        refresh: this.initData,\n        onlineUtils: this.jnpf.onlineUtils\n      };\n      var func = this.jnpf.getScriptFunc.call(this, item.func);\n      if (!func) return;\n      func.call(this, parameter);\n    },\n    handleInterface: function handleInterface(item, row, index) {\n      var _this12 = this;\n      var handlerInterface = function handlerInterface() {\n        if (item.templateJson && item.templateJson.length) {\n          item.templateJson.forEach(function (ele) {\n            ele.defaultValue = row[ele.relationField] || \"\";\n          });\n        }\n        var query = {\n          paramList: item.templateJson || []\n        };\n        (0, _dataInterface.getDataInterfaceRes)(item.interfaceId, query).then(function (res) {\n          _this12.$message({\n            message: res.msg,\n            type: 'success'\n          });\n        });\n      };\n      if (!item.useConfirm) return handlerInterface();\n      this.$confirm(item.confirmTitle || '确认执行此操作', '提示', {\n        type: 'warning'\n      }).then(function () {\n        handlerInterface();\n      }).catch(function () {});\n    },\n    setTableLoadFunc: function setTableLoadFunc() {\n      var JNPFTable = this.$refs.tableRef.$refs.JNPFTable;\n      var parameter = {\n        data: this.list,\n        tableRef: JNPFTable,\n        onlineUtils: this.jnpf.onlineUtils\n      };\n      var func = this.jnpf.getScriptFunc.call(this, this.columnData.funcs.afterOnload);\n      if (!func) return;\n      func.call(this, parameter);\n    },\n    toggleTreeExpand: function toggleTreeExpand(expands) {\n      var _this13 = this;\n      this.refreshTree = false;\n      this.expandsTree = expands;\n      this.$nextTick(function () {\n        _this13.refreshTree = true;\n        _this13.$nextTick(function () {\n          _this13.$refs.treeBox.setCurrentKey(null);\n        });\n      });\n    },\n    toggleExpandList: function toggleExpandList() {\n      var _this14 = this;\n      this.refreshTable = false;\n      this.expandsTable = !this.expandsTable;\n      this.$nextTick(function () {\n        _this14.refreshTable = true;\n      });\n    },\n    loadNode: function loadNode(node, resolve) {\n      var nodeData = node.data;\n      var config = this.columnData;\n      if (config.treeInterfaceId) {\n        if (config.treeTemplateJson && config.treeTemplateJson.length) {\n          for (var i = 0; i < config.treeTemplateJson.length; i++) {\n            var element = config.treeTemplateJson[i];\n            element.defaultValue = nodeData[element.relationField] || '';\n          }\n        }\n        var query = {\n          paramList: config.treeTemplateJson || []\n        };\n        (0, _dataInterface.getDataInterfaceRes)(config.treeInterfaceId, query).then(function (res) {\n          var data = res.data;\n          if (Array.isArray(data)) {\n            resolve(data);\n          } else {\n            resolve([]);\n          }\n        });\n      }\n    },\n    treeLoad: function treeLoad(tree, treeNode, resolve) {\n      var _this15 = this;\n      (0, _visualDev.getModelSubList)(this.modelId, tree.id, this.listQuery).then(function (res) {\n        if (res.data.list && Array.isArray(res.data.list)) {\n          var list = res.data.list.map(function (o) {\n            return _objectSpread(_objectSpread(_objectSpread({}, o), _this15.expandObj), {}, {\n              hasChildren: true\n            });\n          });\n          resolve(list);\n        } else {\n          resolve([]);\n        }\n      });\n    },\n    headBtnsHandel: function headBtnsHandel(key) {\n      var _this16 = this;\n      if (key == 'download') {\n        this.exportBoxVisible = true;\n        this.$nextTick(function () {\n          _this16.$refs.ExportBox.init(_this16.exportList);\n        });\n      }\n    },\n    download: function download(data) {\n      var _this17 = this;\n      if (this.isPreview) return this.$message({\n        message: '功能预览不支持数据导出',\n        type: 'warning'\n      });\n      var query = _objectSpread(_objectSpread({}, this.listQuery), data);\n      (0, _visualDev.exportModel)(this.modelId, query).then(function (res) {\n        if (!res.data.url) return;\n        _this17.jnpf.downloadFile(res.data.url);\n        _this17.$refs.ExportBox.visible = false;\n        _this17.exportBoxVisible = false;\n      });\n    },\n    getFixed: function getFixed(item, i) {\n      if (i == 0 && this.columnData.groupField && this.columnData.type == 3) {\n        if (this.columnList.some(function (o) {\n          return o.fixed == 'left';\n        })) return 'left';\n        return false;\n      } else if (this.columnData.childTableStyle != 2) {\n        return item.fixed == 'none' ? false : item.fixed;\n      } else {\n        return false;\n      }\n    }\n  }\n};",null]}