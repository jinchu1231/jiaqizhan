{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/authorize/AuthorizeForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/authorize/AuthorizeForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getAuthorizeValues,\n  updateAuthorizeList\n} from '@/api/permission/authorize'\n\nexport default {\n  data() {\n    return {\n      visible: false,\n      treeLoading: false,\n      btnLoading: false,\n      checkStrictly: true,\n      objectId: '',\n      dataForm: {\n        objectType: '',\n        module: [],\n        systemIds: [],\n        button: [],\n        column: [],\n        form: [],\n        resource: []\n      },\n      params: {\n        type: 'system',\n        moduleIds: ''\n      },\n      systemIds: '',\n      title: '',\n      active: 0,\n      authorizeTreeData: [],\n      moduleAuthorizeTree: [],\n      buttonAuthorizeTree: [],\n      columnAuthorizeTree: [],\n      formAuthorizeTree: [],\n      resourceAuthorizeTree: [],\n      systemAllData: [],\n      moduleAllData: [],\n      buttonAllData: [],\n      columnAllData: [],\n      formAllData: [],\n      resourceAllData: [],\n      moduleIdsTemp: [],\n      defaultProps: { // 配置项（必选）\n        value: 'id',\n        label: 'fullName',\n        children: 'children'\n      }\n    }\n  },\n  methods: {\n    init(id, fullName, type) {\n      Object.assign(this.$data, this.$options.data())\n      this.visible = true\n      this.objectId = id\n      this.dataForm.objectType = type\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        if (type === 'User') {\n          this.title = this.$t(`user.userPermission`) + ' - ' + fullName\n        } else if (type === 'Position') {\n          this.title = this.$t(`position.postPermission`) + '- ' + fullName\n        } else if (type === 'Role') {\n          this.title = fullName\n        }\n        this.getAuthorizeList()\n      })\n    },\n    getAuthorizeList() {\n      this.treeLoading = true\n      this.authorizeTreeData = []\n      getAuthorizeValues(this.objectId, this.params).then(res => {\n        switch (this.active) {\n          case 0:\n            this.systemAuthorizeTree = res.data.list\n            this.systemAllData = res.data.all\n            this.authorizeTreeData = this.systemAuthorizeTree\n            this.dataForm.systemIds = [...this.moduleIdsTemp, ...res.data.ids]\n            this.dataForm.systemIds = [...new Set(this.dataForm.systemIds)]\n            this.moduleIdsTemp = this.dataForm.systemIds\n            this.systemIds = this.moduleIdsTemp\n            this.$refs.authorizeTree.setCheckedKeys(this.dataForm.systemIds)\n            break\n          case 1:\n            this.moduleAuthorizeTree = res.data.list\n            this.moduleAllData = res.data.all\n            this.authorizeTreeData = this.moduleAuthorizeTree\n            const moduleIds = [...res.data.ids, ...this.moduleIdsTemp]\n            this.dataForm.module = [...new Set(moduleIds)]\n            this.moduleIdsTemp = this.dataForm.module\n            this.$refs.authorizeTree.setCheckedKeys(this.dataForm.module)\n            break\n          case 2:\n            this.buttonAuthorizeTree = res.data.list\n            this.buttonAllData = res.data.all\n            this.authorizeTreeData = this.buttonAuthorizeTree\n            this.dataForm.button = [...this.dataForm.button, ...res.data.ids, ...this.moduleIdsTemp]\n            this.dataForm.button = [...new Set(this.dataForm.button)]\n            this.$refs.authorizeTree.setCheckedKeys(this.dataForm.button)\n            break\n          case 3:\n            this.columnAuthorizeTree = res.data.list\n            this.columnAllData = res.data.all\n            this.authorizeTreeData = this.columnAuthorizeTree\n            this.dataForm.column = [...this.dataForm.column, ...res.data.ids, ...this.moduleIdsTemp]\n            this.dataForm.column = [...new Set(this.dataForm.column)]\n            this.$refs.authorizeTree.setCheckedKeys(this.dataForm.column)\n            break\n          case 4:\n            this.formAuthorizeTree = res.data.list\n            this.formAllData = res.data.all\n            this.authorizeTreeData = this.formAuthorizeTree\n            this.dataForm.form = [...this.dataForm.form, ...res.data.ids, ...this.moduleIdsTemp]\n            this.dataForm.form = [...new Set(this.dataForm.form)]\n            this.$refs.authorizeTree.setCheckedKeys(this.dataForm.form)\n            break\n          case 5:\n            this.resourceAuthorizeTree = res.data.list\n            this.resourceAllData = res.data.all\n            this.authorizeTreeData = this.resourceAuthorizeTree\n            this.dataForm.resource = [...this.dataForm.resource, ...res.data.ids, ...this.moduleIdsTemp]\n            this.dataForm.resource = [...new Set(this.dataForm.resource)]\n            this.$refs.authorizeTree.setCheckedKeys(this.dataForm.resource)\n            break\n        }\n        this.checkStrictly = false\n        this.treeLoading = false\n      }).catch(() => {\n        this.treeLoading = false\n      })\n    },\n    goBack() {\n      this.$emit('close')\n    },\n    // 全选/全不选\n    handleCheck(val) {\n      if (val === 'checkAll') {\n        switch (this.active) {\n          case 0:\n            this.$refs.authorizeTree.setCheckedKeys(this.systemAllData)\n            break\n          case 1:\n            this.$refs.authorizeTree.setCheckedKeys(this.moduleAllData)\n            break\n          case 2:\n            this.$refs.authorizeTree.setCheckedKeys(this.buttonAllData)\n            break\n          case 3:\n            this.$refs.authorizeTree.setCheckedKeys(this.columnAllData)\n            break\n          case 4:\n            this.$refs.authorizeTree.setCheckedKeys(this.formAllData)\n            break\n          case 5:\n            this.$refs.authorizeTree.setCheckedKeys(this.resourceAllData)\n            break\n        }\n      }\n      if (val === 'cancelCheckAll') {\n        this.$refs.authorizeTree.setCheckedKeys([])\n      }\n    },\n    // 折叠 展开\n    setAllExpand(state) {\n      let result\n      if (state === 'open') {\n        result = true\n      }\n      if (state === 'close') {\n        result = false\n      }\n      const nodes = this.$refs.authorizeTree.store.nodesMap\n      for (let i in nodes) {\n        nodes[i].expanded = result\n      }\n    },\n    // 上一步\n    handlePrevStep() {\n      this.active -= 1\n      this.handelInitData()\n    },\n    // 下一步\n    handleNextStep() {\n      if (this.active++ > 4) this.active = 0\n      this.handelInitData()\n    },\n    handelInitData() {\n      this.checkStrictly = true\n      this.treeLoading = true\n      switch (this.active) {\n        case 0:\n          this.params.type = 'system'\n          this.params.moduleIds = (this.moduleIdsTemp).toString()\n          break\n        case 1:\n          this.params.type = 'module'\n          this.params.moduleIds = (this.systemIds).toString()\n          break\n        case 2:\n          this.params.type = 'button'\n          this.params.moduleIds = (this.moduleIdsTemp).toString()\n          break\n        case 3:\n          this.params.type = 'column'\n          this.params.moduleIds = (this.moduleIdsTemp).toString()\n          break\n        case 4:\n          this.params.type = 'form'\n          this.params.moduleIds = (this.moduleIdsTemp).toString()\n          break\n        case 5:\n          this.params.type = 'resource'\n          this.params.moduleIds = (this.moduleIdsTemp).toString()\n          break\n      }\n      this.getAuthorizeList()\n    },\n    // 设置数据\n    selectTreeNodeClick() {\n      const parentIds = this.$refs.authorizeTree.getHalfCheckedKeys()\n      const childrenIds = this.$refs.authorizeTree.getCheckedKeys()\n      const newIds = [...parentIds, ...childrenIds]\n      const dataIds = [...new Set(newIds)]\n      switch (this.active) {\n        case 0:\n          this.dataForm.systemIds = dataIds\n          this.moduleIdsTemp = this.dataForm.systemIds\n          this.systemIds = this.moduleIdsTemp\n          break\n        case 1:\n          this.dataForm.module = dataIds\n          this.moduleIdsTemp = this.dataForm.module\n          break\n        case 2:\n          this.dataForm.button = dataIds\n          break\n        case 3:\n          this.dataForm.column = dataIds\n          break\n        case 4:\n          this.dataForm.form = dataIds\n          break\n        case 5:\n          this.dataForm.resource = dataIds\n          break\n      }\n    },\n    handleConfirm() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          updateAuthorizeList(this.objectId, this.dataForm).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$emit('close', true)\n              }\n            })\n          }).catch(() => {\n            this.btnLoading = false\n          })\n        }\n      })\n    }\n  }\n}\n",null]}