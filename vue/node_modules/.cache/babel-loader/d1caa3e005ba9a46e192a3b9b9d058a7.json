{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/permission/authorize/Authorize.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/permission/authorize/Authorize.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.to-string\");\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.string.iterator\");\nrequire(\"core-js/modules/es6.set\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _role = require(\"@/api/permission/role\");\nvar _authorize = require(\"@/api/permission/authorize\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'permission-authorize',\n  data: function data() {\n    return {\n      active: 0,\n      roleTreeLoading: false,\n      treeLoading: false,\n      btnLoading: false,\n      checkStrictly: true,\n      objectId: 0,\n      params: {\n        type: 'system',\n        moduleIds: ''\n      },\n      dataForm: {\n        roleIds: [],\n        module: [],\n        systemIds: [],\n        button: [],\n        column: [],\n        form: [],\n        resource: []\n      },\n      systemIds: '',\n      roleTreeAllData: [],\n      roleAllIds: [],\n      positionTreeData: [],\n      authorizeTreeData: [],\n      systemTreeData: [],\n      systemAuthorizeTree: [],\n      moduleAuthorizeTree: [],\n      buttonAuthorizeTree: [],\n      columnAuthorizeTree: [],\n      formAuthorizeTree: [],\n      resourceAuthorizeTree: [],\n      systemAllData: [],\n      moduleAllData: [],\n      buttonAllData: [],\n      columnAllData: [],\n      formAllData: [],\n      resourceAllData: [],\n      moduleIdsTemp: [],\n      defaultProps: {\n        // 配置项（必选）\n        value: 'id',\n        label: 'fullName',\n        children: 'children',\n        disabled: 'disabled'\n      }\n    };\n  },\n  created: function created() {\n    this.initData();\n  },\n  methods: {\n    initData: function initData() {\n      Object.assign(this.$data, this.$options.data());\n      this.getAuthorizeList();\n    },\n    getRoleList: function getRoleList() {\n      var _this = this;\n      this.roleTreeLoading = true;\n      (0, _role.getRoleSelectorByPermission)().then(function (res) {\n        var ids = [];\n        var loop = function loop(list) {\n          for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            ids.push(item.onlyId);\n            if (item.children && item.children.length) {\n              loop(item.children);\n            }\n          }\n        };\n        loop(res.data.list);\n        _this.roleAllIds = ids;\n        _this.roleTreeAllData = res.data.list;\n        _this.roleTreeLoading = false;\n      }).catch(function () {\n        _this.roleTreeLoading = false;\n      });\n    },\n    getAuthorizeList: function getAuthorizeList() {\n      var _this2 = this;\n      this.treeLoading = true;\n      this.authorizeTreeData = [];\n      (0, _authorize.getAuthorizeValues)(this.objectId, this.params).then(function (res) {\n        switch (_this2.active) {\n          case 0:\n            _this2.systemAuthorizeTree = res.data.list;\n            _this2.systemAllData = res.data.all;\n            _this2.authorizeTreeData = _this2.systemAuthorizeTree;\n            _this2.dataForm.systemIds = [].concat((0, _toConsumableArray2.default)(_this2.moduleIdsTemp), (0, _toConsumableArray2.default)(res.data.ids));\n            _this2.dataForm.systemIds = (0, _toConsumableArray2.default)(new Set(_this2.dataForm.systemIds));\n            _this2.moduleIdsTemp = _this2.dataForm.systemIds;\n            _this2.systemIds = _this2.moduleIdsTemp;\n            _this2.$refs.authorizeTree.setCheckedKeys(_this2.dataForm.systemIds);\n            break;\n          case 1:\n            _this2.moduleAuthorizeTree = res.data.list;\n            _this2.moduleAllData = res.data.all;\n            _this2.authorizeTreeData = _this2.moduleAuthorizeTree;\n            var moduleIds = [].concat((0, _toConsumableArray2.default)(res.data.ids), (0, _toConsumableArray2.default)(_this2.moduleIdsTemp));\n            _this2.dataForm.module = (0, _toConsumableArray2.default)(new Set(moduleIds));\n            _this2.moduleIdsTemp = _this2.dataForm.module;\n            _this2.$refs.authorizeTree.setCheckedKeys(_this2.dataForm.module);\n            break;\n          case 2:\n            _this2.buttonAuthorizeTree = res.data.list;\n            _this2.buttonAllData = res.data.all;\n            _this2.authorizeTreeData = _this2.buttonAuthorizeTree;\n            _this2.dataForm.button = [].concat((0, _toConsumableArray2.default)(_this2.dataForm.button), (0, _toConsumableArray2.default)(res.data.ids), (0, _toConsumableArray2.default)(_this2.moduleIdsTemp));\n            _this2.dataForm.button = (0, _toConsumableArray2.default)(new Set(_this2.dataForm.button));\n            _this2.$refs.authorizeTree.setCheckedKeys(_this2.dataForm.button);\n            break;\n          case 3:\n            _this2.columnAuthorizeTree = res.data.list;\n            _this2.columnAllData = res.data.all;\n            _this2.authorizeTreeData = _this2.columnAuthorizeTree;\n            _this2.dataForm.column = [].concat((0, _toConsumableArray2.default)(_this2.dataForm.column), (0, _toConsumableArray2.default)(res.data.ids), (0, _toConsumableArray2.default)(_this2.moduleIdsTemp));\n            _this2.dataForm.column = (0, _toConsumableArray2.default)(new Set(_this2.dataForm.column));\n            _this2.$refs.authorizeTree.setCheckedKeys(_this2.dataForm.column);\n            break;\n          case 4:\n            _this2.formAuthorizeTree = res.data.list;\n            _this2.formAllData = res.data.all;\n            _this2.authorizeTreeData = _this2.formAuthorizeTree;\n            _this2.dataForm.form = [].concat((0, _toConsumableArray2.default)(_this2.dataForm.form), (0, _toConsumableArray2.default)(res.data.ids), (0, _toConsumableArray2.default)(_this2.moduleIdsTemp));\n            _this2.dataForm.form = (0, _toConsumableArray2.default)(new Set(_this2.dataForm.form));\n            _this2.$refs.authorizeTree.setCheckedKeys(_this2.dataForm.form);\n            break;\n          case 5:\n            _this2.resourceAuthorizeTree = res.data.list;\n            _this2.resourceAllData = res.data.all;\n            _this2.authorizeTreeData = _this2.resourceAuthorizeTree;\n            _this2.dataForm.resource = [].concat((0, _toConsumableArray2.default)(_this2.dataForm.resource), (0, _toConsumableArray2.default)(res.data.ids), (0, _toConsumableArray2.default)(_this2.moduleIdsTemp));\n            _this2.dataForm.resource = (0, _toConsumableArray2.default)(new Set(_this2.dataForm.resource));\n            _this2.$refs.authorizeTree.setCheckedKeys(_this2.dataForm.resource);\n            break;\n        }\n        _this2.checkStrictly = false;\n        _this2.treeLoading = false;\n      }).catch(function () {\n        _this2.treeLoading = false;\n      });\n    },\n    // 全选/全不选\n    handleCheck: function handleCheck(val) {\n      if (val === 'checkAll') {\n        switch (this.active) {\n          case 0:\n            this.$refs.authorizeTree.setCheckedKeys(this.systemAllData);\n            break;\n          case 1:\n            this.$refs.authorizeTree.setCheckedKeys(this.moduleAllData);\n            break;\n          case 2:\n            this.$refs.authorizeTree.setCheckedKeys(this.buttonAllData);\n            break;\n          case 3:\n            this.$refs.authorizeTree.setCheckedKeys(this.columnAllData);\n            break;\n          case 4:\n            this.$refs.authorizeTree.setCheckedKeys(this.formAllData);\n            break;\n          case 5:\n            this.$refs.authorizeTree.setCheckedKeys(this.resourceAllData);\n            break;\n          case 6:\n            this.$refs.roleTree.setCheckedKeys(this.roleAllIds);\n        }\n      }\n      if (val === 'cancelCheckAll') {\n        if (this.active === 6) {\n          this.$refs.roleTree.setCheckedKeys([]);\n        } else {\n          this.$refs.authorizeTree.setCheckedKeys([]);\n        }\n      }\n    },\n    // 折叠 展开\n    setAllExpand: function setAllExpand(state) {\n      var result;\n      if (state === 'open') {\n        result = true;\n      }\n      if (state === 'close') {\n        result = false;\n      }\n      var nodes;\n      if (this.active === 6) {\n        nodes = this.$refs.roleTree.store.nodesMap;\n      } else {\n        nodes = this.$refs.authorizeTree.store.nodesMap;\n      }\n      for (var i in nodes) {\n        nodes[i].expanded = result;\n      }\n    },\n    // 上一步\n    handlePrevStep: function handlePrevStep() {\n      this.active -= 1;\n      this.handleInitData();\n    },\n    // 下一步\n    handleNextStep: function handleNextStep() {\n      if (this.active++ > 6) this.active = 0;\n      this.handleInitData();\n    },\n    handleInitData: function handleInitData() {\n      var _this3 = this;\n      this.checkStrictly = true;\n      this.treeLoading = true;\n      switch (this.active) {\n        case 0:\n          this.params.type = 'system';\n          break;\n        case 1:\n          this.params.type = 'module';\n          this.params.moduleIds = this.systemIds.toString();\n          break;\n        case 2:\n          this.params.type = 'button';\n          this.params.moduleIds = this.moduleIdsTemp.toString();\n          break;\n        case 3:\n          this.params.type = 'column';\n          this.params.moduleIds = this.moduleIdsTemp.toString();\n          break;\n        case 4:\n          this.params.type = 'form';\n          this.params.moduleIds = this.moduleIdsTemp.toString();\n          break;\n        case 5:\n          this.params.type = 'resource';\n          this.params.moduleIds = this.moduleIdsTemp.toString();\n          break;\n        case 6:\n          this.getRoleList();\n          this.$nextTick(function () {\n            _this3.$refs.roleTree.setCheckedKeys(_this3.dataForm.roleIds);\n          });\n          break;\n      }\n      if (this.active !== 6) {\n        this.getAuthorizeList();\n      } else {\n        this.treeLoading = false;\n      }\n    },\n    // 设置数据\n    selectTreeNodeClick: function selectTreeNodeClick() {\n      var dataIds = [];\n      if (this.active !== 6) {\n        var parentIds = this.$refs.authorizeTree.getHalfCheckedKeys();\n        var childrenIds = this.$refs.authorizeTree.getCheckedKeys();\n        var newIds = [].concat((0, _toConsumableArray2.default)(parentIds), (0, _toConsumableArray2.default)(childrenIds));\n        dataIds = (0, _toConsumableArray2.default)(new Set(newIds));\n      }\n      switch (this.active) {\n        case 0:\n          this.dataForm.systemIds = dataIds;\n          this.moduleIdsTemp = this.dataForm.systemIds;\n          this.systemIds = this.moduleIdsTemp;\n          break;\n        case 1:\n          this.dataForm.module = dataIds;\n          this.moduleIdsTemp = this.dataForm.module;\n          break;\n        case 2:\n          this.dataForm.button = dataIds;\n          break;\n        case 3:\n          this.dataForm.column = dataIds;\n          break;\n        case 4:\n          this.dataForm.form = dataIds;\n          break;\n        case 5:\n          this.dataForm.resource = dataIds;\n          break;\n        case 6:\n          var nodes = this.$refs.roleTree.getCheckedNodes();\n          this.dataForm.roleIds = nodes.map(function (o) {\n            return o.id;\n          });\n          break;\n      }\n    },\n    handleConfirm: function handleConfirm() {\n      var _this4 = this;\n      this.btnLoading = true;\n      (0, _authorize.updateBatchAuthorize)(this.dataForm).then(function (res) {\n        _this4.$message({\n          message: res.msg,\n          type: 'success',\n          duration: 1500,\n          onClose: function onClose() {\n            _this4.btnLoading = false;\n            _this4.active = 0;\n            _this4.initData();\n          }\n        });\n      }).catch(function () {\n        _this4.btnLoading = false;\n      });\n    }\n  }\n};",null]}