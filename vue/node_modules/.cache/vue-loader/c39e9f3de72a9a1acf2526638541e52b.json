{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/systemData/dataInterface/components/variable/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/systemData/dataInterface/components/variable/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getVariateDetail,\n  createVariate,\n  updateVariate\n} from '@/api/systemData/dataInterface'\nexport default {\n  data() {\n    return {\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      interfaceId: '',\n      dataForm: {\n        id: '',\n        fullName: '',\n        expression: \"\"\n      },\n      dataRule: {\n        fullName: [\n          { required: true, message: '请输入变量名', trigger: 'blur' },\n        ],\n        expression: [\n          { required: true, message: '请输入JS表达式', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    init(item, id) {\n      this.visible = true\n      this.dataForm.id = ''\n      if (item) this.dataForm.id = item.id || ''\n      this.formLoading = true\n      this.dataForm.interfaceId = id\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n        if (this.dataForm.id) {\n          getVariateDetail(item.id).then(res => {\n            this.dataForm = res.data\n            this.formLoading = false\n          })\n        } else {\n          this.formLoading = false\n        }\n      })\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          const formMethod = this.dataForm.id ? updateVariate : createVariate\n          formMethod(this.dataForm).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$emit('refreshDataList')\n              }\n            })\n          }).catch(() => {\n            this.btnLoading = false\n          })\n        }\n      })\n    }\n  }\n}\n",null]}