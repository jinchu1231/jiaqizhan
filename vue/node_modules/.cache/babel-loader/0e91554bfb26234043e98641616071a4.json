{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/CustomBtn.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/ColumnDesign/CustomBtn.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\nrequire(\"core-js/modules/es6.object.keys\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/defineProperty.js\"));\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/web.dom.iterable\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _db = require(\"@/components/Generator/utils/db\");\nvar _visualDev = require(\"@/api/onlineDev/visualDev\");\nvar _monaco = _interopRequireDefault(require(\"@/components/JNPFEditor/monaco\"));\nvar _InterfaceDialog = _interopRequireDefault(require(\"@/components/Process/PropPanel/InterfaceDialog\"));\nvar _ScriptDemo = _interopRequireDefault(require(\"@/components/Generator/index/ScriptDemo\"));\nvar _comConfig = require(\"@/components/Generator/generator/comConfig\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar defaultFunc = '({ data, index, refresh, onlineUtils }) => {\\r\\n   \\r\\n}';\nvar _default = exports.default = {\n  components: {\n    JNPFCodeEditor: _monaco.default,\n    InterfaceDialog: _InterfaceDialog.default,\n    ScriptDemo: _ScriptDemo.default\n  },\n  data: function data() {\n    return {\n      visible: false,\n      popupWidthOptions: ['600px', '800px', '1000px', '40%', '50%', '60%', '70%', '80%'],\n      treeData: [],\n      fieldOptions: [],\n      parameterSource: [{\n        label: '字段',\n        value: 1\n      }, {\n        label: '自定义',\n        value: 2\n      }, {\n        label: '为空',\n        value: 3\n      }],\n      showType: 'pc',\n      modelId: '',\n      options: {\n        language: 'javascript'\n      },\n      dataForm: {\n        btnType: 1,\n        modelId: \"\",\n        popupTitle: \"自定义操作\",\n        popupType: \"dialog\",\n        popupWidth: \"800px\",\n        formOptions: [],\n        customBtn: false,\n        func: \"\",\n        interfaceId: \"\",\n        interfaceName: \"\",\n        templateJson: [],\n        useConfirm: false,\n        confirmTitle: \"此操作将通过接口处理\"\n      },\n      dataRule: {\n        btnType: [{\n          required: true,\n          message: '类型不能为空',\n          trigger: 'change'\n        }],\n        modelId: [{\n          required: true,\n          message: '表单不能为空',\n          trigger: 'click'\n        }],\n        popupTitle: [{\n          required: true,\n          message: '弹窗标题不能为空',\n          trigger: 'input'\n        }],\n        interfaceId: [{\n          required: true,\n          message: '数据接口不能为空',\n          trigger: 'change'\n        }],\n        confirmTitle: [{\n          required: true,\n          message: '确认框不能为空',\n          trigger: 'input'\n        }]\n      },\n      webType: \"\",\n      columnOptions: []\n    };\n  },\n  computed: {\n    formFieldsOptions: function formFieldsOptions() {\n      if (this.webType == 4) return this.columnOptions;\n      var noAllowList = ['table', 'uploadImg', 'uploadFile', 'billRule', 'relationForm', 'popupSelect', 'createUser', 'createTime', 'modifyUser', 'modifyTime'].concat((0, _toConsumableArray2.default)(_comConfig.systemComponentsList));\n      var list = [];\n      var loop = function loop(data, parent) {\n        if (!data) return;\n        if (data.__config__ && data.__config__.jnpfKey !== 'table' && data.__config__.children && Array.isArray(data.__config__.children)) {\n          loop(data.__config__.children, data);\n        }\n        if (Array.isArray(data)) data.forEach(function (d) {\n          return loop(d, parent);\n        });\n        if (data.__vModel__ && !noAllowList.includes(data.__config__.jnpfKey)) list.push(_objectSpread({\n          fullName: data.__config__.label,\n          id: data.__vModel__\n        }, data));\n      };\n      loop((0, _db.getDrawingList)());\n      list.unshift({\n        fullName: '@表单ID',\n        id: '@formId'\n      });\n      return list;\n    }\n  },\n  methods: {\n    init: function init(showType, activeItem, webType, columnOptions) {\n      var _this = this;\n      this.webType = webType;\n      this.columnOptions = columnOptions || [];\n      this.showType = showType || 'pc';\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.resetData();\n        _this.dataForm = Object.assign(_this.dataForm, JSON.parse(JSON.stringify(activeItem)));\n        _this.getFeatureSelector();\n        if (_this.dataForm.btnType == 2) _this.initEditor();\n        if (_this.dataForm.modelId) _this.getFieldOptions();\n      });\n    },\n    initEditor: function initEditor() {\n      var _this2 = this;\n      this.$nextTick(function () {\n        _this2.$refs.CodeEditor.changeEditor({\n          value: _this2.dataForm.func,\n          options: _this2.options\n        });\n      });\n    },\n    getFeatureSelector: function getFeatureSelector() {\n      var _this3 = this;\n      (0, _visualDev.getFeatureSelector)({\n        type: 1,\n        webType: '1,2',\n        enableFlow: 0,\n        isRelease: 1\n      }).then(function (res) {\n        _this3.treeData = res.data.list;\n      });\n    },\n    onModeIdChange: function onModeIdChange(val) {\n      this.clearField();\n      this.dataForm.relationField = '';\n      if (!val) {\n        this.fieldOptions = [];\n        return;\n      }\n      if (this.modelId != val && this.dataForm.formOptions.length) {\n        this.dataForm.formOptions.forEach(function (ele) {\n          ele.field = '';\n        });\n      }\n      this.getFieldOptions();\n      this.modelId = val;\n    },\n    clearField: function clearField() {\n      this.dataForm.formOptions = this.dataForm.formOptions.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          field: ''\n        });\n      });\n      this.dataForm.templateJson = this.dataForm.templateJson.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          relationField: o.sourceType === 1 ? '' : o.relationField\n        });\n      });\n    },\n    getFieldOptions: function getFieldOptions() {\n      var _this4 = this;\n      if (!this.dataForm.modelId) return;\n      (0, _visualDev.getFormDataFields)(this.dataForm.modelId, 1).then(function (res) {\n        _this4.fieldOptions = res.data.list || [];\n      });\n    },\n    onInterfaceChange: function onInterfaceChange(id, row) {\n      if (!id) {\n        this.dataForm.interfaceId = '';\n        this.dataForm.interfaceName = '';\n        this.dataForm.templateJson = [];\n        return;\n      }\n      if (this.dataForm.interfaceId === id) return;\n      this.dataForm.interfaceId = id;\n      this.dataForm.interfaceName = row.fullName;\n      this.dataForm.templateJson = row.templateJson ? row.templateJson.map(function (o) {\n        return _objectSpread(_objectSpread({}, o), {}, {\n          relationField: '',\n          sourceType: 1\n        });\n      }) : [];\n    },\n    addRelationOption: function addRelationOption() {\n      this.dataForm.formOptions.push({\n        currentField: '',\n        field: ''\n      });\n    },\n    handleDel: function handleDel(index) {\n      this.dataForm.formOptions.splice(index, 1);\n    },\n    confirm: function confirm() {\n      var _this5 = this;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          if (_this5.dataForm.btnType == 1) {\n            if (!_this5.dataForm.formOptions.length) return _this5.$message({\n              message: '赋值规则不能为空',\n              type: 'warning'\n            });\n            if (_this5.dataForm.formOptions.length) {\n              for (var i = 0; i < _this5.dataForm.formOptions.length; i++) {\n                var element = _this5.dataForm.formOptions[i];\n                if (!element.currentField) return _this5.$message({\n                  message: \"\\u8D4B\\u503C\\u89C4\\u5219\\u7B2C\".concat(i + 1, \"\\u884C\\u5F53\\u524D\\u8868\\u5355\\u503C\\u4E0D\\u80FD\\u4E3A\\u7A7A\"),\n                  type: 'warning'\n                });\n                if (!element.field) return _this5.$message({\n                  message: \"\\u8D4B\\u503C\\u89C4\\u5219\\u7B2C\".concat(i + 1, \"\\u884C\\u5F39\\u7A97\\u8868\\u5355\\u503C\\u4E0D\\u80FD\\u4E3A\\u7A7A\"),\n                  type: 'warning'\n                });\n              }\n            }\n          }\n          _this5.$emit('updateCustomBtn', _this5.dataForm);\n          _this5.closeDialog();\n        }\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.$emit('closeDialog');\n      this.visible = false;\n    },\n    resetData: function resetData() {\n      this.dataForm.modelId = \"\";\n      this.dataForm.popupTitle = \"自定义操作\";\n      this.dataForm.popupType = \"dialog\";\n      this.dataForm.popupWidth = \"800px\";\n      this.dataForm.formOptions = [];\n      this.dataForm.customBtn = false;\n      this.dataForm.func = defaultFunc;\n      this.dataForm.interfaceId = \"\";\n      this.dataForm.interfaceName = \"\";\n      this.dataForm.templateJson = [];\n      this.dataForm.useConfirm = false;\n      this.dataForm.confirmTitle = \"此操作将通过接口处理\";\n      this.fieldOptions = [];\n    },\n    onBtnTypeChange: function onBtnTypeChange(val) {\n      this.$refs['dataForm'].clearValidate();\n      this.resetData();\n      if (val == 2) this.initEditor();\n    },\n    visibleChange: function visibleChange(val) {\n      if (!val) return;\n      if (!this.dataForm.modelId && this.dataForm.btnType == 1) this.$message.warning('请先选择表单');\n    }\n  }\n};",null]}