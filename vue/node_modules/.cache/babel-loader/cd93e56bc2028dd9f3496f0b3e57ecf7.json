{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/components/Process/Preview.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/components/Process/Preview.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/toConsumableArray.js\"));\nvar _typeof2 = _interopRequireDefault(require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime-corejs2@7.24.5@@babel/runtime-corejs2/helpers/typeof.js\"));\nvar _Preview = _interopRequireDefault(require(\"./FlowCard/Preview\"));\nvar _util = require(\"./FlowCard/util.js\");\nvar _default = exports.default = {\n  name: 'Process',\n  props: ['tabName', 'conf'],\n  data: function data() {\n    var data = {};\n    if ((0, _typeof2.default)(this.conf) === 'object' && this.conf !== null && JSON.stringify(this.conf) !== '{}') {\n      data = Object.assign(_util.NodeUtils.createNode('start'), this.conf);\n    } else {\n      data = (0, _util.getMockData)();\n    }\n    return {\n      data: data,\n      // 流程图数据\n      scaleVal: 100,\n      // 流程图缩放比例 100%\n      step: 5,\n      // 缩放步长\n      updateId: 0,\n      // key值 用于模拟$forceUpdate\n      activeData: null,\n      // 被激活的流程卡片数据，用于属性面板编辑\n      isProcessCmp: true,\n      verifyMode: false\n    };\n  },\n  methods: {\n    // 给父级组件提供的获取流程数据得方法\n    getData: function getData() {\n      this.verifyMode = true;\n      if (_util.NodeUtils.checkAllNode(this.data)) {\n        return Promise.resolve({\n          formData: this.data\n        });\n      } else {\n        return Promise.reject({\n          target: this.tabName\n        });\n      }\n    },\n    /**\n     * 接收所有FlowCard事件触发\n     * @param { Object } data - 含有event(事件名称)/args(参数)两个属性\n     */\n    eventReceiver: function eventReceiver(_ref) {\n      var event = _ref.event,\n        args = _ref.args;\n      this.$emit('subFlow', args[0].nodeId);\n      if (event === \"edit\") {\n        this.activeData = args[0]; // 打开属性面板\n        return;\n      }\n\n      // 本实例只监听了第一层数据（startNode）变动\n      // 为了实时更新  采用$forceUpdate刷新 但是由于某些条件下触发失效（未排除清除原因）\n      // 使用key + 监听父组件updateId方式强制刷新\n      _util.NodeUtils[event].apply(_util.NodeUtils, (0, _toConsumableArray2.default)(args));\n      this.forceUpdate();\n    },\n    forceUpdate: function forceUpdate() {\n      this.updateId = this.updateId + 1;\n    },\n    /**\n     * 控制流程图缩放\n     * @param { Object } val - 缩放增量 是step的倍数 可正可负\n     */\n    changeScale: function changeScale(val) {\n      if (this.scaleVal >= 0 && this.scaleVal <= 200) {\n        if (this.scaleVal === 200 && this.scaleVal + val > 200) return;\n        if (this.scaleVal === 0 && this.scaleVal + val < 0) return;\n        // 缩放介于0%~200%\n        this.scaleVal += val;\n      }\n    },\n    /**\n     * 属性面板提交事件\n     * @param { Object } value - 被编辑的节点的properties属性对象\n     */\n    onPropEditConfirm: function onPropEditConfirm(value, content) {\n      this.activeData.content = content || '请设置条件';\n      var oldProp = this.activeData.properties;\n      this.activeData.properties = value;\n      // 修改优先级\n      if (_util.NodeUtils.isConditionNode(this.activeData)) {\n        value.priority !== oldProp.priority && _util.NodeUtils.resortPrioByCNode(this.activeData, oldProp.priority, this.data);\n        _util.NodeUtils.setDefaultCondition(this.activeData, this.data);\n      }\n      if (_util.NodeUtils.isStartNode(this.activeData)) this.$emit('startNodeChange', this.data);\n      this.onClosePanel();\n      this.forceUpdate();\n    },\n    /**\n     * 属性面板取消事件\n     */\n    onClosePanel: function onClosePanel() {\n      this.activeData = null;\n    },\n    // 传formIds 查询指定组件 未传时  判断所有组件\n    isFilledPCon: function isFilledPCon(formIds) {\n      var res = false;\n      var loopChild = function loopChild(parent, callback) {\n        return parent.childNode && loop(parent.childNode, callback);\n      };\n      var loop = function loop(data, callback) {\n        if (res || !data) return; // 查找到就退出\n        if (Array.isArray(data.conditionNodes)) {\n          var uesd = data.conditionNodes.some(function (c) {\n            var cons = c.properties.conditions || [];\n            return Array.isArray(formIds) ? cons.some(function (item) {\n              return formIds.includes(item.formId);\n            }) // 查询特定组件\n            : cons.length > 0; // 只要有节点设置了条件 说明就有组件作为条件被使用\n          });\n          uesd ? callback() : data.conditionNodes.forEach(function (t) {\n            return loopChild(t, callback);\n          });\n        }\n        loopChild(data, callback);\n      };\n      loop(this.data, function () {\n        return res = true;\n      });\n      return res;\n    }\n  },\n  render: function render(h) {\n    return h(\"div\", {\n      \"class\": \"flow-container flow-container-preview\"\n    }, [h(\"div\", {\n      \"class\": \"scale-slider\"\n    }, [h(\"i\", {\n      \"class\": \"btn el-icon-minus\",\n      \"on\": {\n        \"click\": this.changeScale.bind(this, -this.step)\n      }\n    }), h(\"span\", {\n      \"style\": \"font-size:14px;\"\n    }, [this.scaleVal, \"%\"]), h(\"i\", {\n      \"class\": \"btn el-icon-plus\",\n      \"on\": {\n        \"click\": this.changeScale.bind(this, this.step)\n      }\n    })]), h(\"div\", {\n      \"class\": \"tips\"\n    }, [h(\"div\", {\n      \"class\": \"tips-item\"\n    }, [h(\"span\", {\n      \"class\": \"icon success\"\n    }, [\"\\u25CF\"]), \"\\u5DF2\\u5B8C\\u6210\"]), h(\"div\", {\n      \"class\": \"tips-item\"\n    }, [h(\"span\", {\n      \"class\": \"icon current\"\n    }, [\"\\u25CF\"]), \"\\u8FDB\\u884C\\u4E2D\"]), h(\"div\", {\n      \"class\": \"tips-item\"\n    }, [h(\"span\", {\n      \"class\": \"icon\"\n    }, [\"\\u25CF\"]), \"\\u65E0/\\u672A\\u5904\\u7406\"])]), h(_Preview.default, {\n      \"attrs\": {\n        \"verifyMode\": this.verifyMode,\n        \"data\": this.data\n      },\n      \"key\": this.updateId,\n      \"on\": {\n        \"emits\": this.eventReceiver\n      },\n      \"style\": {\n        transform: \"scale(\".concat(this.scaleVal / 100, \")\")\n      }\n    })]);\n  }\n};",null]}