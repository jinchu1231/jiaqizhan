{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/systemData/dataInterface/Form.vue?vue&type=template&id=c5b2ce20&scoped=true","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/systemData/dataInterface/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"JNPF-preview-main flow-form-main\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"JNPF-common-page-header\" },\n        [\n          _c(\"el-page-header\", {\n            attrs: { content: \"\" },\n            on: { back: _vm.goBack },\n          }),\n          _c(\n            \"el-steps\",\n            {\n              key: _vm.key,\n              staticClass: \"steps\",\n              attrs: {\n                active: _vm.active,\n                \"finish-status\": \"success\",\n                simple: \"\",\n              },\n            },\n            _vm._l(_vm.stepList, function (item) {\n              return _c(\"el-step\", { key: item, attrs: { title: item } })\n            }),\n            1\n          ),\n          _c(\n            \"div\",\n            { staticClass: \"options\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { disabled: _vm.active <= 0 },\n                  on: { click: _vm.handlePrev },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.prev\")))]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { disabled: _vm.active >= _vm.stepList.length - 1 },\n                  on: { click: _vm.handleNext },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.next\")))]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: {\n                    type: \"primary\",\n                    loading: _vm.btnLoading,\n                    disabled: _vm.active < _vm.stepList.length - 1,\n                  },\n                  on: {\n                    click: function ($event) {\n                      return _vm.handleSubmit()\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"common.confirmButton\")))]\n              ),\n              _c(\"el-button\", { on: { click: _vm.goBack } }, [\n                _vm._v(_vm._s(_vm.$t(\"common.cancelButton\"))),\n              ]),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm.active === 0\n        ? _c(\n            \"el-form\",\n            {\n              directives: [\n                {\n                  name: \"loading\",\n                  rawName: \"v-loading\",\n                  value: _vm.formLoading,\n                  expression: \"formLoading\",\n                },\n              ],\n              key: _vm.key,\n              ref: \"dataForm\",\n              attrs: {\n                model: _vm.dataForm,\n                rules: _vm.dataRule,\n                \"label-width\": \"100px\",\n              },\n            },\n            [\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    {\n                      staticClass: \"baseInfo mt-20\",\n                      attrs: { span: 14, offset: 5 },\n                    },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"名称\", prop: \"fullName\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { placeholder: \"输入名称\", maxlength: \"50\" },\n                            model: {\n                              value: _vm.dataForm.fullName,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"fullName\", $$v)\n                              },\n                              expression: \"dataForm.fullName\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"编码\", prop: \"enCode\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { placeholder: \"输入编码\", maxlength: \"50\" },\n                            model: {\n                              value: _vm.dataForm.enCode,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"enCode\", $$v)\n                              },\n                              expression: \"dataForm.enCode\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"分类\", prop: \"category\" } },\n                        [\n                          _c(\"JnpfTreeSelect\", {\n                            attrs: {\n                              options: _vm.selectData,\n                              placeholder: \"选择分类\",\n                              clearable: \"\",\n                            },\n                            model: {\n                              value: _vm.dataForm.category,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"category\", $$v)\n                              },\n                              expression: \"dataForm.category\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"类型\", prop: \"type\" } },\n                        [\n                          _c(\n                            \"el-radio-group\",\n                            {\n                              on: { input: _vm.onDataTypeChange },\n                              model: {\n                                value: _vm.dataForm.type,\n                                callback: function ($$v) {\n                                  _vm.$set(_vm.dataForm, \"type\", $$v)\n                                },\n                                expression: \"dataForm.type\",\n                              },\n                            },\n                            [\n                              _c(\"el-radio\", { attrs: { label: 2 } }, [\n                                _vm._v(\"静态数据\"),\n                              ]),\n                              _c(\"el-radio\", { attrs: { label: 1 } }, [\n                                _vm._v(\"SQL操作\"),\n                              ]),\n                              _c(\"el-radio\", { attrs: { label: 3 } }, [\n                                _vm._v(\"API操作\"),\n                              ]),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                      _vm.dataForm.type === 1\n                        ? _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"动作\", prop: \"action\" } },\n                            [\n                              _c(\n                                \"el-radio-group\",\n                                {\n                                  on: {\n                                    change: function ($event) {\n                                      return _vm.onMethodChange($event, \"sql\")\n                                    },\n                                  },\n                                  model: {\n                                    value: _vm.dataForm.action,\n                                    callback: function ($$v) {\n                                      _vm.$set(_vm.dataForm, \"action\", $$v)\n                                    },\n                                    expression: \"dataForm.action\",\n                                  },\n                                },\n                                [\n                                  _c(\"el-radio\", { attrs: { label: 3 } }, [\n                                    _vm._v(\"查询\"),\n                                  ]),\n                                  _c(\"el-radio\", { attrs: { label: 1 } }, [\n                                    _vm._v(\"增加\"),\n                                  ]),\n                                  _c(\"el-radio\", { attrs: { label: 2 } }, [\n                                    _vm._v(\"修改\"),\n                                  ]),\n                                  _c(\"el-radio\", { attrs: { label: 4 } }, [\n                                    _vm._v(\"删除\"),\n                                  ]),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"排序\", prop: \"sortCode\" } },\n                        [\n                          _c(\"el-input-number\", {\n                            attrs: {\n                              min: 0,\n                              max: 999999,\n                              \"controls-position\": \"right\",\n                            },\n                            model: {\n                              value: _vm.dataForm.sortCode,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"sortCode\", $$v)\n                              },\n                              expression: \"dataForm.sortCode\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"状态\", prop: \"enabledMark\" } },\n                        [\n                          _c(\"el-switch\", {\n                            attrs: { \"active-value\": 1, \"inactive-value\": 0 },\n                            model: {\n                              value: _vm.dataForm.enabledMark,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"enabledMark\", $$v)\n                              },\n                              expression: \"dataForm.enabledMark\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm.dataForm.type != 2 &&\n                      _vm.dataForm.type != 2 &&\n                      _vm.dataForm.action == 3\n                        ? _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"分页\" } },\n                            [\n                              _c(\"el-switch\", {\n                                attrs: {\n                                  \"active-value\": 1,\n                                  \"inactive-value\": 0,\n                                  disabled:\n                                    _vm.dataForm.isPostPosition == 1 ||\n                                    _vm.hasPageDisabled,\n                                },\n                                on: { change: _vm.onHasPageChange },\n                                model: {\n                                  value: _vm.dataForm.hasPage,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.dataForm, \"hasPage\", $$v)\n                                  },\n                                  expression: \"dataForm.hasPage\",\n                                },\n                              }),\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass: \"page-explain\",\n                                  on: { click: _vm.handleShowPageExplain },\n                                },\n                                [_vm._v(\"分页使用说明\")]\n                              ),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { prop: \"isPostPosition\" } },\n                        [\n                          _c(\n                            \"span\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\"鉴权\\n            \"),\n                              _c(\n                                \"el-tooltip\",\n                                {\n                                  attrs: {\n                                    content: \"开启后作为鉴权接口\",\n                                    placement: \"top\",\n                                  },\n                                },\n                                [\n                                  _c(\"a\", {\n                                    staticClass:\n                                      \"el-icon-question tooltip-question\",\n                                  }),\n                                ]\n                              ),\n                            ],\n                            1\n                          ),\n                          _c(\"el-switch\", {\n                            attrs: {\n                              \"active-value\": 1,\n                              \"inactive-value\": 0,\n                              disabled:\n                                !!_vm.dataForm.id || _vm.dataForm.hasPage == 1,\n                            },\n                            on: { change: _vm.onIsPostPositionChange },\n                            model: {\n                              value: _vm.dataForm.isPostPosition,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"isPostPosition\", $$v)\n                              },\n                              expression: \"dataForm.isPostPosition\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"说明\", prop: \"description\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { type: \"textarea\", rows: 3 },\n                            model: {\n                              value: _vm.dataForm.description,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.dataForm, \"description\", $$v)\n                              },\n                              expression: \"dataForm.description\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm.getShowSqlBox()\n        ? _c(\n            \"div\",\n            { staticClass: \"config\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"tableData\" },\n                [\n                  _c(\n                    \"el-select\",\n                    {\n                      staticClass: \"tableDataSelect\",\n                      attrs: { placeholder: \"选择数据库\", filterable: \"\" },\n                      on: { change: _vm.handleSelectTable },\n                      model: {\n                        value: _vm.dataConfigJson.sqlData.dbLinkId,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.dataConfigJson.sqlData, \"dbLinkId\", $$v)\n                        },\n                        expression: \"dataConfigJson.sqlData.dbLinkId\",\n                      },\n                    },\n                    _vm._l(_vm.dbOptions, function (group) {\n                      return _c(\n                        \"el-option-group\",\n                        {\n                          key: group.fullName,\n                          attrs: { label: group.fullName },\n                        },\n                        _vm._l(group.children, function (item) {\n                          return _c(\"el-option\", {\n                            key: item.id,\n                            attrs: { label: item.fullName, value: item.id },\n                          })\n                        }),\n                        1\n                      )\n                    }),\n                    1\n                  ),\n                  _c(\"div\", { staticClass: \"box\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"search-box\" },\n                      [\n                        _c(\n                          \"el-input\",\n                          {\n                            staticClass: \"search-input\",\n                            attrs: {\n                              placeholder: \"请输入关键词查询\",\n                              clearable: \"\",\n                            },\n                            nativeOn: {\n                              keyup: function ($event) {\n                                if (\n                                  !$event.type.indexOf(\"key\") &&\n                                  _vm._k(\n                                    $event.keyCode,\n                                    \"enter\",\n                                    13,\n                                    $event.key,\n                                    \"Enter\"\n                                  )\n                                ) {\n                                  return null\n                                }\n                                return _vm.search($event)\n                              },\n                            },\n                            model: {\n                              value: _vm.keyword,\n                              callback: function ($$v) {\n                                _vm.keyword = $$v\n                              },\n                              expression: \"keyword\",\n                            },\n                          },\n                          [\n                            _c(\"el-button\", {\n                              attrs: { slot: \"append\", icon: \"el-icon-search\" },\n                              on: { click: _vm.search },\n                              slot: \"append\",\n                            }),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"div\",\n                      { staticClass: \"tree-box\" },\n                      [\n                        _c(\"el-tree\", {\n                          directives: [\n                            {\n                              name: \"loading\",\n                              rawName: \"v-loading\",\n                              value: _vm.treeLoading,\n                              expression: \"treeLoading\",\n                            },\n                          ],\n                          attrs: {\n                            data: _vm.treeData,\n                            \"node-key\": \"index\",\n                            props: _vm.defaultProps,\n                            lazy: \"\",\n                            load: _vm.loadNode,\n                            \"expand-on-click-node\": false,\n                          },\n                          on: { \"node-click\": _vm.handleNodeClick },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function (ref) {\n                                  var data = ref.data\n                                  return _c(\n                                    \"span\",\n                                    { staticClass: \"custom-tree-node\" },\n                                    [\n                                      data.isLeaf\n                                        ? _c(\"span\", { staticClass: \"text\" }, [\n                                            _vm._v(\n                                              \"\\n                \" +\n                                                _vm._s(\n                                                  data.fieldName\n                                                    ? data.field +\n                                                        \"(\" +\n                                                        data.fieldName +\n                                                        \")\"\n                                                    : data.field\n                                                ) +\n                                                \"\\n              \"\n                                            ),\n                                          ])\n                                        : _c(\"span\", { staticClass: \"text\" }, [\n                                            _c(\"i\", {\n                                              class:\n                                                data.type == 1\n                                                  ? \"icon-ym icon-ym-view\"\n                                                  : \"icon-ym icon-ym-generator-tableGrid\",\n                                            }),\n                                            _vm._v(\n                                              \"\\n                \" +\n                                                _vm._s(\n                                                  data.tableName\n                                                    ? data.table +\n                                                        \"(\" +\n                                                        data.tableName +\n                                                        \")\"\n                                                    : data.table\n                                                ) +\n                                                \"\\n              \"\n                                            ),\n                                          ]),\n                                    ]\n                                  )\n                                },\n                              },\n                            ],\n                            null,\n                            false,\n                            815711173\n                          ),\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ],\n                1\n              ),\n              _c(\"div\", { staticClass: \"detail\" }, [\n                _c(\"div\", { staticClass: \"middle-pane\" }, [\n                  _c(\"div\", { staticClass: \"right-pane-list\" }, [\n                    _c(\"div\", { staticClass: \"cap\" }, [\n                      _c(\n                        \"span\",\n                        { attrs: { slot: \"label\" }, slot: \"label\" },\n                        [\n                          _vm._v(\"SQL语句\\n              \"),\n                          _c(\n                            \"el-tooltip\",\n                            {\n                              attrs: {\n                                content: \"支持SQL语句&存储过程语句\",\n                                placement: \"top\",\n                              },\n                            },\n                            [\n                              _c(\"a\", {\n                                staticClass:\n                                  \"el-icon-question tooltip-question\",\n                              }),\n                            ]\n                          ),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"cap_sys\" },\n                        [\n                          _c(\n                            \"el-dropdown\",\n                            [\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass: \"el-dropdown-link\",\n                                  attrs: { title: \"111\" },\n                                },\n                                [\n                                  _vm._v(\"\\n                  系统变量\"),\n                                  _c(\"i\", {\n                                    staticClass:\n                                      \"el-icon-arrow-down el-icon--right\",\n                                  }),\n                                ]\n                              ),\n                              _c(\n                                \"el-dropdown-menu\",\n                                {\n                                  attrs: { slot: \"dropdown\" },\n                                  slot: \"dropdown\",\n                                },\n                                [\n                                  _c(\n                                    \"el-dropdown-item\",\n                                    { attrs: { disabled: \"\" } },\n                                    [_vm._v(\"当前系统变量仅支持内部接口引用\")]\n                                  ),\n                                  _c(\"el-dropdown-item\", {\n                                    attrs: { divided: \"\" },\n                                  }),\n                                  _vm._l(\n                                    _vm.sysVariableList,\n                                    function (item, index) {\n                                      return _c(\n                                        \"el-dropdown-item\",\n                                        { key: index },\n                                        [\n                                          _c(\n                                            \"div\",\n                                            {\n                                              on: {\n                                                click: function ($event) {\n                                                  return _vm.handleSysNodeClick(\n                                                    item.value\n                                                  )\n                                                },\n                                              },\n                                            },\n                                            [\n                                              _c(\"span\", [\n                                                _vm._v(_vm._s(item.value)),\n                                              ]),\n                                              _c(\n                                                \"span\",\n                                                { staticClass: \"tips\" },\n                                                [_vm._v(_vm._s(item.tips))]\n                                              ),\n                                            ]\n                                          ),\n                                        ]\n                                      )\n                                    }\n                                  ),\n                                ],\n                                2\n                              ),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _c(\"div\", { staticClass: \"list\" }, [\n                      _vm.active === 1\n                        ? _c(\n                            \"div\",\n                            { staticClass: \"sql-box\" },\n                            [\n                              _c(\"SQLEditor\", {\n                                ref: \"SQLEditorRef\",\n                                attrs: { options: _vm.sqlOptions },\n                                model: {\n                                  value: _vm.dataConfigJson.sqlData.sql,\n                                  callback: function ($$v) {\n                                    _vm.$set(\n                                      _vm.dataConfigJson.sqlData,\n                                      \"sql\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"dataConfigJson.sqlData.sql\",\n                                },\n                              }),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.dataForm.hasPage && _vm.active === 2\n                        ? _c(\n                            \"div\",\n                            { staticClass: \"sql-box\" },\n                            [\n                              _c(\"SQLEditor\", {\n                                ref: \"dataCountJson\",\n                                attrs: { options: _vm.sqlOptions },\n                                model: {\n                                  value: _vm.dataCountJson.sqlData.sql,\n                                  callback: function ($$v) {\n                                    _vm.$set(\n                                      _vm.dataCountJson.sqlData,\n                                      \"sql\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"dataCountJson.sqlData.sql\",\n                                },\n                              }),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.dataForm.hasPage && _vm.active === 3\n                        ? _c(\n                            \"div\",\n                            { staticClass: \"sql-box\" },\n                            [\n                              _c(\"SQLEditor\", {\n                                ref: \"dataEchoJson\",\n                                attrs: { options: _vm.sqlOptions },\n                                model: {\n                                  value: _vm.dataEchoJson.sqlData.sql,\n                                  callback: function ($$v) {\n                                    _vm.$set(\n                                      _vm.dataEchoJson.sqlData,\n                                      \"sql\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"dataEchoJson.sqlData.sql\",\n                                },\n                              }),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                    ]),\n                  ]),\n                ]),\n              ]),\n              _vm.dataForm.isPostPosition != 1\n                ? [\n                    _c(\"div\", { staticClass: \"right-pane\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"right-pane-list\" },\n                        [\n                          _c(\"div\", { staticClass: \"cap\" }, [\n                            _c(\n                              \"span\",\n                              [\n                                _vm._v(\"接口参数\\n              \"),\n                                _c(\n                                  \"el-tooltip\",\n                                  {\n                                    attrs: {\n                                      content: \"接收方式:Body/json\",\n                                      placement: \"top\",\n                                    },\n                                  },\n                                  [\n                                    _c(\"a\", {\n                                      staticClass:\n                                        \"el-icon-question tooltip-question\",\n                                    }),\n                                  ]\n                                ),\n                              ],\n                              1\n                            ),\n                          ]),\n                          _c(\"RightTable\", {\n                            ref: \"RightTable\",\n                            attrs: { data: _vm.parameterJson, tableType: \"1\" },\n                            on: {\n                              addOrUpdateHandle: function ($event) {\n                                return _vm.addOrUpdateHandle($event, \"1\")\n                              },\n                              removeParameter: function ($event) {\n                                return _vm.removeParameter($event, \"1\")\n                              },\n                              handleItemClick: _vm.handleItemClick,\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"right-pane-list\" },\n                        [\n                          _c(\"div\", { staticClass: \"cap\" }, [\n                            _c(\n                              \"span\",\n                              [\n                                _vm._v(\"字段列表\\n              \"),\n                                _c(\n                                  \"el-tooltip\",\n                                  {\n                                    attrs: {\n                                      content: \"设置接口返回字段\",\n                                      placement: \"top\",\n                                    },\n                                  },\n                                  [\n                                    _c(\"a\", {\n                                      staticClass:\n                                        \"el-icon-question tooltip-question\",\n                                    }),\n                                  ]\n                                ),\n                              ],\n                              1\n                            ),\n                          ]),\n                          _c(\"RightTable\", {\n                            ref: \"RightTable\",\n                            attrs: { data: _vm.fieldJson, tableType: \"2\" },\n                            on: {\n                              addOrUpdateHandle: function ($event) {\n                                return _vm.addOrUpdateHandle($event, \"2\")\n                              },\n                              removeParameter: function ($event) {\n                                return _vm.removeParameter($event, \"2\")\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                  ]\n                : _vm._e(),\n            ],\n            2\n          )\n        : _vm._e(),\n      _vm.active === 1 && _vm.dataForm.type === 2\n        ? _c(\"div\", { staticClass: \"config\" }, [\n            _c(\"div\", { staticClass: \"detail\" }, [\n              _c(\"div\", { staticClass: \"middle-pane\" }, [\n                _c(\"div\", { staticClass: \"right-pane-list\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"list\" },\n                    [\n                      _c(\n                        \"el-form\",\n                        {\n                          ref: \"dataForm\",\n                          attrs: {\n                            model: _vm.dataConfigJson,\n                            rules: _vm.dataRule,\n                            \"label-width\": \"100px\",\n                          },\n                        },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            {\n                              attrs: { \"label-width\": \"0\", prop: \"staticData\" },\n                            },\n                            [\n                              _c(\n                                \"div\",\n                                { staticClass: \"sql-box\" },\n                                [\n                                  _c(\"JSONEditor\", {\n                                    ref: \"JSONEditorRef\",\n                                    attrs: { options: _vm.jsonOptions },\n                                    model: {\n                                      value: _vm.dataConfigJson.staticData,\n                                      callback: function ($$v) {\n                                        _vm.$set(\n                                          _vm.dataConfigJson,\n                                          \"staticData\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"dataConfigJson.staticData\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n            ]),\n            _c(\"div\", { staticClass: \"right-pane\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"right-pane-list\" },\n                [\n                  _c(\"div\", { staticClass: \"cap\" }, [\n                    _c(\n                      \"span\",\n                      [\n                        _vm._v(\"字段列表\\n            \"),\n                        _c(\n                          \"el-tooltip\",\n                          {\n                            attrs: {\n                              content: \"设置接口返回字段\",\n                              placement: \"top\",\n                            },\n                          },\n                          [\n                            _c(\"a\", {\n                              staticClass: \"el-icon-question tooltip-question\",\n                            }),\n                          ]\n                        ),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _c(\"RightTable\", {\n                    ref: \"RightTable\",\n                    attrs: { data: _vm.fieldJson, tableType: \"2\" },\n                    on: {\n                      addOrUpdateHandle: function ($event) {\n                        return _vm.addOrUpdateHandle($event, \"2\")\n                      },\n                      removeParameter: function ($event) {\n                        return _vm.removeParameter($event, \"2\")\n                      },\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n          ])\n        : _vm._e(),\n      _vm.getShowApiBox()\n        ? _c(\"div\", { staticClass: \"config\" }, [\n            _c(\"div\", { staticClass: \"detail api_detail\" }, [\n              _c(\"div\", { staticClass: \"middle-pane\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"right-pane-list\" },\n                  [\n                    _c(\n                      \"div\",\n                      { staticClass: \"requestMethod\" },\n                      [\n                        _c(\n                          \"el-form\",\n                          {\n                            ref: \"dataForm\",\n                            attrs: { model: _vm.apiData, rules: _vm.dataRule },\n                          },\n                          [\n                            _c(\n                              \"el-form-item\",\n                              { attrs: { prop: \"url\", label: \"\" } },\n                              [\n                                _c(\n                                  \"el-input\",\n                                  {\n                                    attrs: { placeholder: \"请输入接口地址\" },\n                                    model: {\n                                      value: _vm.apiData.url,\n                                      callback: function ($$v) {\n                                        _vm.$set(_vm.apiData, \"url\", $$v)\n                                      },\n                                      expression: \"apiData.url\",\n                                    },\n                                  },\n                                  [\n                                    _c(\n                                      \"el-select\",\n                                      {\n                                        attrs: {\n                                          slot: \"prepend\",\n                                          placeholder: \"请选择\",\n                                        },\n                                        slot: \"prepend\",\n                                        model: {\n                                          value: _vm.apiData.method,\n                                          callback: function ($$v) {\n                                            _vm.$set(_vm.apiData, \"method\", $$v)\n                                          },\n                                          expression: \"apiData.method\",\n                                        },\n                                      },\n                                      [\n                                        _c(\"el-option\", {\n                                          attrs: { label: \"GET\", value: 1 },\n                                        }),\n                                        _c(\"el-option\", {\n                                          attrs: { label: \"POST\", value: 2 },\n                                        }),\n                                      ],\n                                      1\n                                    ),\n                                  ],\n                                  1\n                                ),\n                              ],\n                              1\n                            ),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                    _c(\"p\", { staticClass: \"textBlock\" }, [_vm._v(\"请求参数\")]),\n                    _c(\n                      \"div\",\n                      { staticClass: \"tabsBlock\" },\n                      [\n                        _c(\n                          \"el-tabs\",\n                          {\n                            on: { \"tab-click\": _vm.tabsHandleClick },\n                            model: {\n                              value: _vm.activeKey,\n                              callback: function ($$v) {\n                                _vm.activeKey = $$v\n                              },\n                              expression: \"activeKey\",\n                            },\n                          },\n                          [\n                            _c(\"el-tab-pane\", {\n                              attrs: { label: \"Header\", name: \"0\" },\n                            }),\n                            _c(\"el-tab-pane\", {\n                              attrs: { label: \"Query\", name: \"1\" },\n                            }),\n                            _c(\"el-tab-pane\", {\n                              attrs: { label: \"Body\", name: \"2\" },\n                            }),\n                          ],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                    _vm.activeKey == 2\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"radio-group-block\" },\n                          [\n                            _c(\n                              \"el-radio-group\",\n                              {\n                                key: _vm.key2,\n                                on: { change: _vm.onBtnTypeChange },\n                                model: {\n                                  value: _vm.apiData.bodyType,\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.apiData, \"bodyType\", $$v)\n                                  },\n                                  expression: \"apiData.bodyType\",\n                                },\n                              },\n                              [\n                                _c(\"el-radio\", { attrs: { label: 0 } }, [\n                                  _vm._v(\"none\"),\n                                ]),\n                                _c(\"el-radio\", { attrs: { label: 1 } }, [\n                                  _vm._v(\"form-data\"),\n                                ]),\n                                _c(\"el-radio\", { attrs: { label: 2 } }, [\n                                  _vm._v(\"x-www-form-urlencoded\"),\n                                ]),\n                                _c(\"el-radio\", { attrs: { label: 3 } }, [\n                                  _vm._v(\"json\"),\n                                ]),\n                                _c(\"el-radio\", { attrs: { label: 4 } }, [\n                                  _vm._v(\"xml\"),\n                                ]),\n                              ],\n                              1\n                            ),\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm.getShowTableBox()\n                      ? [\n                          _vm.getShowTableBox()\n                            ? _c(\"CommonTable\", {\n                                ref: \"CommonTable\",\n                                staticStyle: { width: \"100%\" },\n                                attrs: {\n                                  data: _vm.getList,\n                                  type: \"1\",\n                                  sourceData: _vm.sourceData,\n                                  isPostPosition: _vm.dataForm.isPostPosition,\n                                  sourceOptions: _vm.sourceOptions,\n                                  parameterJson: _vm.parameterJson,\n                                  pagingParameters: _vm.pagingParameters,\n                                },\n                                on: {\n                                  addHandle: _vm.addHandle,\n                                  removeCommonTable: _vm.removeCommonTable,\n                                },\n                              })\n                            : _vm._e(),\n                        ]\n                      : _vm._e(),\n                    _c(\n                      \"p\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value:\n                              _vm.activeKey == 2 && _vm.apiData.bodyType == 0,\n                            expression:\n                              \"activeKey == 2 && apiData.bodyType == 0\",\n                          },\n                        ],\n                        staticClass: \"body_txt\",\n                      },\n                      [_vm._v(\"\\n            该请求没有Body主体\")]\n                    ),\n                    _vm.activeKey == 2 &&\n                    (_vm.apiData.bodyType == 3 || _vm.apiData.bodyType == 4)\n                      ? _c(\"div\", { staticClass: \"json-block\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"json-block-inner\" },\n                            [\n                              !_vm.dataForm.isPostPosition\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"inner-hd\" },\n                                    [\n                                      _c(\"p\", [_vm._v(_vm._s(_vm.jsonTxt))]),\n                                      _c(\n                                        \"el-popover\",\n                                        {\n                                          attrs: {\n                                            placement: \"bottom\",\n                                            width: \"260\",\n                                            trigger: \"hover\",\n                                          },\n                                        },\n                                        [\n                                          _c(\n                                            \"span\",\n                                            {\n                                              staticClass:\n                                                \"el-dropdown-link cursor_pointer\",\n                                              attrs: { slot: \"reference\" },\n                                              slot: \"reference\",\n                                            },\n                                            [\n                                              _vm._v(\n                                                \"\\n                    插入参数\"\n                                              ),\n                                              _c(\"i\", {\n                                                staticClass:\n                                                  \"el-icon-arrow-down el-icon--right\",\n                                              }),\n                                            ]\n                                          ),\n                                          _c(\n                                            \"div\",\n                                            [\n                                              _c(\"el-input\", {\n                                                staticClass:\n                                                  \"input-with-select\",\n                                                staticStyle: {\n                                                  \"margin-bottom\": \"10px\",\n                                                },\n                                                attrs: {\n                                                  placeholder: \"输入关键字\",\n                                                  \"suffix-icon\":\n                                                    \"el-icon-search\",\n                                                  clearable: \"\",\n                                                },\n                                                model: {\n                                                  value: _vm.filterText,\n                                                  callback: function ($$v) {\n                                                    _vm.filterText = $$v\n                                                  },\n                                                  expression: \"filterText\",\n                                                },\n                                              }),\n                                              _c(\n                                                \"div\",\n                                                {\n                                                  staticStyle: {\n                                                    \"overflow-y\": \"scroll\",\n                                                    \"max-height\": \"300px\",\n                                                  },\n                                                },\n                                                [\n                                                  _c(\"el-tree\", {\n                                                    ref: \"bodyTree\",\n                                                    attrs: {\n                                                      data: _vm.getTreeData,\n                                                      props: _vm.props,\n                                                      \"expand-on-click-node\": true,\n                                                      \"default-expand-all\": true,\n                                                      \"filter-node-method\":\n                                                        _vm.filterNode,\n                                                    },\n                                                    on: {\n                                                      \"node-click\":\n                                                        _vm.bodyTreeNodeClick,\n                                                    },\n                                                    scopedSlots: _vm._u(\n                                                      [\n                                                        {\n                                                          key: \"default\",\n                                                          fn: function (ref) {\n                                                            var node = ref.node\n                                                            var data = ref.data\n                                                            return _c(\n                                                              \"span\",\n                                                              {\n                                                                staticClass:\n                                                                  \"custom-tree-node\",\n                                                              },\n                                                              [\n                                                                _c(\"i\", {\n                                                                  class:\n                                                                    data.icon,\n                                                                }),\n                                                                _c(\n                                                                  \"span\",\n                                                                  {\n                                                                    staticClass:\n                                                                      \"text\",\n                                                                  },\n                                                                  [\n                                                                    _vm._v(\n                                                                      _vm._s(\n                                                                        node.label\n                                                                      )\n                                                                    ),\n                                                                  ]\n                                                                ),\n                                                              ]\n                                                            )\n                                                          },\n                                                        },\n                                                      ],\n                                                      null,\n                                                      false,\n                                                      1575034392\n                                                    ),\n                                                  }),\n                                                ],\n                                                1\n                                              ),\n                                            ],\n                                            1\n                                          ),\n                                        ]\n                                      ),\n                                    ],\n                                    1\n                                  )\n                                : _vm._e(),\n                              _vm.apiData.bodyType == 3\n                                ? _c(\"JSONEditor\", {\n                                    ref: \"JSONEditorRef\",\n                                    staticClass: \"JSONEditor\",\n                                    attrs: { options: _vm.jsonOptions },\n                                    model: {\n                                      value: _vm.apiData.bodyJson,\n                                      callback: function ($$v) {\n                                        _vm.$set(_vm.apiData, \"bodyJson\", $$v)\n                                      },\n                                      expression: \"apiData.bodyJson\",\n                                    },\n                                  })\n                                : _vm._e(),\n                              _vm.apiData.bodyType == 4\n                                ? _c(\"JSONEditor\", {\n                                    key: _vm.key2,\n                                    ref: \"JSONEditorRef\",\n                                    staticClass: \"JSONEditor\",\n                                    attrs: { options: _vm.jsonOptions },\n                                    model: {\n                                      value: _vm.apiData.bodyXml,\n                                      callback: function ($$v) {\n                                        _vm.$set(_vm.apiData, \"bodyXml\", $$v)\n                                      },\n                                      expression: \"apiData.bodyXml\",\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ])\n                      : _vm._e(),\n                  ],\n                  2\n                ),\n              ]),\n            ]),\n            !_vm.dataForm.isPostPosition\n              ? _c(\"div\", { staticClass: \"right-pane\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"right-pane-list\" },\n                    [\n                      _c(\"div\", { staticClass: \"cap\" }, [\n                        _c(\n                          \"span\",\n                          [\n                            _vm._v(\"接口参数\\n            \"),\n                            _c(\n                              \"el-tooltip\",\n                              {\n                                attrs: {\n                                  content: \"接收方式:Body/json\",\n                                  placement: \"top\",\n                                },\n                              },\n                              [\n                                _c(\"a\", {\n                                  staticClass:\n                                    \"el-icon-question tooltip-question\",\n                                }),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _c(\"RightTable\", {\n                        ref: \"RightTable\",\n                        attrs: { data: _vm.parameterJson, tableType: \"1\" },\n                        on: {\n                          addOrUpdateHandle: function ($event) {\n                            return _vm.addOrUpdateHandle($event, \"1\")\n                          },\n                          removeParameter: function ($event) {\n                            return _vm.removeParameter($event, \"1\")\n                          },\n                          handleItemClick: _vm.handleItemClick,\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"div\",\n                    { staticClass: \"right-pane-list\" },\n                    [\n                      _c(\"div\", { staticClass: \"cap\" }, [\n                        _c(\n                          \"span\",\n                          [\n                            _vm._v(\"字段列表\\n            \"),\n                            _c(\n                              \"el-tooltip\",\n                              {\n                                attrs: {\n                                  content: \"设置接口返回字段\",\n                                  placement: \"top\",\n                                },\n                              },\n                              [\n                                _c(\"a\", {\n                                  staticClass:\n                                    \"el-icon-question tooltip-question\",\n                                }),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _c(\"RightTable\", {\n                        ref: \"RightTable\",\n                        attrs: { data: _vm.fieldJson, tableType: \"2\" },\n                        on: {\n                          addOrUpdateHandle: function ($event) {\n                            return _vm.addOrUpdateHandle($event, \"2\")\n                          },\n                          removeParameter: function ($event) {\n                            return _vm.removeParameter($event, \"2\")\n                          },\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n          ])\n        : _vm._e(),\n      _vm.getShowCodeBox()\n        ? _c(\"div\", { staticClass: \"jsStaticData\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"json-box\" },\n              [\n                _vm.getIsLastStep()\n                  ? _c(\"JNPFCodeEditor\", {\n                      ref: \"CodeEditor\",\n                      attrs: { options: _vm.jsOptions },\n                      model: {\n                        value: _vm.dataJsJson,\n                        callback: function ($$v) {\n                          _vm.dataJsJson = $$v\n                        },\n                        expression: \"dataJsJson\",\n                      },\n                    })\n                  : _vm._e(),\n                _c(\"JNPFCodeEditor\", {\n                  ref: \"CodeEditor\",\n                  attrs: { options: _vm.jsOptions },\n                  model: {\n                    value: _vm.dataExceptionJson,\n                    callback: function ($$v) {\n                      _vm.dataExceptionJson = $$v\n                    },\n                    expression: \"dataExceptionJson\",\n                  },\n                }),\n              ],\n              1\n            ),\n            _vm._m(0),\n          ])\n        : _vm._e(),\n      _c(\"FieldForm\", {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.fieldFormVisible,\n            expression: \"fieldFormVisible\",\n          },\n        ],\n        ref: \"fieldForm\",\n        on: { addParameter: _vm.addParameter },\n      }),\n      _vm.pageExplainVisible\n        ? _c(\"page-explain\", { ref: \"pageExplain\" })\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"jsTips\" }, [\n      _c(\"p\", [_vm._v(\"1、支持JavaScript的脚本\")]),\n      _c(\"p\", [_vm._v(\"2、小程序不支持在线JS脚本\")]),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}