{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/systemData/dataInterface/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/systemData/dataInterface/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.search\");\nvar _dataInterface = require(\"@/api/systemData/dataInterface\");\nvar _Form = _interopRequireDefault(require(\"./Form\"));\nvar _Preview = _interopRequireDefault(require(\"./Preview\"));\nvar _index = _interopRequireDefault(require(\"./components/variable/index.vue\"));\nvar _Log = _interopRequireDefault(require(\"./Log\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'systemData-dataInterface',\n  components: {\n    Form: _Form.default,\n    Preview: _Preview.default,\n    Log: _Log.default,\n    Variable: _index.default\n  },\n  data: function data() {\n    return {\n      defaultProps: {\n        children: 'children',\n        label: 'fullName'\n      },\n      listQuery: {\n        keyword: '',\n        currentPage: 1,\n        enabledMark: '',\n        type: '',\n        pageSize: 20,\n        category: '',\n        sort: 'desc'\n      },\n      total: 0,\n      treeLoading: false,\n      listLoading: false,\n      btnLoading: false,\n      treeData: [],\n      tableData: [],\n      logVisible: false,\n      formVisible: false,\n      previewVisible: false,\n      isVisible: false,\n      expandsTree: true,\n      refreshTree: true,\n      options: [{\n        fullName: '静态数据',\n        id: 2\n      }, {\n        fullName: 'SQL操作',\n        id: 1\n      }, {\n        fullName: 'API操作',\n        id: 3\n      }]\n    };\n  },\n  created: function created() {\n    this.initData(true);\n  },\n  methods: {\n    initData: function initData(isInit) {\n      var _this = this;\n      this.treeLoading = true;\n      this.$store.dispatch('base/getDictionaryData', {\n        sort: 'DataInterfaceType'\n      }).then(function (res) {\n        _this.treeData = res;\n        if (!_this.treeData.length) return _this.treeLoading = false;\n        _this.$nextTick(function () {\n          if (isInit) _this.listQuery.category = _this.treeData[0].id;\n          _this.$refs.treeBox.setCurrentKey(_this.listQuery.category);\n          _this.treeLoading = false;\n          if (isInit) _this.getList();\n        });\n      });\n    },\n    toggleTreeExpand: function toggleTreeExpand(expands) {\n      var _this2 = this;\n      this.refreshTree = false;\n      this.expandsTree = expands;\n      this.$nextTick(function () {\n        _this2.refreshTree = true;\n        _this2.$nextTick(function () {\n          _this2.$refs.treeBox.setCurrentKey(_this2.listQuery.category);\n        });\n      });\n    },\n    getList: function getList() {\n      var _this3 = this;\n      this.listLoading = true;\n      (0, _dataInterface.getDataInterfaceList)(this.listQuery).then(function (res) {\n        _this3.tableData = res.data.list;\n        _this3.total = res.data.pagination.total;\n        _this3.listLoading = false;\n        _this3.btnLoading = false;\n      }).catch(function () {\n        _this3.listLoading = false;\n        _this3.btnLoading = false;\n      });\n    },\n    viewLog: function viewLog(row) {\n      var _this4 = this;\n      this.logVisible = true;\n      this.$nextTick(function () {\n        _this4.$refs.Log.init(row.id, row.fullName);\n      });\n    },\n    handleUpdateState: function handleUpdateState(row) {\n      var _this5 = this;\n      var txt = row.enabledMark ? '禁用' : '开启';\n      this.$confirm(\"\\u60A8\\u786E\\u5B9A\\u8981\".concat(txt, \"\\u5F53\\u524D\\u63A5\\u53E3\\u5417, \\u662F\\u5426\\u7EE7\\u7EED?\"), '提示', {\n        type: 'warning'\n      }).then(function () {\n        (0, _dataInterface.updateDataInterfaceState)(row.id).then(function (res) {\n          _this5.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: function onClose() {\n              row.enabledMark = row.enabledMark ? 0 : 1;\n            }\n          });\n        });\n      }).catch(function () {});\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      if (this.listQuery.category === data.id) return;\n      this.listQuery.category = data.id;\n      this.reset();\n    },\n    addOrUpdateHandle: function addOrUpdateHandle(id) {\n      var _this6 = this;\n      this.formVisible = true;\n      this.$nextTick(function () {\n        _this6.$refs.Form.init(id, _this6.listQuery.category);\n      });\n    },\n    handleDel: function handleDel(id) {\n      var _this7 = this;\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(function () {\n        (0, _dataInterface.delDataInterface)(id).then(function (res) {\n          _this7.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: function onClose() {\n              _this7.getList();\n            }\n          });\n        });\n      }).catch(function () {});\n    },\n    handlePreview: function handlePreview(row) {\n      var _this8 = this;\n      var id = row.id,\n        enabledMark = row.enabledMark,\n        tenantId = row.tenantId,\n        fullName = row.fullName;\n      if (enabledMark === 0) {\n        this.$message.error('接口已被禁用，请先开启接口');\n      } else {\n        this.previewVisible = true;\n        this.$nextTick(function () {\n          _this8.$refs.Preview.init(id, tenantId, fullName);\n        });\n      }\n    },\n    handleCopy: function handleCopy(id) {\n      var _this9 = this;\n      this.$confirm('您确定要复制该数据接口, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        (0, _dataInterface.copy)(id).then(function (res) {\n          _this9.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: function onClose() {\n              _this9.getList();\n            }\n          });\n        });\n      }).catch(function () {});\n    },\n    search: function search() {\n      this.listQuery.currentPage = 1;\n      this.listQuery.pageSize = 20;\n      this.listQuery.sort = 'desc';\n      this.getList();\n    },\n    reset: function reset() {\n      this.listQuery.keyword = '';\n      this.listQuery.type = '';\n      this.listQuery.enabledMark = '';\n      this.search();\n    },\n    closeForm: function closeForm(isRefresh) {\n      this.formVisible = false;\n      if (isRefresh) {\n        this.reset();\n      }\n    },\n    closePreview: function closePreview(isRefresh) {\n      this.previewVisible = false;\n      if (isRefresh) {\n        this.reset();\n      }\n    },\n    closeVariable: function closeVariable(isRefresh) {\n      this.isVisible = false;\n      if (isRefresh) {\n        this.reset();\n      }\n    },\n    variableData: function variableData(id) {\n      var _this10 = this;\n      this.isVisible = true;\n      this.$nextTick(function () {\n        _this10.$refs.variable.init(id);\n      });\n    },\n    exportData: function exportData(id) {\n      var _this11 = this;\n      this.$confirm('您确定要导出该数据接口, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        (0, _dataInterface.exportData)(id).then(function (res) {\n          _this11.jnpf.downloadFile(res.data.url);\n        });\n      }).catch(function () {});\n    }\n  }\n};",null]}