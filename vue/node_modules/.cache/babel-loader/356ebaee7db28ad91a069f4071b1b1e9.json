{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/src/utils/request.js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/utils/request.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _axios = _interopRequireDefault(require(\"axios\"));\nvar _message = require(\"@/utils/message\");\nvar _store = _interopRequireDefault(require(\"@/store\"));\nvar _auth = require(\"@/utils/auth\");\nvar _define = _interopRequireDefault(require(\"@/utils/define\"));\nvar _jnpf = _interopRequireDefault(require(\"@/utils/jnpf\"));\nvar _main = _interopRequireDefault(require(\"@/main\"));\n// create an axios instance\nvar service = _axios.default.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  // url = base url + request url\n  withCredentials: false,\n  // send cookies when cross-domain requests\n  timeout: _define.default.timeout,\n  // request timeout\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8'\n  }\n});\n\n// request interceptor\nservice.interceptors.request.use(function (config) {\n  if (config.url.indexOf('http') > -1) config.baseURL = '';\n  // 部分接口timeout时间单独处理\n  if (config.url.indexOf('SynThirdInfo') > -1 || config.url.indexOf('extend/Email/Receive') > -1 || config.url.indexOf('Permission/Authority/Data') > -1 || config.url.indexOf('DataSync/Actions/Execute') > -1) {\n    config.timeout = 100000;\n  }\n  // do something before request is sent\n  config.headers['jnpf-origin'] = 'pc';\n  if (_store.default.getters.token) {\n    config.headers['Authorization'] = (0, _auth.getToken)();\n  }\n  if (config.method == 'get') {\n    config.params = config.data;\n    delete config.data;\n  }\n  var timestamp = Date.parse(new Date()) / 1000;\n  if (config.url.indexOf('?') > -1) {\n    config.url += \"&n=\".concat(timestamp);\n  } else {\n    config.url += \"?n=\".concat(timestamp);\n  }\n  return config;\n}, function (error) {\n  // do something with request error\n  if (process.env.NODE_ENV === 'development') {\n    console.log(error); // for debug\n  }\n  return Promise.reject(error);\n});\n\n// response interceptor\nservice.interceptors.response.use(function (response) {\n  var res = response.data;\n  var config = response.config;\n  var url = config.url;\n  // 特殊接口处理\n  if (url.indexOf('/Base/DataSource/Actions/Test') > -1 || url.indexOf('OnlineDev') > -1 && url.indexOf('Config') > -1 || url.indexOf('api/visualdev/Porta') > -1 && url.indexOf('auth') > -1) return res;\n  if (res.code !== 200) {\n    (0, _message.message)({\n      message: res.msg || '请求出错，请重试',\n      type: 'error',\n      duration: 1500,\n      onClose: function onClose() {\n        if (url.indexOf('/api/oauth/Login') < 0 && url.indexOf('/api/oauth/LockScreen') < 0 && (res.code === 600 || res.code === 601 || res.code === 602)) {\n          // 600：登录过期,请重新登录  601: 您的帐号在其他地方已登录,被强制踢出 602: Token验证失败\n          _store.default.dispatch('user/resetToken').then(function () {\n            if (window.location.pathname.indexOf('login') > -1) return;\n            // setTimeout(() => { location.reload() }, 100);\n            _main.default.$router.push(\"/login\");\n          });\n        }\n      }\n    });\n    if (url.indexOf('/api/oauth/Login') > -1) return Promise.reject(res);\n    return Promise.reject(new Error(res.msg || 'Error'));\n  } else {\n    return res;\n  }\n}, function (error) {\n  if (process.env.NODE_ENV === 'development') {\n    console.log(error); // for debug\n  }\n  (0, _message.message)({\n    message: '请求出错，请重试',\n    type: 'error',\n    duration: 1500\n  });\n  return Promise.reject(error);\n});\nvar _default = exports.default = service;",null]}