{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/extend/projectGantt/Form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/projectGantt/Form.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ProjectGanttInfo, Create, Update } from '@/api/extend/projectGantt'\nexport default {\n  data() {\n    var checkStartTime = (rule, value, callback) => {\n      if (!this.dataForm.endTime) {\n        callback()\n      } else {\n        if (this.dataForm.endTime < value) {\n          callback(new Error('开始日期应该小于结束日期'));\n        } else {\n          this.$refs.dataForm.validateField('endTime');\n          callback()\n        }\n      }\n    }\n    var checkEndTime = (rule, value, callback) => {\n      if (!this.dataForm.startTime) {\n        callback()\n      } else {\n        if (this.dataForm.startTime > value) {\n          callback(new Error('结束日期应该大于开始日期'));\n        } else {\n          callback()\n        }\n      }\n    }\n    return {\n      visible: false,\n      dataForm: {\n        id: '',\n        fullName: '',\n        enCode: '',\n        managerIds: '',\n        startTime: '',\n        endTime: '',\n        timeLimit: 0,\n        schedule: 0,\n        state: 1,\n        description: ''\n      },\n      managerIds: [],\n      dataRule: {\n        fullName: [\n          { required: true, message: '项目名称不能为空', trigger: 'blur' }\n        ],\n        enCode: [\n          { required: true, message: '项目编码不能为空', trigger: 'blur' },\n          { pattern: /^\\w+$/, message: '请输入正确的项目编码', trigger: 'blur' }\n        ],\n        managerIds: [\n          { required: true, message: '参与人员不能为空', trigger: 'click' }\n        ],\n        startTime: [\n          { required: true, message: '开始日期不能为空', trigger: 'change' },\n          { validator: checkStartTime, trigger: 'change' }\n        ],\n        endTime: [\n          { required: true, message: '结束日期不能为空', trigger: 'change' },\n          { validator: checkEndTime, trigger: 'change' }\n        ],\n        timeLimit: [\n          { required: true, message: '项目工期不能为空', trigger: 'blur' }\n        ],\n        schedule: [\n          { required: true, message: '完成进度不能为空', trigger: 'blur' }\n        ],\n      },\n      btnLoading: false\n    }\n  },\n  methods: {\n    init(id) {\n      this.dataForm.id = id || ''\n      this.managerIds = []\n      this.dataForm.managerIds = ''\n      this.visible = true\n      this.$nextTick(async () => {\n        this.$refs['dataForm'].resetFields()\n        if (this.dataForm.id) {\n          ProjectGanttInfo(this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.managerIds = this.dataForm.managerIds ? this.dataForm.managerIds.split(',') : []\n          })\n        }\n      })\n    },\n    onChange(val) {\n      if (!val) return this.dataForm.managerIds = ''\n      this.dataForm.managerIds = val.join(',')\n    },\n    dataFormSubmit() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.btnLoading = true\n          const formMethod = this.dataForm.id ? Update : Create\n          formMethod(this.dataForm).then(res => {\n            this.$message({\n              message: res.msg,\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visible = false\n                this.btnLoading = false\n                this.$emit('refreshDataList')\n              }\n            })\n          }).catch(() => { this.btnLoading = false })\n        }\n      })\n    }\n  }\n}\n",null]}