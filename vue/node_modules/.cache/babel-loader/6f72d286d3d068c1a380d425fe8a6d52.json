{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/src/views/extend/graphDemo/mixins/resize.js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/graphDemo/mixins/resize.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _utils = require(\"@/utils\");\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      $_sidebarElm: null,\n      $_resizeHandler: null\n    };\n  },\n  mounted: function mounted() {\n    this.initListener();\n  },\n  activated: function activated() {\n    if (!this.$_resizeHandler) {\n      // avoid duplication init\n      this.initListener();\n    }\n\n    // when keep-alive chart activated, auto resize\n    this.resize();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.destroyListener();\n  },\n  deactivated: function deactivated() {\n    this.destroyListener();\n  },\n  methods: {\n    // use $_ for mixins properties\n    // https://vuejs.org/v2/style-guide/index.html#Private-property-names-essential\n    $_sidebarResizeHandler: function $_sidebarResizeHandler(e) {\n      if (e.propertyName === 'width') {\n        this.$_resizeHandler();\n      }\n    },\n    initListener: function initListener() {\n      var _this = this;\n      this.$_resizeHandler = (0, _utils.debounce)(function () {\n        _this.resize();\n      }, 100);\n      window.addEventListener('resize', this.$_resizeHandler);\n      this.$_sidebarElm = document.getElementsByClassName('sidebar-container')[0];\n      this.$_sidebarElm && this.$_sidebarElm.addEventListener('transitionend', this.$_sidebarResizeHandler);\n    },\n    destroyListener: function destroyListener() {\n      window.removeEventListener('resize', this.$_resizeHandler);\n      this.$_resizeHandler = null;\n      this.$_sidebarElm && this.$_sidebarElm.removeEventListener('transitionend', this.$_sidebarResizeHandler);\n    },\n    resize: function resize() {\n      var chart = this.chart;\n      chart && chart.resize();\n    }\n  }\n};",null]}