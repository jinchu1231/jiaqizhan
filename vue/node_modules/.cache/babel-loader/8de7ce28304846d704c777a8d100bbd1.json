{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/msgCenter/sendConfig/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/msgCenter/sendConfig/index.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/\\u4EA4\\u5B89/gas/vue/gas-web/node_modules/_@babel_runtime@7.24.5@@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.search\");\nvar _sendConfig = require(\"@/api/msgCenter/sendConfig\");\nvar _Form = _interopRequireDefault(require(\"./Form\"));\nvar _TestSend = _interopRequireDefault(require(\"./TestSend\"));\nvar _Detail = _interopRequireDefault(require(\"./Detail\"));\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  name: 'msgCenter-sendConfig',\n  components: {\n    Form: _Form.default,\n    TestSend: _TestSend.default,\n    Detail: _Detail.default\n  },\n  data: function data() {\n    return {\n      showAll: false,\n      list: [],\n      total: 0,\n      btnLoading: false,\n      listLoading: true,\n      listQuery: {\n        keyword: '',\n        enabledMark: '',\n        templateType: '',\n        messageSource: '',\n        currentPage: 1,\n        pageSize: 20\n      },\n      formVisible: false,\n      testSendVisible: false,\n      viewVisible: false,\n      templateTypeList: [{\n        fullName: \"系统模板\",\n        enCode: '1'\n      }, {\n        fullName: \"自定义模板\",\n        enCode: '0'\n      }],\n      enabledMarkList: [{\n        fullName: \"启用\",\n        enCode: '1'\n      }, {\n        fullName: \"禁用\",\n        enCode: '0'\n      }],\n      messageSourceList: [],\n      colorList: ['', 'rgba(40, 112, 248, 0.1)', 'rgba(109, 224, 131, 0.1)', 'rgba(244, 130, 130, 0.1)', 'rgba(104, 147, 245, 0.1)', 'rgba(100, 176, 244, 0.1)', 'rgba(255, 150, 178, 0.1)', 'rgba(156, 130, 244, 0.1)']\n    };\n  },\n  created: function created() {\n    this.initData();\n    this.getMsgTypeList();\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n      this.listLoading = true;\n      (0, _sendConfig.getSendConfigList)(this.listQuery).then(function (res) {\n        _this.list = res.data.list;\n        _this.total = res.data.pagination.total;\n        _this.listLoading = false;\n        _this.btnLoading = false;\n      }).catch(function () {\n        _this.listLoading = false;\n        _this.btnLoading = false;\n      });\n    },\n    getMsgTypeList: function getMsgTypeList() {\n      var _this2 = this;\n      this.$store.dispatch('base/getDictionaryData', {\n        sort: 'msgSourceType'\n      }).then(function (res) {\n        _this2.messageSourceList = res;\n      });\n    },\n    addEditData: function addEditData(id) {\n      var _this3 = this;\n      this.formVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs.Form.init(id);\n      });\n    },\n    handleCopy: function handleCopy(id) {\n      var _this4 = this;\n      this.$confirm('您确定要复制该数据, 是否继续?', '提示', {\n        type: 'warning'\n      }).then(function () {\n        (0, _sendConfig.copySendConfig)(id).then(function (res) {\n          _this4.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1000,\n            onClose: function onClose() {\n              _this4.initData();\n            }\n          });\n        });\n      }).catch(function () {});\n    },\n    handleTestSend: function handleTestSend(id) {\n      var _this5 = this;\n      this.testSendVisible = true;\n      this.$nextTick(function () {\n        _this5.$refs.TestSend.init(id);\n      });\n    },\n    handleView: function handleView(item) {\n      var _this6 = this;\n      this.viewVisible = true;\n      this.$nextTick(function () {\n        _this6.$refs.Detail.init(item.id, item.messageSource);\n      });\n    },\n    handleDel: function handleDel(id) {\n      var _this7 = this;\n      this.$confirm(this.$t('common.delTip'), this.$t('common.tipTitle'), {\n        type: 'warning'\n      }).then(function () {\n        (0, _sendConfig.delMsgTemplate)(id).then(function (res) {\n          _this7.$message({\n            type: 'success',\n            message: res.msg,\n            duration: 1500,\n            onClose: function onClose() {\n              _this7.initData();\n            }\n          });\n        });\n      }).catch(function () {});\n    },\n    search: function search() {\n      this.listQuery.currentPage = 1;\n      this.listQuery.pageSize = 20;\n      this.listQuery.sort = 'desc';\n      this.initData();\n    },\n    reset: function reset() {\n      this.listQuery.keyword = '';\n      this.listQuery.templateType = '';\n      this.listQuery.enabledMark = '';\n      this.listQuery.messageSource = '';\n      this.search();\n    },\n    closeForm: function closeForm(isRefresh) {\n      this.formVisible = false;\n      if (isRefresh) this.initData();\n    }\n  }\n};",null]}