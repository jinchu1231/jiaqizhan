{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js!/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/system/menu/components/dataAuthorize/DataSchemeForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/system/menu/components/dataAuthorize/DataSchemeForm.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/babel.config.js","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es7.array.includes\");\nrequire(\"core-js/modules/es6.string.includes\");\nrequire(\"core-js/modules/es6.regexp.replace\");\nvar _dataAuthorize = require(\"@/api/system/dataAuthorize\");\nvar _utils = require(\"@/utils\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = exports.default = {\n  data: function data() {\n    return {\n      visible: false,\n      formLoading: false,\n      btnLoading: false,\n      logicOptions: [{\n        value: \"and\",\n        label: \"and\"\n      }, {\n        value: \"or\",\n        label: \"or\"\n      }],\n      fieldOptions: [],\n      opOptions: [{\n        label: \"大于等于\",\n        value: \">=\"\n      }, {\n        label: \"大于\",\n        value: \">\"\n      }, {\n        label: \"等于\",\n        value: \"==\"\n      }, {\n        label: \"小于等于\",\n        value: \"<=\"\n      }, {\n        label: \"小于\",\n        value: \"<\"\n      }, {\n        label: \"不等于\",\n        value: \"<>\"\n      }, {\n        label: \"介于\",\n        value: \"between\"\n      }, {\n        label: \"包含任意一个\",\n        value: \"in\"\n      }, {\n        label: \"不包含任意一个\",\n        value: \"notIn\"\n      }, {\n        label: \"包含\",\n        value: \"like\"\n      }, {\n        label: \"不包含\",\n        value: \"notLike\"\n      }, {\n        label: \"为空\",\n        value: \"null\"\n      }, {\n        label: \"不为空\",\n        value: \"notNull\"\n      }],\n      dataForm: {\n        id: \"\",\n        moduleId: \"\",\n        enCode: \"\",\n        fullName: \"\",\n        conditionJson: \"\",\n        conditionText: \"\",\n        childTableKey: '',\n        matchLogic: 'and'\n      },\n      condition: [],\n      dataRule: {\n        fullName: [{\n          required: true,\n          message: \"方案名称不能为空\",\n          trigger: \"blur\"\n        }],\n        enCode: [{\n          required: true,\n          message: '请输入编码',\n          trigger: 'blur'\n        }, {\n          max: 50,\n          message: '字典编码最多为50个字符！',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    init: function init(moduleId, id) {\n      var _this = this;\n      this.dataForm.id = id || \"\";\n      this.dataForm.moduleId = moduleId;\n      this.dataForm.fullName = \"\";\n      this.dataForm.enCode = \"\";\n      this.dataForm.conditionJson = \"\";\n      this.dataForm.conditionText = \"\";\n      this.condition = [{\n        logic: \"and\",\n        groups: [{\n          id: \"\",\n          field: \"\",\n          type: \"\",\n          op: \"\",\n          value: \"\",\n          opOptions: []\n        }]\n      }];\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.$refs[\"dataForm\"].resetFields();\n        _this.formLoading = true;\n        (0, _dataAuthorize.getDataAuthorizeList)(_this.dataForm.moduleId).then(function (res) {\n          _this.fieldOptions = res.data.list;\n          _this.fieldOptions.map(function (o) {\n            o.enCode = o.enCode.replace('_jnpf_', '.');\n            o.enCode = o.enCode.replace('jnpf_', '');\n          });\n          if (_this.dataForm.id) {\n            (0, _dataAuthorize.getDataSchemeInfo)(_this.dataForm.id).then(function (res) {\n              _this.dataForm = res.data;\n              if (res.data.conditionJson) _this.condition = JSON.parse(res.data.conditionJson);\n              var _loop = function _loop() {\n                var groups = _this.condition[i].groups;\n                var _loop2 = function _loop2(j) {\n                  var e = groups[j];\n                  var list = _this.fieldOptions.filter(function (o) {\n                    return o.id === groups[j].id;\n                  });\n                  list.length ? e.opOptions = _this.getOptions(list[0]) : e.opOptions = [];\n                  if (['@userId', '@userAraSubordinates', '@organizeId', '@organizationAndSuborganization', '@branchManageOrganize', '@branchManageOrganizeAndSub'].includes(e.conditionText)) {\n                    e.readonly = true;\n                  } else {\n                    e.readonly = false;\n                  }\n                };\n                for (var j = 0; j < groups.length; j++) {\n                  _loop2(j);\n                }\n              };\n              for (var i = 0; i < _this.condition.length; i++) {\n                _loop();\n              }\n              _this.formLoading = false;\n            });\n          } else {\n            _this.formLoading = false;\n          }\n        });\n      });\n    },\n    changeField: function changeField(val, item) {\n      if (!val) {\n        item.id = '';\n        item.field = '';\n        item.type = '';\n        item.op = '';\n        item.value = '';\n        item.valueLabel = '';\n        item.conditionText = '';\n        item.childTableKey = '';\n        item.opOptions = [];\n        item.readonly = false;\n        item.disabled = false;\n        item.multiple = false;\n        item.format = '';\n      } else {\n        item.op = '';\n        item.value = undefined;\n        item.valueLabel = '';\n        item.readonly = false;\n        item.disabled = false;\n        item.multiple = false;\n        var fieldItem = this.fieldOptions.filter(function (o) {\n          return o.id === val;\n        })[0];\n        item.type = fieldItem.type;\n        item.field = fieldItem.enCode;\n        item.childTableKey = fieldItem.childTableKey;\n        item.conditionText = fieldItem.conditionText;\n        item.fieldRule = fieldItem.fieldRule || 0;\n        if (item.conditionText === 'datePicker') {\n          item.format = fieldItem.format;\n          item.dateType = fieldItem.format === 'yyyy' ? 'year' : fieldItem.format === 'yyyy-MM' ? 'month' : fieldItem.format === 'yyyy-MM-dd' ? 'date' : 'datetime';\n        }\n        item.opOptions = this.getOptions(fieldItem);\n        if (['@userId', '@userAraSubordinates', '@organizeId', '@organizationAndSuborganization', '@branchManageOrganize', '@branchManageOrganizeAndSub'].includes(item.conditionText)) {\n          item.readonly = true;\n          item.value = fieldItem.conditionText;\n          item.valueLabel = fieldItem.conditionText;\n        }\n      }\n    },\n    symbolChange: function symbolChange(val, item) {\n      var systemFieldOptions = ['@userId', '@userAraSubordinates', '@organizeId', '@organizationAndSuborganization', '@branchManageOrganize'];\n      item.value = systemFieldOptions.includes(item.conditionText) && !['null', 'notNull'].includes(val) ? item.conditionText : undefined;\n      item.valueLabel = '';\n      item.disabled = ['null', 'notNull'].includes(val);\n      item.multiple = ['in', 'notIn'].includes(val);\n    },\n    getOptions: function getOptions(fieldItem) {\n      var opOptions = [];\n      var options = fieldItem.conditionSymbol ? fieldItem.conditionSymbol.split(',') : [];\n      outer: for (var i = 0; i < options.length; i++) {\n        inner: for (var j = 0; j < this.opOptions.length; j++) {\n          if (options[i] === this.opOptions[j].value) {\n            opOptions.push(this.opOptions[j]);\n            break inner;\n          }\n        }\n      }\n      return opOptions;\n    },\n    addItem: function addItem(index) {\n      this.condition[index].groups.push({\n        id: \"\",\n        field: \"\",\n        type: \"\",\n        op: \"\",\n        value: \"\",\n        opOptions: []\n      });\n    },\n    delItem: function delItem(index, childIndex) {\n      this.condition[index].groups.splice(childIndex, 1);\n    },\n    delGroup: function delGroup(index) {\n      this.condition.splice(index, 1);\n    },\n    addGroup: function addGroup() {\n      this.condition.push({\n        logic: \"and\",\n        groups: [{\n          id: \"\",\n          field: \"\",\n          type: \"\",\n          op: \"\",\n          value: \"\",\n          opOptions: []\n        }]\n      });\n    },\n    getOpText: function getOpText(val) {\n      if (!val) return val;\n      var list = this.opOptions.filter(function (o) {\n        return o.value == val;\n      });\n      if (!list.length) return val;\n      return list[0].label || val;\n    },\n    getFieldText: function getFieldText(val) {\n      if (!val) return val;\n      var list = this.fieldOptions.filter(function (o) {\n        return o.id == val;\n      });\n      if (!list.length) return val;\n      return list[0].fullName || val;\n    },\n    onDateChange: function onDateChange(val, item) {\n      var _this2 = this;\n      if (!val || !val.length && item.op == 'between') return item.valueLabel = '';\n      var format = item.format || 'yyyy-MM-dd HH:mm:ss';\n      if (item.op == 'between') {\n        var labelList = val.map(function (o) {\n          return _this2.jnpf.toDate(o, format);\n        });\n        item.valueLabel = labelList.join();\n      } else {\n        item.valueLabel = this.jnpf.toDate(val, format);\n      }\n    },\n    onOrganizeChange: function onOrganizeChange(item, val, data) {\n      if (!val || !val.length) return item.valueLabel = '';\n      if (item.multiple) {\n        var valueLabelList = [];\n        for (var i = 0; i < data.length; i++) {\n          var labelList = data[i].map(function (o) {\n            return o.fullName;\n          });\n          valueLabelList.push(labelList.join('/'));\n        }\n        item.valueLabel = valueLabelList.join();\n      } else {\n        var _labelList = data.map(function (o) {\n          return o.fullName;\n        });\n        item.valueLabel = _labelList.join('/');\n      }\n    },\n    onConditionObjChange: function onConditionObjChange(item, val, data) {\n      if (!val || !val.length) return item.valueLabel = '';\n      if (item.multiple) {\n        var labelList = data.map(function (o) {\n          return o.fullName;\n        });\n        item.valueLabel = labelList.join();\n      } else {\n        item.valueLabel = data.fullName || '';\n      }\n    },\n    forceUpdate: function forceUpdate() {\n      this.$forceUpdate();\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this3 = this;\n      this.$refs[\"dataForm\"].validate(function (valid) {\n        if (valid) {\n          _this3.btnLoading = true;\n          var conditionText = \"\",\n            conditionValid = true,\n            condition = (0, _utils.deepClone)(_this3.condition);\n          outer: for (var i = 0; i < condition.length; i++) {\n            var e = condition[i];\n            var text = '';\n            if (i > 0) text += _this3.dataForm.matchLogic || 'and';\n            text += '【';\n            var _loop3 = function _loop3() {\n                var ee = e.groups[j];\n                var item = _this3.fieldOptions.filter(function (o) {\n                  return o.id === ee.id;\n                })[0];\n                if (!item) {\n                  _this3.$message.warning(\"方案内条件配置不完整，请检查条件内容\");\n                  conditionValid = false;\n                  return 0; // break outer\n                }\n                ee.bindTable = item.bindTable;\n                if (!ee.field || !ee.id || !ee.op || !['null', 'notNull'].includes(ee.op) && (!ee.value && ee.value !== 0 || _this3.jnpf.isEmpty(ee.value))) {\n                  _this3.$message.warning(\"方案内条件配置不完整，请检查条件内容\");\n                  conditionValid = false;\n                  return 0; // break outer\n                }\n                delete ee.readonly;\n                delete ee.opOptions;\n                var valueLabel = ['null', 'notNull'].includes(ee.op) ? '' : \" {\".concat(ee.valueLabel || ee.value, \"}\");\n                text += \"\".concat(j == 0 ? '' : ' and ', \"{\").concat(_this3.getFieldText(ee.id), \"} {\").concat(_this3.getOpText(ee.op), \"}\").concat(valueLabel);\n              },\n              _ret;\n            for (var j = 0; j < e.groups.length; j++) {\n              _ret = _loop3();\n              if (_ret === 0) break outer;\n            }\n            text += '】';\n            conditionText += text;\n          }\n          if (!conditionValid) return _this3.btnLoading = false;\n          _this3.dataForm.conditionText = conditionText;\n          _this3.dataForm.conditionJson = JSON.stringify(condition);\n          var formMethod = _this3.dataForm.id ? _dataAuthorize.updateDataScheme : _dataAuthorize.createDataScheme;\n          formMethod(_this3.dataForm).then(function (res) {\n            _this3.$message({\n              message: res.msg,\n              type: \"success\",\n              duration: 1500,\n              onClose: function onClose() {\n                _this3.visible = false;\n                _this3.btnLoading = false;\n                _this3.$emit(\"refreshDataList\");\n              }\n            });\n          }).catch(function () {\n            _this3.btnLoading = false;\n          });\n        } else {\n          _this3.btnLoading = false;\n        }\n      });\n    }\n  }\n};",null]}