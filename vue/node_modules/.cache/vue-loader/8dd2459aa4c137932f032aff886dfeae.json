{"remainingRequest":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js??vue-loader-options!/Users/交安/gas/vue/gas-web/src/views/extend/order/Detail.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/交安/gas/vue/gas-web/src/views/extend/order/Detail.vue","mtime":1706684850000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_babel-loader@8.3.0@babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/交安/gas/vue/gas-web/node_modules/_vue-loader@15.11.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ExportExcel, NextInfo, PrevInfo } from '@/api/extend/order'\nimport { Info } from '@/api/workFlow/workFlowForm'\nimport { getDownloadUrl } from '@/api/common'\nimport printStyle from '../printData/printStyle'\nexport default {\n  data() {\n    return {\n      printId: 'myTable1',\n      activeName: 'goods',\n      dataForm: {\n        id: '',\n        customerName: '',\n        salesmanId: '',\n        orderDate: '',\n        orderCode: '',\n        paymentMode: '',\n        receivableMoney: 0,\n        earnestRate: 0,\n        prepayEarnest: 0,\n        transportMode: '',\n        deliveryDate: '',\n        deliveryAddress: '',\n        description: '',\n        customerId: '',\n        salesmanName: '',\n      },\n      dataRule: {},\n      list: [],\n      planList: [],\n      loading: true,\n      fileList: [],\n    }\n  },\n  methods: {\n    print2() {\n      window.document.body.innerHTML = this.detiel.list2 + this.detiel.list + printStyle;\n      window.print();\n      window.location.reload()\n    },\n    goBack() {\n      this.$emit('close')\n    },\n    handleClick(tab, event) {\n      if (tab.index == '1') {\n        this.printId = 'myTable2'\n      } else {\n        this.printId = 'myTable1'\n      }\n    },\n    init(id) {\n      this.dataForm.id = id || ''\n      this.loading = true\n      this.$nextTick(() => {\n        if (this.dataForm.id) {\n          this.$refs['dataForm'].resetFields()\n          Info('crmOrder', this.dataForm.id).then(res => {\n            this.dataForm = res.data\n            this.dataForm.orderDate = this.jnpf.toDate(this.dataForm.orderDate)\n            this.dataForm.deliveryDate = this.jnpf.toDate(this.dataForm.deliveryDate, \"yyyy-MM-dd\")\n            this.list = res.data.goodsList\n            this.planList = res.data.collectionPlanList\n            this.fileList = JSON.parse(this.dataForm.fileJson)\n            for (let i = 0; i < this.fileList.length; i++) {\n              this.$set(this.fileList[i], 'name', this.fileList[i].fileName)\n            }\n            this.loading = false\n          })\n        }\n      })\n    },\n    prev() {\n      this.loading = true\n      PrevInfo(this.dataForm.id).then(res => {\n        if (!res.data) {\n          this.loading = false\n          this.$message({ message: '第一单了哦', type: 'warning', duration: 1500 })\n          return\n        }\n        this.dataForm = res.data\n        this.dataForm.orderDate = this.jnpf.toDate(this.dataForm.orderDate)\n        this.dataForm.deliveryDate = this.jnpf.toDate(this.dataForm.deliveryDate, \"yyyy-MM-dd\")\n        this.list = res.data.goodsList\n        this.planList = res.data.collectionPlanList\n        this.fileList = JSON.parse(this.dataForm.fileJson)\n        for (let i = 0; i < this.fileList.length; i++) {\n          this.$set(this.fileList[i], 'name', this.fileList[i].fileName)\n        }\n        this.loading = false\n      })\n    },\n    next() {\n      this.loading = true\n      NextInfo(this.dataForm.id).then(res => {\n        if (!res.data) {\n          this.loading = false\n          this.$message({ message: '最后一单了哦', type: 'warning', duration: 1500 })\n          return\n        }\n        this.dataForm = res.data\n        this.dataForm.orderDate = this.jnpf.toDate(this.dataForm.orderDate)\n        this.dataForm.deliveryDate = this.jnpf.toDate(this.dataForm.deliveryDate, \"yyyy-MM-dd\")\n        this.list = res.data.goodsList\n        this.planList = res.data.collectionPlanList\n        this.fileList = JSON.parse(this.dataForm.fileJson)\n        for (let i = 0; i < this.fileList.length; i++) {\n          this.$set(this.fileList[i], 'name', this.fileList[i].fileName)\n        }\n        this.loading = false\n      })\n    },\n    getSummaries(param) {\n      const { columns, data } = param;\n      const sums = [];\n      columns.forEach((column, index) => {\n        if (index === 0) {\n          sums[index] = '合计';\n          return;\n        }\n        if (index === 1) {\n          sums[index] = '';\n          return;\n        }\n        const values = data.map(item => Number(item[column.property]));\n        if (!values.every(value => isNaN(value))) {\n          sums[index] = values.reduce((prev, curr) => {\n            const value = Number(curr);\n            if (!isNaN(value)) {\n              return prev + curr;\n            } else {\n              return prev;\n            }\n          }, 0);\n        } else {\n          sums[index] = '';\n        }\n      });\n      return sums\n    },\n    exportExcel() {\n      ExportExcel(this.dataForm.id).then(res => {\n        if (res.data && res.data.url) {\n          this.jnpf.downloadFile(res.data.url)\n        } else {\n          this.$message({ message: '导出失败', type: 'error', duration: 1500 })\n        }\n      })\n    },\n    // 打印\n    print() {\n      const tabStyle = `<style>\n          table{width:100%;display:table-cell!important;box-sizing:border-box;}\n          .el-table__header,.el-table__body,.el-table__footer{width:100%!important;border-collapse: collapse;text-align:center;}\n          table, table tr td { border:1px solid #333;color:#606266;word-wrap:break-word}\n          table tr th,table tr td{padding:4mm 0mm;word-wrap:break-word }\n          table thead{border-bottom:0!important;display:none;}\n          .el-table__body, tr td .cell{width:100%!important}\n          .el-table th.gutter{display: none;}\n          .el-table colgroup.gutter{display: none;}                \n          </style><body>`;\n      // 表单数据\n      let printForm = this.$refs.print1.innerHTML;\n      let id = this.printId\n      // 表格数据\n      const html = document.querySelector('#' + id).innerHTML\n      // 新建一个 DOM\n      const div = document.createElement('div')\n      const printDOMID = 'printDOMElement'\n      div.id = printDOMID\n      div.innerHTML = html;\n      // 提取第3个表格的内容\n      // const ths1 = div.querySelectorAll('.el-table__footer tbody tr td .cell')\n      // const ThsTextArry1 = []\n      // for (let i = 0, len = ths1.length; i < len; i++) {\n      //   if (ths1[i].innerText !== '') ThsTextArry1.push(ths1[i].innerText)\n      // }\n      // 提取第一个表格的内容 即表头\n      const ths = div.querySelectorAll('.el-table__header-wrapper th')\n      const ThsTextArry = []\n      for (let i = 0, len = ths.length; i < len; i++) {\n        if (ths[i].innerText !== '') ThsTextArry.push(ths[i].innerText)\n      }\n      // 删除多余的表头\n      div.querySelector('.hidden-columns').remove();\n      div.querySelector('.has-gutter').remove();\n\n      //  删掉第一个表格的内容\n      div.querySelector('.el-table__header-wrapper').remove();\n      // 删除第三个表格的内容\n      div.querySelector('.el-table__footer-wrapper').remove();\n      //取出表头放到tr里面\n      let newHTML = '<tr>'\n      for (let i = 0, len = ThsTextArry.length; i < len; i++) {\n        newHTML += '<td style=\"text-align: center; font-weight : bold;padding:10px;\">' + ThsTextArry[i] + '</td>'\n      }\n      newHTML += '</tr>'\n      //合计取出表头放到tr里面\n      // let newHTML1 = '<tr>'\n      // for (let i = 0, len = ThsTextArry1.length; i < len; i++) {\n      //   newHTML1 += '<td style=\"text-align: center; font-weight: bold;padding:10px;\">' + ThsTextArry1[i] + '</td>'\n      // }\n      // newHTML1 += '</tr>'\n      let printStr = \"<html><head><meta http-equiv='Content-Type' content='text/html; charset=utf-8'></head>\";\n      let content = \"\";\n      let print = document.getElementById(id).innerHTML;\n      content = content + print;\n      let content1 = content.replace('<tbody>', '<tbody>' + newHTML)\n      // let content2 = content.replace('</tbody>', newHTML1 + '</tbody>')\n      let printPart1 = printStr + tabStyle + content1 + \"</body></html>\";\n      // 打印方法\n      let printPart = printForm + printPart1 + printStyle;\n      let newTab = window.open('_blank');\n      newTab.document.body.innerHTML = printPart;\n      newTab.print();\n      newTab.close();\n    },\n    download(id) {\n      getDownloadUrl('workFlow', id).then(res => {\n        this.jnpf.downloadFile(res.data.url)\n      })\n    }\n  }\n}\n",null]}